var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.226,1,2.396]],["body/classes/AbstractController.html",[0,0.278,1,3.732,2,0.927,3,0.128,4,0.108,5,0.114,6,5.653,7,0.38,8,0.902,9,2.911,10,3.287,11,1.004,12,3.985,13,6.596,14,7.829,15,1.823,16,5.864,17,7.597,18,0.64,19,7.97,20,1.483,21,0.005,22,1.092,23,0.402,24,3.588,25,2.834,26,6.308,27,6.308,28,6.308,29,0.217,30,2.674,31,5.653,32,1.248,33,4.899,34,5.221,35,5.653,36,1.063,37,0.171,38,1.823,39,2.145,40,0.707,41,1.849,42,2.324,43,2.179,44,2.531,45,3.232,46,3.398,47,4.427,48,5.653,49,3.312,50,4.642,51,4.899,52,4.642,53,2.08,54,5.653,55,0.467,56,1.369,57,5.653,58,0.004,59,0.004]],["title/interfaces/AbstractControllerContext.html",[17,4.235,38,1.479]],["body/interfaces/AbstractControllerContext.html",[0,0.292,1,3.1,3,0.135,4,0.113,5,0.12,6,5.933,7,0.398,8,0.93,9,2.618,10,3.037,11,0.944,12,4.082,14,5.933,16,4.872,17,7.392,18,0.462,21,0.005,23,0.305,29,0.221,30,2.806,31,5.933,32,1.31,33,5.142,34,5.48,35,5.933,36,1.116,37,0.176,38,1.913,39,2.794,40,0.793,41,2.408,42,2.439,43,2.287,44,2.657,45,3.393,46,3.567,47,4.647,48,5.933,49,3.477,50,4.872,51,5.142,52,4.872,53,2.184,54,5.933,55,0.49,56,1.437,57,5.933,58,0.004,59,0.004,60,2.86,61,4.872,62,6.621]],["title/classes/AbstractQueueProcessor.html",[0,0.226,63,4.235]],["body/classes/AbstractQueueProcessor.html",[0,0.227,2,0.757,3,0.105,4,0.088,5,0.093,7,0.31,8,0.79,9,2.905,10,2.692,11,1.019,12,3.176,13,5.776,15,1.488,16,5.134,18,0.691,20,1.211,21,0.005,22,0.892,23,0.437,24,2.929,25,2.314,29,0.216,36,0.868,37,0.11,49,2.704,50,3.789,53,2.61,55,0.713,56,1.118,58,0.003,59,0.003,63,5.776,64,5.15,65,1.129,66,4.472,67,3.969,68,7.26,69,7.915,70,4.156,71,8.192,72,2.675,73,6.15,74,1.686,75,3.575,76,3.575,77,1.641,78,1.861,79,7.738,80,6.589,81,5.15,82,5.15,83,4.944,84,5.15,85,5.15,86,5.15,87,3.404,88,2.774,89,2.639,90,2.774,91,2.774,92,2.774,93,5.15,94,1.211,95,5.15,96,5.15,97,3.789,98,5.15,99,5.15,100,2.577,101,3.333,102,3.017,103,3.017,104,6.978,105,5.15,106,2.639,107,5.15,108,3.112,109,5.15,110,5.15,111,5.776,112,1.829,113,7.092,114,5.15,115,5.15,116,3.969,117,4.615,118,5.15]],["title/classes/AbstractSchema.html",[0,0.226,119,2.831]],["body/classes/AbstractSchema.html",[0,0.303,2,1.009,3,0.14,4,0.117,5,0.125,7,0.413,8,0.951,11,0.965,18,0.586,21,0.005,23,0.418,29,0.215,37,0.147,42,2.529,43,2.372,44,2.755,49,3.606,55,0.73,58,0.004,59,0.004,65,1.36,74,2.193,119,4.647,120,6.866,121,3.847,122,2.55,123,4.542,124,3.2,125,6.866,126,7.513,127,1.173,128,3.215,129,8.134,130,6.866,131,3.934,132,2.013,133,2.857,134,1.775,135,6.866]],["title/injectables/AbstractService.html",[66,2.448,136,1.341]],["body/injectables/AbstractService.html",[0,0.228,3,0.105,4,0.088,5,0.094,7,0.312,8,0.793,9,2.908,10,3.115,11,1.021,12,3.821,13,5.8,15,1.497,16,5.156,18,0.673,20,1.218,21,0.005,22,0.897,23,0.391,24,3.986,25,2.328,29,0.21,30,2.196,36,0.873,37,0.15,38,1.497,39,1.762,40,0.705,41,1.519,42,2.925,43,2.743,44,3.186,45,2.655,46,2.791,47,3.637,49,2.721,50,3.813,51,4.024,52,3.813,53,2.311,55,0.518,56,1.723,58,0.003,59,0.003,66,3.352,72,2.395,74,1.918,75,4.068,76,4.358,80,6.605,89,4.358,100,2.593,106,2.655,108,3.131,136,1.836,137,2.196,138,4.644,139,4.556,140,7.962,141,7.115,142,7.007,143,5.182,144,5.182,145,5.182,146,5.182,147,5.182,148,5.182,149,5.182,150,5.182,151,5.182,152,1.848,153,4.289,154,4.289,155,4.644,156,3.813,157,3.973,158,6.572,159,6.279,160,4.644,161,4.644,162,2.008,163,4.644,164,2.948,165,3.813,166,1.61,167,3.813,168,4.644,169,4.644,170,0.985,171,4.644,172,4.644,173,4.644,174,4.644]],["title/interfaces/AbstractServiceContext.html",[38,1.479,80,3.974]],["body/interfaces/AbstractServiceContext.html",[0,0.244,3,0.112,4,0.094,5,0.1,7,0.332,8,0.828,9,2.661,10,2.789,11,1.072,12,3.961,16,4.065,18,0.51,21,0.005,23,0.336,24,3.143,29,0.215,30,2.342,36,0.931,37,0.157,38,1.597,39,2.488,40,0.775,41,2.144,42,3.021,43,2.832,44,3.29,45,2.831,46,2.976,47,3.878,49,2.901,50,4.065,51,4.291,52,4.065,53,2.412,55,0.541,56,1.78,58,0.004,59,0.004,60,2.387,61,4.065,66,2.643,72,1.667,74,1.335,75,2.831,76,4.652,80,6.368,89,4.652,100,2.765,106,2.831,108,3.339,136,1.917,138,4.951,139,4.463,140,7.348,141,4.951,152,1.97,153,4.573,154,4.573,155,4.951,156,6.422,157,4.103,158,6.787,159,6.555,160,4.951,161,4.951,162,2.141,163,4.951,164,3.143,165,4.065,166,1.716,167,4.065,168,4.951,169,4.951,170,1.05,171,4.951,172,4.951,173,4.951,174,4.951,175,5.525]],["title/classes/AbstractSettingsService.html",[0,0.226,176,3.765]],["body/classes/AbstractSettingsService.html",[0,0.131,2,0.438,3,0.061,4,0.051,5,0.054,7,0.179,8,0.529,9,2.819,10,1.961,11,1.077,12,2.314,15,0.862,18,0.667,20,2.339,21,0.005,22,1.622,23,0.455,25,4.296,29,0.154,37,0.064,40,0.723,49,2.455,53,0.983,55,0.707,56,1.417,58,0.002,59,0.002,65,0.757,66,3.124,72,1.411,74,1.129,75,2.396,76,2.396,77,1.099,78,2.333,87,3.694,88,1.606,89,1.528,90,1.606,91,1.606,92,1.606,94,2.116,122,1.62,124,2.866,132,0.874,134,0.771,162,3.778,170,1.096,176,3.44,177,7.524,178,2.672,179,5.69,180,4.773,181,4.078,182,4.226,183,3.87,184,3.87,185,2.519,186,2.02,187,2.237,188,2.825,189,2.739,190,2.739,191,2.586,192,2.921,193,3.68,194,2.825,195,1.93,196,3.321,197,4.19,198,1.863,199,2.672,200,2.574,201,3.87,202,2.672,203,6.227,204,3.87,205,2.234,206,2.672,207,1.802,208,5.019,209,3.581,210,1.863,211,4.615,212,3.82,213,1.802,214,2.825,215,2.006,216,0.926,217,1.802,218,5.443,219,2.677,220,1.863,221,1.802,222,3.84,223,5.019,224,1.863,225,1.802,226,1.863,227,1.863,228,1.863,229,1.802,230,1.863,231,1.863,232,1.863,233,1.606,234,3.946,235,1.93,236,1.863,237,1.863,238,1.802,239,1.93,240,2.093,241,2.468,242,2.672,243,0.9,244,1.314,245,4.19,246,1.277,247,2.672,248,2.672,249,1.241,250,1.802,251,2.672,252,2.672,253,3.281,254,2.672,255,2.093,256,1.93]],["title/classes/AbstractSettingsService-1.html",[0,0.189,176,3.157,257,1.753]],["body/classes/AbstractSettingsService-1.html",[0,0.131,2,0.436,3,0.06,4,0.051,5,0.054,7,0.179,8,0.527,9,2.817,10,1.956,11,1.076,12,2.307,15,0.858,18,0.666,20,2.35,21,0.005,22,1.621,23,0.457,25,4.293,29,0.154,37,0.064,40,0.722,49,2.447,53,0.979,55,0.707,56,1.414,58,0.002,59,0.002,65,0.754,66,3.116,72,1.406,74,1.125,75,2.387,76,2.387,77,1.096,78,2.331,87,3.69,88,1.599,89,1.521,90,1.599,91,1.599,92,1.599,94,2.114,122,1.615,124,2.86,132,0.87,134,0.767,162,3.776,170,1.093,176,3.428,178,2.661,179,5.684,180,4.76,181,4.069,182,4.216,183,3.856,184,3.856,185,2.51,186,2.013,187,2.229,188,2.816,189,2.729,190,2.729,191,2.577,192,2.91,193,3.673,194,2.816,195,1.922,196,3.314,197,4.175,198,1.855,199,2.661,200,2.572,201,3.856,202,2.661,203,6.216,204,3.856,205,2.228,206,2.661,207,1.794,208,5.012,209,3.579,210,1.855,211,4.775,212,3.812,213,1.794,214,2.816,215,1.997,216,0.922,217,1.794,218,5.439,219,2.675,220,1.855,221,1.794,222,3.834,223,5.012,224,1.855,225,1.794,226,1.855,227,1.855,228,1.855,229,1.794,230,1.855,231,1.855,232,1.855,233,1.599,234,3.936,235,1.922,236,1.855,237,1.855,238,1.794,239,1.922,240,2.084,241,2.457,242,2.661,243,0.896,244,1.308,245,4.175,246,1.273,247,2.661,248,2.661,249,1.235,250,1.794,251,2.661,252,2.661,253,3.27,254,2.661,255,2.084,256,1.922,258,7.509,259,2.457]],["title/classes/ActivationDto.html",[0,0.226,260,4.235]],["body/classes/ActivationDto.html",[0,0.362,2,0.973,3,0.135,4,0.113,5,0.12,7,0.398,8,0.93,18,0.573,21,0.005,23,0.45,29,0.194,32,1.31,37,0.142,40,0.868,43,2.838,55,0.724,58,0.004,59,0.004,112,2.153,127,1.403,260,6.799,261,8.931,262,6.621,263,4.403,264,4.013,265,4.001,266,7.361,267,3.033,268,4.904,269,6.621,270,3.767,271,5.933,272,2.286,273,5.765,274,6.621,275,2.581,276,4.544,277,2.751,278,1.809,279,3.482]],["title/classes/AdditionalFieldsPart.html",[0,0.226,280,3.591]],["body/classes/AdditionalFieldsPart.html",[0,0.278,2,0.926,3,0.128,4,0.107,5,0.114,7,0.379,8,0.901,11,0.915,18,0.609,21,0.005,23,0.444,29,0.206,37,0.171,40,0.814,55,0.741,58,0.004,59,0.004,65,1.019,112,2.288,121,3.374,122,1.769,127,1.491,128,4.087,131,4.295,132,1.846,134,1.628,170,1.197,205,3.554,219,2.205,272,1.949,280,5.587,281,6.296,282,4.965,283,4.965,284,4.472,285,5.729,286,2.979,287,6.296,288,4.663,289,3.324,290,6.296,291,6.296,292,2.981,293,3.012,294,2.887,295,2.948,296,2.948,297,5.642,298,6.296]],["title/classes/AgentCreateQuestions.html",[0,0.226,299,3.765]],["body/classes/AgentCreateQuestions.html",[0,0.343,2,0.732,3,0.101,4,0.085,5,0.09,7,0.3,9,1.46,11,0.894,12,3.516,15,1.439,18,0.542,20,1.829,21,0.005,22,1.706,23,0.403,29,0.198,30,2.111,37,0.167,40,0.886,42,2.513,43,2.356,44,2.737,45,3.495,46,3.674,55,0.504,56,1.689,58,0.003,59,0.003,65,1.104,72,2.058,74,1.648,77,1.604,78,1.604,94,1.829,127,1.329,170,0.947,186,3.361,200,1.889,209,2.555,219,1.38,243,2.058,244,2.194,246,1.863,249,2.072,299,5.019,300,4.123,301,6.821,302,6.821,303,6.821,304,5.646,305,6.971,306,4.287,307,4.981,308,6.352,309,5.646,310,3.986,311,4.981,312,5.646,313,4.287,314,4.981,315,4.415,316,5.035,317,4.787,318,5.872,319,4.787,320,4.415,321,3.111,322,3.111,323,3.111,324,3.868,325,4.701,326,3.868,327,6.439,328,4.787,329,2.527,330,5.297,331,3.496,332,3.263,333,4.415,334,4.415,335,4.415,336,4.123,337,4.123,338,4.123,339,2.833,340,3.496,341,2.786,342,3.496,343,3.351,344,2.918,345,3.111,346,3.224,347,3.496,348,2.833]],["title/classes/Agents.html",[0,0.226,344,2.998]],["body/classes/Agents.html",[0,0.208,2,0.695,3,0.096,4,0.081,5,0.086,7,0.284,8,0.745,11,0.756,18,0.66,21,0.005,23,0.468,29,0.203,37,0.141,39,1.607,40,0.913,55,0.765,58,0.003,59,0.003,65,0.765,112,1.239,119,3.639,124,2.506,127,1.617,128,4.431,131,4.534,132,1.386,170,1.251,205,2.549,219,1.309,272,2.425,286,2.893,289,3.429,292,2.464,293,2.261,294,3.017,295,2.213,296,2.213,306,3.877,310,3.333,313,3.877,344,3.854,349,4.727,350,5.877,351,4.305,352,3.62,353,4.898,354,3.208,355,5.877,356,4.727,357,1.741,358,4.727,359,4.727,360,5.786,361,4.727,362,4.727,363,6.264,364,6.781,365,4.727,366,6.264,367,6.781,368,4.727,369,7.568,370,4.727,371,4.727,372,2.856,373,4.727,374,4.727,375,3.18,376,2.953,377,3.478,378,4.236,379,4.727]],["title/classes/AgentsCommand.html",[0,0.226,347,3.591]],["body/classes/AgentsCommand.html",[0,0.353,2,0.776,3,0.107,4,0.09,5,0.096,7,0.318,9,1.548,11,0.816,12,3.838,15,2.051,18,0.495,20,1.669,21,0.005,22,1.656,23,0.369,29,0.203,30,2.238,37,0.172,40,0.835,42,2.614,43,2.451,44,2.847,45,3.636,46,3.823,55,0.593,56,1.74,58,0.004,59,0.004,65,1.148,72,2.141,74,1.714,77,1.669,78,2.015,94,1.242,170,1.004,186,3.463,200,2.22,209,3.21,219,1.463,243,2.141,244,2.326,246,1.939,249,2.197,299,3.885,300,4.37,304,4.37,306,3.636,308,5.626,309,4.37,310,3.531,312,4.37,313,3.636,315,4.593,316,5.188,317,4.981,318,6.015,319,4.981,320,4.593,321,3.298,322,3.298,323,3.298,324,4.101,325,4.844,326,4.101,327,6.635,328,4.981,329,2.604,330,5.511,331,3.706,332,3.395,333,4.593,334,4.593,335,5.188,336,4.37,337,4.37,338,4.37,339,3.004,340,3.706,341,2.899,342,3.706,343,3.552,344,3.093,345,3.298,346,3.418,347,4.981,348,3.004,380,4.981,381,3.418,382,5.28,383,5.28,384,3.706]],["title/controllers/AgentsController.html",[385,1.458,386,4.235]],["body/controllers/AgentsController.html",[0,0.162,1,2.569,3,0.075,4,0.063,5,0.067,7,0.221,9,1.077,11,0.895,18,0.543,20,1.832,21,0.005,22,1.507,23,0.423,29,0.228,32,0.727,36,0.619,37,0.079,40,0.583,55,0.713,56,1.691,58,0.003,59,0.003,65,0.888,74,1.325,77,1.29,78,2.252,94,1.832,122,2.615,124,3.389,127,1.331,133,1.529,134,0.95,152,1.31,164,2.091,170,1.481,186,2.37,187,1.758,193,3.211,200,2.509,216,2.814,222,1.685,233,1.98,243,1.109,246,2.128,257,3.338,263,1.685,306,1.883,310,1.619,313,1.883,323,4.548,324,2.854,325,3.315,344,2.153,352,1.758,353,2.379,354,1.558,377,2.704,385,1.047,386,4.541,387,1.159,388,3.675,389,1.558,390,4.898,391,4.831,392,4.548,393,2.704,394,3.941,395,4.333,396,3.675,397,5.732,398,3.675,399,4.387,400,2.579,401,3.851,402,5.497,403,5.497,404,4.607,405,3.675,406,3.675,407,2.704,408,4.037,409,3.675,410,3.675,411,2.296,412,5.289,413,4.713,414,5.735,415,5.11,416,2.579,417,3.675,418,5.357,419,4.261,420,3.675,421,3.675,422,1.529,423,2.153,424,2.854,425,2.684,426,5.11,427,1.685,428,2.033,429,2.296,430,1.839,431,2.704,432,5.042,433,2.704,434,2.854,435,2.579,436,3.691,437,2.579,438,2.579,439,2.472,440,2.854,441,2.854,442,2.579,443,2.579,444,2.579,445,4.713,446,2.854,447,2.704,448,3.315,449,2.296,450,2.296,451,3.293,452,3.675,453,3.675,454,1.883,455,2.221,456,1.758,457,1.839,458,3.675,459,3.042,460,2.854,461,2.704,462,3.241,463,2.579,464,3.675,465,5.487,466,3.042,467,3.042,468,3.427,469,2.579,470,3.643,471,3.643,472,4.607,473,3.675,474,4.607,475,2.579,476,2.625,477,3.675,478,2.854,479,3.675,480,2.704]],["title/classes/AgentsCreateCommand.html",[0,0.226,330,3.974]],["body/classes/AgentsCreateCommand.html",[0,0.351,2,0.766,3,0.106,4,0.089,5,0.095,7,0.314,9,1.528,11,0.809,12,3.827,15,2.033,18,0.491,20,1.655,21,0.005,22,1.651,23,0.366,29,0.202,30,2.21,37,0.171,40,0.832,42,2.592,43,2.431,44,2.823,45,3.606,46,3.79,55,0.589,56,1.729,58,0.003,59,0.003,65,1.139,72,2.123,74,1.7,77,1.655,78,2.005,94,1.226,170,0.991,186,3.441,200,2.206,209,3.194,219,1.444,243,2.123,244,2.297,246,1.922,249,2.169,299,3.837,300,4.316,304,4.316,306,3.606,308,5.59,309,4.316,310,3.508,312,4.316,313,3.606,315,4.555,316,5.155,317,5.985,318,5.985,319,4.939,320,4.555,321,3.257,322,3.257,323,3.257,324,4.049,325,5.667,326,4.049,327,6.593,328,4.939,329,2.587,330,6.186,331,5.59,332,3.366,333,4.555,334,4.555,335,5.155,336,4.316,337,4.316,338,4.316,339,2.966,340,3.659,341,2.875,342,3.659,343,3.508,344,3.054,345,3.257,346,3.375,347,3.659,348,2.966,380,4.939,381,3.375,384,3.659,481,5.214,482,5.214]],["title/classes/AgentsCreateDto.html",[0,0.226,323,3.196]],["body/classes/AgentsCreateDto.html",[0,0.378,2,0.688,3,0.095,4,0.08,5,0.085,7,0.282,8,0.74,11,1.068,18,0.667,21,0.005,23,0.466,29,0.21,32,0.926,37,0.161,40,0.895,55,0.769,58,0.003,59,0.003,65,1.318,87,1.878,122,1.315,127,1.634,270,2.996,272,1.146,275,2.84,276,3.614,277,3.051,278,1.279,306,3.857,310,3.316,313,3.857,323,4.702,350,5.846,351,3.717,352,3.601,353,4.872,354,3.191,355,5.846,357,1.724,377,3.444,397,3.444,418,3.444,455,4.549,483,3.874,484,3.985,485,5.283,486,4.68,487,4.68,488,4.194,489,4.68,490,3.874,491,4.68,492,4.808,493,4.68,494,6.231,495,4.194,496,4.68,497,6.532,498,3.635,499,4.68,500,4.68,501,4.68,502,2.924,503,3.029,504,2.103,505,4.662,506,3.525,507,4.395,508,4.055,509,3.566,510,2.103,511,3.874,512,3.874,513,2.398,514,2.398,515,2.589,516,2.342,517,3.874,518,3.874]],["title/classes/AgentsDto.html",[0,0.226,397,3.765]],["body/classes/AgentsDto.html",[0,0.372,2,0.659,3,0.091,4,0.077,5,0.081,7,0.27,8,0.718,11,1.057,18,0.668,21,0.005,23,0.465,29,0.207,32,0.887,37,0.158,40,0.897,55,0.768,58,0.003,59,0.003,65,1.294,87,3.804,122,2.067,127,1.638,270,2.908,272,1.098,275,2.82,276,3.508,277,3.015,278,1.225,306,3.769,310,3.24,313,3.769,323,6.046,350,5.713,351,3.607,352,3.519,353,4.761,354,3.118,355,5.713,357,1.652,377,3.3,397,4.666,418,3.3,455,4.445,483,3.712,484,3.598,485,5.163,488,4.019,490,3.712,492,4.666,494,6.146,495,4.019,497,6.444,498,3.483,502,2.802,503,2.903,504,2.015,505,4.599,506,3.444,507,4.266,508,3.962,509,3.51,510,2.015,511,3.712,512,3.712,513,2.298,514,2.298,515,2.481,516,2.245,517,3.712,518,3.712,519,3.483,520,4.485,521,4.485,522,4.485,523,4.485,524,4.485,525,4.485,526,4.485,527,4.485,528,4.485,529,4.485]],["title/modules/AgentsModule.html",[166,1.59,530,3.312]],["body/modules/AgentsModule.html",[0,0.29,3,0.134,4,0.112,5,0.119,21,0.005,22,1.14,29,0.231,36,1.109,37,0.141,58,0.004,59,0.004,132,1.929,166,2.767,325,6.205,344,3.856,347,4.619,378,7.334,386,7.373,387,2.58,451,5.898,530,6.413,531,2.843,532,2.957,533,3.082,534,3.082,535,3.082,536,4.085,537,4.171,538,5.898,539,5.898,540,5.898,541,3.832,542,2.79,543,3.082,544,6.582,545,3.856,546,5.448,547,6.582,548,6.582,549,3.294,550,4.111,551,6.582,552,3.744,553,5.898]],["title/injectables/AgentsService.html",[136,1.341,325,3.092]],["body/injectables/AgentsService.html",[0,0.138,3,0.063,4,0.053,5,0.057,7,0.188,8,0.548,9,2.489,10,2.019,11,1.068,12,2.383,15,0.902,18,0.654,20,2.277,21,0.005,22,1.53,23,0.453,25,4.327,29,0.201,36,0.526,37,0.067,49,2.544,55,0.719,56,1.052,58,0.002,59,0.002,65,0.784,66,3.202,72,1.462,74,1.17,75,2.483,76,2.483,77,1.139,78,2.288,87,3.728,88,1.682,89,1.599,90,1.682,91,1.682,92,1.682,94,2.041,121,1.323,122,2.035,124,3.047,132,0.915,133,1.299,134,0.807,136,1.27,137,1.323,162,3.801,179,5.746,181,4.181,185,2.61,186,2.565,187,2.318,188,2.928,189,2.838,190,2.838,191,2.68,192,3.027,193,4.154,194,2.928,195,2.021,196,3.393,198,1.95,200,2.486,207,1.886,208,5.084,209,3.674,210,1.95,211,4.675,212,3.903,213,1.886,214,4.045,216,1.505,217,1.886,218,5.574,219,2.695,220,1.95,221,1.886,222,3.894,223,5.084,224,1.95,225,1.886,226,1.95,227,1.95,228,1.95,229,1.886,230,1.95,231,1.95,232,1.95,233,1.682,234,4.045,236,1.95,237,1.95,238,1.886,239,2.021,243,0.942,246,1.979,256,2.021,323,4.181,325,2.928,344,1.829,494,3.4,546,2.584,554,3.122,555,3.122,556,3.122,557,3.122,558,2.797,559,1.95,560,3.122,561,2.584,562,2.584,563,2.584,564,2.797,565,3.122,566,3.122,567,3.122,568,3.122,569,4.845,570,3.122,571,3.122,572,3.122,573,4.845,574,3.122,575,3.122,576,3.122,577,3.122,578,3.122,579,3.122]],["title/classes/AgentsUpdateDto.html",[0,0.226,418,3.765]],["body/classes/AgentsUpdateDto.html",[0,0.406,2,0.85,3,0.118,4,0.099,5,0.105,21,0.005,23,0.449,29,0.223,32,1.144,37,0.18,40,0.895,55,0.746,58,0.004,59,0.004,65,1.438,122,1.625,270,2.652,272,1.416,275,2.93,276,4.17,277,3.222,278,1.58,306,2.963,310,2.547,313,2.963,323,4.708,350,4.491,352,2.767,353,3.743,354,2.451,355,4.491,377,4.255,397,4.255,418,5.546,455,3.495,483,4.787,484,3.687,494,6.236,497,6.537,504,2.599,505,4.961,506,3.926,507,5.071,508,4.517,509,3.833,510,2.599,511,4.787,512,4.787,513,2.963,514,2.963,515,3.199,516,2.894,517,4.787,518,6.239]],["title/classes/AllExceptionFilter.html",[0,0.226,580,4.235]],["body/classes/AllExceptionFilter.html",[0,0.3,2,0.999,3,0.138,4,0.116,5,0.123,7,0.409,10,2.311,11,0.781,18,0.474,20,1.598,21,0.005,22,1.177,23,0.313,29,0.197,36,1.145,37,0.146,56,1.475,58,0.004,59,0.004,67,4.749,77,1.963,94,1.598,152,2.423,170,1.718,249,3.921,264,3.751,329,2.208,341,2.776,394,3.41,462,2.828,580,7.479,581,8.348,582,6.797,583,7.479,584,6.91,585,5.644,586,7.801,587,6.797,588,4.572,589,4.572,590,5.625,591,5.278,592,5.625,593,5.625,594,6.797,595,6.091,596,6.091,597,6.797,598,6.797,599,5.001]],["title/classes/ApiSession.html",[0,0.226,600,3.765]],["body/classes/ApiSession.html",[0,0.287,2,0.956,3,0.132,4,0.111,5,0.118,7,0.391,8,0.92,11,0.748,15,1.88,18,0.666,20,1.53,21,0.005,22,1.126,23,0.439,37,0.139,39,2.212,40,0.887,55,0.764,58,0.004,59,0.004,74,2.476,122,2.489,170,1.237,216,2.524,313,4.54,352,4.239,600,5.978,601,9.742,602,5.829,603,4.54,604,8.125,605,5.04,606,8.125,607,5.829,608,5.829,609,5.829,610,6.505,611,6.505]],["title/controllers/AppController.html",[385,1.458,612,3.974]],["body/controllers/AppController.html",[0,0.192,1,2.909,3,0.089,4,0.074,5,0.079,7,0.262,11,0.714,18,0.433,20,1.461,21,0.005,22,1.366,23,0.286,25,2.791,29,0.211,32,0.862,36,0.734,37,0.093,38,1.259,40,0.855,43,1.505,53,2.387,55,0.675,56,1.713,58,0.003,59,0.003,65,1.005,74,1.052,77,1.461,78,1.702,94,1.461,100,2.18,106,3.183,112,1.142,127,1.061,152,1.553,170,1.735,193,3.86,200,1.721,205,2.407,216,2.694,243,1.314,246,1.697,264,1.957,267,2.018,272,1.067,289,2.251,353,2.82,385,2.062,387,1.373,394,3.794,399,3.897,423,2.552,430,2.18,456,2.084,476,2.084,559,2.721,612,4.824,613,3.904,614,5.566,615,4.356,616,3.606,617,4.489,618,4.356,619,5.566,620,5.992,621,4.356,622,4.356,623,8,624,5.907,625,4.356,626,4.356,627,5.566,628,5.566,629,5.566,630,5.566,631,5.566,632,4.356,633,2.721,634,5.081,635,3.606,636,3.205,637,5.566,638,3.436,639,5.141,640,3.88,641,5.566,642,3.606,643,5.141,644,5.992,645,3.904,646,3.904,647,2.478,648,3.904,649,3.904,650,3.904,651,3.383,652,3.205,653,3.383,654,5.141,655,3.904,656,3.383,657,3.904,658,3.904,659,3.606,660,3.205,661,2.347,662,3.904,663,5.566,664,5.566,665,3.904,666,3.904,667,3.904,668,5.566,669,6.487,670,3.904,671,5.566,672,4.179,673,3.904,674,3.904,675,3.904,676,3.904,677,3.904,678,3.904,679,3.904,680,3.606,681,3.606,682,5.566,683,3.904,684,3.904,685,5.566,686,3.904,687,3.904,688,5.566,689,3.904,690,3.383,691,3.205,692,3.904,693,5.566,694,5.566,695,5.566,696,3.904,697,5.566,698,5.566,699,5.566,700,3.904,701,5.566]],["title/modules/AppModule.html",[166,1.59,702,3.974]],["body/modules/AppModule.html",[0,0.171,3,0.079,4,0.066,5,0.07,10,1.321,21,0.005,23,0.179,24,2.21,29,0.239,30,1.647,36,0.655,37,0.083,53,1.281,56,1.241,58,0.003,59,0.003,70,4.378,78,1.875,83,5.734,100,3.743,101,2.515,102,2.276,103,2.276,111,3.215,116,2.21,132,1.139,134,1.478,139,1.859,157,1.944,166,2.107,170,1.515,209,2.141,246,1.061,272,1.661,387,1.802,402,2.613,403,2.613,428,2.149,447,2.858,531,1.678,532,1.745,533,1.819,534,1.819,535,1.819,536,3.11,537,1.819,541,2.677,542,1.647,543,1.819,545,2.276,549,4.314,552,4.535,580,3.215,585,4.237,612,5.268,634,5.852,635,3.215,647,2.21,702,7.558,703,3.481,704,3.481,705,3.481,706,5.866,707,5.866,708,5.866,709,5.852,710,6.475,711,3.885,712,3.481,713,3.215,714,6.191,715,3.885,716,3.885,717,2.858,718,2.613,719,3.481,720,3.017,721,3.885,722,5.717,723,6.078,724,5.717,725,5.717,726,3.481,727,3.885,728,4.732,729,3.885,730,3.481,731,4.44,732,3.885,733,3.481,734,3.885,735,3.017,736,5.717,737,3.885,738,4.39,739,2.858,740,3.481,741,2.858,742,2.858,743,3.885,744,3.885,745,3.885,746,3.481,747,3.481,748,3.481,749,3.885,750,5.595,751,2.427,752,2.348,753,3.885,754,3.215,755,3.885,756,3.215,757,3.481,758,3.481,759,3.885,760,3.885,761,2.613,762,6.783,763,6.191,764,3.885,765,6.783,766,2.515,767,3.017,768,3.481,769,3.885,770,5.717,771,3.885,772,5.123,773,3.885,774,3.885,775,3.885,776,3.017,777,3.885,778,3.885,779,3.885,780,3.885,781,3.885,782,3.885,783,2.515,784,3.215,785,3.017,786,3.885,787,3.481,788,3.885,789,3.885,790,3.481,791,5.123,792,3.481,793,3.481,794,3.481,795,3.481,796,3.481,797,3.481,798,2.515,799,3.481,800,3.481,801,2.726,802,3.481,803,3.481,804,3.481,805,3.481,806,3.481,807,3.885,808,3.481,809,3.481,810,3.885,811,3.885,812,3.885,813,3.885,814,6.192,815,6.704,816,3.885]],["title/injectables/AppService.html",[136,1.341,634,3.591]],["body/injectables/AppService.html",[0,0.26,3,0.12,4,0.101,5,0.107,7,0.355,8,0.865,9,2.903,10,2.881,11,1.066,12,4.008,15,1.707,18,0.674,20,1.389,21,0.005,22,1.323,23,0.427,29,0.225,30,2.503,36,0.995,37,0.127,55,0.686,56,1.282,58,0.004,59,0.004,65,1.237,66,4.626,72,2.305,74,1.846,75,3.915,76,3.915,77,1.797,87,3.594,88,3.181,89,3.026,90,3.181,91,3.181,92,3.181,94,1.389,133,2.457,136,2.003,137,2.503,243,1.782,348,3.36,381,3.823,605,5.095,614,8.026,634,5.363,691,4.346,817,5.906,818,6.286,819,7.641,820,5.906,821,5.906,822,3.973,823,4.587,824,4.587,825,4.145,826,4.889,827,3.569,828,5.906,829,5.906,830,4.346,831,4.145,832,5.906]],["title/classes/AskTokenDto.html",[0,0.226,833,3.974]],["body/classes/AskTokenDto.html",[0,0.369,2,1.003,3,0.139,4,0.116,5,0.124,7,0.411,8,0.947,18,0.583,21,0.005,23,0.385,29,0.198,32,1.35,37,0.146,40,0.838,55,0.729,58,0.004,59,0.004,127,1.43,157,4.188,263,3.838,265,4.124,267,3.066,275,2.616,277,3.031,278,1.864,279,3.547,833,6.5,834,9.052,835,6.115,836,5.221,837,5.008,838,5.021,839,8.369,840,8.369,841,6.824,842,6.824,843,6.5,844,6.824]],["title/controllers/AuthController.html",[385,1.458,845,4.235]],["body/controllers/AuthController.html",[0,0.189,1,2.871,3,0.087,4,0.073,5,0.078,7,0.257,9,1.254,11,0.899,12,2.876,15,1.236,18,0.546,20,1.841,21,0.005,22,1.355,23,0.397,29,0.227,30,1.813,32,0.846,36,0.721,37,0.092,40,0.695,55,0.721,56,1.699,58,0.003,59,0.003,65,0.992,72,1.291,74,1.033,77,1.442,78,2.256,94,1.841,123,2.141,127,1.337,139,2.047,152,1.526,157,4.315,164,2.434,165,3.148,170,1.362,200,2.516,216,1.329,243,1.291,246,2.138,268,3.763,344,2.506,353,2.769,357,2.259,385,1.219,387,1.349,389,1.813,394,3.954,395,3.964,399,4.155,422,1.78,425,2.093,427,1.962,430,2.141,470,3.586,561,3.541,636,3.148,638,4.583,661,4.216,726,3.834,751,2.672,776,3.323,826,3.541,827,2.585,845,5.075,846,4.278,847,5.495,848,6.132,849,6.132,850,5.265,851,4.278,852,6.533,853,4.278,854,5.495,855,6.132,856,5.493,857,4.278,858,4.278,859,4.821,860,4.278,861,4.762,862,2.999,863,6.479,864,7.827,865,4.278,866,4.278,867,4.278,868,4.762,869,2.933,870,5.075,871,4.278,872,4.278,873,4.278,874,6.132,875,2.505,876,2.933,877,3.22,878,5.495,879,4.278,880,4.278,881,4.278,882,3.705,883,3.148,884,2.878,885,7.167,886,4.278,887,4.278,888,3.323,889,3.148,890,3.148,891,4.278,892,4.278,893,4.278,894,4.278,895,4.278,896,7.014,897,4.278,898,4.278,899,4.278,900,4.278,901,6.132,902,4.512,903,6.132,904,4.278,905,4.278,906,4.278,907,4.278,908,6.132,909,5.495,910,3.834,911,4.278,912,4.278,913,3.834,914,4.278,915,4.278,916,4.278,917,4.278,918,4.278,919,4.278,920,4.278]],["title/modules/AuthModule.html",[166,1.59,921,3.591]],["body/modules/AuthModule.html",[0,0.254,3,0.117,4,0.098,5,0.105,21,0.005,29,0.235,36,0.971,37,0.123,58,0.004,59,0.004,78,1.768,83,6.005,103,3.376,166,2.6,387,2.371,530,6.109,531,2.49,532,2.59,533,2.699,534,2.699,535,2.699,536,3.839,537,3.92,541,3.521,542,2.443,543,2.699,549,4.44,552,4.278,714,6.501,750,5.278,845,6.929,882,6.092,884,3.877,921,7.173,922,5.165,923,5.165,924,5.165,925,5.165,926,6.35,927,7.33,928,7.33,929,5.764,930,5.764,931,5.165,932,4.77,933,5.764,934,5.165,935,5.764,936,4.77,937,4.241,938,5.764,939,5.764,940,5.165,941,5.764,942,5.764,943,5.764,944,5.764]],["title/injectables/AuthService.html",[136,1.341,882,3.092]],["body/injectables/AuthService.html",[0,0.111,3,0.051,4,0.043,5,0.074,7,0.152,8,0.462,9,2.826,10,1.753,11,0.957,12,3.177,15,1.181,18,0.638,20,1.73,21,0.005,22,1.273,23,0.397,25,1.836,29,0.214,30,1.067,36,0.424,37,0.054,40,0.824,42,0.928,43,0.87,44,1.011,53,1.347,55,0.7,56,1.873,58,0.002,59,0.002,65,0.661,66,3.519,67,1.433,68,5.423,72,1.789,73,4.948,74,2.209,75,2.094,76,2.094,77,0.961,78,2.199,87,2.38,88,1.357,89,1.29,90,1.357,91,1.357,92,1.357,94,1.73,100,1.26,101,1.63,102,1.475,106,2.094,112,1.351,122,1.962,123,1.26,136,1.071,137,1.067,157,2.58,162,2.526,170,1.766,200,2.426,209,1.931,216,2.46,222,1.155,243,0.76,244,2.872,246,2.475,249,2.468,250,3.94,268,4.532,286,2.268,306,1.29,310,3.24,313,2.641,325,4.445,326,1.956,332,1.205,339,1.433,344,1.475,381,1.63,476,1.955,546,2.085,562,2.085,563,2.085,603,2.641,617,1.433,620,3.382,654,3.382,766,1.63,823,1.956,824,1.956,825,1.768,826,2.085,827,1.522,830,1.853,831,1.768,847,3.661,850,2.749,852,5.638,859,2.749,882,2.469,888,1.956,889,1.853,890,1.853,902,4.798,913,7.734,937,1.853,945,2.519,946,5.155,947,5.155,948,5.155,949,5.155,950,5.155,951,5.155,952,4.086,953,5.155,954,4.086,955,4.086,956,4.086,957,4.595,958,7.356,959,4.086,960,4.086,961,2.519,962,4.086,963,2.519,964,2.519,965,2.519,966,4.086,967,2.519,968,2.519,969,4.086,970,2.519,971,4.086,972,2.519,973,2.324,974,2.802,975,3.661,976,2.519,977,5.712,978,2.519,979,4.086,980,4.086,981,2.519,982,4.086,983,3.661,984,4.086,985,2.519,986,2.519,987,3.382,988,3.173,989,3.006,990,2.519,991,2.519,992,2.519,993,3.661,994,2.257,995,2.519,996,1.232,997,2.085,998,3.382,999,3.382,1000,2.519,1001,2.519,1002,1.956,1003,2.519,1004,2.085,1005,2.085,1006,4.086,1007,2.519,1008,2.519,1009,2.519,1010,2.519,1011,2.519,1012,2.519,1013,2.257,1014,2.257,1015,2.519,1016,2.519,1017,2.519,1018,2.519,1019,4.086,1020,2.519,1021,4.606,1022,2.519,1023,4.267,1024,2.519,1025,5.932,1026,2.519,1027,2.519,1028,2.519,1029,2.519,1030,2.519,1031,2.519,1032,2.519,1033,4.086,1034,2.519,1035,2.519,1036,4.086,1037,2.519,1038,2.519,1039,2.519,1040,4.086,1041,2.519,1042,2.519,1043,2.519,1044,2.519,1045,1.853,1046,2.519,1047,2.519,1048,4.086,1049,2.519,1050,2.519,1051,2.519,1052,4.086,1053,1.956,1054,2.519,1055,2.519,1056,3.382,1057,4.086,1058,5.932,1059,5.155,1060,2.519,1061,2.519,1062,2.519,1063,2.519,1064,2.519,1065,2.519,1066,2.519,1067,2.519,1068,2.519,1069,2.519,1070,2.519,1071,2.519,1072,2.519,1073,2.257,1074,4.086,1075,2.519,1076,2.519,1077,2.519,1078,2.519]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.479,1079,3.765]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.097,4,0.081,5,0.086,7,0.286,8,0.748,11,1.151,21,0.005,22,1.314,23,0.453,29,0.112,37,0.163,38,1.909,40,0.9,41,2.682,42,1.751,43,1.642,44,1.907,58,0.003,59,0.003,60,2.054,121,2.8,122,2.304,134,1.229,185,4.418,196,4.177,256,5.309,257,2.698,263,3.029,286,3.116,292,1.78,332,2.274,476,3.16,624,4.275,784,5.467,801,4.636,974,3.458,1079,4.86,1080,3.935,1081,3.935,1082,6.521,1083,6.789,1084,7.35,1085,6.789,1086,6.789,1087,7.35,1088,7.35,1089,7.134,1090,7.723,1091,5.919,1092,6.789,1093,5.919,1094,7.384,1095,4.86,1096,8.491,1097,5.919,1098,5.919,1099,5.467,1100,5.919,1101,5.919,1102,4.957,1103,5.129,1104,5.919,1105,4.86,1106,5.919,1107,5.919,1108,5.919,1109,5.919,1110,3.498,1111,3.935,1112,3.935,1113,3.935]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.479,1113,4.235]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.113,4,0.095,5,0.101,7,0.336,8,0.833,21,0.005,22,1.275,23,0.419,29,0.132,37,0.177,38,2.128,40,0.895,41,2.67,42,2.056,43,1.928,44,2.239,58,0.004,59,0.004,60,2.411,121,2.365,122,2.068,134,1.443,185,5.138,196,4.38,256,4.766,257,2.28,263,2.559,286,2.959,292,2.758,332,2.67,476,2.67,624,5.672,784,4.619,801,3.916,1079,4.106,1080,4.619,1081,4.619,1082,6.653,1083,4.619,1084,5.001,1085,4.619,1086,4.619,1087,5.001,1088,5.001,1089,6.82,1090,7.253,1091,5.001,1092,6.094,1093,5.001,1094,8.109,1095,4.106,1096,8.383,1097,5.001,1098,5.001,1099,4.619,1100,5.001,1101,5.001,1102,4.449,1103,4.334,1104,5.001,1105,4.106,1106,5.001,1107,5.001,1108,5.001,1109,5.001,1110,4.106,1111,4.619,1112,4.619,1113,6.094]],["title/interfaces/BackendResultInfoInterface.html",[38,1.479,1114,4.235]],["body/interfaces/BackendResultInfoInterface.html",[3,0.146,4,0.122,5,0.13,7,0.431,8,0.975,11,1.102,21,0.005,23,0.425,37,0.185,38,2.49,40,0.851,41,2.812,58,0.004,59,0.004,60,3.094,205,3.582,216,2.98,264,4.41,329,3.116,341,2.925,1114,7.941,1115,5.927,1116,5.561,1117,5.269,1118,4.635,1119,6.417]],["title/interfaces/BackendResultInterface.html",[38,1.479,1117,3.765]],["body/interfaces/BackendResultInterface.html",[3,0.143,4,0.12,5,0.128,7,0.424,8,0.967,11,1.097,21,0.005,23,0.439,37,0.183,38,2.468,40,0.847,41,2.798,58,0.004,59,0.004,60,3.048,205,2.734,216,2.192,264,4.392,329,2.292,341,3.899,1114,8.32,1115,5.84,1116,5.479,1117,6.284,1118,6.179,1119,8.554]],["title/classes/BackendsCommand.html",[0,0.226,1120,3.974]],["body/classes/BackendsCommand.html",[0,0.34,2,0.879,3,0.122,4,0.102,5,0.109,7,0.36,9,1.753,11,0.885,12,3.942,15,2.226,18,0.537,20,1.811,21,0.005,22,1.558,23,0.354,29,0.201,30,2.535,37,0.165,40,0.799,42,2.837,43,2.661,44,3.091,45,3.947,46,4.149,55,0.63,58,0.004,59,0.004,65,1.247,72,1.804,74,1.445,77,1.811,78,2.19,94,1.406,170,1.464,200,2.36,209,3.37,243,2.324,246,1.634,268,3.14,272,1.464,315,4.986,316,5.515,320,4.986,321,3.736,322,3.736,332,3.685,333,4.986,334,4.986,335,5.515,345,3.736,346,3.871,348,3.402,380,5.406,381,3.871,384,4.197,1120,5.982,1121,5.359,1122,5.98,1123,5.98,1124,5.732,1125,4.644,1126,5.359,1127,6.376,1128,3.221,1129,4.95,1130,5.359,1131,5.359,1132,4.023]],["title/controllers/BackendsController.html",[385,1.458,1133,4.235]],["body/controllers/BackendsController.html",[0,0.135,3,0.062,4,0.052,5,0.055,7,0.184,9,0.896,10,1.621,11,0.873,15,0.883,18,0.5,20,1.687,21,0.005,22,1.242,23,0.33,25,1.373,29,0.221,32,0.604,36,0.515,37,0.065,39,2.44,40,0.883,41,1.717,53,2.618,55,0.696,56,1.831,58,0.002,59,0.002,72,1.767,73,3.941,74,1.151,77,1.121,78,2.325,94,1.687,100,1.529,101,1.978,102,1.79,106,3.002,108,3.998,112,0.801,116,1.738,127,1.225,133,1.271,134,0.79,139,1.462,152,1.09,156,2.249,157,2.385,162,1.184,170,1.697,200,1.833,216,2.621,244,1.346,246,1.96,249,1.271,263,3.034,272,0.748,325,3.54,329,1.548,341,1.947,344,1.79,385,0.871,387,0.963,389,1.295,394,3.873,395,4.33,399,4.114,422,1.271,425,1.495,427,1.401,559,2.977,561,2.529,589,3.941,599,3.507,636,2.249,638,4.205,661,3.864,861,3.701,868,3.701,869,2.28,877,2.502,889,2.249,909,2.738,910,2.738,973,1.738,988,5.138,989,3.507,1102,1.847,1118,3.085,1124,3.941,1129,2.529,1132,2.056,1133,3.945,1134,3.056,1135,5.858,1136,5.858,1137,5.858,1138,4.766,1139,5.858,1140,3.056,1141,5.477,1142,8.929,1143,3.056,1144,3.564,1145,4.868,1146,5.929,1147,3.056,1148,3.056,1149,5.477,1150,5.858,1151,5.858,1152,5.858,1153,6.429,1154,3.056,1155,3.945,1156,4.766,1157,3.056,1158,3.056,1159,3.056,1160,4.271,1161,4.766,1162,4.271,1163,4.766,1164,3.236,1165,2.977,1166,2.331,1167,4.766,1168,3.701,1169,3.945,1170,3.056,1171,3.056,1172,3.056,1173,6.617,1174,3.945,1175,4.271,1176,4.271,1177,3.056,1178,3.056,1179,5.477,1180,3.056,1181,3.056,1182,4.766,1183,3.056,1184,4.766,1185,2.738,1186,3.056,1187,3.056,1188,2.738,1189,3.056,1190,4.766,1191,2.249,1192,2.738,1193,1.79,1194,3.056,1195,3.056,1196,3.056,1197,6.617,1198,4.766,1199,5.858,1200,3.056,1201,3.056,1202,4.766,1203,2.738,1204,3.507,1205,3.056,1206,3.056,1207,3.056,1208,3.056,1209,3.056,1210,6.617,1211,6.617,1212,3.056,1213,5.929,1214,3.056,1215,3.056,1216,3.056,1217,3.056,1218,3.056,1219,3.056,1220,3.056,1221,3.056,1222,3.056,1223,2.738,1224,3.701,1225,3.056,1226,3.701,1227,3.056,1228,3.701,1229,3.056,1230,3.345,1231,3.056,1232,3.056,1233,3.056,1234,3.056,1235,3.056,1236,3.056,1237,3.056,1238,3.056,1239,3.056,1240,3.056,1241,3.056,1242,3.056,1243,3.056,1244,3.056,1245,4.766,1246,3.056,1247,3.056,1248,3.056,1249,3.056,1250,3.056,1251,3.056,1252,4.271,1253,3.056,1254,3.056,1255,3.507,1256,3.056]],["title/modules/BackendsModule.html",[166,1.59,1257,3.312]],["body/modules/BackendsModule.html",[0,0.275,3,0.127,4,0.106,5,0.113,21,0.005,29,0.234,36,1.049,37,0.133,58,0.004,59,0.004,103,3.647,166,2.697,387,2.492,530,6.236,531,2.69,532,2.797,533,2.915,534,2.915,535,2.915,536,3.982,537,4.066,541,3.701,542,2.639,543,2.915,549,3.955,714,6.138,1124,6.856,1133,7.187,1188,5.579,1257,6.674,1258,5.579,1259,5.579,1260,5.579,1261,5.579,1262,6.236,1263,6.761,1264,6.761,1265,6.226,1266,6.226,1267,6.226,1268,5.579,1269,5.579,1270,5.579]],["title/classes/BackendsSyncallCommand.html",[0,0.226,1127,4.235]],["body/classes/BackendsSyncallCommand.html",[0,0.338,2,0.873,3,0.121,4,0.101,5,0.108,7,0.357,9,1.741,11,0.881,12,3.936,15,2.216,18,0.535,20,1.803,21,0.005,22,1.554,23,0.353,29,0.201,30,2.517,37,0.164,40,0.796,42,2.824,43,2.649,44,3.076,45,3.929,46,4.13,55,0.628,58,0.004,59,0.004,65,1.241,72,1.791,74,1.434,77,1.803,78,2.185,94,1.396,170,1.457,200,2.352,209,3.361,243,2.313,246,1.622,268,3.118,272,1.454,315,4.963,316,5.497,320,4.963,321,3.709,322,3.709,332,3.668,333,4.963,334,4.963,335,5.497,345,3.709,346,3.843,348,3.378,380,5.381,381,3.843,384,4.167,1120,4.611,1121,5.321,1124,6.513,1125,4.611,1126,5.321,1127,7.029,1128,3.198,1129,4.915,1130,5.321,1131,5.321,1132,3.995,1271,5.938,1272,5.938]],["title/classes/ChangePasswordDto.html",[0,0.226,1273,3.765]],["body/classes/ChangePasswordDto.html",[0,0.351,2,0.924,3,0.128,4,0.107,5,0.114,7,0.378,8,0.9,18,0.608,21,0.005,23,0.461,29,0.188,32,1.243,37,0.135,40,0.906,53,2.622,55,0.741,58,0.004,59,0.004,127,1.49,157,3.979,205,3.08,263,3.646,265,5.27,267,3.137,275,2.649,277,3.069,278,1.717,279,3.697,310,4.037,837,4.824,843,6.174,1273,5.85,1274,9.165,1275,5.632,1276,6.417,1277,7.219,1278,7.125,1279,6.285,1280,7.951,1281,7.951,1282,6.285,1283,6.285]],["title/interfaces/CipherData.html",[38,1.479,1284,4.235]],["body/interfaces/CipherData.html",[0,0.07,3,0.032,4,0.027,5,0.029,7,0.095,8,0.312,9,1.289,15,0.457,18,0.11,21,0.005,23,0.127,24,1.569,29,0.209,36,0.266,37,0.034,38,0.797,39,0.538,40,0.627,41,0.809,53,2.693,55,0.564,56,1.817,58,0.001,59,0.001,60,0.683,65,0.256,66,1.32,70,0.83,72,1.653,73,2.957,74,1.324,78,1.831,83,1.723,100,1.38,101,1.023,102,0.926,103,0.926,106,3.989,112,2.14,122,0.444,136,0.723,139,2.386,162,0.612,170,1.82,200,2.015,219,1.732,243,0.477,244,2.754,246,2.57,249,2.729,250,4.612,253,2.576,268,2.619,272,1.342,306,0.81,310,3.008,329,1.78,341,2.68,352,1.32,354,2.323,394,1.796,422,0.658,454,1.88,462,2.075,476,3.138,542,1.863,603,4.526,633,3.905,647,0.899,652,3.67,653,1.228,690,2.142,735,1.228,738,2.375,739,1.163,752,2.218,761,2.957,766,1.023,767,1.228,785,2.142,825,1.109,827,0.955,833,2.142,836,4.851,837,4.454,856,1.109,862,3.559,869,2.991,875,3.699,876,2.103,877,0.83,889,2.7,902,2.7,989,2.03,1023,2.283,1053,2.142,1056,1.308,1118,1.785,1124,1.856,1125,1.228,1128,1.486,1132,1.063,1144,2.952,1164,1.349,1165,0.987,1166,1.349,1168,1.228,1191,1.163,1193,0.926,1224,2.85,1226,2.85,1228,2.85,1230,2.576,1273,2.03,1276,2.7,1277,1.308,1284,2.283,1285,1.417,1286,1.109,1287,1.417,1288,1.417,1289,1.417,1290,1.417,1291,1.417,1292,1.417,1293,1.417,1294,1.308,1295,2.283,1296,2.03,1297,1.308,1298,1.936,1299,1.417,1300,1.163,1301,3.38,1302,1.417,1303,2.472,1304,2.03,1305,3.038,1306,1.308,1307,2.03,1308,1.308,1309,1.308,1310,2.576,1311,1.228,1312,0.899,1313,1.308,1314,2.03,1315,1.308,1316,2.7,1317,1.228,1318,2.03,1319,1.308,1320,1.785,1321,1.063,1322,1.023,1323,4.536,1324,6.688,1325,3.939,1326,2.283,1327,1.163,1328,1.417,1329,1.417,1330,1.417,1331,1.308,1332,1.417,1333,1.417,1334,1.417,1335,1.417,1336,1.228,1337,3.289,1338,4.58,1339,5.094,1340,4.792,1341,2.283,1342,1.667,1343,2.15,1344,2.292,1345,4.768,1346,1.308,1347,1.856,1348,1.417,1349,4.397,1350,1.417,1351,1.417,1352,4.604,1353,4.911,1354,4.536,1355,5.878,1356,1.308,1357,1.527,1358,1.228,1359,3.414,1360,1.417,1361,1.417,1362,1.417,1363,1.417,1364,3.939,1365,2.472,1366,5.284,1367,2.472,1368,3.289,1369,3.289,1370,1.417,1371,1.417,1372,1.417,1373,1.417,1374,2.472,1375,1.417,1376,3.038,1377,2.472,1378,2.472,1379,2.283,1380,1.417,1381,1.417,1382,2.472,1383,2.472,1384,1.417,1385,1.417,1386,2.472,1387,2.472,1388,2.576,1389,1.417,1390,2.472,1391,2.472,1392,4.579,1393,2.283,1394,3.203,1395,4.792,1396,2.469,1397,2.7,1398,3.816,1399,4.47,1400,3.67,1401,2.03,1402,1.417,1403,1.308,1404,1.417,1405,1.417,1406,3.289,1407,1.417,1408,1.417,1409,1.417,1410,5.487,1411,2.85,1412,2.283,1413,3.939,1414,2.472,1415,1.417,1416,2.576,1417,3.235,1418,1.417,1419,1.417,1420,3.687,1421,1.417,1422,1.063,1423,2.283,1424,1.417,1425,2.472,1426,2.472,1427,1.417,1428,1.417,1429,1.936,1430,0.852,1431,1.417,1432,1.417,1433,1.308,1434,1.417,1435,1.417,1436,1.228,1437,2.472,1438,1.308,1439,3.939,1440,1.417,1441,1.417,1442,2.472,1443,3.289,1444,1.417,1445,1.417,1446,1.109,1447,1.228,1448,1.417,1449,2.472,1450,2.472,1451,2.472,1452,1.308,1453,1.308,1454,1.417,1455,5.602,1456,2.472,1457,2.283,1458,1.308,1459,1.163,1460,3.289,1461,1.417,1462,1.417,1463,1.417,1464,3.289,1465,3.038,1466,3.289,1467,1.417,1468,1.417,1469,1.417,1470,1.023,1471,1.417,1472,1.417,1473,1.417,1474,1.417,1475,1.417,1476,2.472,1477,1.163,1478,1.417,1479,1.417,1480,2.472,1481,1.417,1482,1.417,1483,1.417,1484,3.289,1485,1.417,1486,1.417,1487,1.308,1488,4.47,1489,1.417,1490,1.163,1491,1.448,1492,1.417,1493,1.417,1494,1.417,1495,1.417,1496,1.417,1497,1.417,1498,1.228,1499,2.472,1500,1.417,1501,1.417,1502,2.472,1503,2.472,1504,3.289,1505,2.472,1506,1.417,1507,2.472,1508,2.472,1509,2.472,1510,2.472,1511,1.417,1512,1.417,1513,2.472,1514,2.472,1515,2.472,1516,2.472,1517,2.472,1518,2.472,1519,2.472,1520,2.472,1521,2.472,1522,2.472,1523,1.417,1524,1.308,1525,1.417,1526,1.417,1527,1.417,1528,1.417,1529,1.417,1530,1.417,1531,2.472,1532,1.417,1533,1.417,1534,1.417,1535,1.417,1536,1.417,1537,3.289,1538,2.472,1539,2.472,1540,2.472,1541,1.417,1542,2.472,1543,2.472,1544,3.639,1545,2.472,1546,2.472,1547,2.472,1548,2.283,1549,1.308,1550,1.417,1551,1.417,1552,2.472,1553,2.142,1554,1.109,1555,1.023,1556,1.417,1557,2.472,1558,1.417,1559,1.417,1560,1.417,1561,1.063,1562,1.417,1563,1.417,1564,2.142,1565,1.308,1566,1.417,1567,1.417,1568,2.472,1569,1.417,1570,1.417,1571,1.417,1572,1.308,1573,1.417,1574,1.417,1575,1.417,1576,1.417,1577,1.417,1578,1.417,1579,1.417,1580,1.417,1581,1.417,1582,1.417,1583,2.622,1584,2.472,1585,1.417,1586,1.228,1587,1.417,1588,1.308,1589,1.417,1590,1.417,1591,1.308,1592,1.417,1593,1.417,1594,1.417,1595,0.926,1596,1.417,1597,1.417]],["title/modules/CliModule.html",[166,1.59,1598,3.974]],["body/modules/CliModule.html",[0,0.224,3,0.103,4,0.087,5,0.092,21,0.005,23,0.234,29,0.239,36,0.856,37,0.109,56,1.103,58,0.003,59,0.003,70,4.78,78,1.984,83,6.072,100,2.542,101,3.288,102,2.975,103,2.975,116,2.889,132,1.489,134,1.787,166,2.441,170,0.965,209,1.902,272,1.244,299,5.086,347,3.565,428,2.81,530,5.893,531,2.194,532,2.282,533,2.378,534,2.378,535,2.378,536,3.17,537,2.378,541,3.237,542,2.153,543,2.378,545,2.975,549,4.556,552,4.799,553,4.552,585,3.173,647,2.889,712,4.552,713,4.204,714,6.853,717,3.737,718,3.417,719,4.552,720,3.945,740,4.552,741,3.737,746,4.552,747,4.552,748,4.552,750,5.92,763,3.945,790,4.552,791,6.195,792,4.552,793,4.552,794,4.552,795,4.552,796,4.552,797,4.552,798,3.288,799,4.552,800,4.552,801,3.565,802,4.552,803,4.552,804,4.552,805,4.552,806,4.552,808,4.552,809,4.552,921,6.389,926,6.124,934,4.552,1120,3.945,1257,5.893,1598,7.679,1599,4.552,1600,5.079,1601,5.079,1602,5.079,1603,3.737,1604,5.086,1605,5.079,1606,5.079,1607,5.079,1608,4.204,1609,5.079,1610,5.079,1611,5.079]],["title/classes/ConcernedToPart.html",[0,0.226,1612,4.235]],["body/classes/ConcernedToPart.html",[0,0.284,2,0.945,3,0.131,4,0.11,5,0.117,7,0.387,8,0.913,11,0.927,18,0.614,21,0.005,22,1.526,23,0.447,29,0.191,37,0.173,40,0.885,55,0.744,58,0.004,59,0.004,65,1.041,112,1.685,121,3.419,122,1.806,124,3.357,127,1.505,128,4.127,131,4.327,132,1.885,133,2.675,134,1.662,167,6.485,170,1.222,219,1.781,263,4.041,272,2.263,289,3.349,292,3.021,293,3.076,1612,6.676,1613,9.242,1614,6.43,1615,6.43,1616,6.43,1617,6.43,1618,5.762,1619,6.43]],["title/classes/ConcernedToPartDTO.html",[0,0.226,1620,3.765]],["body/classes/ConcernedToPartDTO.html",[0,0.364,2,0.983,3,0.136,4,0.114,5,0.121,7,0.402,8,0.936,11,0.95,18,0.625,21,0.005,22,1.553,23,0.413,29,0.212,32,1.323,37,0.143,40,0.832,55,0.749,58,0.004,59,0.004,124,3.148,127,1.532,133,2.782,134,1.729,167,6.601,263,4.114,275,2.708,277,3.004,278,1.827,485,4.693,492,4.921,505,4.34,508,4.452,509,3.439,1620,6.082,1621,9.371,1622,6.688,1623,6.688,1624,5.535,1625,6.688,1626,6.688]],["title/interfaces/ConfigInstance.html",[38,1.479,1627,4.235]],["body/interfaces/ConfigInstance.html",[3,0.112,4,0.063,5,0.067,7,0.221,8,0.621,21,0.005,23,0.468,29,0.21,32,0.727,37,0.141,38,1.585,39,2.233,40,0.879,41,1.077,42,1.354,43,1.27,44,1.475,45,1.883,46,1.98,47,2.579,58,0.003,59,0.003,60,1.588,70,3.447,102,4.787,112,0.963,132,1.077,134,2.014,157,1.839,162,1.424,209,3.525,270,2.516,272,1.607,285,2.296,286,1.782,310,2.417,357,3.632,375,4.898,428,3.035,585,4.548,617,3.121,647,3.121,651,2.854,656,2.854,660,6.012,717,4.037,718,3.691,720,4.261,741,4.037,763,4.261,798,4.713,818,2.579,850,2.472,859,5.497,884,2.472,932,4.541,936,4.541,937,2.704,996,3.211,1005,5.434,1045,2.704,1095,2.704,1301,1.758,1336,6.05,1344,4.866,1411,4.261,1627,5.434,1628,3.293,1629,5.467,1630,6.981,1631,6.981,1632,6.764,1633,5.732,1634,6.524,1635,4.917,1636,4.917,1637,4.917,1638,4.541,1639,2.854,1640,3.851,1641,4.541,1642,4.541,1643,4.261,1644,4.917,1645,4.917,1646,4.917,1647,4.917,1648,5.883,1649,4.541,1650,4.541,1651,4.541,1652,4.541,1653,4.917,1654,3.293,1655,3.293,1656,3.293,1657,3.293,1658,3.293,1659,3.293,1660,3.293,1661,3.042,1662,3.293,1663,7.588,1664,3.293,1665,3.293,1666,3.293,1667,3.293,1668,3.293,1669,3.293,1670,3.293,1671,3.293,1672,3.293,1673,3.293,1674,3.293,1675,3.293,1676,3.293,1677,4.541,1678,4.917,1679,3.293,1680,3.293,1681,3.293,1682,3.293,1683,3.293,1684,3.293,1685,3.293,1686,3.293,1687,3.293,1688,3.293,1689,3.293,1690,3.293,1691,3.293,1692,3.293,1693,3.293,1694,3.293,1695,3.293,1696,3.293,1697,3.293,1698,3.293,1699,3.293,1700,3.293,1701,3.293,1702,3.042]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.226,1703,3.974]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.413,2,0.894,3,0.124,4,0.104,5,0.11,7,0.366,8,0.881,18,0.631,21,0.005,22,1.567,23,0.462,29,0.203,37,0.184,40,0.864,55,0.765,58,0.004,59,0.004,127,1.547,270,3.569,272,1.906,276,4.75,277,3.301,278,1.66,282,4.428,283,3.458,289,3.112,506,4.021,510,2.731,516,3.895,1703,7.031,1704,5.031,1705,7.494,1706,6.079,1707,6.079,1708,6.079,1709,6.668,1710,6.079,1711,6.079,1712,6.443,1713,3.114,1714,5.031,1715,5.031,1716,6.668,1717,4.266]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.226,1716,3.974]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.415,2,0.913,3,0.126,4,0.106,5,0.113,7,0.374,8,0.893,18,0.605,21,0.005,22,1.58,23,0.45,29,0.205,37,0.186,40,0.879,55,0.762,58,0.004,59,0.004,127,1.482,270,2.85,272,1.933,276,4.367,277,3.316,278,1.698,282,5.192,283,3.535,289,2.252,506,4.062,510,2.792,516,3.95,1703,6.738,1704,5.144,1705,7.555,1709,6.131,1712,7.181,1713,3.184,1714,5.144,1715,5.144,1716,7.089,1717,4.361,1718,6.214,1719,6.214,1720,6.214]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.226,1717,3.591]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.418,2,0.931,3,0.129,4,0.108,5,0.115,7,0.381,8,0.904,18,0.557,21,0.005,22,1.383,23,0.445,29,0.207,37,0.188,40,0.841,55,0.759,58,0.004,59,0.004,127,1.365,270,2.904,272,1.956,276,4.419,277,3.24,278,1.73,282,5.228,283,4.978,289,2.295,506,4.098,510,2.845,516,3.998,1703,7.137,1704,5.241,1705,6.612,1709,6.204,1712,6.612,1713,3.245,1714,5.241,1715,5.241,1716,7.137,1717,5.607,1721,6.612,1722,6.612,1723,6.332,1724,6.332]],["title/classes/ConsoleSession.html",[0,0.226,999,4.235]],["body/classes/ConsoleSession.html",[0,0.296,2,0.987,3,0.136,4,0.115,5,0.122,7,0.404,8,0.938,15,2.597,18,0.654,21,0.005,23,0.413,37,0.144,40,0.871,55,0.758,58,0.004,59,0.004,74,2.447,122,2.525,286,2.919,313,4.605,352,4.3,602,6.017,607,6.017,608,7.425,609,6.017,974,3.606,999,6.858,1725,9.64,1726,8.286,1727,6.905]],["title/controllers/CoreController.html",[385,1.458,1728,4.235]],["body/controllers/CoreController.html",[0,0.332,3,0.153,4,0.129,5,0.137,21,0.005,29,0.223,32,1.49,36,1.27,37,0.161,55,0.557,58,0.004,59,0.004,74,1.82,385,2.146,387,2.375,389,3.193,427,3.454,456,3.604,457,3.77,1728,7.351,1729,7.533,1730,6.75,1731,6.535,1732,6.75,1733,7.533,1734,7.533]],["title/modules/CoreModule.html",[166,1.59,706,3.765]],["body/modules/CoreModule.html",[0,0.242,3,0.111,4,0.094,5,0.099,18,0.382,21,0.005,29,0.237,30,2.323,36,0.924,37,0.117,55,0.405,56,1.189,58,0.004,59,0.004,77,1.289,94,1.289,166,2.702,387,2.293,454,3.727,530,6.024,531,2.367,532,2.462,533,2.566,534,2.566,535,2.566,536,3.745,537,2.566,541,3.406,542,2.323,543,2.566,549,4.087,706,7.623,921,6.532,926,6.261,940,4.91,996,2.68,1257,6.024,1263,6.532,1264,6.532,1268,4.91,1269,4.91,1270,4.91,1728,6.759,1730,4.91,1731,6.848,1732,4.91,1735,4.91,1736,4.91,1737,4.91,1738,6.532,1739,6.848,1740,5.48,1741,6.342,1742,5.48,1743,6.342,1744,4.535,1745,5.48,1746,5.48,1747,5.48,1748,5.48,1749,5.48,1750,4.535,1751,4.535,1752,4.535]],["title/injectables/CoreService.html",[136,1.341,1731,3.765]],["body/injectables/CoreService.html",[0,0.341,3,0.157,4,0.132,5,0.14,15,2.758,18,0.539,21,0.005,29,0.183,36,1.302,37,0.166,55,0.667,58,0.004,59,0.004,136,2.362,137,3.274,1731,6.632,1753,7.725,1754,7.725]],["title/classes/CustomFieldsDto.html",[0,0.226,484,2.503]],["body/classes/CustomFieldsDto.html",[0,0.382,2,1.062,3,0.147,4,0.123,5,0.131,7,0.435,8,0.98,11,0.996,18,0.504,21,0.005,23,0.398,29,0.205,37,0.155,39,2.456,40,0.641,55,0.686,58,0.004,59,0.004,127,1.234,278,1.973,294,3.972,295,3.382,296,3.382,351,5.278,357,2.661,484,4.237,502,4.512,506,4.056,509,3.604,1755,8.663,1756,7.223,1757,7.223,1758,4.237]],["title/classes/DataPart.html",[0,0.226,1759,4.235]],["body/classes/DataPart.html",[0,0.295,2,0.983,3,0.136,4,0.114,5,0.121,7,0.402,8,0.936,11,0.95,18,0.576,21,0.005,23,0.457,29,0.195,37,0.192,40,0.891,55,0.725,58,0.004,59,0.004,65,1.082,112,1.753,121,3.503,122,1.879,127,1.412,128,3.87,131,4.201,132,1.96,134,1.729,170,1.571,272,2.024,286,2.914,289,2.995,292,3.096,293,3.199,329,2.914,1759,6.841,1760,6.688,1761,6.688,1762,8.971,1763,6.688,1764,5.993,1765,6.688]],["title/classes/DeleteIdentitiesDto.html",[0,0.226,1141,4.235]],["body/classes/DeleteIdentitiesDto.html",[0,0.385,2,1.078,3,0.149,4,0.125,5,0.133,7,0.441,8,0.989,18,0.511,21,0.005,23,0.402,29,0.207,32,1.451,37,0.157,40,0.776,55,0.691,58,0.004,59,0.004,127,1.253,275,2.526,278,2.004,288,5.121,515,4.836,973,5.313,1141,7.236,1766,8.742,1767,6.572,1768,6.572,1769,6.572]],["title/injectables/DtoValidationPipe.html",[136,1.341,731,3.974]],["body/injectables/DtoValidationPipe.html",[0,0.217,3,0.1,4,0.084,5,0.089,7,0.297,9,1.445,10,1.676,11,0.889,15,1.424,18,0.539,20,1.819,21,0.005,22,1.34,23,0.356,29,0.183,30,2.089,36,0.831,37,0.106,38,1.424,39,1.676,40,0.739,53,1.626,55,0.696,56,1.808,58,0.003,59,0.003,65,1.096,74,1.191,77,1.593,78,1.819,94,1.593,123,4.169,136,1.775,137,2.089,139,4.421,152,1.758,170,1.583,187,2.358,200,1.876,243,1.487,246,1.347,272,1.658,284,4.823,286,1.601,329,2.2,341,3.161,389,3.531,422,2.051,462,2.051,476,3.24,633,4.231,731,6.009,750,3.459,766,3.191,783,4.384,875,2.014,974,3.104,1002,3.828,1395,3.459,1470,3.191,1770,7.465,1771,4.08,1772,6.933,1773,6.009,1774,7.468,1775,4.929,1776,4.929,1777,5.606,1778,6.895,1779,4.929,1780,6.069,1781,6.781,1782,4.929,1783,5.606,1784,4.417,1785,4.417,1786,4.417,1787,4.417,1788,4.417,1789,4.417,1790,4.983,1791,4.417,1792,2.655,1793,4.417,1794,4.08,1795,4.417,1796,4.417,1797,4.08,1798,4.417,1799,4.08,1800,4.417,1801,4.417,1802,4.417,1803,4.417,1804,4.417,1805,4.417,1806,6.069,1807,4.417,1808,4.417,1809,4.417,1810,4.417,1811,4.417,1812,4.417,1813,6.069,1814,4.417,1815,4.417,1816,4.417]],["title/classes/EmployeeNumber1700395200.html",[0,0.226,1817,4.586]],["body/classes/EmployeeNumber1700395200.html",[0,0.244,2,0.813,3,0.112,4,0.094,5,0.1,7,0.333,8,0.829,10,2.97,11,0.636,15,2.116,18,0.609,20,1.301,21,0.005,22,0.958,23,0.255,29,0.194,36,0.933,37,0.119,40,0.491,41,1.622,53,2.415,55,0.672,58,0.004,59,0.004,72,2.872,74,1.982,77,1.722,78,2.195,94,1.722,116,4.968,122,2.057,132,1.622,134,1.431,170,1.56,196,2.591,200,2.419,238,3.344,246,2.242,256,4.74,268,4.309,286,2.379,902,6.426,974,2.221,1301,3.503,1430,2.981,1817,6.562,1818,9.084,1819,8.14,1820,5.534,1821,8.734,1822,8.14,1823,4.959,1824,7.323,1825,6.061,1826,7.323,1827,5.534,1828,5.534,1829,6.562,1830,5.534,1831,4.581,1832,5.534,1833,5.534,1834,6.041,1835,8.207,1836,5.139,1837,7.323,1838,7.323,1839,6.061,1840,5.534,1841,5.534,1842,7.323,1843,5.534,1844,5.534,1845,4.072]],["title/injectables/EnsureIdentitiesIndexMiddleware.html",[136,1.341,1846,4.235]],["body/injectables/EnsureIdentitiesIndexMiddleware.html",[0,0.271,3,0.125,4,0.105,5,0.112,7,0.472,11,0.902,15,2.268,18,0.547,20,1.845,21,0.005,22,1.359,23,0.361,29,0.222,36,1.038,37,0.132,55,0.639,58,0.004,59,0.004,67,3.502,72,1.857,74,1.487,77,1.845,78,2.031,94,1.448,132,1.805,134,1.592,136,2.057,137,2.61,139,4.352,152,2.195,156,4.53,196,4.259,238,3.721,244,2.712,246,1.682,249,2.562,332,4.352,394,3.716,399,3.881,875,2.515,876,2.946,1090,6.496,1102,3.721,1204,5.774,1301,4.352,1357,2.562,1397,4.53,1846,6.496,1847,8.638,1848,6.157,1849,6.157,1850,6.157,1851,7.848,1852,7.848,1853,4.597,1854,6.157,1855,6.157,1856,6.157,1857,7.848,1858,5.517,1859,6.157,1860,6.157,1861,6.157,1862,6.157,1863,6.157,1864,4.53]],["title/classes/ErrorSchemaDto.html",[0,0.226,1865,4.586]],["body/classes/ErrorSchemaDto.html",[0,0.282,2,0.94,3,0.13,4,0.109,5,0.116,7,0.385,8,0.91,11,1.06,18,0.643,21,0.005,23,0.446,29,0.19,32,1.265,36,1.077,37,0.137,39,2.733,40,0.843,42,2.355,43,2.208,44,2.565,55,0.756,58,0.004,59,0.004,127,1.575,219,1.771,275,2.877,284,4.504,329,2.855,332,3.058,357,2.96,422,3.657,462,3.657,1470,4.138,1865,7.202,1866,9.503,1867,6.393,1868,8.79,1869,6.393,1870,6.393,1871,5.291,1872,6.393,1873,6.393,1874,2.816]],["title/classes/ExecuteJobDto.html",[0,0.226,1149,4.235]],["body/classes/ExecuteJobDto.html",[0,0.353,2,0.933,3,0.129,4,0.108,5,0.115,7,0.382,8,0.905,11,0.919,18,0.611,21,0.005,23,0.452,29,0.207,32,1.255,37,0.136,40,0.859,55,0.742,58,0.004,59,0.004,127,1.496,157,4.002,205,3.563,263,4.348,267,2.598,275,2.658,278,1.733,279,2.689,285,4.996,505,4.2,508,4.308,509,3.644,843,6.211,973,4.983,1149,6.62,1191,6.445,1192,5.685,1193,3.716,1713,3.251,1758,3.912,1875,9.197,1876,6.344,1877,6.147,1878,6.344,1879,6.344,1880,6.344,1881,6.344,1882,5.251,1883,6.344,1884,6.344]],["title/interfaces/ExecuteJobOptions.html",[38,1.479,1885,4.586]],["body/interfaces/ExecuteJobOptions.html",[3,0.124,4,0.104,5,0.11,7,0.366,8,0.882,11,1.201,21,0.005,23,0.465,29,0.184,37,0.13,38,1.76,40,0.763,41,2.519,58,0.004,59,0.004,60,2.631,78,2.13,97,4.481,124,3.273,133,2.533,134,1.574,270,4.717,1153,8.119,1224,7.036,1226,7.036,1228,7.036,1230,6.572,1465,7.499,1885,6.983,1886,6.09,1887,6.09,1888,5.659,1889,9.06,1890,8.119,1891,6.666,1892,9.06]],["title/classes/FileUploadDto.html",[0,0.226,1893,3.312]],["body/classes/FileUploadDto.html",[0,0.392,2,0.762,3,0.105,4,0.088,5,0.154,7,0.312,8,0.793,18,0.361,21,0.005,23,0.459,29,0.21,32,1.025,37,0.182,39,2.383,40,0.915,42,1.909,43,1.79,44,2.079,55,0.742,58,0.003,59,0.003,65,1.285,112,2.454,122,1.456,127,0.885,270,3.213,272,1.944,275,2.885,276,3.876,277,2.975,278,1.416,286,2.276,289,3.451,294,3.213,295,2.426,296,2.426,329,1.683,455,3.131,484,3.427,504,2.328,505,4.466,508,4.277,509,3.962,513,2.655,514,2.655,672,3.486,996,3.883,1193,3.035,1713,2.655,1758,3.883,1874,2.282,1893,4.536,1894,4.024,1895,4.644,1896,4.918,1897,5.156,1898,5.182,1899,5.442,1900,3.813,1901,4.536,1902,5.156,1903,3.486,1904,4.536,1905,4.024,1906,3.637,1907,3.354,1908,4.024,1909,3.637,1910,3.637,1911,4.024,1912,3.813,1913,3.354,1914,5.442,1915,3.813,1916,3.354,1917,3.637,1918,3.637]],["title/classes/Filestorage.html",[0,0.226,1919,3.312]],["body/classes/Filestorage.html",[0,0.196,2,0.653,3,0.09,4,0.076,5,0.114,7,0.267,8,0.713,11,1.087,18,0.66,21,0.005,23,0.477,29,0.173,37,0.135,39,2.489,40,0.91,42,2.696,43,2.528,44,2.937,55,0.764,56,0.965,58,0.003,59,0.003,65,0.719,112,2.508,119,3.485,127,1.616,128,2.95,131,4.481,132,1.302,164,2.528,170,0.845,205,3.383,257,2.573,270,3.651,272,2.285,286,2.046,289,3.324,292,2.359,293,2.126,332,2.126,351,4.163,357,2.696,360,2.989,372,2.685,376,2.776,455,4.423,672,4.923,996,4.112,1105,3.269,1193,2.603,1874,2.775,1901,4.737,1902,5.385,1903,2.989,1907,5.154,1910,5.136,1912,5.385,1913,4.737,1915,5.385,1919,5.154,1920,4.444,1921,8.221,1922,4.444,1923,4.444,1924,4.444,1925,4.444,1926,4.444,1927,4.444,1928,4.444,1929,4.444,1930,4.444,1931,4.444,1932,3.678,1933,3.982,1934,4.444,1935,4.444,1936,4.444]],["title/controllers/FilestorageController.html",[385,1.458,1937,4.235]],["body/controllers/FilestorageController.html",[0,0.125,1,2.098,3,0.057,4,0.048,5,0.133,7,0.17,9,0.828,11,0.918,15,0.817,18,0.557,20,1.879,21,0.005,22,1.516,23,0.427,25,1.27,29,0.219,32,0.559,36,0.476,37,0.061,40,0.863,55,0.719,56,1.596,58,0.002,59,0.002,65,0.725,72,1.352,74,1.345,77,1.054,78,2.276,94,1.879,112,0.741,122,2.606,124,3.335,127,1.365,133,1.176,134,0.73,152,1.598,170,1.603,186,2.405,187,2.144,193,2.723,200,2.547,216,2.856,222,1.296,233,1.522,243,0.852,246,2.304,257,2.589,272,0.692,286,1.455,385,0.805,387,0.891,389,1.198,390,4.263,391,4.097,392,3.478,393,2.079,394,3.97,395,4.117,399,4.454,400,1.983,401,4.447,402,5.377,403,5.377,404,3.908,407,2.079,408,3.297,411,1.765,412,4.759,413,4.102,414,5.16,415,4.447,416,1.983,419,3.48,422,1.176,423,1.655,424,2.194,425,2.192,426,4.849,427,1.296,428,1.563,429,1.765,430,1.414,432,4.472,434,2.194,435,1.983,436,3.014,437,1.983,438,1.983,439,1.901,440,2.194,441,2.194,442,1.983,443,1.983,444,1.983,445,4.472,448,2.708,449,1.765,450,1.765,454,1.448,455,3.829,457,1.414,461,2.079,462,3.059,463,1.983,468,2.799,469,1.983,470,3.458,471,3.458,472,3.908,474,4.447,475,1.983,478,2.194,480,2.079,559,1.765,974,1.798,996,4.026,1417,2.079,1893,1.829,1904,4.759,1907,5.173,1913,4.759,1916,4.472,1917,4.447,1919,1.829,1937,3.709,1938,2.826,1939,5.568,1940,5.568,1941,5.568,1942,4.609,1943,2.826,1944,2.826,1945,4.481,1946,2.826,1947,2.826,1948,2.826,1949,2.826,1950,2.826,1951,2.826,1952,2.826,1953,2.826,1954,2.826,1955,2.826,1956,2.826,1957,2.826,1958,5.568,1959,2.826,1960,2.826,1961,2.826,1962,3.709,1963,2.339,1964,2.339,1965,2.339,1966,2.194,1967,2.339,1968,2.339,1969,2.826,1970,2.9,1971,2.826,1972,3.297,1973,3.145,1974,2.826,1975,2.826,1976,2.194,1977,2.339,1978,2.339,1979,2.339,1980,2.339,1981,2.826,1982,2.826,1983,4.481,1984,2.826,1985,2.826,1986,4.481,1987,2.826,1988,5.679,1989,2.826,1990,4.481,1991,4.481,1992,2.826,1993,2.826,1994,4.015,1995,5.245,1996,5.679,1997,2.826,1998,4.015,1999,2.826,2000,2.826,2001,2.826,2002,2.826]],["title/classes/FilestorageCreateDto.html",[0,0.226,1904,3.312]],["body/classes/FilestorageCreateDto.html",[0,0.358,2,0.597,3,0.083,4,0.069,5,0.107,7,0.244,8,0.668,11,1.126,18,0.655,21,0.005,23,0.47,29,0.192,32,0.803,37,0.164,39,2.008,40,0.915,42,1.495,43,1.402,44,1.629,55,0.763,58,0.003,59,0.003,65,1.236,87,1.629,112,2.534,122,1.14,127,1.605,219,1.125,270,3.503,272,2.073,275,2.771,276,3.266,277,2.718,278,1.109,286,2.481,289,3.551,294,2.707,295,1.901,296,1.901,329,1.918,351,3.358,357,2.563,455,4.204,484,3.736,502,2.536,503,2.628,504,1.824,505,4.011,508,3.748,509,3.726,513,2.08,514,2.08,672,4.68,996,4.275,1193,2.378,1713,2.08,1758,3.403,1874,1.788,1882,4.887,1893,2.628,1894,3.153,1896,2.849,1897,2.987,1899,4.585,1900,2.987,1901,4.503,1902,5.119,1903,2.731,1904,4.503,1905,3.153,1906,2.849,1907,4.503,1908,4.585,1909,4.143,1910,4.883,1911,5.403,1912,5.119,1913,4.503,1914,5.932,1915,5.119,1916,2.628,1917,2.849,1918,2.849,2003,4.06,2004,5.291,2005,4.06,2006,4.06,2007,3.638,2008,4.06,2009,3.638,2010,4.06,2011,3.638,2012,4.06,2013,5.291,2014,4.06,2015,4.06,2016,4.06,2017,3.638,2018,4.06]],["title/classes/FilestorageDto.html",[0,0.226,1916,3.312]],["body/classes/FilestorageDto.html",[0,0.352,2,0.574,3,0.079,4,0.067,5,0.104,7,0.235,8,0.649,11,1.119,18,0.657,21,0.005,23,0.469,29,0.189,32,0.772,37,0.161,39,1.951,40,0.915,42,1.438,43,1.348,44,1.566,55,0.763,58,0.003,59,0.003,65,1.213,87,3.739,112,2.517,122,1.911,127,1.61,219,1.081,270,3.438,272,2.045,275,2.751,276,3.173,277,2.675,278,1.066,286,2.435,289,3.53,294,2.63,295,1.828,296,1.828,329,1.863,351,3.263,357,2.505,455,4.11,484,3.327,502,2.438,503,2.526,504,1.754,505,3.937,508,3.664,509,3.685,513,2,514,2,519,3.031,672,4.575,996,4.223,1193,2.286,1713,2,1758,3.327,1874,1.719,1882,4.748,1893,2.526,1894,3.031,1896,2.739,1897,2.872,1899,4.455,1900,2.872,1901,4.402,1902,5.004,1903,2.626,1904,6.163,1905,3.031,1906,2.739,1907,4.402,1908,4.455,1909,4.026,1910,4.773,1911,5.282,1912,5.004,1913,4.402,1914,5.822,1915,5.004,1916,3.713,1917,2.739,1918,2.739,2004,5.141,2007,3.498,2009,3.498,2011,3.498,2013,5.141,2017,3.498,2019,3.903,2020,3.903,2021,3.903,2022,3.903,2023,3.903,2024,3.903,2025,3.903,2026,3.903,2027,3.903,2028,3.903,2029,3.903]],["title/modules/FilestorageModule.html",[166,1.59,1738,3.591]],["body/modules/FilestorageModule.html",[0,0.283,3,0.13,4,0.11,5,0.116,21,0.005,22,1.111,29,0.23,36,1.082,37,0.137,58,0.004,59,0.004,132,1.881,166,2.735,387,2.54,531,2.772,532,2.883,533,3.005,534,3.005,535,3.005,536,4.038,537,4.123,541,3.772,542,2.72,543,3.005,545,3.759,549,3.211,550,4.009,552,3.651,1738,7.105,1919,4.154,1933,7.219,1937,7.288,1970,6.624,1972,5.928,1973,7.182,2030,5.751,2031,5.751,2032,5.751,2033,6.418,2034,6.418,2035,6.418,2036,4.984,2037,6.418]],["title/classes/FilestorageUpdateDto.html",[0,0.226,1917,3.591]],["body/classes/FilestorageUpdateDto.html",[0,0.395,2,0.781,3,0.108,4,0.091,5,0.129,21,0.005,23,0.458,29,0.212,32,1.051,37,0.184,39,2.424,40,0.913,42,1.957,43,1.836,44,2.132,55,0.736,58,0.004,59,0.004,65,1.391,112,2.47,122,1.493,270,3.268,272,1.969,275,2.896,276,3.943,277,3.001,278,1.452,286,2.315,289,3.471,294,3.268,295,2.488,296,2.488,329,1.726,455,3.211,484,3.486,504,2.388,505,4.512,508,4.332,509,3.985,513,2.723,514,2.723,672,3.575,996,3.933,1193,3.113,1713,2.723,1758,3.933,1874,2.341,1893,3.439,1894,4.127,1896,3.729,1897,3.91,1899,5.535,1900,3.91,1901,4.613,1902,5.244,1903,3.575,1904,4.613,1905,4.127,1906,3.729,1907,3.439,1908,4.127,1909,3.729,1910,3.729,1911,4.127,1912,3.91,1913,3.439,1914,5.535,1915,3.91,1916,3.439,1917,5.002,1918,5.002]],["title/classes/Form.html",[0,0.226,2038,3.591]],["body/classes/Form.html",[0,0.246,2,0.82,3,0.113,4,0.095,5,0.101,7,0.336,8,0.833,18,0.675,21,0.005,23,0.468,29,0.215,37,0.158,39,1.898,40,0.885,41,2.158,58,0.004,59,0.004,65,0.903,112,1.462,119,4.073,127,1.654,128,3.858,131,4.747,132,1.636,170,1.061,182,5.334,205,2.853,219,2.04,267,2.677,286,2.846,292,2.758,293,2.67,294,3.376,295,2.613,296,2.613,357,2.056,372,3.372,376,3.486,1105,4.106,1874,3.243,2038,5.167,2039,5.58,2040,5.783,2041,4.827,2042,5.334,2043,5.147,2044,4.222,2045,5.58,2046,5.58,2047,5.58,2048,6.805,2049,7.384,2050,5.58,2051,5.58,2052,5.58,2053,5.58,2054,5.336,2055,5.58,2056,3.486,2057,4.619,2058,5.58,2059,5.001,2060,5.001,2061,5.001,2062,5.58]],["title/controllers/FormController.html",[385,1.458,2063,4.235]],["body/controllers/FormController.html",[0,0.166,1,2.619,3,0.077,4,0.064,5,0.068,7,0.227,9,1.105,11,0.905,18,0.549,20,1.852,21,0.005,22,1.518,23,0.435,29,0.227,32,0.746,36,0.635,37,0.081,40,0.592,55,0.711,56,1.709,58,0.003,59,0.003,65,0.905,74,1.351,77,1.315,78,2.262,94,1.852,122,2.63,124,3.412,127,1.345,133,1.569,134,0.975,152,1.345,170,1.497,186,2.416,187,1.804,193,3.26,200,1.549,216,2.831,222,1.729,233,2.031,243,1.138,246,2.151,257,3.217,267,1.225,385,1.074,387,1.189,389,1.598,390,4.484,391,4.115,392,4.164,393,2.774,394,3.957,395,4.361,399,4.404,400,2.646,401,3.925,402,5.549,403,5.549,404,4.678,407,2.774,408,4.115,411,2.355,412,5.339,413,4.772,414,5.789,415,5.175,416,2.646,419,4.343,422,1.569,423,2.209,424,2.928,425,2.735,426,5.175,427,1.729,428,2.086,429,2.355,430,1.887,431,2.774,432,5.097,433,2.774,434,2.928,435,2.646,436,3.762,437,2.646,438,2.646,439,2.537,440,2.928,441,2.928,442,2.646,443,2.646,444,2.646,445,4.772,448,3.379,449,2.355,450,2.355,454,1.932,456,1.804,457,1.887,459,3.121,460,2.928,461,2.774,462,3.276,463,2.646,468,3.493,469,2.646,470,3.69,471,3.69,472,4.678,474,2.646,475,2.646,478,2.928,480,2.774,589,4.96,640,3.493,2038,2.646,2041,2.209,2043,2.355,2044,1.932,2063,4.629,2064,3.771,2065,6.591,2066,3.771,2067,3.771,2068,3.771,2069,3.771,2070,3.771,2071,3.771,2072,3.771,2073,3.771,2074,5.425,2075,3.771,2076,3.771,2077,3.771,2078,4.115,2079,3.379,2080,3.771,2081,3.771,2082,3.771,2083,3.771,2084,5.592,2085,3.771,2086,3.771,2087,3.771,2088,3.771,2089,3.771]],["title/classes/FormCreateDto.html",[0,0.226,2090,3.974]],["body/classes/FormCreateDto.html",[0,0.389,2,0.745,3,0.103,4,0.087,5,0.092,7,0.305,8,0.782,11,1.046,18,0.67,21,0.005,23,0.467,29,0.22,32,1.003,37,0.168,39,2.349,40,0.877,55,0.511,58,0.003,59,0.003,65,1.364,87,2.035,112,2.385,123,3.456,127,1.641,182,5.083,267,2.551,272,1.691,275,2.777,277,2.953,278,1.385,289,2.846,294,3.167,295,2.375,296,2.375,357,2.544,504,2.279,506,3.234,509,3.507,510,2.279,515,2.806,516,2.538,1713,2.599,1721,4.198,1722,4.198,1758,3.841,1874,2.234,2040,5.511,2041,4.6,2042,5.083,2043,4.905,2044,4.023,2054,4.6,2056,3.168,2065,3.732,2074,3.732,2090,6.098,2091,4.198,2092,5.266,2093,6.188,2094,5.072,2095,4.198,2096,5.072,2097,5.072,2098,5.072,2099,5.511,2100,5.072,2101,5.072,2102,5.072,2103,4.545,2104,6.499,2105,5.072,2106,5.081,2107,4.198,2108,4.545,2109,3.412,2110,6.203,2111,4.198,2112,4.198,2113,4.198]],["title/classes/FormDto.html",[0,0.226,2065,3.765]],["body/classes/FormDto.html",[0,0.386,2,0.728,3,0.101,4,0.084,5,0.09,7,0.298,8,0.769,11,1.038,18,0.666,21,0.005,23,0.465,29,0.219,32,0.979,37,0.166,39,2.31,40,0.874,55,0.502,58,0.003,59,0.003,65,1.351,87,3.836,112,2.368,123,3.399,127,1.633,182,5.02,267,2.519,272,1.663,275,2.763,277,2.929,278,1.353,289,2.81,294,3.115,295,2.318,296,2.318,357,2.502,504,2.225,506,3.181,509,3.472,510,2.225,515,2.739,516,2.478,1713,2.537,1721,4.098,1722,4.098,1758,3.793,1874,2.181,2040,5.443,2041,4.543,2042,5.02,2043,4.844,2044,3.974,2054,4.543,2056,3.093,2065,4.998,2074,3.643,2090,7.585,2091,4.098,2092,4.844,2093,6.088,2095,4.098,2099,5.443,2103,4.437,2104,6.419,2106,4.998,2107,4.098,2108,4.437,2109,3.331,2110,6.141,2111,4.098,2112,4.098,2113,4.098,2114,4.951,2115,4.951,2116,4.951,2117,4.951,2118,4.951,2119,4.951,2120,4.951,2121,4.951]],["title/classes/FormFieldDto.html",[0,0.226,2122,4.235]],["body/classes/FormFieldDto.html",[0,0.321,2,0.807,3,0.112,4,0.094,5,0.1,7,0.33,8,0.824,18,0.687,21,0.005,23,0.467,29,0.193,32,1.086,37,0.118,40,0.882,41,2.552,58,0.004,59,0.004,127,1.684,196,3.827,275,2.873,277,2.915,278,1.499,294,4.27,295,2.57,296,2.57,357,3.337,506,4.36,974,3.279,2099,5.736,2122,6.028,2123,5.489,2124,5.736,2125,5.736,2126,5.736,2127,5.736,2128,5.736,2129,5.736,2130,5.736,2131,5.105,2132,5.736,2133,9.059,2134,5.489,2135,5.489,2136,5.489,2137,5.489,2138,5.489,2139,6.028,2140,5.489,2141,5.489,2142,5.489,2143,5.489,2144,5.489,2145,4.649,2146,6.666]],["title/classes/FormFieldPart.html",[0,0.226,2147,4.235]],["body/classes/FormFieldPart.html",[0,0.224,2,0.745,3,0.103,4,0.087,5,0.092,7,0.305,8,0.782,18,0.677,21,0.005,23,0.471,29,0.163,37,0.148,40,0.87,41,2.471,58,0.003,59,0.003,127,1.66,128,4.13,131,4.731,132,1.487,170,0.964,196,3.677,205,3.967,219,2.443,286,3.156,292,2.586,293,2.426,294,4.173,295,2.375,296,2.375,357,3.249,974,3.151,2124,5.511,2125,5.511,2126,5.511,2127,5.511,2128,5.511,2129,5.511,2130,5.511,2131,4.905,2132,5.511,2146,6.489,2147,5.716,2148,5.072,2149,5.072,2150,5.072,2151,5.072,2152,5.072,2153,5.072,2154,5.072,2155,5.072,2156,5.072,2157,5.072,2158,5.072,2159,5.072,2160,5.072]],["title/modules/FormModule.html",[166,1.59,2161,3.974]],["body/modules/FormModule.html",[0,0.302,3,0.139,4,0.117,5,0.124,21,0.005,22,1.186,29,0.229,36,1.155,37,0.147,58,0.004,59,0.004,132,2.009,166,2.817,387,2.645,531,2.96,532,3.079,533,3.209,534,3.209,535,3.209,536,4.159,537,3.209,541,3.929,542,2.904,543,3.209,545,4.014,549,3.429,550,4.28,552,3.898,2038,4.809,2061,7.519,2063,7.506,2078,7.26,2079,6.141,2161,7.662,2162,6.141,2163,6.141,2164,6.852,2165,6.141,2166,6.852,2167,6.852]],["title/classes/FormSectionDto.html",[0,0.226,2110,3.765]],["body/classes/FormSectionDto.html",[0,0.364,2,0.824,3,0.114,4,0.096,5,0.102,7,0.337,8,0.836,11,1.077,18,0.653,21,0.005,23,0.47,29,0.216,32,1.109,37,0.12,40,0.86,58,0.004,59,0.004,112,2.455,127,1.6,267,2.683,272,1.809,275,2.76,277,2.94,278,1.532,289,3.182,357,2.721,506,3.868,509,3.653,510,2.52,516,3.697,1713,2.874,1758,4.04,2041,4.839,2054,4.839,2056,3.503,2095,6.115,2099,3.936,2110,6.893,2122,7.552,2131,5.16,2168,5.609,2169,5.16,2170,6.837,2171,5.609,2172,7.387,2173,5.609,2174,5.609,2175,5.609,2176,5.609,2177,5.609,2178,5.609,2179,5.609,2180,5.609,2181,5.609,2182,5.609,2183,4.356,2184,4.356]],["title/classes/FormSectionPart.html",[0,0.226,2057,4.235]],["body/classes/FormSectionPart.html",[0,0.261,2,0.871,3,0.12,4,0.101,5,0.108,7,0.357,8,0.867,11,1.093,18,0.663,21,0.005,23,0.472,29,0.201,37,0.164,40,0.898,41,2.245,58,0.004,59,0.004,112,1.553,122,1.665,127,1.625,128,4.453,131,4.531,132,1.737,170,1.127,219,1.642,267,2.756,286,2.488,292,2.868,293,2.836,1874,3.373,2041,4.97,2048,7.616,2049,5.312,2054,5.44,2056,3.702,2057,6.339,2060,5.312,2131,5.3,2147,4.906,2169,5.3,2170,7.023,2185,5.927,2186,5.927,2187,5.927,2188,5.927,2189,5.927,2190,5.927,2191,5.927,2192,5.927,2193,5.927]],["title/injectables/FormService.html",[136,1.341,2078,3.765]],["body/injectables/FormService.html",[0,0.149,3,0.069,4,0.058,5,0.061,7,0.203,8,0.583,9,2.599,10,2.123,11,1.084,12,3.617,15,1.489,18,0.663,20,2.303,21,0.005,22,1.561,23,0.457,25,4.379,29,0.187,30,1.433,36,0.57,37,0.072,49,2.705,55,0.721,58,0.003,59,0.003,65,0.834,66,3.339,72,1.554,74,1.508,75,2.64,76,2.64,77,1.211,78,2.292,87,3.786,88,1.821,89,1.732,90,1.821,91,1.821,92,1.821,94,2.085,122,1.753,124,3.015,132,0.991,134,0.874,136,1.35,137,1.433,162,3.84,179,5.84,181,4.36,185,2.775,186,2.226,187,2.465,188,3.113,189,3.018,190,3.018,191,2.85,192,3.218,193,3.872,194,3.113,195,2.188,196,3.518,198,2.112,200,2.456,207,2.043,208,5.195,209,3.65,210,2.112,211,4.777,212,4.047,213,2.043,214,3.113,215,2.274,216,1.05,217,2.043,218,5.571,219,2.724,220,2.112,221,2.043,222,3.987,223,5.195,224,2.112,225,2.043,226,2.112,227,2.112,228,2.112,229,2.043,230,2.112,231,2.112,232,2.112,233,1.821,234,4.218,235,2.188,236,2.112,237,2.112,238,2.043,239,2.188,243,1.02,2038,2.373,2078,3.791,2165,3.03,2194,3.381,2195,3.381,2196,3.381]],["title/classes/FormUpdateDto.html",[0,0.226,2074,3.765]],["body/classes/FormUpdateDto.html",[0,0.413,2,0.897,3,0.124,4,0.104,5,0.111,21,0.005,23,0.417,29,0.23,32,1.207,37,0.184,39,2.653,40,0.865,58,0.004,59,0.004,65,1.467,112,2.254,182,3.949,267,1.982,272,1.91,275,2.879,277,3.137,278,1.667,289,3.117,294,3.578,295,2.857,296,2.857,504,2.741,506,3.653,509,3.772,510,2.741,515,3.375,516,3.053,1713,3.126,1758,4.207,1874,2.687,2040,4.282,2041,3.574,2042,3.949,2043,3.811,2044,3.126,2054,4.57,2056,3.811,2065,4.489,2074,5.741,2090,6.059,2091,5.05,2092,4.873,2104,6.458,2109,4.104,2110,6.671,2111,5.05,2112,5.05,2113,6.458]],["title/classes/FusionDto.html",[0,0.226,2197,4.235]],["body/classes/FusionDto.html",[0,0.365,2,0.985,3,0.136,4,0.114,5,0.122,7,0.403,8,0.937,18,0.577,21,0.005,23,0.451,29,0.196,32,1.326,37,0.144,40,0.892,55,0.726,58,0.004,59,0.004,127,1.414,263,4.3,265,5.001,266,8.404,267,3.046,268,4.924,275,2.595,277,3.007,278,1.831,279,3.508,2197,6.85,2198,6.701,2199,8.979,2200,8.979,2201,8.276,2202,6.701,2203,8.276,2204,6.701]],["title/interfaces/GithubUpdate.html",[38,1.479,644,4.235]],["body/interfaces/GithubUpdate.html",[0,0.198,1,2.972,3,0.091,4,0.077,5,0.081,7,0.27,8,0.718,11,1.09,21,0.005,22,1.461,23,0.414,29,0.213,32,0.888,36,0.757,37,0.096,38,1.298,40,0.882,43,1.551,53,2.428,55,0.592,56,1.598,58,0.003,59,0.003,60,1.94,65,0.727,74,1.085,78,1.056,100,2.248,106,3.252,112,1.177,152,1.602,170,1.749,193,3.105,200,1.244,205,2.459,216,2.722,243,1.355,246,1.734,264,2.018,267,1.459,272,1.1,289,1.628,353,2.907,357,2.338,385,2.097,394,3.268,399,3.595,423,2.631,430,2.248,456,2.149,476,2.149,559,2.806,612,3.488,613,4.025,617,3.611,619,4.025,620,5.254,623,7.564,624,5.463,627,4.025,628,4.025,629,4.025,630,4.025,631,4.025,633,2.806,634,5.167,635,3.717,636,3.305,637,5.688,638,3.511,639,5.254,640,3.965,641,5.688,642,3.717,643,5.254,644,6.622,645,7.17,646,4.025,647,2.555,648,7.17,649,7.17,650,7.17,651,3.488,652,3.305,653,3.488,654,5.254,655,4.025,656,3.488,657,4.025,658,4.025,659,3.717,660,3.305,661,2.419,662,4.025,663,5.688,664,5.688,665,4.025,666,4.025,667,4.025,668,5.688,669,6.597,670,4.025,671,5.688,672,4.27,673,4.025,674,4.025,675,4.025,676,4.025,677,4.025,678,4.025,679,4.025,680,3.717,681,3.717,682,5.688,683,4.025,684,4.025,685,5.688,686,4.025,687,4.025,688,5.688,689,4.025,690,3.488,691,3.305,692,4.025,693,5.688,694,5.688,695,5.688,696,4.025,697,5.688,698,5.688,699,5.688,700,4.025,701,5.688]],["title/classes/Identities.html",[0,0.226,1301,2.448]],["body/classes/Identities.html",[0,0.154,2,0.512,3,0.071,4,0.059,5,0.063,7,0.317,8,0.596,11,0.814,18,0.661,21,0.005,23,0.468,29,0.22,37,0.136,39,1.185,40,0.778,41,2.51,55,0.764,56,0.756,58,0.003,59,0.003,65,0.564,112,2.38,119,2.915,121,2.234,124,3.05,127,1.621,128,4.442,131,4.477,132,1.021,133,1.449,134,0.9,162,2.463,170,0.662,205,2.042,219,2.515,257,2.895,264,1.565,270,3.25,272,1.556,280,4.461,286,3.179,288,2.041,289,3.239,292,1.974,293,1.666,294,2.417,295,1.631,296,1.631,297,5.696,351,3.616,354,2.694,357,1.283,360,2.343,372,2.105,375,2.343,376,2.176,591,2.705,876,2.521,1079,2.563,1082,2.343,1083,2.883,1085,2.883,1086,2.883,1144,1.876,1164,3.109,1301,3.041,1312,4.33,1320,4.927,1321,2.343,1322,2.255,1394,2.7,1416,2.445,1555,4.114,1561,2.343,1583,4.097,1588,2.883,1595,3.724,1839,4.362,1874,3.772,1910,4.461,2205,3.122,2206,3.616,2207,4.461,2208,6.357,2209,6.357,2210,4.205,2211,6.357,2212,6.357,2213,6.357,2214,4.276,2215,6.357,2216,6.357,2217,3.483,2218,3.483,2219,5.343,2220,3.483,2221,3.483,2222,3.483,2223,3.483,2224,5.696,2225,3.483,2226,5.261,2227,5.696,2228,3.483,2229,3.483,2230,3.483,2231,3.483,2232,5.121,2233,3.483,2234,3.483,2235,3.483,2236,3.483,2237,2.563,2238,3.483,2239,2.343,2240,3.483,2241,3.483,2242,3.483,2243,3.122,2244,4.722,2245,3.122,2246,3.122,2247,2.563,2248,3.122,2249,3.483,2250,3.122,2251,3.483,2252,3.483,2253,3.483,2254,4.093,2255,2.255,2256,2.705,2257,3.483,2258,3.122,2259,3.483,2260,2.883,2261,3.483,2262,2.883,2263,3.483,2264,3.483,2265,3.483,2266,3.122]],["title/controllers/IdentitiesActivationController.html",[385,1.458,2267,4.235]],["body/controllers/IdentitiesActivationController.html",[0,0.266,1,3.628,3,0.123,4,0.103,5,0.109,7,0.363,11,0.693,18,0.421,20,1.419,21,0.005,22,1.045,23,0.278,29,0.226,32,1.194,36,1.017,37,0.129,55,0.668,56,1.682,58,0.004,59,0.004,65,1.254,74,1.458,77,1.822,78,2.012,94,1.419,127,1.031,152,2.152,170,1.147,200,2.146,216,2.407,219,1.672,243,1.821,244,2.658,246,1.648,249,2.511,260,7.473,264,2.711,329,1.96,341,2.465,348,3.433,385,1.719,387,1.902,389,2.558,394,3.688,395,4.467,399,3.845,422,2.511,425,2.952,427,2.767,430,3.02,457,3.02,462,3.223,470,3.02,471,3.877,638,4.286,640,4.839,661,3.251,1301,2.887,1398,5.015,1438,6.413,1470,3.906,1561,4.06,2267,6.413,2268,5.701,2269,6.035,2270,6.035,2271,6.035,2272,7.748,2273,6.035,2274,6.035,2275,6.943,2276,4.235,2277,5.408,2278,6.035,2279,6.035,2280,4.44,2281,4.44,2282,6.035,2283,6.035,2284,6.035,2285,6.035,2286,4.686,2287,4.44]],["title/classes/IdentitiesCreateDto.html",[0,0.226,2288,3.591]],["body/classes/IdentitiesCreateDto.html",[0,0.387,2,0.661,3,0.091,4,0.077,5,0.082,7,0.271,8,0.719,11,0.73,18,0.611,21,0.005,23,0.449,29,0.227,32,0.89,37,0.172,40,0.564,41,1.862,55,0.745,58,0.003,59,0.003,65,1.367,112,1.665,127,1.497,219,1.246,255,3.156,264,2.021,267,2.064,275,2.604,278,1.229,279,2.693,282,4.191,283,4.191,289,1.63,354,3.123,484,2.2,504,2.021,506,2.975,509,3.647,510,2.021,513,2.304,514,2.304,605,2.558,862,3.108,869,3.83,875,3.27,1166,3.108,1312,4.804,1320,5.466,1321,3.025,1322,2.911,1357,2.643,1491,3.336,1595,4.316,1713,2.304,1758,3.108,1874,3.526,2092,4.602,2109,3.025,2145,4.804,2206,4.191,2207,5.17,2210,3.868,2214,4.956,2219,5.927,2232,4.956,2237,3.309,2239,3.025,2247,3.309,2255,4.112,2288,5.17,2289,3.493,2290,4.934,2291,5.897,2292,4.03,2293,4.554,2294,4.934,2295,4.459,2296,4.459,2297,5.618,2298,5.182,2299,5.385,2300,4.459,2301,4.459,2302,4.934,2303,4.934,2304,4.459,2305,4.497,2306,4.03,2307,4.497,2308,5.475,2309,4.03,2310,4.497,2311,4.03,2312,4.497,2313,4.03,2314,4.497,2315,4.03,2316,4.497,2317,3.493,2318,3.493,2319,3.493,2320,3.493,2321,3.493,2322,3.493,2323,3.493,2324,4.274,2325,3.493,2326,3.493,2327,3.493,2328,3.493,2329,2.718,2330,4.274,2331,3.493,2332,3.156,2333,3.493]],["title/controllers/IdentitiesCrudController.html",[385,1.458,2334,4.235]],["body/controllers/IdentitiesCrudController.html",[0,0.104,1,1.815,3,0.048,4,0.04,5,0.043,7,0.142,9,1.673,11,0.889,15,0.682,18,0.54,20,1.82,21,0.005,22,1.469,23,0.415,29,0.219,32,0.467,36,0.398,37,0.051,40,0.635,41,1.136,53,1.279,55,0.709,56,1.809,58,0.002,59,0.002,65,0.627,72,0.712,74,1.523,77,0.912,78,2.246,94,1.82,106,1.987,121,1.001,122,2.453,123,1.182,124,3.231,127,1.277,133,0.983,134,0.611,152,0.842,162,0.915,170,1.551,185,2.657,186,2.131,187,1.13,193,2.412,200,2.5,216,2.776,222,1.083,233,1.272,243,0.712,244,1.708,246,2.176,249,1.613,257,2.768,263,1.083,264,1.061,268,2.997,284,3.829,294,2.618,295,1.106,296,1.106,329,2.428,339,1.343,341,2.332,354,2.09,357,1.428,375,1.589,385,0.673,387,0.745,389,1.001,390,3.84,391,3.629,392,3.081,393,1.738,394,3.918,395,4.317,399,4.372,400,1.657,401,2.721,402,4.815,403,4.815,404,2.721,407,1.738,408,1.738,411,1.475,412,5.156,413,4.633,414,6.204,415,5.591,416,1.657,419,4.433,422,0.983,423,1.383,424,1.834,425,1.896,426,4.424,427,1.083,428,1.306,429,1.475,430,1.182,431,1.738,432,3.695,433,1.738,436,1.589,437,1.657,438,1.657,439,1.589,440,1.834,441,1.834,442,1.657,443,1.657,444,1.657,445,4.08,446,1.834,447,1.738,448,2.343,449,1.475,450,1.475,454,1.21,457,1.182,460,1.834,462,3.529,463,1.657,468,4.668,469,1.657,470,3.74,471,3.74,472,3.461,474,4.006,475,2.721,478,1.834,480,1.738,633,2.422,638,2.728,661,2.088,862,1.896,875,0.965,877,2.997,1146,3.474,1298,2.721,1300,1.738,1301,1.855,1312,2.805,1342,2.98,1345,1.475,1349,1.427,1357,2.052,1392,3.011,1430,1.272,1470,2.509,1554,2.721,1595,1.383,1792,1.272,1845,1.738,1890,2.116,1919,1.529,1970,2.509,1972,1.738,1973,2.721,1976,1.834,2036,1.834,2169,1.475,2206,1.343,2207,1.657,2210,1.24,2239,1.589,2254,3.011,2268,5.861,2276,1.657,2280,1.738,2281,1.738,2286,3.011,2287,2.853,2288,4.006,2293,1.343,2329,4.325,2330,4.815,2334,3.209,2335,2.362,2336,4.932,2337,4.932,2338,4.932,2339,2.362,2340,2.362,2341,3.011,2342,3.474,2343,2.853,2344,3.209,2345,2.362,2346,2.362,2347,2.362,2348,2.362,2349,2.362,2350,2.362,2351,2.362,2352,2.362,2353,2.362,2354,2.362,2355,3.877,2356,2.362,2357,2.362,2358,2.362,2359,2.362,2360,2.362,2361,2.362,2362,2.853,2363,3.474,2364,2.721,2365,3.877,2366,2.362,2367,1.738,2368,1.834,2369,2.271,2370,1.834,2371,1.955,2372,1.955,2373,2.362,2374,3.877,2375,3.877,2376,3.877,2377,3.877,2378,3.877,2379,3.877,2380,1.955,2381,1.272,2382,1.955,2383,1.955,2384,1.955,2385,1.955,2386,2.362,2387,1.955,2388,2.116,2389,2.116,2390,1.955,2391,1.955,2392,1.657,2393,1.529,2394,1.955,2395,1.955,2396,2.362,2397,2.362,2398,3.877,2399,4.932,2400,2.362,2401,2.362,2402,2.362,2403,2.362,2404,3.474,2405,1.738,2406,2.362,2407,2.362,2408,2.362,2409,3.877,2410,2.362,2411,2.362,2412,1.834,2413,2.362,2414,2.116,2415,2.362,2416,1.834,2417,2.362,2418,2.362,2419,2.362,2420,2.362,2421,2.362,2422,2.362,2423,2.116,2424,2.362,2425,2.362]],["title/controllers/IdentitiesDoublonController.html",[385,1.458,2426,4.235]],["body/controllers/IdentitiesDoublonController.html",[0,0.231,1,3.305,3,0.106,4,0.089,5,0.095,7,0.315,9,1.536,11,0.811,18,0.492,20,1.66,21,0.005,22,1.222,23,0.325,29,0.226,32,1.036,36,0.883,37,0.112,55,0.694,56,1.532,58,0.004,59,0.004,65,1.142,74,1.705,77,1.66,78,2.16,94,1.66,123,2.622,127,1.206,152,1.868,170,1.518,200,2.367,216,2.193,219,1.451,222,2.402,243,1.58,246,1.928,257,3.643,264,2.354,348,2.98,354,2.22,385,1.493,387,1.652,389,2.22,394,3.836,395,4.087,399,4.219,422,2.18,425,2.562,427,2.402,430,2.622,448,4.266,449,3.272,450,3.272,454,2.684,457,2.622,462,2.937,468,4.409,470,3.533,471,3.995,638,4.417,640,4.409,661,3.802,876,3.377,1145,5.194,1164,3.453,1301,2.506,1357,2.937,1555,3.391,1595,3.069,2197,7.072,2206,2.98,2210,2.751,2255,4.569,2258,7.155,2268,5.875,2276,3.677,2280,3.855,2281,3.855,2329,3.166,2367,3.855,2426,5.843,2427,5.239,2428,7.059,2429,5.239,2430,5.239,2431,7.059,2432,5.239,2433,5.239,2434,5.239,2435,5.239,2436,5.843,2437,7.059,2438,7.059,2439,5.239,2440,5.239,2441,6.326,2442,4.695,2443,5.239,2444,5.239,2445,5.239,2446,4.695,2447,5.239,2448,7.059,2449,5.239,2450,5.239]],["title/classes/IdentitiesDto.html",[0,0.226,2329,3.092]],["body/classes/IdentitiesDto.html",[0,0.385,2,0.651,3,0.09,4,0.076,5,0.08,7,0.267,8,0.712,11,0.723,18,0.608,21,0.005,23,0.448,29,0.226,32,0.877,37,0.17,40,0.558,41,1.843,55,0.744,58,0.003,59,0.003,65,1.359,87,3.5,112,1.648,127,1.49,219,1.228,255,3.11,264,1.991,267,2.042,275,2.593,278,1.211,279,2.665,282,4.157,283,4.157,289,1.606,354,3.098,484,2.168,504,1.991,506,2.944,509,3.629,510,1.991,513,2.271,514,2.271,605,2.521,862,3.075,869,3.805,875,3.249,1166,3.075,1312,4.777,1320,5.436,1321,2.981,1322,2.868,1357,2.616,1491,3.302,1595,4.281,1713,2.271,1758,3.075,1874,3.503,2092,3.928,2109,2.981,2145,4.777,2206,4.157,2207,5.129,2210,3.837,2214,4.916,2219,5.894,2232,4.916,2237,3.261,2239,2.981,2247,3.261,2255,4.07,2288,6.545,2289,3.442,2290,3.442,2291,5.868,2292,3.971,2293,4.524,2294,4.883,2295,4.413,2296,4.413,2297,5.582,2298,5.148,2299,5.35,2300,4.413,2301,4.413,2302,4.883,2303,4.883,2304,4.413,2306,3.971,2308,5.449,2309,3.971,2311,3.971,2313,3.971,2315,3.971,2317,3.442,2318,3.442,2319,3.442,2320,3.442,2321,3.442,2322,3.442,2323,3.442,2324,4.23,2325,3.442,2326,3.442,2327,3.442,2328,3.442,2329,3.8,2330,4.23,2331,3.442,2332,3.11,2333,3.442,2451,4.432,2452,4.432,2453,4.432,2454,4.432,2455,4.432,2456,4.432]],["title/controllers/IdentitiesJsonFormsController.html",[385,1.458,2457,4.235]],["body/controllers/IdentitiesJsonFormsController.html",[0,0.19,1,2.89,3,0.088,4,0.074,5,0.112,7,0.26,11,0.903,18,0.548,20,1.848,21,0.005,22,1.361,23,0.362,29,0.197,32,0.854,36,0.728,37,0.092,40,0.639,55,0.717,56,1.706,58,0.003,59,0.003,65,0.999,74,1.043,77,1.451,78,2.26,94,1.848,127,1.343,152,1.539,162,3.221,170,1.494,186,3.112,193,3.523,200,2.522,216,2.441,243,1.302,246,2.147,286,1.402,292,3.334,385,1.23,387,1.361,389,1.83,392,4.499,394,3.961,395,3.978,399,4.225,411,2.697,422,1.796,423,2.529,425,2.112,427,1.98,430,2.16,456,2.065,457,2.16,462,3.27,470,3.933,471,3.933,559,2.697,605,4.097,616,3.573,638,4.599,661,4.234,822,6.125,868,4.793,869,3.76,875,2.521,974,1.732,996,2.112,1004,6.505,1110,4.541,1128,4.904,1145,4.541,1164,3.844,2059,8.159,2298,3.995,2457,5.108,2458,4.317,2459,4.317,2460,5.53,2461,5.53,2462,4.317,2463,4.317,2464,7.043,2465,6.104,2466,5.783,2467,6.505,2468,4.317,2469,4.317,2470,4.317,2471,6.171,2472,5.53,2473,6.104,2474,7.043,2475,4.317,2476,4.317,2477,4.317,2478,3.869,2479,4.317,2480,4.331,2481,3.869,2482,4.317,2483,4.317,2484,4.317,2485,4.317,2486,4.317,2487,4.317,2488,4.317,2489,4.317,2490,4.317,2491,3.869,2492,3.869,2493,3.869,2494,3.869,2495,4.317,2496,3.869,2497,4.317,2498,5.108,2499,3.869,2500,2.697,2501,4.317]],["title/modules/IdentitiesJsonformsModule.html",[166,1.59,2502,3.765]],["body/modules/IdentitiesJsonformsModule.html",[0,0.31,3,0.143,4,0.12,5,0.128,21,0.005,29,0.217,36,1.187,37,0.151,58,0.004,59,0.004,166,2.851,387,2.689,531,3.041,532,3.163,533,3.297,534,3.297,535,3.297,536,4.208,537,4.297,541,3.994,542,2.984,543,3.297,2457,7.596,2480,7.268,2481,6.309,2502,7.393,2503,6.309,2504,6.309,2505,6.309,2506,7.04,2507,7.04]],["title/injectables/IdentitiesJsonformsService.html",[136,1.341,2480,3.591]],["body/injectables/IdentitiesJsonformsService.html",[0,0.123,3,0.057,4,0.047,5,0.161,7,0.332,8,0.501,9,2.141,10,1.875,11,0.88,12,2.212,15,1.593,18,0.597,20,1.296,21,0.005,22,0.954,23,0.401,25,1.251,29,0.173,36,0.469,37,0.06,39,2.332,40,0.745,53,2.072,55,0.684,56,1.86,58,0.002,59,0.002,65,0.716,66,3.664,67,1.583,68,2.161,70,3.835,72,2.311,74,1.069,75,2.269,76,2.269,77,1.041,78,2.051,87,2.521,88,1.499,89,1.426,90,1.499,91,1.499,92,1.499,94,1.718,106,2.269,112,0.729,136,1.16,137,1.18,162,2.657,170,1.858,186,1.202,191,3.05,200,2.202,209,2.736,216,1.375,243,0.84,244,3.217,249,3.039,272,0.681,286,1.438,289,1.604,292,3.359,329,1.791,341,2.984,357,1.631,624,2.866,751,2.766,823,2.161,824,2.161,825,1.953,830,4.623,831,4.41,996,3.572,997,2.304,998,2.304,1004,3.665,1014,2.494,1110,4.056,1128,2.385,1301,2.118,1410,2.161,1446,1.953,1639,2.161,1783,3.665,1853,2.594,2131,3.444,2287,5.374,2412,4.281,2460,5.631,2480,3.107,2491,2.494,2498,6.58,2500,2.766,2508,2.783,2509,5.631,2510,6.545,2511,4.427,2512,2.783,2513,2.783,2514,2.494,2515,2.783,2516,2.783,2517,2.783,2518,2.783,2519,2.783,2520,4.427,2521,2.783,2522,2.783,2523,1.953,2524,2.494,2525,2.783,2526,5.326,2527,3.869,2528,2.304,2529,2.494,2530,2.494,2531,6.772,2532,4.94,2533,2.494,2534,6.858,2535,2.783,2536,2.783,2537,6.146,2538,3.967,2539,2.494,2540,3.967,2541,2.783,2542,2.783,2543,2.494,2544,7.304,2545,2.494,2546,2.494,2547,2.494,2548,2.161,2549,5.513,2550,3.967,2551,6.545,2552,2.783,2553,6.545,2554,2.783,2555,2.494,2556,2.494,2557,2.783,2558,2.783,2559,4.427,2560,2.494,2561,2.783,2562,3.967,2563,2.783,2564,5.513,2565,2.783,2566,4.427,2567,4.427,2568,4.427,2569,4.427,2570,6.858,2571,2.783,2572,2.783,2573,2.783,2574,2.783,2575,2.304,2576,2.783,2577,2.783,2578,4.427,2579,4.427,2580,2.783,2581,2.783,2582,2.783,2583,2.783,2584,2.783,2585,2.783,2586,2.494,2587,2.783,2588,2.783,2589,1.872,2590,2.783,2591,4.427,2592,2.783,2593,4.427,2594,2.783,2595,2.783,2596,2.783,2597,2.783,2598,2.783,2599,2.494,2600,2.494,2601,6.864,2602,3.967,2603,6.283,2604,3.967,2605,6.545,2606,3.967,2607,3.967,2608,2.783,2609,2.304,2610,2.783,2611,2.783,2612,2.783,2613,2.783,2614,2.783,2615,3.967,2616,2.783,2617,2.494,2618,2.494,2619,2.783,2620,2.494,2621,2.783,2622,2.783,2623,2.783,2624,2.783,2625,2.783,2626,4.427,2627,2.783,2628,6.283,2629,2.783,2630,2.783,2631,2.783]],["title/modules/IdentitiesModule.html",[166,1.59,1262,3.312]],["body/modules/IdentitiesModule.html",[0,0.22,3,0.102,4,0.085,5,0.091,11,0.574,18,0.348,20,1.175,21,0.005,22,1.183,23,0.23,29,0.242,30,2.117,36,0.842,37,0.107,55,0.505,58,0.003,59,0.003,67,2.842,77,1.175,94,1.175,132,1.464,166,2.42,387,2.155,531,2.158,532,2.245,533,2.339,534,2.339,535,2.339,536,3.573,537,3.648,541,3.2,542,2.117,543,2.339,545,2.926,549,3.899,550,3.12,552,2.842,723,6.125,730,4.477,750,3.506,814,4.135,815,4.477,1257,4.424,1262,6.332,1298,6.627,1300,3.676,1301,3.27,1608,4.135,1738,6.358,1846,4.135,1853,2.926,2262,5.657,2267,6.449,2275,6.125,2276,6.722,2277,4.477,2334,6.449,2368,3.88,2369,5.433,2370,3.88,2426,6.449,2441,6.125,2442,4.477,2480,6.509,2502,5.029,2632,4.477,2633,4.477,2634,4.477,2635,4.996,2636,4.996,2637,6.449,2638,6.449,2639,4.477,2640,6.835,2641,8.377,2642,4.996,2643,4.996,2644,6.835,2645,6.835,2646,4.797,2647,4.996,2648,4.996,2649,4.996,2650,5.657,2651,4.996,2652,4.996,2653,6.125,2654,4.477,2655,4.996,2656,4.996,2657,4.996,2658,4.996,2659,4.996,2660,4.996,2661,4.996,2662,4.996,2663,4.996]],["title/controllers/IdentitiesPhotoController.html",[385,1.458,2638,4.235]],["body/controllers/IdentitiesPhotoController.html",[0,0.174,1,2.709,3,0.08,4,0.067,5,0.157,7,0.238,9,2.21,11,0.665,15,1.141,18,0.403,20,1.361,21,0.005,22,1.305,23,0.386,25,1.774,29,0.236,32,0.781,34,3.269,36,0.666,37,0.085,40,0.608,55,0.67,56,0.857,58,0.003,59,0.003,65,0.936,72,1.191,74,1.939,77,1.361,78,1.972,94,1.361,112,1.795,123,1.976,127,0.988,152,2.063,167,2.906,170,1.526,200,2.089,205,2.242,212,3.117,216,2.342,219,1.603,222,1.811,243,1.191,246,2.193,257,3.279,267,1.879,268,3.038,272,1.417,286,1.283,289,1.431,292,2.167,354,1.674,385,1.125,387,1.245,389,1.674,390,2.657,394,3.54,395,3.84,399,3.993,412,5.868,413,5.609,422,1.643,425,1.932,427,1.811,428,2.185,429,2.467,430,1.976,432,3.745,436,2.657,439,2.657,448,3.497,449,2.467,450,2.467,454,2.023,457,1.976,462,1.643,470,1.976,471,1.976,504,1.774,559,2.467,605,3.895,636,2.906,639,4.789,827,2.386,875,3.426,876,2.768,890,2.906,974,1.585,996,3.349,1193,2.313,1298,4.061,1300,2.906,1301,3.607,1394,2.965,1433,4.789,1595,2.313,1893,2.556,1901,2.556,1903,2.657,1904,2.556,1906,2.772,1907,4.432,1913,4.432,1916,4.432,1918,2.772,1919,2.556,1942,5.668,1962,4.789,1963,3.269,1964,3.269,1965,3.269,1966,3.067,1967,3.269,1968,3.269,1970,3.745,1972,2.906,1973,4.061,1976,3.067,1977,3.269,1978,3.269,1979,3.269,1980,3.269,1988,3.539,1994,3.539,1995,4.789,1996,5.185,1998,3.539,2036,3.067,2206,2.246,2210,2.074,2268,5.039,2276,2.772,2280,2.906,2281,2.906,2329,2.386,2343,4.257,2367,2.906,2368,3.067,2369,3.39,2370,3.067,2371,3.269,2372,3.269,2638,4.789,2664,3.949,2665,6.848,2666,6.137,2667,3.949,2668,3.949,2669,4.789,2670,5.786,2671,5.786,2672,5.786,2673,5.185,2674,3.497,2675,4.061,2676,5.185,2677,4.494,2678,4.494,2679,3.949,2680,3.539,2681,3.539,2682,3.949,2683,3.949,2684,3.539,2685,5.668,2686,3.539,2687,3.269,2688,3.949,2689,3.539,2690,5.185,2691,5.185,2692,5.185,2693,5.185,2694,3.539,2695,3.539,2696,3.949,2697,3.949,2698,3.949]],["title/classes/IdentitiesUpdateDto.html",[0,0.226,2330,3.442]],["body/classes/IdentitiesUpdateDto.html",[0,0.407,2,0.785,3,0.109,4,0.091,5,0.097,21,0.005,23,0.425,29,0.234,32,1.056,37,0.184,40,0.474,41,1.565,55,0.698,58,0.004,59,0.004,65,1.453,112,1.399,255,3.747,264,2.399,267,1.734,275,2.727,278,1.459,279,2.263,282,4.067,283,4.067,289,1.935,354,2.263,484,2.612,504,2.399,506,3.348,509,3.844,510,2.399,513,2.736,514,2.736,605,3.037,862,2.612,869,3.421,875,2.921,1166,2.612,1312,4.585,1320,5.218,1321,3.592,1322,3.456,1357,2.221,1491,2.804,1595,3.128,1713,2.736,1758,3.497,1874,3.792,2092,4.466,2109,3.592,2145,5.106,2206,3.037,2207,3.747,2210,2.804,2214,3.592,2219,5.657,2232,4.81,2237,3.929,2239,3.592,2247,3.929,2255,3.456,2288,5.018,2289,4.146,2290,4.146,2291,5.792,2293,4.067,2294,4.146,2295,3.747,2296,3.747,2297,5.018,2298,4.628,2299,4.81,2300,3.747,2301,3.747,2302,4.146,2303,4.146,2304,3.747,2308,5.378,2317,4.146,2318,4.146,2319,4.146,2320,4.146,2321,4.146,2322,4.146,2323,4.146,2324,4.81,2325,4.146,2326,4.146,2327,4.146,2328,4.146,2329,3.227,2330,5.423,2331,5.553,2332,3.747,2333,4.146]],["title/controllers/IdentitiesUpsertController.html",[385,1.458,2637,4.235]],["body/controllers/IdentitiesUpsertController.html",[0,0.158,1,2.519,3,0.073,4,0.061,5,0.152,7,0.215,9,2.107,11,0.618,15,1.035,18,0.375,20,1.265,21,0.005,22,0.932,23,0.372,25,1.609,29,0.234,32,0.708,36,0.603,37,0.077,39,1.83,40,0.784,53,1.774,55,0.621,56,1.56,58,0.003,59,0.003,65,0.871,72,1.08,74,1.861,77,1.265,78,1.903,94,1.265,106,1.835,112,1.694,121,1.518,123,1.792,127,0.919,133,1.49,134,0.926,152,1.919,164,2.037,170,1.538,194,5.073,200,1.991,212,3.871,216,2.514,219,1.49,222,1.642,243,1.08,246,1.766,257,3.147,264,1.609,268,2.825,272,1.317,284,1.835,286,1.163,288,2.097,294,2.467,295,1.677,296,1.677,329,2.099,339,2.037,354,2.74,357,1.982,385,1.02,387,1.129,389,1.518,394,3.429,395,4.372,399,3.772,412,4.986,413,4.652,422,1.49,425,1.751,427,1.642,428,1.981,429,2.237,430,1.792,431,2.635,432,3.483,433,2.635,448,3.251,449,2.237,450,2.237,454,1.835,457,1.792,462,2.689,470,1.792,471,2.692,476,1.713,504,1.609,559,2.237,589,2.409,605,3.677,633,2.237,661,1.929,827,2.164,877,1.88,890,2.635,974,1.437,996,2.632,1144,1.929,1193,2.097,1213,3.209,1301,3.092,1312,2.037,1342,3.251,1345,4.489,1357,2.238,1430,3.482,1595,2.097,1845,4.756,1893,2.318,1901,2.318,1903,2.409,1904,2.318,1906,2.513,1907,3.483,1909,2.513,1916,4.184,1918,2.513,1919,2.318,1932,2.964,1942,5.35,1962,4.453,1963,2.964,1964,2.964,1965,2.964,1966,2.781,1967,2.964,1968,2.964,1970,3.483,1972,2.635,1973,3.776,1976,2.781,1977,2.964,1978,2.964,1979,2.964,1980,2.964,2036,2.781,2169,2.237,2206,2.037,2210,1.88,2239,2.409,2254,2.781,2268,4.756,2276,2.513,2280,2.635,2281,2.635,2293,2.037,2329,3.906,2332,5.044,2343,2.635,2344,2.964,2362,3.959,2367,2.635,2368,2.781,2369,3.152,2370,2.781,2371,2.964,2372,2.964,2380,2.964,2381,1.929,2382,2.964,2383,2.964,2384,2.964,2385,2.964,2387,2.964,2388,3.209,2389,5.792,2390,4.453,2391,2.964,2392,2.513,2393,2.318,2394,2.964,2395,2.964,2637,4.453,2653,4.821,2654,3.209,2666,5.792,2669,5.948,2680,3.209,2681,3.209,2684,3.209,2685,4.453,2686,3.209,2689,3.209,2690,3.209,2691,3.209,2692,3.209,2693,3.209,2694,3.209,2695,3.209,2699,3.581,2700,3.581,2701,6.463,2702,7.187,2703,3.581,2704,5.38,2705,3.581,2706,3.581,2707,3.581,2708,3.581,2709,3.581,2710,3.581,2711,2.781,2712,3.581,2713,3.581,2714,3.581,2715,3.581,2716,3.581,2717,3.581,2718,3.581,2719,3.581,2720,3.581,2721,3.209,2722,3.581,2723,3.581,2724,3.581,2725,3.581,2726,3.581,2727,2.964]],["title/classes/IdentitiesUpsertDto.html",[0,0.226,2332,3.591]],["body/classes/IdentitiesUpsertDto.html",[0,0.404,2,0.764,3,0.106,4,0.089,5,0.094,7,0.313,8,0.795,11,0.807,18,0.362,21,0.005,23,0.431,29,0.233,32,1.028,37,0.182,40,0.461,41,1.524,55,0.714,58,0.003,59,0.003,65,1.439,112,1.362,127,0.888,255,5.581,264,2.335,267,1.688,275,2.708,278,1.42,279,2.203,282,3.994,283,3.994,289,1.884,354,2.203,484,2.542,504,2.335,506,3.288,509,3.814,510,2.335,513,2.663,514,2.663,605,3.994,862,2.542,869,3.359,875,2.869,1166,2.542,1312,4.524,1320,5.147,1321,3.497,1322,3.364,1357,2.163,1491,2.729,1595,3.045,1713,2.663,1758,3.435,1874,3.751,2092,4.386,2109,3.497,2145,5.06,2206,2.957,2207,3.648,2210,2.729,2214,3.497,2219,5.581,2232,4.724,2237,3.825,2239,3.497,2247,3.825,2255,3.364,2288,4.928,2289,4.037,2290,4.037,2291,5.729,2293,3.994,2294,4.037,2295,3.648,2296,3.648,2297,4.928,2298,4.545,2299,4.724,2300,3.648,2301,3.648,2302,4.037,2303,4.037,2304,3.648,2308,5.32,2317,4.037,2318,4.037,2319,4.037,2320,4.037,2321,4.037,2322,4.037,2323,4.037,2324,4.724,2325,4.037,2326,4.037,2327,4.037,2328,4.037,2329,3.141,2330,4.724,2331,4.037,2332,4.928,2333,5.453,2728,5.198,2729,5.198]],["title/controllers/IdentitiesValidationController.html",[385,1.458,2730,4.235]],["body/controllers/IdentitiesValidationController.html",[0,0.218,1,3.178,3,0.1,4,0.084,5,0.09,7,0.297,11,0.891,18,0.54,20,1.822,21,0.005,22,1.342,23,0.356,29,0.219,32,0.978,36,0.833,37,0.106,55,0.617,56,1.81,58,0.003,59,0.003,65,1.098,74,1.194,77,1.596,78,2.247,94,1.822,127,1.324,152,1.763,170,1.473,200,2.501,216,2.591,243,1.491,244,2.178,246,2.117,249,2.057,280,5.854,284,2.533,292,2.902,294,2.267,295,2.315,296,2.315,329,1.606,341,2.02,348,2.812,385,1.409,387,1.559,389,2.095,392,4.239,394,3.95,395,4.182,399,4.232,411,3.088,422,2.057,423,2.896,425,3.319,427,2.267,430,2.474,457,2.474,461,3.638,462,3.47,463,3.47,470,3.396,471,3.396,616,4.092,638,4.614,661,4.174,868,5.27,869,3.247,876,3.247,1128,4.493,1145,4.993,1164,3.319,1357,2.823,1470,3.2,1792,3.656,2286,3.839,2287,3.638,2369,3.975,2404,4.43,2461,6.081,2466,4.993,2467,5.617,2473,6.477,2474,7.474,2478,4.43,2492,4.43,2493,4.43,2494,4.43,2496,4.43,2499,4.43,2730,5.617,2731,4.944,2732,4.944,2733,5.438,2734,4.944,2735,7.013,2736,4.944,2737,4.944,2738,4.944,2739,4.944,2740,6.786,2741,4.944,2742,4.43,2743,4.43,2744,4.944,2745,4.944,2746,4.944,2747,4.43]],["title/classes/IdentitiesValidationFilter.html",[0,0.226,2650,4.235]],["body/classes/IdentitiesValidationFilter.html",[0,0.298,2,0.993,3,0.137,4,0.115,5,0.123,7,0.406,10,2.297,11,0.776,18,0.471,20,1.588,21,0.005,22,1.17,23,0.311,29,0.213,36,1.138,37,0.145,56,1.466,58,0.004,59,0.004,67,4.731,77,1.956,94,1.588,152,2.409,170,1.713,249,3.749,264,3.737,284,3.461,329,2.194,394,3.398,462,2.81,583,7.459,584,6.884,585,5.629,586,7.784,588,4.544,590,5.591,591,5.246,592,5.591,593,5.591,595,6.054,2528,5.591,2650,7.459,2748,8.317,2749,6.054,2750,6.92,2751,6.755,2752,6.755,2753,6.755,2754,6.755,2755,6.755]],["title/modules/IdentitiesValidationModule.html",[166,1.59,2646,3.591]],["body/modules/IdentitiesValidationModule.html",[0,0.31,3,0.143,4,0.12,5,0.128,21,0.005,29,0.217,36,1.187,37,0.151,58,0.004,59,0.004,166,2.851,387,2.689,531,3.041,532,3.163,533,3.297,534,3.297,535,3.297,536,4.208,537,4.297,541,3.994,542,2.984,543,3.297,2369,6.066,2646,7.052,2730,7.596,2743,6.309,2756,6.309,2757,6.309,2758,7.04,2759,7.04,2760,7.04]],["title/injectables/IdentitiesValidationService.html",[136,1.341,2369,2.998]],["body/injectables/IdentitiesValidationService.html",[0,0.107,2,0.582,3,0.049,4,0.109,5,0.146,7,0.238,8,0.448,10,2.333,11,0.667,15,1.452,18,0.56,20,1.364,21,0.005,22,1.107,23,0.294,29,0.199,36,0.409,37,0.052,39,2.799,40,0.67,41,0.711,52,1.784,53,2.49,55,0.665,56,1.696,58,0.002,59,0.002,67,1.38,70,2.638,72,2.533,77,0.932,78,1.974,94,1.776,106,2.972,111,2.007,112,1.317,136,1.038,137,1.028,162,2.805,170,1.856,187,1.16,191,2.192,200,2.326,205,1.946,216,2.427,219,0.672,244,2.816,246,1.082,249,2.66,267,1.632,272,1.913,280,4.071,282,2.857,283,1.38,284,3.515,286,1.884,288,1.421,292,2.828,329,2.351,341,2.957,345,1.515,423,2.943,476,1.16,516,1.983,751,3.623,801,2.781,823,1.883,824,1.883,827,1.466,830,3.696,831,3.525,875,0.991,974,2.016,996,2.837,997,2.007,998,2.007,1128,2.134,1144,1.306,1164,1.938,1204,1.784,1301,3.282,1326,2.007,1410,1.883,1420,1.631,1487,3.279,1491,2.081,1639,1.883,1717,2.781,1781,3.901,1790,3.696,1792,4.329,1836,1.702,1853,2.321,1932,4.801,2048,1.883,2169,3.623,2210,1.273,2287,4.268,2291,3.902,2293,1.38,2369,2.321,2381,3.124,2382,3.279,2383,3.279,2392,1.702,2393,1.57,2412,3.077,2498,5.292,2509,5.198,2510,6.148,2514,3.551,2523,1.702,2524,2.173,2526,6.242,2527,4.071,2528,2.007,2529,3.551,2530,4.502,2531,6.242,2532,4.502,2533,2.173,2537,4.502,2538,3.551,2539,2.173,2540,3.551,2543,2.173,2545,4.502,2546,2.173,2547,2.173,2548,1.883,2551,5.198,2553,5.198,2555,2.173,2556,2.173,2560,3.551,2562,3.551,2586,2.173,2599,2.173,2600,2.173,2601,5.198,2602,2.173,2604,2.173,2605,5.198,2606,2.173,2607,2.173,2615,2.173,2617,2.173,2618,2.173,2620,2.173,2685,2.007,2733,5.484,2742,2.173,2761,2.425,2762,3.962,2763,3.962,2764,3.962,2765,3.551,2766,3.962,2767,2.425,2768,2.425,2769,2.425,2770,3.962,2771,2.425,2772,3.551,2773,2.425,2774,5.8,2775,5.8,2776,3.962,2777,3.962,2778,3.551,2779,7.656,2780,2.425,2781,3.962,2782,3.962,2783,2.425,2784,2.425,2785,2.425,2786,2.425,2787,2.425,2788,2.007,2789,2.425,2790,2.425,2791,2.425,2792,2.915,2793,2.425,2794,2.425,2795,2.425,2796,2.425,2797,2.425,2798,2.425,2799,2.425,2800,2.425,2801,2.425,2802,2.425,2803,2.425,2804,5.023,2805,5.023,2806,2.425,2807,5.8,2808,2.425,2809,6.25,2810,2.425,2811,2.425,2812,1.883,2813,2.425,2814,2.425,2815,5.729,2816,2.425,2817,1.702,2818,2.173,2819,2.173,2820,1.702,2821,2.425,2822,2.173,2823,2.425,2824,2.425,2825,5.729,2826,3.962,2827,2.425,2828,1.784,2829,3.962,2830,2.425,2831,3.962,2832,2.425,2833,2.173,2834,2.425,2835,2.425,2836,2.425,2837,2.173,2838,2.425,2839,3.962,2840,2.425,2841,6.861,2842,2.425,2843,2.425,2844,5.023,2845,5.198,2846,2.425,2847,2.425,2848,2.425,2849,2.425,2850,2.425,2851,2.425,2852,2.425,2853,2.425,2854,2.425,2855,2.173,2856,2.425,2857,2.425,2858,2.425,2859,1.883,2860,2.425,2861,2.425,2862,2.425,2863,4.504,2864,3.962,2865,2.425,2866,2.425,2867,2.425,2868,2.425,2869,2.425,2870,2.425,2871,2.425,2872,3.962,2873,2.425]],["title/classes/InitAccountDto.html",[0,0.226,1304,3.765]],["body/classes/InitAccountDto.html",[0,0.383,2,1.069,3,0.148,4,0.124,5,0.132,7,0.437,8,0.984,18,0.507,21,0.005,23,0.334,29,0.206,32,1.438,37,0.156,40,0.772,55,0.688,58,0.004,59,0.004,127,1.242,267,2.825,275,2.513,277,2.912,278,1.986,279,3.082,837,5.453,838,5.349,1304,6.399,2874,7.198,2875,7.27,2876,7.27,2877,7.27,2878,7.27]],["title/classes/InitInfoPart.html",[0,0.226,2226,4.235]],["body/classes/InitInfoPart.html",[0,0.3,2,0.999,3,0.138,4,0.116,5,0.123,7,0.409,8,0.945,11,1.083,18,0.582,21,0.005,23,0.433,29,0.197,37,0.179,55,0.728,58,0.004,59,0.004,65,1.1,112,1.781,121,3.539,122,1.909,127,1.426,128,3.909,131,4.231,132,1.992,134,1.757,170,1.292,292,3.127,293,3.252,1583,4.819,2226,6.91,2227,6.091,2879,9.036,2880,6.797,2881,9.036,2882,9.036,2883,6.797,2884,6.797,2885,6.797]],["title/classes/InitManyDto.html",[0,0.226,1318,3.765]],["body/classes/InitManyDto.html",[0,0.373,2,1.022,3,0.141,4,0.119,5,0.126,7,0.418,8,0.958,18,0.485,21,0.005,23,0.32,29,0.216,32,1.375,37,0.149,55,0.675,58,0.004,59,0.004,124,3.224,127,1.188,133,2.892,134,1.797,263,3.882,267,2.258,275,2.446,278,1.899,515,4.683,876,4.05,1175,7.586,1301,3.326,1318,6.228,1341,7.006,1357,3.522,1429,5.941,1436,6.574,1553,6.574,1554,5.941,2423,8.179,2874,7.006,2886,6.952,2887,6.952,2888,6.952,2889,6.952]],["title/classes/InitResetDto.html",[0,0.226,1314,3.765]],["body/classes/InitResetDto.html",[0,0.363,2,0.977,3,0.135,4,0.113,5,0.121,7,0.4,8,0.932,18,0.574,21,0.005,23,0.442,29,0.195,32,1.315,37,0.142,40,0.731,41,2.414,55,0.724,58,0.004,59,0.004,127,1.407,157,4.121,257,3.364,263,3.776,265,4.017,267,3.038,275,2.586,277,2.758,278,1.816,279,3.49,476,4.474,836,4.556,837,4.95,843,6.395,1203,8.38,1314,6.059,1344,5.144,2145,4.684,2874,7.406,2890,6.648,2891,5.502,2892,6.648,2893,6.648]],["title/interfaces/InternalLogOptions.html",[38,1.479,2894,3.974]],["body/interfaces/InternalLogOptions.html",[0,0.165,3,0.076,4,0.064,5,0.068,7,0.225,8,0.629,9,1.095,11,0.844,21,0.005,23,0.305,24,4.843,29,0.174,36,0.63,37,0.157,38,1.605,40,0.869,53,1.232,55,0.411,56,1.785,58,0.003,59,0.003,60,1.614,65,0.605,72,1.127,78,0.879,108,4.007,116,4.176,123,2.78,132,1.095,134,1.714,136,1.456,139,4.275,152,1.332,157,1.87,162,3.186,164,3.16,170,1.826,205,3.299,209,3.701,216,1.726,243,1.127,244,2.447,246,1.021,249,2.311,250,4.436,257,3.359,329,2.841,341,1.527,456,1.788,718,3.737,783,2.419,798,2.419,973,2.126,1446,2.623,1583,1.788,1640,4.653,1727,4.878,1836,5.77,1853,2.189,1874,1.646,2405,6.264,2589,2.514,2863,5.701,2894,5.149,2895,2.902,2896,5.772,2897,5.701,2898,4.598,2899,4.314,2900,4.314,2901,4.314,2902,2.902,2903,3.093,2904,3.093,2905,3.093,2906,4.314,2907,5.488,2908,3.093,2909,3.093,2910,3.093,2911,3.093,2912,3.093,2913,3.093,2914,3.093,2915,3.093,2916,3.093,2917,8.142,2918,4.598,2919,3.093,2920,8.102,2921,6.805,2922,6.805,2923,6.805,2924,6.805,2925,6.793,2926,6.805,2927,3.093,2928,3.093,2929,3.093,2930,3.093,2931,3.093,2932,4.314,2933,3.093,2934,3.093,2935,3.093,2936,3.093,2937,3.093,2938,3.093,2939,3.093,2940,3.093,2941,3.093,2942,3.093,2943,4.653,2944,2.75,2945,4.598,2946,5.488,2947,3.093,2948,3.093,2949,3.093,2950,3.093,2951,3.093,2952,3.093,2953,3.093,2954,3.093,2955,3.093]],["title/injectables/InternalLogger.html",[136,1.341,2902,3.974]],["body/injectables/InternalLogger.html",[0,0.142,3,0.065,4,0.055,5,0.058,7,0.193,8,0.561,9,1.773,11,0.96,15,0.929,18,0.61,20,1.963,21,0.005,22,1.446,23,0.41,24,4.6,25,1.444,29,0.161,36,0.542,37,0.146,38,1.432,40,0.836,53,1.06,55,0.543,56,1.684,58,0.002,59,0.002,65,0.802,72,1.825,77,1.166,78,1.422,94,1.963,108,3.656,116,4.6,123,2.48,132,0.942,134,1.564,136,1.299,137,1.363,139,3.253,152,1.146,157,1.609,162,3.006,164,2.82,170,1.776,205,3.133,209,3.659,216,1.54,243,0.97,244,2.183,246,0.878,249,2.062,250,4.108,257,3.17,329,3.006,341,2.471,357,1.826,456,1.538,718,3.335,783,3.916,798,2.081,973,2.82,1446,4.771,1583,1.538,1640,4.246,1727,4.451,1836,5.446,1853,4.891,1874,1.416,2405,5.95,2589,2.163,2863,2.497,2894,5.28,2895,2.497,2896,3.647,2897,3.849,2898,5.007,2899,3.849,2900,5.28,2901,3.849,2902,3.849,2903,4.103,2904,2.661,2905,2.661,2906,3.849,2907,5.007,2908,2.661,2909,2.661,2910,2.661,2911,2.661,2912,2.661,2913,2.661,2914,2.661,2915,2.661,2916,4.103,2917,8.32,2918,4.103,2919,2.661,2920,7.915,2921,6.423,2922,6.423,2923,6.423,2924,6.423,2925,6.485,2926,6.423,2927,2.661,2928,4.103,2929,5.007,2930,2.661,2931,4.103,2932,5.28,2933,2.661,2934,4.103,2935,2.661,2936,4.103,2937,5.007,2938,2.661,2939,4.103,2940,5.007,2941,2.661,2942,5.007,2943,4.246,2944,2.365,2945,4.103,2946,5.007,2947,2.661,2948,2.661,2949,2.661,2950,2.661,2951,2.661,2952,2.661,2953,2.661,2954,2.661,2955,2.661,2956,3.215,2957,4.957,2958,3.215,2959,3.215,2960,3.215,2961,3.215,2962,3.215,2963,3.215,2964,3.215,2965,3.215,2966,3.215]],["title/interfaces/InternalLoggerOptions.html",[38,1.479,2900,3.974]],["body/interfaces/InternalLoggerOptions.html",[0,0.166,3,0.077,4,0.064,5,0.068,7,0.227,8,0.633,9,1.107,21,0.005,23,0.339,24,4.859,29,0.174,36,0.636,37,0.158,38,1.617,40,0.86,53,1.245,55,0.414,56,1.791,58,0.003,59,0.003,60,1.631,65,0.611,72,1.139,78,0.888,108,4.031,116,4.196,123,2.801,132,1.107,134,2.133,136,1.467,139,3.529,152,1.346,157,1.889,162,3.197,164,3.184,170,1.829,205,3.309,209,3.706,216,1.739,243,1.139,244,2.465,246,1.031,249,2.329,250,4.458,257,3.371,329,2.849,341,1.542,357,2.062,456,1.806,718,3.765,783,2.443,798,2.443,973,2.147,1446,2.649,1583,1.806,1640,6.157,1727,4.908,1836,5.792,1853,2.211,1874,1.663,2405,6.285,2589,2.539,2863,2.932,2894,4.347,2895,2.932,2896,4.118,2897,4.347,2898,4.633,2899,4.347,2900,5.18,2901,4.347,2902,2.932,2903,3.125,2904,3.125,2905,3.125,2906,4.347,2907,5.521,2908,3.125,2909,3.125,2910,3.125,2911,3.125,2912,3.125,2913,3.125,2914,3.125,2915,3.125,2916,3.125,2917,8.154,2918,4.633,2919,3.125,2920,8.113,2921,6.83,2922,6.83,2923,6.83,2924,6.83,2925,6.813,2926,6.83,2927,3.125,2928,3.125,2929,3.125,2930,3.125,2931,3.125,2932,4.347,2933,3.125,2934,3.125,2935,3.125,2936,3.125,2937,3.125,2938,3.125,2939,3.125,2940,3.125,2941,3.125,2942,3.125,2943,4.681,2944,2.778,2945,4.633,2946,5.521,2947,3.125,2948,3.125,2949,3.125,2950,3.125,2951,3.125,2952,3.125,2953,3.125,2954,3.125,2955,3.125]],["title/classes/Jobs.html",[0,0.226,1165,3.196]],["body/classes/Jobs.html",[0,0.209,2,0.697,3,0.096,4,0.081,5,0.086,7,0.285,8,0.746,11,1.139,18,0.669,21,0.005,23,0.469,29,0.204,37,0.162,40,0.867,41,1.932,55,0.764,58,0.003,59,0.003,65,0.767,112,1.242,119,3.647,121,2.794,124,2.887,127,1.638,128,4.49,131,4.537,132,1.389,133,1.972,134,1.225,170,0.901,205,3.613,219,2.269,272,2.006,286,2.895,289,2.969,292,2.469,293,2.268,354,3.212,372,2.864,376,2.961,752,4.58,1128,4.082,1165,4.734,1583,4.461,1612,6.273,1618,6.792,1874,2.904,1877,5.319,1888,4.734,1891,5.577,2967,4.248,2968,5.577,2969,7.579,2970,5.099,2971,7.579,2972,4.74,2973,4.74,2974,4.74,2975,4.74,2976,4.74,2977,4.74,2978,4.74,2979,4.74,2980,6.335,2981,4.74,2982,4.74,2983,4.74,2984,3.681,2985,4.74,2986,4.248,2987,4.74,2988,4.248,2989,4.74]],["title/controllers/JobsController.html",[385,1.458,2990,4.235]],["body/controllers/JobsController.html",[0,0.211,1,3.111,3,0.097,4,0.082,5,0.087,7,0.288,9,1.405,11,0.764,18,0.463,20,1.562,21,0.005,22,1.32,23,0.379,29,0.233,32,0.948,36,0.808,37,0.103,40,0.426,55,0.678,56,1.442,58,0.003,59,0.003,65,1.075,74,1.605,77,1.562,78,2.103,94,1.562,122,2.313,123,2.399,124,2.904,127,1.135,133,1.995,134,1.239,139,3.939,152,1.71,156,6.362,164,2.727,170,1.263,200,2.281,216,2.557,222,2.199,243,1.446,246,1.815,257,3.747,263,2.199,272,1.174,310,2.112,354,2.032,385,1.366,387,1.512,389,2.032,390,5.538,392,5.143,394,3.747,399,4.201,400,3.365,401,4.663,402,4.47,403,4.47,404,3.365,411,2.995,412,5.79,413,5.329,414,6.278,415,5.778,416,3.365,422,1.995,423,2.809,426,4.663,427,2.199,428,2.652,429,2.995,430,2.399,432,4.301,436,3.225,437,3.365,438,3.365,439,3.225,442,3.365,443,3.365,444,3.365,445,4.301,446,3.724,447,3.528,448,4.015,449,2.995,450,2.995,454,2.457,456,2.294,457,2.399,462,2.764,466,3.969,467,3.969,468,4.15,469,3.365,470,3.325,471,3.325,472,3.365,474,3.365,475,3.365,476,2.294,752,2.897,1128,2.583,1165,2.995,1877,3.365,2968,3.528,2970,3.225,2990,5.5,2991,4.795,2992,4.795,2993,4.795,2994,4.795,2995,3.528,2996,4.795,2997,4.889,2998,4.297,2999,4.795,3000,4.795,3001,4.795,3002,6.645,3003,4.795,3004,4.795,3005,4.795,3006,4.795]],["title/classes/JobsCreateDto.html",[0,0.226,3007,3.974]],["body/classes/JobsCreateDto.html",[0,0.391,2,0.757,3,0.105,4,0.088,5,0.093,7,0.31,8,0.79,11,0.802,18,0.672,21,0.005,23,0.461,29,0.221,32,1.019,37,0.17,40,0.844,41,2.045,55,0.769,58,0.003,59,0.003,65,1.373,87,2.066,122,1.447,124,2.658,127,1.647,133,2.143,134,1.331,205,3.287,275,2.816,277,2.841,278,1.407,351,3.969,354,3.355,357,1.897,484,4.15,498,3.999,502,3.217,503,3.333,504,2.314,505,3.664,506,3.267,508,4.263,510,2.314,513,2.639,514,2.639,752,4.783,1128,4.263,1620,6.726,1624,4.263,1758,3.871,1877,5.555,1888,4.944,1891,5.823,2099,5.555,2139,4.263,2145,3.969,2968,5.823,2970,5.324,2980,3.789,2984,3.999,2995,3.789,3007,6.146,3008,4.263,3009,5.15,3010,5.15,3011,5.15,3012,5.15,3013,6.253,3014,5.15,3015,5.15,3016,5.15,3017,5.15,3018,4.263,3019,4.263,3020,3.999,3021,4.263]],["title/classes/JobsDto.html",[0,0.226,2995,3.765]],["body/classes/JobsDto.html",[0,0.385,2,0.725,3,0.1,4,0.084,5,0.089,7,0.297,8,0.767,11,0.778,18,0.674,21,0.005,23,0.461,29,0.218,32,0.975,37,0.166,40,0.858,41,1.985,55,0.768,58,0.003,59,0.003,65,1.348,87,3.832,122,2.174,124,2.58,127,1.651,133,2.051,134,1.274,205,3.228,275,2.793,277,2.79,278,1.347,351,3.853,354,3.279,357,1.816,484,3.784,498,3.828,502,3.079,503,3.191,504,2.215,505,3.556,506,3.171,508,4.168,510,2.215,513,2.526,514,2.526,519,3.828,752,4.676,1128,4.168,1620,6.638,1624,4.08,1758,3.784,1877,5.43,1888,4.833,1891,5.693,2099,5.43,2139,4.08,2145,3.853,2968,5.693,2970,5.205,2980,3.627,2984,3.828,2995,4.983,3007,7.578,3008,4.08,3013,6.069,3018,4.08,3019,4.08,3020,3.828,3021,4.08,3022,4.929,3023,4.929,3024,4.929,3025,4.929,3026,4.929,3027,4.929,3028,4.929,3029,4.929,3030,4.929]],["title/modules/JobsModule.html",[166,1.59,1263,3.591]],["body/modules/JobsModule.html",[0,0.295,3,0.136,4,0.114,5,0.122,21,0.005,22,1.16,29,0.228,36,1.129,37,0.144,58,0.004,59,0.004,132,1.964,166,2.789,387,2.609,531,2.895,532,3.011,533,3.138,534,3.138,535,3.138,536,4.118,537,4.205,541,3.875,542,2.84,543,3.138,545,3.925,549,3.353,550,4.186,552,3.812,1165,4.186,1263,6.98,2988,7.416,2990,7.432,2997,7.572,2998,6.005,3031,6.005,3032,6.005,3033,6.005,3034,6.701,3035,6.005,3036,6.701,3037,6.701]],["title/injectables/JobsService.html",[136,1.341,2997,3.765]],["body/injectables/JobsService.html",[0,0.151,3,0.07,4,0.059,5,0.062,7,0.207,8,0.59,9,2.559,10,2.143,11,1.087,12,2.528,15,0.992,18,0.665,20,2.308,21,0.005,22,1.567,23,0.458,25,4.389,29,0.179,36,0.579,37,0.074,49,2.737,55,0.729,58,0.003,59,0.003,65,0.844,66,3.366,72,1.572,74,1.259,75,2.671,76,2.671,77,1.226,78,2.297,87,3.796,88,1.849,89,1.759,90,1.849,91,1.849,92,1.849,94,2.094,122,1.77,124,3.033,132,1.006,134,0.888,136,1.366,137,1.455,162,3.847,179,5.858,181,4.394,185,2.808,186,2.252,187,2.494,188,3.15,189,3.053,190,3.053,191,2.883,192,3.256,193,3.895,194,3.15,195,2.222,196,3.542,198,2.145,200,2.466,207,2.075,208,5.216,209,3.658,210,2.145,211,4.796,212,4.075,213,2.075,214,3.15,215,2.31,216,1.066,217,2.075,218,5.586,219,2.73,220,2.145,221,2.075,222,4.004,223,5.216,224,2.145,225,2.075,226,2.145,227,2.145,228,2.145,229,2.075,230,2.145,231,2.145,232,2.145,233,1.849,234,4.251,235,2.222,236,2.145,237,2.145,238,2.075,239,2.222,243,1.036,1165,2.145,2997,3.835,3035,3.077,3038,3.433,3039,3.433,3040,3.433]],["title/classes/JobsUpdateDto.html",[0,0.226,3020,3.974]],["body/classes/JobsUpdateDto.html",[0,0.417,2,0.924,3,0.128,4,0.107,5,0.114,21,0.005,23,0.422,29,0.232,32,1.243,37,0.187,40,0.839,41,1.842,55,0.741,58,0.004,59,0.004,65,1.483,122,1.765,124,2.394,133,2.615,134,1.625,205,3.08,275,2.916,277,3.069,278,1.717,354,2.664,484,3.889,504,2.824,505,4.175,506,3.723,508,4.698,510,2.824,513,3.22,514,3.22,752,3.798,1128,3.385,1620,6.744,1758,4.266,1877,4.411,1888,3.926,1891,4.624,2145,4.523,2968,4.624,2970,4.228,2980,4.624,2984,4.881,2995,4.624,3007,6.174,3008,5.202,3018,5.202,3019,5.202,3020,6.174,3021,6.581]],["title/injectables/JwtStrategy.html",[136,1.341,927,3.974]],["body/injectables/JwtStrategy.html",[0,0.245,3,0.113,4,0.095,5,0.101,7,0.334,8,0.831,9,2.409,10,3.177,11,0.843,15,2.121,18,0.573,20,1.726,21,0.005,22,1.271,23,0.378,29,0.229,36,0.936,37,0.119,53,2.42,55,0.608,56,1.784,58,0.004,59,0.004,65,1.188,70,4.316,72,1.675,74,1.341,77,1.726,78,1.933,83,5.463,94,1.306,103,3.253,112,2.154,136,1.923,137,2.353,139,4.184,152,1.98,157,3.672,170,1.055,200,2.033,243,1.675,246,1.517,268,2.916,272,1.359,286,1.804,761,4.937,776,5.699,852,5.4,859,5.53,882,5.285,884,3.735,888,4.312,927,5.699,931,4.976,973,4.676,974,2.228,987,6.074,988,5.699,993,6.576,994,4.976,1073,4.976,1633,4.086,1797,4.596,2733,5.769,3041,5.553,3042,6.576,3043,4.976,3044,7.339,3045,4.976,3046,6.804,3047,8.745,3048,5.553,3049,7.339,3050,4.976,3051,5.553,3052,4.976,3053,5.553,3054,5.553,3055,5.553,3056,5.553,3057,5.553,3058,4.976,3059,5.553,3060,5.553,3061,4.976,3062,7.339,3063,6.576,3064,5.553,3065,4.976]],["title/classes/Keyrings.html",[0,0.226,3066,3.312]],["body/classes/Keyrings.html",[0,0.267,2,0.889,3,0.123,4,0.103,5,0.11,7,0.364,8,0.878,11,1.038,18,0.63,21,0.005,22,1.483,23,0.457,29,0.202,37,0.183,40,0.896,55,0.751,58,0.004,59,0.004,65,0.978,112,1.584,119,4.291,121,3.288,127,1.543,128,4.231,131,4.375,132,1.772,134,1.563,170,1.149,219,2.149,272,2.212,286,2.519,292,2.905,293,2.892,360,6.078,372,3.653,376,3.776,603,4.388,1583,4.323,3066,5.544,3067,5.417,3068,6.011,3069,6.011,3070,6.045,3071,6.045,3072,6.045,3073,6.045,3074,5.417,3075,6.045,3076,5.417,3077,6.045]],["title/classes/KeyringsCommand.html",[0,0.226,1603,3.765]],["body/classes/KeyringsCommand.html",[0,0.342,2,0.728,3,0.101,4,0.084,5,0.09,7,0.298,9,1.451,11,0.781,12,3.781,15,1.963,18,0.474,20,1.597,21,0.005,22,1.631,23,0.312,29,0.219,30,2.099,37,0.166,39,1.684,40,0.776,42,2.502,43,2.347,44,2.726,45,3.481,46,3.659,53,1.633,55,0.574,56,1.075,58,0.003,59,0.003,65,1.099,72,2.34,74,1.873,77,1.597,78,1.963,94,1.164,112,1.298,122,1.391,170,1.586,186,3.35,200,2.148,209,3.384,219,1.372,243,2.049,244,2.181,246,2.118,249,2.06,308,3.475,313,2.537,315,4.397,316,5.02,317,4.768,318,4.768,319,4.768,320,4.397,321,3.093,322,3.093,328,4.768,329,1.608,331,3.475,332,3.25,333,4.397,334,4.397,335,5.02,339,3.864,340,4.768,341,2.775,342,3.475,343,3.331,345,3.093,346,3.205,348,2.816,352,2.369,380,4.768,381,3.205,384,3.475,600,4.998,603,2.537,617,2.816,850,3.331,882,4.686,883,3.643,957,4.844,977,5.276,1021,3.845,1603,4.998,1604,3.643,3066,5.402,3078,4.098,3079,4.951,3080,4.951,3081,4.098,3082,3.205,3083,3.845,3084,3.643,3085,3.845,3086,4.098,3087,5.276,3088,5.623,3089,4.098,3090,4.098,3091,5.623,3092,4.098,3093,4.098,3094,5.623,3095,4.098,3096,4.098,3097,4.098,3098,4.098,3099,4.098,3100,5.623,3101,4.098]],["title/controllers/KeyringsController.html",[385,1.458,3102,4.235]],["body/controllers/KeyringsController.html",[0,0.181,1,2.784,3,0.083,4,0.07,5,0.074,7,0.247,9,1.202,11,0.882,18,0.535,20,1.805,21,0.005,22,1.471,23,0.413,29,0.231,32,0.811,36,0.691,37,0.088,40,0.528,55,0.71,56,1.666,58,0.003,59,0.003,65,0.962,74,1.436,77,1.398,78,2.238,94,1.805,122,2.522,124,3.237,127,1.311,133,1.706,134,1.06,152,1.462,164,2.332,170,1.459,186,2.569,187,1.961,200,2.487,216,2.789,222,1.88,243,1.237,246,2.096,257,2.429,263,1.88,385,1.168,387,1.292,389,1.738,390,5.163,391,5.148,392,4.794,393,3.016,394,3.925,395,3.898,399,4.351,400,2.877,401,4.173,402,5.163,403,5.163,404,4.173,407,3.016,408,4.375,411,2.561,412,5.5,413,4.967,414,5.964,415,5.386,416,2.877,422,1.706,423,2.402,425,2.908,426,4.91,427,1.88,428,2.268,429,2.561,430,2.051,431,3.016,432,4.967,433,3.016,434,3.184,435,2.877,436,4,437,2.877,438,2.877,439,2.758,442,2.877,443,2.877,444,2.877,445,4.528,446,3.184,447,3.016,448,3.593,449,2.561,450,2.561,454,2.101,456,1.961,457,2.051,459,3.393,460,3.184,461,3.016,462,3.193,463,2.877,466,3.393,467,3.393,468,3.714,469,2.877,470,3.501,471,3.501,472,4.173,474,4.173,475,2.877,476,2.845,480,3.016,603,3.047,957,3.714,3066,2.654,3068,2.877,3069,2.877,3082,4.967,3083,3.184,3085,3.184,3102,4.922,3103,4.1,3104,4.1,3105,5.433,3106,4.1,3107,4.1,3108,4.1,3109,4.1,3110,4.1,3111,4.1,3112,4.1,3113,4.1,3114,4.1,3115,4.1,3116,5.946,3117,4.1,3118,4.1]],["title/classes/KeyringsCreateCommand.html",[0,0.226,3087,3.974]],["body/classes/KeyringsCreateCommand.html",[0,0.339,2,0.715,3,0.099,4,0.083,5,0.088,7,0.293,9,1.426,11,0.771,12,3.765,15,1.939,18,0.468,20,1.578,21,0.005,22,1.624,23,0.309,29,0.218,30,2.062,37,0.165,39,1.654,40,0.771,42,2.472,43,2.318,44,2.693,45,3.439,46,3.615,53,1.604,55,0.568,56,1.056,58,0.003,59,0.003,65,1.086,72,2.318,74,1.856,77,1.578,78,1.948,94,1.144,112,1.275,122,1.367,170,1.575,186,3.319,200,2.128,209,3.365,219,1.348,243,2.025,244,2.143,246,2.099,249,2.024,308,3.414,313,2.492,315,4.344,316,4.973,317,5.814,318,4.71,319,4.71,320,4.344,321,3.039,322,3.039,328,4.71,329,1.58,331,5.393,332,3.211,333,4.344,334,4.344,335,4.973,339,3.818,340,4.71,341,2.742,342,3.414,343,3.272,345,3.039,346,3.149,348,2.767,352,2.327,380,4.71,381,3.149,384,3.414,600,4.938,603,2.492,617,2.767,850,3.272,882,5.565,883,3.579,957,5.752,977,5.212,1021,3.778,1603,3.579,1604,3.579,3066,5.362,3078,4.026,3081,4.026,3082,3.149,3083,3.778,3084,3.579,3085,3.778,3086,4.026,3087,5.967,3088,5.555,3089,4.026,3090,4.026,3091,5.555,3092,4.026,3093,4.026,3094,5.555,3095,4.026,3096,4.026,3097,4.026,3098,4.026,3099,4.026,3100,5.555,3101,4.026,3119,4.865,3120,4.865]],["title/classes/KeyringsCreateDto.html",[0,0.226,3082,3.312]],["body/classes/KeyringsCreateDto.html",[0,0.375,2,0.874,3,0.121,4,0.102,5,0.108,7,0.358,8,0.869,11,1.094,18,0.648,21,0.005,22,1.471,23,0.446,29,0.201,32,1.177,37,0.164,40,0.871,55,0.759,58,0.004,59,0.004,65,1.375,87,2.387,122,1.671,127,1.588,272,2.081,275,2.595,277,3.007,278,1.625,351,4.367,357,2.191,484,4.392,492,5.648,502,3.716,503,3.85,505,4.463,508,4.135,513,3.048,514,3.048,516,4.253,603,4.355,1583,3.672,3068,5.965,3069,5.965,3082,5.501,3105,4.62,3121,5.331,3122,5.331,3123,5.331,3124,5.948,3125,5.948,3126,7.616,3127,5.948,3128,5.948,3129,5.331,3130,5.331]],["title/classes/KeyringsCreateQuestions.html",[0,0.226,1604,3.765]],["body/classes/KeyringsCreateQuestions.html",[0,0.345,2,0.739,3,0.102,4,0.086,5,0.091,7,0.302,9,1.473,11,0.578,12,3.528,15,1.452,18,0.35,20,1.182,21,0.005,22,1.679,23,0.231,29,0.22,30,2.13,37,0.167,39,1.709,40,0.805,42,2.528,43,2.371,44,2.754,45,3.517,46,3.697,53,1.657,55,0.508,56,1.091,58,0.003,59,0.003,65,1.111,72,2.358,74,1.888,77,1.614,78,1.614,94,1.182,112,1.317,122,1.412,127,0.858,170,1.596,186,3.376,200,1.901,209,3.145,219,1.392,243,2.071,244,2.214,246,2.135,249,2.091,305,4.504,308,4.817,313,2.575,315,4.442,316,5.059,317,4.817,318,4.817,319,4.817,320,4.442,321,3.139,322,3.139,328,4.817,329,1.632,331,3.527,332,3.283,333,4.442,334,4.442,335,4.442,339,3.904,340,4.817,341,2.804,342,3.527,343,3.381,345,3.139,346,3.253,348,2.859,352,2.404,600,5.05,603,2.575,617,2.859,850,3.381,882,4.723,883,3.698,957,4.882,977,5.33,1021,3.903,1603,3.698,1604,5.05,3066,5.436,3078,4.16,3081,4.16,3082,3.253,3083,3.903,3084,3.698,3085,3.903,3086,5.681,3087,5.33,3088,5.681,3089,4.16,3090,4.16,3091,5.681,3092,4.16,3093,4.16,3094,5.681,3095,4.16,3096,4.16,3097,4.16,3098,4.16,3099,4.16,3100,5.681,3101,4.16,3131,6.863,3132,5.026]],["title/classes/KeyringsDto.html",[0,0.226,3105,3.974]],["body/classes/KeyringsDto.html",[0,0.368,2,0.843,3,0.117,4,0.098,5,0.104,7,0.345,8,0.848,11,1.083,18,0.657,21,0.005,22,1.446,23,0.448,29,0.197,32,1.134,37,0.161,40,0.882,55,0.76,58,0.004,59,0.004,65,1.351,87,3.687,122,2.346,127,1.61,272,2.044,275,2.559,277,2.965,278,1.566,351,4.264,357,2.112,484,4.084,492,5.515,502,3.582,503,3.711,505,4.385,508,4.037,513,2.938,514,2.938,516,4.179,519,4.453,603,4.279,1583,3.586,3068,5.86,3069,5.86,3082,6.215,3105,5.821,3121,5.138,3122,5.138,3123,5.138,3126,7.483,3129,5.138,3130,5.138,3133,5.734,3134,5.734,3135,5.734,3136,5.734,3137,5.734]],["title/modules/KeyringsModule.html",[166,1.59,926,3.442]],["body/modules/KeyringsModule.html",[0,0.295,3,0.136,4,0.114,5,0.122,21,0.005,22,1.16,29,0.228,36,1.129,37,0.144,58,0.004,59,0.004,132,1.964,166,2.789,387,2.609,531,2.895,532,3.011,533,3.138,534,3.138,535,3.138,536,4.118,537,4.205,541,3.875,542,2.84,543,3.138,545,3.925,549,3.353,550,4.186,552,3.812,926,6.691,957,6.429,3066,4.337,3076,7.416,3084,4.931,3102,7.432,3138,6.005,3139,6.005,3140,6.005,3141,6.701,3142,6.701,3143,6.701,3144,6.701]],["title/injectables/KeyringsService.html",[136,1.341,957,3.196]],["body/injectables/KeyringsService.html",[0,0.145,3,0.067,4,0.056,5,0.06,7,0.198,8,0.572,9,2.529,10,2.089,11,1.079,12,2.464,15,0.952,18,0.66,20,2.294,21,0.005,22,1.551,23,0.456,25,4.363,29,0.199,36,0.555,37,0.071,49,2.652,55,0.722,56,0.715,58,0.003,59,0.003,65,0.817,66,3.294,72,1.524,74,1.22,75,2.588,76,2.588,77,1.188,78,2.294,87,3.767,88,1.774,89,1.688,90,1.774,91,1.774,92,1.774,94,2.071,119,1.822,121,1.396,122,1.725,124,2.985,132,0.966,134,0.852,136,1.324,137,1.396,162,3.827,170,0.626,179,5.81,181,4.302,185,2.721,186,2.653,187,2.416,188,3.052,189,2.959,190,2.959,191,2.794,192,3.155,193,3.833,194,3.052,195,2.132,196,3.477,198,2.058,200,2.482,207,1.991,208,5.159,209,3.671,210,2.058,211,4.744,212,4,213,1.991,214,4.161,216,1.908,217,1.991,218,5.546,219,2.715,220,2.058,221,1.991,222,3.957,223,5.159,224,2.058,225,1.991,226,2.058,227,2.058,228,2.058,229,1.991,230,2.058,231,2.058,232,2.058,233,1.774,234,4.161,235,2.132,236,2.058,237,2.058,238,1.991,239,2.132,243,0.994,246,0.9,372,1.991,563,2.727,564,2.952,603,2.588,957,3.155,3066,2.132,3082,4.457,3084,2.424,3145,3.294,3146,3.294,3147,3.294,3148,3.294,3149,3.294,3150,3.294,3151,3.294]],["title/injectables/LocalStrategy.html",[136,1.341,928,3.974]],["body/injectables/LocalStrategy.html",[0,0.25,3,0.115,4,0.097,5,0.103,7,0.341,10,1.93,11,0.856,15,1.64,18,0.519,20,1.751,21,0.005,22,1.289,23,0.342,29,0.226,36,0.956,37,0.122,40,0.834,42,2.091,43,1.96,44,2.277,55,0.677,58,0.004,59,0.004,65,1.205,74,1.371,77,1.751,78,1.954,94,1.335,112,2.178,136,1.951,137,2.406,139,4.22,152,2.024,157,4.414,158,6.162,164,3.228,165,4.176,170,1.079,200,2.062,209,2.788,243,1.712,246,1.55,272,1.39,310,3.885,313,4.519,332,2.715,341,3.041,375,3.818,456,2.715,761,5.008,776,5.782,827,3.43,852,5.478,882,5.33,883,4.176,884,3.818,888,4.407,890,4.176,928,5.782,987,4.697,988,5.782,1102,3.43,1633,4.176,1853,4.361,2733,5.831,3042,6.672,3043,5.086,3045,5.086,3046,6.877,3050,5.086,3052,5.086,3058,5.086,3061,5.086,3063,6.672,3065,5.086,3152,5.675,3153,5.675,3154,5.675,3155,8.309,3156,5.675,3157,7.445,3158,5.675,3159,5.675,3160,5.675,3161,5.675,3162,5.675,3163,5.675,3164,5.675]],["title/classes/Logger.html",[0,0.226,10,1.74]],["body/classes/Logger.html",[0,0.241,2,0.803,3,0.111,4,0.093,5,0.099,7,0.329,8,0.822,10,2.955,11,0.998,18,0.606,21,0.005,23,0.449,24,4.942,29,0.205,37,0.186,40,0.888,55,0.74,58,0.004,59,0.004,65,0.884,112,1.431,119,4.015,121,3.456,127,1.484,128,4.068,131,4.235,132,1.601,134,1.412,162,2.116,170,1.38,216,2.533,219,1.513,267,2.358,268,2.868,272,2.127,279,3.683,286,2.648,289,3.148,292,2.719,293,2.613,329,2.358,332,3.473,372,3.3,376,3.412,1102,3.3,1105,4.019,1759,6.748,1764,7.306,1853,4.252,2925,6.332,2932,5.637,3165,4.894,3166,8.688,3167,5.462,3168,5.462,3169,5.462,3170,5.462,3171,5.462,3172,7.259,3173,4.894,3174,5.462,3175,4.894,3176,5.462,3177,4.894,3178,5.462,3179,5.462,3180,5.462,3181,5.462]],["title/controllers/LoggerController.html",[385,1.458,3182,4.235]],["body/controllers/LoggerController.html",[0,0.33,1,4.142,3,0.152,4,0.128,5,0.136,10,2.545,21,0.005,29,0.223,36,1.261,37,0.16,58,0.004,59,0.004,65,1.432,74,1.807,243,2.257,385,2.132,387,2.359,389,3.171,430,3.744,456,3.58,457,3.744,3182,7.322,3183,7.482,3184,6.509,3185,6.705,3186,7.482]],["title/modules/LoggerModule.html",[166,1.59,1739,3.765]],["body/modules/LoggerModule.html",[0,0.302,3,0.139,4,0.117,5,0.124,10,2.33,21,0.005,22,1.186,29,0.229,36,1.155,37,0.147,58,0.004,59,0.004,132,2.009,166,2.817,387,2.645,531,2.96,532,3.079,533,3.209,534,3.209,535,3.209,536,4.159,537,3.209,541,3.929,542,2.904,543,3.209,545,4.014,549,3.429,550,4.28,552,3.898,1739,7.26,3175,7.519,3182,7.506,3184,7.26,3185,6.141,3187,6.141,3188,6.141,3189,6.852,3190,6.141,3191,6.852,3192,6.852]],["title/injectables/LoggerService.html",[136,1.341,3184,3.765]],["body/injectables/LoggerService.html",[0,0.152,3,0.07,4,0.059,5,0.062,7,0.207,8,0.591,9,2.561,10,2.395,11,1.088,12,2.531,15,0.994,18,0.665,20,2.308,21,0.005,22,1.567,23,0.458,25,4.39,29,0.179,36,0.58,37,0.074,49,2.741,55,0.723,58,0.003,59,0.003,65,0.845,66,3.369,72,1.575,74,1.261,75,2.675,76,2.675,77,1.228,78,2.298,87,3.798,88,1.853,89,1.763,90,1.853,91,1.853,92,1.853,94,2.095,122,1.772,124,3.036,132,1.008,134,0.889,136,1.368,137,1.458,162,3.848,179,5.86,181,4.399,185,2.812,186,2.255,187,2.498,188,3.155,189,3.058,190,3.058,191,2.888,192,3.261,193,3.898,194,3.155,195,2.227,196,3.545,198,2.149,200,2.468,207,2.079,208,5.218,209,3.659,210,2.149,211,4.798,212,4.078,213,2.079,214,3.155,215,2.314,216,1.069,217,2.079,218,5.588,219,2.731,220,2.149,221,2.079,222,4.006,223,5.218,224,2.149,225,2.079,226,2.149,227,2.149,228,2.149,229,2.079,230,2.149,231,2.149,232,2.149,233,1.853,234,4.256,235,2.227,236,2.149,237,2.149,238,2.079,239,2.227,243,1.038,3184,3.841,3190,3.083,3193,3.44,3194,3.44,3195,3.44]],["title/classes/MailSettingsDto.html",[0,0.226,3196,3.974]],["body/classes/MailSettingsDto.html",[0,0.336,2,0.865,3,0.12,4,0.1,5,0.107,7,0.354,8,0.863,18,0.624,21,0.005,23,0.465,29,0.18,32,1.164,37,0.126,40,0.912,55,0.748,58,0.004,59,0.004,127,1.528,219,1.63,265,4.607,267,3.181,272,1.441,275,2.677,277,2.832,278,1.608,279,3.791,286,1.912,310,4.081,313,4.747,507,5.129,585,5.282,772,5.274,974,2.361,1396,5.129,1649,6.999,3196,5.92,3197,5.886,3198,7.624,3199,5.886,3200,7.624,3201,5.886,3202,7.624,3203,8.456,3204,5.886,3205,7.624,3206,5.886,3207,5.886,3208,7.624,3209,6.832,3210,5.886,3211,7.624,3212,5.886,3213,7.624,3214,5.886]],["title/controllers/MailadmController.html",[385,1.458,3215,4.235]],["body/controllers/MailadmController.html",[0,0.252,3,0.116,4,0.097,5,0.104,7,0.343,10,1.94,11,0.858,18,0.521,20,1.757,21,0.005,22,1.293,23,0.344,29,0.217,32,1.128,36,0.961,37,0.122,55,0.709,56,1.621,58,0.004,59,0.004,77,1.757,78,2.213,94,1.757,127,1.276,152,2.034,170,1.42,200,2.448,216,2.745,219,2.069,246,2.041,256,4.835,264,3.356,385,1.625,387,1.798,389,2.418,394,3.918,395,3.985,399,4.309,422,2.373,425,2.79,427,2.616,456,2.729,470,3.738,471,3.738,638,4.608,640,5.203,661,4.024,738,5.391,739,4.197,836,3.156,1164,4.323,1352,5.243,1358,6.469,1379,4.722,1394,3.828,1398,4.835,1490,5.496,3196,6.863,3215,6.183,3216,5.704,3217,5.704,3218,5.112,3219,5.112,3220,5.496,3221,5.704,3222,5.704,3223,5.112,3224,5.112,3225,5.112,3226,5.704,3227,5.112,3228,5.704,3229,4.43,3230,5.112,3231,5.112,3232,5.112,3233,5.112,3234,5.704]],["title/injectables/MailadmService.html",[136,1.341,738,3.312]],["body/injectables/MailadmService.html",[0,0.136,3,0.063,4,0.053,5,0.056,7,0.185,8,0.542,9,2.763,10,2.002,11,1.083,12,2.362,18,0.674,20,2.32,21,0.005,22,1.569,23,0.458,25,4.318,29,0.139,36,0.519,37,0.066,40,0.639,49,2.517,53,1.015,55,0.73,56,1.278,58,0.002,59,0.002,65,0.776,66,3.178,72,1.446,74,1.158,75,2.456,76,2.456,77,1.127,78,2.364,87,3.834,88,1.658,89,1.577,90,1.658,91,1.658,92,1.658,94,2.179,122,1.653,124,2.904,136,1.256,137,1.305,162,3.794,170,0.585,176,5.857,179,5.501,180,3.967,181,2.994,182,4.3,183,3.967,184,3.967,185,2.582,186,2.071,187,2.293,188,2.896,189,2.808,190,2.808,191,2.651,192,2.994,193,3.729,194,2.896,196,1.441,198,1.923,200,2.63,201,2.548,203,3.967,204,2.548,205,1.857,207,1.86,208,5.064,209,3.599,210,1.923,211,4.743,212,3.878,213,1.86,214,2.896,215,2.071,216,1.828,217,1.86,218,5.477,219,2.689,220,1.923,221,1.86,222,3.878,223,5.064,224,1.923,225,1.86,226,1.923,227,1.923,228,1.923,229,1.86,230,1.923,231,1.923,232,1.923,233,1.658,234,4.014,235,1.993,236,1.923,237,1.923,246,1.309,738,3.102,752,2.896,3196,5.59,3227,2.759,3235,3.078,3236,6.643,3237,4.793,3238,3.078,3239,3.078,3240,4.793,3241,3.078,3242,3.078,3243,3.078,3244,3.078,3245,3.078,3246,3.078,3247,3.078,3248,3.078]],["title/controllers/ManagementController.html",[385,1.458,3249,4.235]],["body/controllers/ManagementController.html",[0,0.332,3,0.153,4,0.129,5,0.137,21,0.005,29,0.223,32,1.49,36,1.27,37,0.161,55,0.557,58,0.004,59,0.004,74,1.82,385,2.146,387,2.375,389,3.193,427,3.454,456,3.604,457,3.77,3249,7.351,3250,7.533,3251,6.75,3252,6.535,3253,6.75,3254,7.533,3255,7.533]],["title/modules/ManagementModule.html",[166,1.59,707,3.765]],["body/modules/ManagementModule.html",[0,0.278,3,0.128,4,0.108,5,0.114,18,0.44,21,0.005,29,0.229,30,2.674,36,1.063,37,0.135,55,0.467,56,1.369,58,0.004,59,0.004,77,1.483,94,1.483,166,2.851,387,2.512,454,4.083,531,2.725,532,2.834,533,2.954,534,2.954,535,2.954,536,4.006,537,2.954,541,3.732,542,2.674,543,2.954,549,4.372,707,7.429,996,3.085,1262,6.257,1741,6.785,1743,6.785,1744,5.221,1750,5.221,1751,5.221,1752,5.221,3249,7.231,3251,5.653,3252,7.113,3253,5.653,3256,5.653,3257,5.653,3258,5.653,3259,7.113,3260,6.308,3261,6.308,3262,6.308,3263,5.653,3264,6.308]],["title/injectables/ManagementService.html",[136,1.341,3252,3.765]],["body/injectables/ManagementService.html",[0,0.341,3,0.157,4,0.132,5,0.14,15,2.758,18,0.539,21,0.005,29,0.183,36,1.302,37,0.166,55,0.667,58,0.004,59,0.004,136,2.362,137,3.274,3252,6.632,3265,7.725,3266,7.725]],["title/classes/MetadataDto.html",[0,0.226,2092,3.196]],["body/classes/MetadataDto.html",[0,0.405,2,1.037,3,0.143,4,0.12,5,0.128,7,0.424,8,0.967,11,0.981,18,0.492,21,0.005,23,0.439,29,0.226,32,1.396,37,0.151,55,0.679,58,0.004,59,0.004,123,4.596,127,1.205,275,2.468,278,1.927,506,3.999,509,3.553,510,3.17,1758,4.177,2092,5.335,2106,7.31,2107,5.84,3267,7.055,3268,7.055,3269,7.055]],["title/classes/MetadataPart.html",[0,0.226,126,4.235]],["body/classes/MetadataPart.html",[0,0.281,2,0.936,3,0.129,4,0.109,5,0.116,7,0.383,8,0.907,18,0.642,21,0.005,23,0.458,29,0.19,37,0.172,40,0.883,55,0.756,58,0.004,59,0.004,65,1.031,112,1.669,121,3.398,122,1.789,126,6.636,127,1.573,128,4.312,129,5.707,131,4.445,132,1.867,134,1.646,170,1.211,292,3.003,293,3.047,1583,4.76,2896,6.456,2944,6.456,3270,6.369,3271,7.863,3272,7.863,3273,6.369,3274,6.369,3275,6.369,3276,6.369,3277,6.369]],["title/classes/MetadataPartDto.html",[0,0.226,2106,3.765]],["body/classes/MetadataPartDto.html",[0,0.358,2,0.954,3,0.132,4,0.111,5,0.118,7,0.391,8,0.918,11,1.148,18,0.647,21,0.005,23,0.427,29,0.192,32,1.284,37,0.139,40,0.823,55,0.758,58,0.004,59,0.004,127,1.584,275,2.759,277,2.964,278,1.774,485,5.695,509,3.972,1583,4.437,2106,5.971,2896,6.513,2944,6.513,3271,7.933,3272,7.933,3278,6.492,3279,7.272,3280,6.492,3281,6.492,3282,6.492,3283,6.492,3284,7.933]],["title/modules/MigrationsModule.html",[166,1.59,708,3.765]],["body/modules/MigrationsModule.html",[0,0.307,3,0.142,4,0.119,5,0.126,18,0.486,21,0.005,29,0.2,36,1.174,37,0.149,55,0.515,56,1.512,58,0.004,59,0.004,77,1.638,78,1.993,94,1.638,166,2.952,200,2.348,454,4.343,531,3.01,532,3.13,533,3.262,534,3.262,535,3.262,536,4.189,537,3.262,541,3.969,542,2.953,543,3.262,708,7.289,742,7.289,1741,7.094,1743,5.41,3285,6.243,3286,6.243,3287,6.967,3288,6.967,3289,6.967]],["title/injectables/MigrationsService.html",[136,1.341,742,3.765]],["body/injectables/MigrationsService.html",[0,0.142,3,0.066,4,0.055,5,0.166,7,0.194,8,0.562,9,2.277,10,2.316,11,0.696,12,3.248,15,1.436,18,0.598,20,1.425,21,0.005,22,1.049,23,0.313,29,0.207,30,1.367,36,0.543,37,0.106,39,1.096,40,0.742,41,1.456,53,2.425,55,0.544,56,1.861,58,0.002,59,0.002,67,1.834,68,6.033,70,3.182,72,2.886,74,1.877,77,1.168,78,2.199,83,4.253,94,1.729,103,1.889,106,1.652,112,0.845,116,3.873,132,0.945,134,0.833,136,1.302,137,1.367,170,1.741,244,3.239,246,2.53,249,3.06,250,3.002,257,1.317,272,0.789,286,2.212,339,2.826,341,2.476,343,4.077,354,1.367,476,3.717,589,2.169,624,2.087,659,2.669,742,3.655,751,2.014,787,4.452,830,2.372,831,2.263,877,1.693,878,2.889,974,2.432,996,1.577,1013,2.889,1102,1.948,1155,4.112,1564,2.504,1583,1.542,1586,2.504,1677,2.669,1822,4.452,1823,2.889,1825,4.112,1829,4.452,1836,2.263,1888,3.103,2048,3.858,2412,3.858,2531,6.033,2548,2.504,2845,2.889,3046,4.112,3290,3.224,3291,6.06,3292,8.358,3293,6.809,3294,6.809,3295,4.968,3296,4.968,3297,4.968,3298,3.224,3299,3.224,3300,4.968,3301,3.224,3302,8.358,3303,4.968,3304,7.769,3305,3.224,3306,4.968,3307,3.224,3308,3.224,3309,4.968,3310,3.224,3311,4.452,3312,4.968,3313,3.224,3314,3.224,3315,9.502,3316,3.224,3317,3.224,3318,3.224,3319,3.224,3320,3.224,3321,4.968,3322,3.224,3323,3.224,3324,3.224,3325,3.224,3326,3.224,3327,3.224,3328,3.224,3329,3.224,3330,3.224,3331,3.224,3332,3.224,3333,3.224,3334,3.224,3335,3.224,3336,3.224,3337,2.504,3338,4.968,3339,8.911,3340,3.224,3341,6.06,3342,3.224,3343,7.354,3344,3.224,3345,3.224,3346,3.224,3347,6.06,3348,3.224,3349,4.968,3350,4.968,3351,3.224,3352,3.224,3353,4.968,3354,3.224,3355,3.224,3356,3.224,3357,3.224,3358,3.224,3359,4.968,3360,3.224,3361,3.224,3362,7.769,3363,3.224,3364,3.224,3365,4.968,3366,3.224,3367,3.224,3368,3.224,3369,3.224,3370,3.224,3371,3.224,3372,3.224,3373,3.224,3374,3.224,3375,3.224,3376,4.968,3377,3.224,3378,4.968,3379,3.224,3380,3.224,3381,3.224,3382,3.224,3383,3.224,3384,2.669,3385,3.224,3386,4.968,3387,3.224,3388,4.968,3389,3.224,3390,3.224,3391,3.224,3392,3.224,3393,3.224,3394,3.224,3395,4.968,3396,3.224,3397,3.224]],["title/classes/MongoDbTestInstance.html",[0,0.226,3398,4.235]],["body/classes/MongoDbTestInstance.html",[0,0.261,2,0.871,3,0.12,4,0.101,5,0.108,7,0.357,8,0.867,11,0.681,18,0.663,20,1.801,21,0.005,22,1.326,23,0.413,29,0.181,37,0.127,39,2.016,40,0.753,56,1.287,58,0.004,59,0.004,77,1.801,78,2.38,94,2.109,116,4.826,134,1.532,170,1.613,211,3.193,246,2.644,292,3.359,589,3.987,599,4.361,691,4.361,798,3.837,1103,6.965,1897,4.361,2899,4.603,3398,6.339,3399,5.927,3400,7.603,3401,7.603,3402,8.037,3403,6.863,3404,8.037,3405,5.927,3406,7.603,3407,5.927,3408,5.927,3409,7.659,3410,5.927,3411,5.927,3412,5.927,3413,4.361,3414,5.312,3415,7.659,3416,5.927,3417,5.927,3418,5.927,3419,5.927,3420,5.927,3421,5.927,3422,5.927,3423,5.927,3424,7.659,3425,5.927,3426,5.927,3427,5.927]],["title/interfaces/MongoosePlugin.html",[38,1.479,717,3.765]],["body/interfaces/MongoosePlugin.html",[3,0.119,4,0.068,5,0.072,7,0.24,8,0.66,11,0.871,21,0.005,23,0.317,29,0.215,32,0.79,37,0.148,38,1.685,39,2.343,40,0.894,41,1.17,42,1.47,43,1.379,44,1.602,45,2.045,46,2.15,47,2.801,58,0.003,59,0.003,60,1.724,70,3.618,102,4.036,112,1.046,132,1.17,134,1.508,157,1.998,162,1.547,209,3.661,270,3.475,272,1.687,285,4.304,286,1.894,310,2.569,375,5.098,428,3.226,585,4.734,617,3.317,647,3.317,651,3.1,656,3.1,660,5.07,717,5.07,718,3.923,720,4.529,741,4.291,763,4.529,798,4.905,818,5.319,850,2.685,859,4.635,884,2.685,932,4.827,936,4.827,937,2.937,996,3.37,1005,6.968,1045,2.937,1095,2.937,1301,1.91,1336,4.529,1344,3.643,1411,4.529,1627,4.827,1628,3.577,1629,4.093,1630,5.226,1631,5.226,1632,5.703,1633,4.291,1634,5.226,1635,5.226,1636,5.226,1637,5.226,1638,4.827,1639,3.1,1640,4.093,1641,4.827,1642,4.827,1643,4.529,1644,5.226,1645,5.226,1646,5.226,1647,5.226,1648,6.175,1649,4.827,1650,4.827,1651,4.827,1652,4.827,1653,5.226,1654,3.577,1655,3.577,1656,3.577,1657,3.577,1658,3.577,1659,3.577,1660,3.577,1661,3.304,1662,3.577,1663,7.791,1664,3.577,1665,3.577,1666,3.577,1667,3.577,1668,3.577,1669,3.577,1670,3.577,1671,3.577,1672,3.577,1673,3.577,1674,3.577,1675,3.577,1676,3.577,1677,4.827,1678,5.226,1679,3.577,1680,3.577,1681,3.577,1682,3.577,1683,3.577,1684,3.577,1685,3.577,1686,3.577,1687,3.577,1688,3.577,1689,3.577,1690,3.577,1691,3.577,1692,3.577,1693,3.577,1694,3.577,1695,3.577,1696,3.577,1697,3.577,1698,3.577,1699,3.577,1700,3.577,1701,3.577,1702,3.304]],["title/classes/MongooseValidationFilter.html",[0,0.226,728,4.235]],["body/classes/MongooseValidationFilter.html",[0,0.314,2,0.779,3,0.108,4,0.09,5,0.096,7,0.319,9,2.353,10,1.801,11,0.817,18,0.496,20,1.672,21,0.005,22,1.231,23,0.327,29,0.203,36,0.893,37,0.113,39,1.801,42,1.951,43,1.83,44,2.125,55,0.594,56,1.15,58,0.004,59,0.004,67,4.045,77,1.672,94,1.672,134,1.369,139,3.402,152,1.889,170,1.79,249,3.34,278,1.447,284,4.114,285,4.442,329,1.721,332,2.534,341,2.905,394,2.905,422,2.204,462,2.204,583,6.645,584,5.886,585,5.015,586,7.103,588,4.784,590,4.384,591,4.114,592,4.384,593,4.384,596,4.747,728,6.645,766,3.429,783,4.603,1002,4.114,1095,3.897,1204,5.907,1223,6.373,1286,3.717,1781,7.433,1799,4.384,1853,3.103,2405,5.233,2749,4.747,2815,4.747,2825,4.747,2855,4.747,3428,8.029,3429,7.112,3430,9.416,3431,9.571,3432,5.297,3433,7.112,3434,5.297,3435,5.297,3436,5.297,3437,5.297,3438,5.297,3439,5.297,3440,5.297,3441,5.297,3442,5.297,3443,5.297,3444,5.297,3445,5.297,3446,5.297,3447,5.297,3448,5.297,3449,5.297,3450,5.297,3451,5.297]],["title/classes/NotFoundDto.html",[0,0.226,3452,4.586]],["body/classes/NotFoundDto.html",[0,0.313,2,1.044,3,0.144,4,0.121,5,0.129,7,0.427,8,0.97,18,0.598,21,0.005,23,0.394,29,0.203,32,1.404,36,1.197,37,0.152,40,0.761,55,0.736,58,0.004,59,0.004,127,1.465,219,1.967,275,2.764,329,2.992,422,3.832,462,3.832,1871,5.877,1874,3.127,3452,7.683,3453,9.211,3454,7.1,3455,7.1,3456,7.1,3457,7.1]],["title/injectables/ObjectIdValidationPipe.html",[136,1.341,445,3.312]],["body/injectables/ObjectIdValidationPipe.html",[0,0.297,3,0.137,4,0.115,5,0.122,7,0.405,11,0.773,18,0.469,20,1.582,21,0.005,22,1.165,23,0.309,29,0.196,36,1.134,37,0.144,40,0.798,42,3.056,43,2.324,53,2.736,55,0.665,56,1.46,58,0.004,59,0.004,67,3.827,77,1.951,94,1.582,106,3.447,124,3.674,133,2.799,134,1.739,136,2.174,137,2.852,263,3.804,273,4.722,445,5.37,633,4.203,680,5.569,974,2.7,1771,5.569,1773,6.443,1777,6.867,1778,7.773,3458,8.297,3459,8.996,3460,6.728,3461,8.297,3462,6.728,3463,6.728,3464,6.728]],["title/classes/PaginatedFilterDto.html",[0,0.226,2687,4.235]],["body/classes/PaginatedFilterDto.html",[0,0.341,2,1.136,3,0.157,4,0.132,5,0.14,18,0.539,21,0.005,37,0.166,39,3.065,40,0.8,42,2.846,43,2.668,44,3.099,58,0.004,59,0.004,61,5.684,332,3.696,2687,7.461,3465,8.077,3466,7.725,3467,7.725]],["title/classes/PaginatedResponseDto.html",[0,0.226,33,3.974]],["body/classes/PaginatedResponseDto.html",[0,0.302,2,1.007,3,0.139,4,0.117,5,0.124,7,0.412,8,0.95,18,0.632,21,0.005,23,0.417,29,0.198,32,1.355,33,6.516,36,1.155,37,0.147,41,2.459,55,0.752,58,0.004,59,0.004,127,1.549,216,2.817,219,1.898,275,2.851,422,3.773,462,3.773,468,5.665,471,3.429,1871,5.672,1874,3.018,3465,8.469,3468,6.852,3469,8.39,3470,6.852,3471,6.852,3472,6.852]],["title/controllers/PasswdController.html",[385,1.458,3473,4.235]],["body/controllers/PasswdController.html",[0,0.116,3,0.053,4,0.045,5,0.048,7,0.158,10,1.437,11,0.894,15,0.759,18,0.543,20,1.83,21,0.005,22,1.347,23,0.358,29,0.206,32,0.519,36,0.442,37,0.056,53,0.866,55,0.711,56,1.79,58,0.002,59,0.002,72,1.6,74,0.634,77,0.994,78,2.251,94,1.83,121,1.113,127,1.329,134,0.679,152,0.936,165,3.902,170,1.702,200,2.508,211,2.276,216,2.667,219,2.073,244,1.156,246,2.126,249,1.092,250,1.587,253,2.966,264,3.497,267,1.373,306,2.165,310,2.336,329,2.528,385,0.748,387,0.828,389,1.113,392,2.639,394,3.929,395,4.174,399,4.389,411,1.64,422,1.092,425,1.284,427,1.204,462,1.092,468,2.639,470,3.895,471,3.895,476,1.256,542,2.248,603,1.345,638,4.444,640,4.861,661,4.192,761,3.567,766,3.432,767,4.118,783,5.557,836,4.444,862,3.929,863,5.03,869,3.723,875,3.87,876,2.022,1128,1.414,1132,4.088,1155,5.03,1162,3.787,1164,2.067,1166,2.067,1230,4.265,1273,4.472,1294,2.173,1295,3.498,1296,4.472,1297,2.173,1301,1.256,1304,4.472,1305,4.389,1306,2.173,1307,4.472,1308,2.173,1309,2.173,1310,3.722,1311,2.039,1314,4.472,1315,2.173,1318,4.472,1319,2.173,1327,3.902,1339,6.403,1340,5.787,1343,3.56,1345,3.796,1352,4.995,1359,2.039,1376,2.173,1388,2.966,1392,4.72,1393,3.498,1394,2.165,1395,2.966,1396,2.843,1398,3.934,1420,2.843,1423,3.498,1429,2.966,1430,2.276,1436,3.282,1447,3.282,1457,3.498,1491,2.219,1544,2.173,1548,3.498,1553,4.72,1554,2.966,1555,3.432,1858,2.353,2286,2.039,2416,3.282,2446,2.353,2747,2.353,3220,3.109,3473,3.498,3474,2.626,3475,4.226,3476,3.787,3477,4.226,3478,3.787,3479,4.226,3480,2.626,3481,2.626,3482,5.237,3483,7.117,3484,4.226,3485,4.226,3486,2.626,3487,2.353,3488,2.353,3489,2.626,3490,2.626,3491,2.626,3492,2.626,3493,5.446,3494,4.226,3495,2.626,3496,2.626,3497,2.626,3498,2.626,3499,2.626,3500,2.626,3501,2.626,3502,2.626,3503,2.626,3504,2.626,3505,2.626,3506,2.626,3507,2.626,3508,4.226,3509,2.626,3510,2.626,3511,2.626,3512,4.226,3513,4.226,3514,4.226,3515,2.626,3516,2.353,3517,2.626,3518,2.626,3519,2.626,3520,2.626,3521,2.626,3522,2.626,3523,2.626,3524,2.626,3525,5.303,3526,5.303,3527,2.626,3528,2.626,3529,2.626,3530,2.626,3531,2.626,3532,2.626,3533,2.626,3534,2.626,3535,2.626,3536,2.353,3537,2.626,3538,2.353,3539,2.626,3540,2.626,3541,2.626,3542,2.626,3543,4.226,3544,4.226,3545,4.226,3546,4.226,3547,4.226,3548,2.626,3549,2.626,3550,2.626,3551,2.626,3552,2.626,3553,2.626,3554,2.626,3555,2.626,3556,2.626,3557,2.626,3558,2.626]],["title/modules/PasswdModule.html",[166,1.59,3259,3.765]],["body/modules/PasswdModule.html",[0,0.291,3,0.134,4,0.113,5,0.12,21,0.005,29,0.231,36,1.114,37,0.142,58,0.004,59,0.004,166,2.772,387,2.587,531,2.855,532,2.969,533,3.094,534,3.094,535,3.094,536,4.092,537,3.094,541,3.842,542,2.801,543,3.094,549,4.106,709,6.864,733,5.922,1257,6.33,1262,6.33,1327,7.196,1608,5.47,3259,7.559,3263,5.922,3473,7.386,3516,5.922,3559,5.922,3560,5.922,3561,6.608,3562,6.608,3563,6.608]],["title/controllers/PasswdadmController.html",[385,1.458,3564,4.235]],["body/controllers/PasswdadmController.html",[0,0.249,3,0.115,4,0.096,5,0.102,7,0.339,10,1.917,11,0.852,18,0.517,20,1.743,21,0.005,22,1.283,23,0.341,29,0.216,32,1.115,36,0.95,37,0.121,55,0.707,56,1.609,58,0.004,59,0.004,77,1.743,78,2.206,94,1.743,127,1.266,152,2.01,170,1.409,200,2.437,216,2.733,219,2.053,246,2.025,264,3.33,385,1.606,387,1.777,389,2.389,394,3.906,395,3.962,399,4.297,422,2.345,425,2.757,427,2.585,456,2.697,470,3.709,471,3.709,638,4.581,640,5.173,661,3.993,875,3.832,876,4.209,1310,5.812,1339,5.756,1340,3.956,1359,4.378,1452,7.281,1453,4.666,1490,5.454,3220,5.454,3229,4.378,3476,6.642,3487,5.051,3488,5.051,3536,5.051,3538,5.051,3564,6.135,3565,5.637,3566,5.637,3567,7.412,3568,5.637,3569,5.637,3570,5.637,3571,7.281,3572,5.637,3573,5.637,3574,5.637,3575,5.637,3576,5.637,3577,5.637,3578,5.637,3579,5.637,3580,5.637,3581,5.637]],["title/classes/PasswordPoliciesDto.html",[0,0.226,3571,4.235]],["body/classes/PasswordPoliciesDto.html",[0,0.211,2,0.453,3,0.063,4,0.053,5,0.056,7,0.185,8,0.542,18,0.639,21,0.005,23,0.47,29,0.113,32,0.609,37,0.066,40,0.767,41,2.992,55,0.755,58,0.002,59,0.002,112,1.256,127,1.567,257,3.819,265,2.896,267,3.225,270,3.775,271,4.295,272,1.867,275,2.677,276,3.256,277,1.971,278,0.841,279,3.887,286,2.979,306,3.404,310,3.626,329,2.158,542,2.816,652,4.888,831,3.364,838,2.265,862,2.344,863,3.967,869,2.293,875,3.363,877,3.488,974,3.68,1338,3.779,1340,3.364,1342,2.896,1343,2.808,1344,2.994,1345,2.994,1352,4.662,1394,3.404,1398,4.3,1447,3.722,1524,3.967,2040,4.131,2145,4.918,2812,5.159,2891,6.999,3337,3.722,3571,3.967,3582,9.266,3583,3.078,3584,5.886,3585,5.886,3586,5.886,3587,5.886,3588,5.886,3589,5.886,3590,5.886,3591,5.886,3592,5.886,3593,5.886,3594,5.886,3595,5.886,3596,5.886,3597,4.793,3598,4.793,3599,4.793,3600,3.078,3601,4.793,3602,6.643,3603,3.078,3604,6.643,3605,6.643,3606,6.643,3607,5.953,3608,4.793,3609,4.793,3610,3.078,3611,8.945,3612,8.232,3613,6.643,3614,4.295,3615,3.078,3616,4.793,3617,3.078,3618,4.793,3619,4.793,3620,3.078,3621,4.295,3622,3.078,3623,6.643,3624,6.643,3625,3.078,3626,4.793,3627,3.078,3628,6.643,3629,4.793,3630,4.793,3631,4.295,3632,3.078,3633,4.793,3634,3.078,3635,4.793,3636,4.295,3637,4.793,3638,4.793,3639,3.967,3640,4.793,3641,3.078,3642,4.793,3643,3.967,3644,4.793,3645,4.793,3646,3.078,3647,6.643,3648,3.078]],["title/interfaces/RawBodyBufferOptions.html",[38,1.479,3649,4.586]],["body/interfaces/RawBodyBufferOptions.html",[3,0.142,4,0.119,5,0.127,7,0.42,8,0.96,11,1.139,21,0.005,23,0.421,29,0.165,37,0.182,38,2.017,40,0.905,56,1.515,58,0.004,59,0.004,60,3.016,272,1.709,395,4.06,1102,4.219,1642,5.778,1643,7.697,3649,8.194,3650,6.981,3651,6.981,3652,9.512,3653,9.512,3654,6.256,3655,6.981,3656,6.981,3657,8.486,3658,6.981,3659,6.981]],["title/classes/ResetByCodeDto.html",[0,0.226,1307,3.765]],["body/classes/ResetByCodeDto.html",[0,0.354,2,0.936,3,0.129,4,0.109,5,0.116,7,0.383,8,0.907,18,0.612,21,0.005,23,0.404,29,0.19,32,1.26,37,0.136,40,0.817,41,2.35,53,2.644,55,0.742,58,0.004,59,0.004,127,1.499,265,4.845,267,3.148,275,2.661,277,2.938,278,1.74,279,3.719,306,4.108,310,3.531,603,4.864,1276,6.456,1307,5.899,1344,5.008,1345,5.929,2145,4.561,2891,5.271,3478,7.185,3660,8.253,3661,6.369,3662,7.185,3663,8.253,3664,6.369,3665,8.017,3666,6.369,3667,8.017,3668,6.369]],["title/classes/ResetPasswordDto.html",[0,0.226,1296,3.765]],["body/classes/ResetPasswordDto.html",[0,0.37,2,1.007,3,0.139,4,0.117,5,0.124,7,0.412,8,0.95,18,0.585,21,0.005,23,0.386,29,0.198,32,1.355,37,0.147,40,0.839,53,2.767,55,0.73,58,0.004,59,0.004,127,1.433,265,4.141,267,3.07,275,2.621,277,3.037,278,1.872,279,3.556,310,3.018,603,4.968,838,5.042,1275,6.141,1276,6.673,1278,7.519,1296,6.174,3660,8.127,3669,6.852,3670,6.852,3671,7.519,3672,6.852]],["title/classes/SecurityPart.html",[0,0.226,363,4.235]],["body/classes/SecurityPart.html",[0,0.254,2,0.846,3,0.117,4,0.098,5,0.104,7,0.346,8,0.85,11,1.12,18,0.658,21,0.005,23,0.464,29,0.178,37,0.161,40,0.913,55,0.763,58,0.004,59,0.004,65,0.931,112,2.192,121,3.184,122,1.616,127,1.612,128,4.418,131,4.5,132,1.687,134,1.487,170,1.094,219,2.456,270,4.066,286,2.88,292,2.814,293,2.753,363,6.218,364,5.156,3068,5.87,3673,5.754,3674,7.495,3675,7.495,3676,7.495,3677,7.495,3678,7.495,3679,5.754,3680,5.754,3681,5.754,3682,5.754,3683,5.754,3684,5.754,3685,5.754]],["title/classes/SecurityPartDTO.html",[0,0.226,494,3.591]],["body/classes/SecurityPartDTO.html",[0,0.332,2,0.847,3,0.117,4,0.098,5,0.105,7,0.347,8,0.851,11,1.143,18,0.658,21,0.005,23,0.453,29,0.178,32,1.14,37,0.123,40,0.899,55,0.763,58,0.004,59,0.004,127,1.612,219,2.319,270,3.449,272,2.05,275,2.778,276,4.16,277,3.161,278,1.574,485,5.278,490,4.77,494,5.278,509,3.927,515,4.908,516,4.189,3068,5.875,3674,7.502,3675,7.502,3676,7.502,3677,7.502,3678,7.502,3686,5.764,3687,8.371,3688,7.521,3689,5.764,3690,5.764,3691,5.764,3692,5.764,3693,5.764,3694,5.764,3695,5.764]],["title/interfaces/ServiceSchemaInterface.html",[38,1.479,3696,4.586]],["body/interfaces/ServiceSchemaInterface.html",[3,0.076,4,0.064,5,0.068,7,0.226,11,1.007,18,0.611,20,2.277,21,0.005,22,1.517,23,0.445,25,4.378,29,0.157,37,0.081,38,1.087,41,1.103,42,2.057,43,1.3,58,0.003,59,0.003,60,1.625,77,1.313,94,2.061,119,2.081,121,1.595,122,1.87,124,3.41,133,1.565,134,0.973,162,3.984,185,3.007,186,2.412,187,2.671,188,4.023,189,3.899,190,3.899,191,3.682,193,4.031,200,2.682,207,3.374,208,5.538,209,3.758,211,4.907,212,4.596,213,3.374,214,4.451,216,1.169,217,3.374,218,5.768,219,2.836,221,2.273,222,4.29,223,5.538,225,2.273,229,2.273,233,2.027,234,4.451,263,2.56,273,2.64,558,3.371,559,2.35,3413,4.108,3696,5.003,3697,3.762,3698,3.762,3699,3.762,3700,3.762,3701,3.762,3702,3.762,3703,3.762,3704,3.762,3705,3.762,3706,3.762,3707,5.583,3708,3.762,3709,3.762]],["title/classes/Settings.html",[0,0.226,240,3.591]],["body/classes/Settings.html",[0,0.295,2,0.983,3,0.136,4,0.114,5,0.121,7,0.402,8,0.936,18,0.576,20,2.11,21,0.005,22,1.553,23,0.443,29,0.195,37,0.192,40,0.832,58,0.004,59,0.004,65,1.082,112,1.753,119,4.572,121,2.835,127,1.412,128,3.87,131,4.201,132,1.96,170,1.271,205,3.631,219,1.853,240,5.801,259,5.535,272,2.294,286,3.044,289,2.995,292,3.096,293,3.199,360,5.56,372,4.041,376,4.177,3710,5.993,3711,6.688,3712,6.688,3713,5.993,3714,6.688]],["title/controllers/SettingsController.html",[385,1.458,3715,4.235]],["body/controllers/SettingsController.html",[0,0.332,3,0.153,4,0.129,5,0.137,21,0.005,29,0.223,32,1.49,36,1.27,37,0.161,55,0.557,58,0.004,59,0.004,74,1.82,240,5.287,385,2.146,387,2.375,389,3.193,427,3.454,456,3.604,457,3.77,3229,5.85,3715,7.351,3716,7.533,3717,6.535,3718,6.75,3719,7.533]],["title/modules/SettingsModule.html",[166,1.59,709,3.591]],["body/modules/SettingsModule.html",[0,0.241,3,0.111,4,0.093,5,0.099,18,0.381,21,0.005,22,0.946,29,0.236,30,2.315,36,0.92,37,0.117,55,0.404,56,1.186,58,0.004,59,0.004,77,1.284,94,1.284,132,1.601,166,2.699,240,5.094,241,4.521,259,6.008,387,2.288,454,3.719,531,2.359,532,2.454,533,2.557,534,2.557,535,2.557,536,3.739,537,3.818,541,3.399,542,2.315,543,2.557,545,3.199,549,3.632,550,3.412,552,3.107,709,7.127,738,6.473,739,4.019,996,2.671,1310,7.019,1311,4.242,1316,7.359,1317,4.242,1741,6.332,1743,6.332,1744,4.521,1750,4.521,1751,4.521,1752,4.521,3215,6.748,3564,6.748,3715,6.748,3717,6.842,3718,4.894,3720,4.894,3721,4.894,3722,4.894,3723,5.462,3724,6.748,3725,5.462,3726,5.462,3727,5.462,3728,5.462,3729,5.462,3730,5.462]],["title/injectables/SettingsService.html",[136,1.341,3717,3.765]],["body/injectables/SettingsService.html",[0,0.341,3,0.157,4,0.132,5,0.14,15,2.758,18,0.539,21,0.005,29,0.183,36,1.302,37,0.166,55,0.667,58,0.004,59,0.004,136,2.362,137,3.274,3717,6.632,3731,7.725,3732,7.725]],["title/injectables/ShutdownObserver.html",[136,1.341,710,3.974]],["body/injectables/ShutdownObserver.html",[0,0.282,3,0.13,4,0.109,5,0.116,7,0.385,8,0.911,11,0.736,18,0.613,20,1.506,21,0.005,22,1.109,23,0.37,29,0.19,36,1.079,37,0.137,53,2.112,55,0.718,58,0.004,59,0.004,67,3.644,72,2.654,77,1.892,78,2.069,94,1.892,136,2.109,137,2.715,200,2.229,246,1.75,286,2.081,341,2.617,599,5.92,710,6.249,974,2.57,1565,5.302,1853,4.714,2809,5.302,3733,6.405,3734,8.798,3735,8.046,3736,9.704,3737,8.046,3738,9.508,3739,6.405,3740,6.405,3741,6.405,3742,7.211,3743,6.405,3744,6.405,3745,5.74,3746,6.405,3747,6.405,3748,6.405]],["title/classes/SmsSettingsDto.html",[0,0.226,3749,4.235]],["body/classes/SmsSettingsDto.html",[0,0.317,2,0.792,3,0.11,4,0.092,5,0.098,7,0.324,8,0.814,18,0.628,21,0.005,23,0.466,29,0.17,32,1.066,37,0.116,40,0.914,55,0.75,58,0.004,59,0.004,127,1.538,265,5.442,267,3.193,275,2.677,277,3.102,278,1.473,279,3.817,286,1.751,310,3.967,585,5.06,974,2.163,1343,5.063,1344,4.495,1345,4.495,1388,6.066,1396,4.841,1650,7.454,1651,6.705,1652,6.705,1702,7.154,3209,6.449,3749,5.956,3750,5.391,3751,7.196,3752,7.196,3753,6.449,3754,5.391,3755,7.196,3756,7.745,3757,8.643,3758,5.391,3759,7.196,3760,5.391,3761,7.196,3762,6.449,3763,8.643,3764,7.196,3765,6.449,3766,6.449,3767,5.391,3768,7.196,3769,5.391]],["title/controllers/SmsadmController.html",[385,1.458,3724,4.235]],["body/controllers/SmsadmController.html",[0,0.252,3,0.116,4,0.097,5,0.104,7,0.343,10,1.94,11,0.858,18,0.521,20,1.757,21,0.005,22,1.293,23,0.344,29,0.217,32,1.128,36,0.961,37,0.122,55,0.709,56,1.621,58,0.004,59,0.004,77,1.757,78,2.213,94,1.757,127,1.276,152,2.034,170,1.42,200,2.448,216,2.745,219,2.069,246,2.041,256,4.835,264,3.356,385,1.625,387,1.798,389,2.418,394,3.918,395,3.985,399,4.309,422,2.373,425,2.79,427,2.616,456,2.729,470,3.738,471,3.738,638,4.608,640,5.203,661,4.024,1164,4.323,1316,6.129,1317,4.43,1344,3.563,1352,5.243,1358,6.469,1394,3.828,1398,4.835,1490,5.496,3218,5.112,3219,5.112,3220,5.496,3223,5.112,3224,5.112,3225,5.112,3229,4.43,3230,5.112,3231,5.112,3232,5.112,3233,5.112,3724,6.183,3749,7.315,3770,5.704,3771,5.704,3772,5.704,3773,5.704,3774,5.704,3775,5.704,3776,5.704,3777,5.704,3778,5.704]],["title/classes/StatePart.html",[0,0.226,366,4.235]],["body/classes/StatePart.html",[0,0.255,2,0.852,3,0.118,4,0.099,5,0.105,7,0.349,8,0.854,11,1.122,18,0.643,21,0.005,23,0.461,29,0.198,37,0.162,40,0.789,41,2.606,53,1.911,55,0.756,58,0.004,59,0.004,65,0.938,112,1.518,121,3.198,122,1.628,127,1.575,128,4.163,131,4.426,132,1.698,134,1.498,170,1.101,219,2.09,272,1.848,286,2.888,289,2.1,292,2.826,293,2.772,366,6.246,367,5.192,624,5.432,1322,3.75,1583,4.852,1874,3.324,1921,5.192,3069,5.89,3779,5.794,3780,7.52,3781,7.52,3782,7.52,3783,8.392,3784,5.794,3785,5.794,3786,5.794,3787,5.794,3788,5.794,3789,5.192,3790,5.794,3791,5.794,3792,5.794]],["title/classes/StatePartDTO.html",[0,0.226,497,3.765]],["body/classes/StatePartDTO.html",[0,0.349,2,0.919,3,0.127,4,0.107,5,0.113,7,0.376,8,0.897,11,1.139,18,0.658,21,0.005,23,0.434,29,0.187,32,1.236,37,0.134,40,0.703,41,2.322,55,0.763,58,0.004,59,0.004,127,1.612,275,2.787,277,2.653,278,1.707,485,4.386,497,5.829,505,4.16,509,3.927,624,5.63,1583,4.613,2145,4.506,3069,6.105,3279,7.795,3284,8.196,3780,7.795,3781,7.795,3782,7.795,3793,6.249,3794,6.249,3795,6.249,3796,6.249,3797,6.249,3798,6.249,3799,6.249]],["title/classes/SyncIdentitiesDto.html",[0,0.226,1179,4.235]],["body/classes/SyncIdentitiesDto.html",[0,0.385,2,1.078,3,0.149,4,0.125,5,0.133,7,0.441,8,0.989,18,0.511,21,0.005,23,0.402,29,0.207,32,1.451,37,0.157,40,0.776,55,0.691,58,0.004,59,0.004,127,1.253,275,2.526,278,2.004,288,5.121,515,4.836,973,5.313,1179,7.236,1767,6.572,1768,6.572,1769,6.572,3800,8.742]],["title/classes/Tasks.html",[0,0.226,3801,3.765]],["body/classes/Tasks.html",[0,0.307,2,1.024,3,0.142,4,0.119,5,0.126,7,0.419,8,0.959,11,0.974,18,0.486,21,0.005,23,0.42,29,0.216,37,0.196,55,0.676,58,0.004,59,0.004,65,1.127,112,1.826,119,4.689,121,3.592,124,3.479,127,1.19,128,3.262,131,3.969,132,2.042,133,2.898,134,1.801,170,1.324,219,1.93,292,3.174,293,3.333,372,4.21,376,4.352,1165,5.706,3801,6.721,3802,6.243,3803,6.967,3804,6.243,3805,6.243,3806,6.967]],["title/controllers/TasksController.html",[385,1.458,3807,4.235]],["body/controllers/TasksController.html",[0,0.33,1,4.142,3,0.152,4,0.128,5,0.136,21,0.005,29,0.223,36,1.261,37,0.16,58,0.004,59,0.004,65,1.432,74,1.807,243,2.257,385,2.132,387,2.359,389,3.171,430,3.744,456,3.58,457,3.744,3801,5.505,3807,7.322,3808,7.482,3809,6.509,3810,6.705,3811,7.482]],["title/modules/TasksModule.html",[166,1.59,1264,3.591]],["body/modules/TasksModule.html",[0,0.295,3,0.136,4,0.114,5,0.122,21,0.005,22,1.16,29,0.228,36,1.129,37,0.144,58,0.004,59,0.004,132,1.964,166,2.789,387,2.609,531,2.895,532,3.011,533,3.138,534,3.138,535,3.138,536,4.118,537,4.205,541,3.875,542,2.84,543,3.138,545,3.925,549,3.353,550,4.186,552,3.812,1264,6.98,3801,4.931,3805,7.416,3807,7.432,3809,7.572,3810,6.005,3812,6.005,3813,6.005,3814,6.005,3815,6.701,3816,6.005,3817,6.701,3818,6.701]],["title/injectables/TasksService.html",[136,1.341,3809,3.765]],["body/injectables/TasksService.html",[0,0.151,3,0.07,4,0.059,5,0.062,7,0.207,8,0.59,9,2.559,10,2.143,11,1.087,12,2.528,15,0.992,18,0.665,20,2.308,21,0.005,22,1.567,23,0.458,25,4.389,29,0.179,36,0.579,37,0.074,49,2.737,55,0.729,58,0.003,59,0.003,65,0.844,66,3.366,72,1.572,74,1.259,75,2.671,76,2.671,77,1.226,78,2.297,87,3.796,88,1.849,89,1.759,90,1.849,91,1.849,92,1.849,94,2.094,122,1.77,124,3.033,132,1.006,134,0.888,136,1.366,137,1.455,162,3.847,179,5.858,181,4.394,185,2.808,186,2.252,187,2.494,188,3.15,189,3.053,190,3.053,191,2.883,192,3.256,193,3.895,194,3.15,195,2.222,196,3.542,198,2.145,200,2.466,207,2.075,208,5.216,209,3.658,210,2.145,211,4.796,212,4.075,213,2.075,214,3.15,215,2.31,216,1.066,217,2.075,218,5.586,219,2.73,220,2.145,221,2.075,222,4.004,223,5.216,224,2.145,225,2.075,226,2.145,227,2.145,228,2.145,229,2.075,230,2.145,231,2.145,232,2.145,233,1.849,234,4.251,235,2.222,236,2.145,237,2.145,238,2.075,239,2.222,243,1.036,3801,2.526,3809,3.835,3816,3.077,3819,3.433,3820,3.433,3821,3.433]],["title/interfaces/TicketForm.html",[38,1.479,3822,3.974]],["body/interfaces/TicketForm.html",[3,0.12,4,0.101,5,0.107,7,0.356,8,0.866,21,0.005,23,0.468,29,0.181,38,2.45,40,0.928,41,2.242,42,2.818,43,2.044,58,0.004,59,0.004,60,2.556,196,2.77,267,2.911,273,4.153,294,4.359,295,2.77,296,2.77,357,2.818,974,2.374,2041,5.437,2042,5.801,2043,5.598,2044,4.592,2054,5.437,2056,3.696,2124,4.153,2125,4.153,2126,4.153,2127,4.153,2128,4.153,2129,4.153,2130,4.153,2131,4.778,2132,4.153,2146,6.829,2169,3.696,2183,5.941,2184,4.595,3822,5.941,3823,4.897,3824,5.629,3825,6.238]],["title/interfaces/TicketFormField.html",[38,1.479,3824,3.765]],["body/interfaces/TicketFormField.html",[3,0.112,4,0.094,5,0.1,7,0.333,8,0.829,21,0.005,23,0.477,29,0.173,38,2.371,40,0.92,41,2.736,42,2.697,43,1.912,58,0.004,59,0.004,60,2.391,196,4.089,267,1.798,273,3.884,294,4.28,295,2.591,296,2.591,357,3.638,974,3.504,2041,4.289,2042,3.582,2043,3.457,2044,2.836,2054,4.807,2056,3.457,2124,6.129,2125,6.129,2126,6.129,2127,6.129,2128,6.129,2129,6.129,2130,6.129,2131,5.674,2132,6.129,2146,6.684,2169,3.457,2183,5.687,2184,4.298,3822,4.298,3823,4.581,3824,6.038,3825,6.038]],["title/interfaces/TicketFormSection.html",[38,1.479,3825,3.765]],["body/interfaces/TicketFormSection.html",[3,0.122,4,0.103,5,0.109,7,0.362,8,0.876,11,0.889,21,0.005,23,0.469,29,0.183,38,2.471,40,0.919,41,2.268,42,2.851,43,2.081,58,0.004,59,0.004,60,2.602,196,2.821,267,1.957,273,4.227,294,4.38,295,2.821,296,2.821,357,3.324,974,2.417,2041,5.467,2042,3.899,2043,3.763,2044,3.086,2054,5.467,2056,3.763,2124,4.227,2125,4.227,2126,4.227,2127,4.227,2128,4.227,2129,4.227,2130,4.227,2131,5.83,2132,4.227,2146,6.867,2169,5.636,2183,6.01,2184,4.678,3822,4.678,3823,4.986,3824,5.694,3825,6.639]],["title/interfaces/TokenData.html",[38,1.479,1323,4.235]],["body/interfaces/TokenData.html",[0,0.069,3,0.032,4,0.027,5,0.029,7,0.095,8,0.311,9,1.286,15,0.455,18,0.11,21,0.005,23,0.168,24,1.565,29,0.209,36,0.266,37,0.034,38,0.795,39,0.536,40,0.662,41,0.806,53,2.691,55,0.564,56,1.816,58,0.001,59,0.001,60,0.681,65,0.255,66,1.316,70,0.827,72,1.65,73,2.951,74,1.321,78,1.829,83,1.718,100,1.376,101,1.02,102,0.923,103,0.923,106,3.985,112,2.138,122,0.443,136,0.721,139,2.382,162,0.61,170,1.819,200,2.013,219,1.729,243,0.475,244,2.749,246,2.569,249,2.725,250,4.607,253,2.569,268,2.614,272,1.339,306,0.807,310,3.003,329,1.777,341,2.675,352,1.316,354,2.319,394,1.792,422,0.655,454,1.876,462,2.071,476,3.133,542,1.859,603,4.523,633,3.899,647,0.896,652,3.663,653,1.224,690,2.136,735,1.224,738,2.369,739,1.159,752,2.212,761,2.951,766,1.02,767,1.224,785,2.136,825,1.106,827,0.952,833,2.136,836,4.725,837,4.217,856,1.106,862,3.554,869,2.986,875,3.697,876,2.098,877,0.827,889,2.693,902,2.693,989,2.024,1023,2.277,1053,2.136,1056,1.304,1118,1.78,1124,1.85,1125,1.224,1128,1.482,1132,1.06,1144,2.947,1164,1.345,1165,0.984,1166,1.345,1168,1.224,1191,1.159,1193,0.923,1224,2.843,1226,2.843,1228,2.843,1230,2.569,1273,2.024,1276,2.693,1277,1.304,1284,1.304,1285,1.412,1286,1.106,1287,1.412,1288,1.412,1289,1.412,1290,1.412,1291,1.412,1292,1.412,1293,1.412,1294,1.304,1295,2.277,1296,2.024,1297,1.304,1298,1.93,1299,1.412,1300,1.159,1301,3.375,1302,1.412,1303,2.465,1304,2.024,1305,3.03,1306,1.304,1307,2.024,1308,1.304,1309,1.304,1310,2.569,1311,1.224,1312,0.896,1313,1.304,1314,2.024,1315,1.304,1316,2.693,1317,1.224,1318,2.024,1319,1.304,1320,1.78,1321,1.06,1322,1.02,1323,4.872,1324,7.094,1325,5.274,1326,4.12,1327,1.159,1328,1.412,1329,1.412,1330,1.412,1331,1.304,1332,1.412,1333,1.412,1334,1.412,1335,1.412,1336,1.224,1337,3.28,1338,4.575,1339,5.086,1340,4.785,1341,2.277,1342,1.662,1343,2.144,1344,2.287,1345,4.762,1346,1.304,1347,1.85,1348,1.412,1349,4.391,1350,1.412,1351,1.412,1352,4.597,1353,4.902,1354,4.528,1355,5.869,1356,1.304,1357,1.523,1358,1.224,1359,3.406,1360,1.412,1361,1.412,1362,1.412,1363,1.412,1364,3.93,1365,2.465,1366,5.274,1367,2.465,1368,3.28,1369,3.28,1370,1.412,1371,1.412,1372,1.412,1373,1.412,1374,2.465,1375,1.412,1376,3.03,1377,2.465,1378,2.465,1379,2.277,1380,1.412,1381,1.412,1382,2.465,1383,2.465,1384,1.412,1385,1.412,1386,2.465,1387,2.465,1388,2.569,1389,1.412,1390,2.465,1391,2.465,1392,4.571,1393,2.277,1394,3.198,1395,4.785,1396,2.462,1397,2.693,1398,3.81,1399,4.461,1400,3.663,1401,2.024,1402,1.412,1403,1.304,1404,1.412,1405,1.412,1406,3.28,1407,1.412,1408,1.412,1409,1.412,1410,5.479,1411,2.843,1412,2.277,1413,3.93,1414,2.465,1415,1.412,1416,2.569,1417,3.227,1418,1.412,1419,1.412,1420,3.68,1421,1.412,1422,1.06,1423,2.277,1424,1.412,1425,2.465,1426,2.465,1427,1.412,1428,1.412,1429,1.93,1430,0.849,1431,1.412,1432,1.412,1433,1.304,1434,1.412,1435,1.412,1436,1.224,1437,2.465,1438,1.304,1439,3.93,1440,1.412,1441,1.412,1442,2.465,1443,3.28,1444,1.412,1445,1.412,1446,1.106,1447,1.224,1448,1.412,1449,2.465,1450,2.465,1451,2.465,1452,1.304,1453,1.304,1454,1.412,1455,5.593,1456,2.465,1457,2.277,1458,1.304,1459,1.159,1460,3.28,1461,1.412,1462,1.412,1463,1.412,1464,3.28,1465,3.03,1466,3.28,1467,1.412,1468,1.412,1469,1.412,1470,1.02,1471,1.412,1472,1.412,1473,1.412,1474,1.412,1475,1.412,1476,2.465,1477,1.159,1478,1.412,1479,1.412,1480,2.465,1481,1.412,1482,1.412,1483,1.412,1484,3.28,1485,1.412,1486,1.412,1487,1.304,1488,4.461,1489,1.412,1490,1.159,1491,1.444,1492,1.412,1493,1.412,1494,1.412,1495,1.412,1496,1.412,1497,1.412,1498,1.224,1499,2.465,1500,1.412,1501,1.412,1502,2.465,1503,2.465,1504,3.28,1505,2.465,1506,1.412,1507,2.465,1508,2.465,1509,2.465,1510,2.465,1511,1.412,1512,1.412,1513,2.465,1514,2.465,1515,2.465,1516,2.465,1517,2.465,1518,2.465,1519,2.465,1520,2.465,1521,2.465,1522,2.465,1523,1.412,1524,1.304,1525,1.412,1526,1.412,1527,1.412,1528,1.412,1529,1.412,1530,1.412,1531,2.465,1532,1.412,1533,1.412,1534,1.412,1535,1.412,1536,1.412,1537,3.28,1538,2.465,1539,2.465,1540,2.465,1541,1.412,1542,2.465,1543,2.465,1544,3.63,1545,2.465,1546,2.465,1547,2.465,1548,2.277,1549,1.304,1550,1.412,1551,1.412,1552,2.465,1553,2.136,1554,1.106,1555,1.02,1556,1.412,1557,2.465,1558,1.412,1559,1.412,1560,1.412,1561,1.06,1562,1.412,1563,1.412,1564,2.136,1565,1.304,1566,1.412,1567,1.412,1568,2.465,1569,1.412,1570,1.412,1571,1.412,1572,1.304,1573,1.412,1574,1.412,1575,1.412,1576,1.412,1577,1.412,1578,1.412,1579,1.412,1580,1.412,1581,1.412,1582,1.412,1583,2.617,1584,2.465,1585,1.412,1586,1.224,1587,1.412,1588,1.304,1589,1.412,1590,1.412,1591,1.304,1592,1.412,1593,1.412,1594,1.412,1595,0.923,1596,1.412,1597,1.412]],["title/injectables/TransformersFilestorageService.html",[136,1.341,1970,3.312]],["body/injectables/TransformersFilestorageService.html",[0,0.151,3,0.069,4,0.058,5,0.062,7,0.205,8,0.588,9,2.33,10,2.136,11,1.022,12,2.52,15,1.815,18,0.639,20,1.869,21,0.005,22,1.376,23,0.435,25,1.535,29,0.166,36,0.576,37,0.073,40,0.839,42,2.78,43,2.607,44,3.028,53,1.126,55,0.658,56,1.725,58,0.003,59,0.003,65,0.84,66,3.952,72,2.277,74,1.823,75,2.66,76,2.66,77,1.221,78,2.271,87,2.815,88,1.84,89,1.75,90,1.84,91,1.84,92,1.84,94,1.869,136,1.361,137,1.448,152,1.218,170,1.194,200,2.538,205,1.323,216,2.999,243,1.03,246,1.716,286,1.109,332,3.611,394,3.892,399,4.311,454,4.947,761,5.347,825,2.397,974,1.37,1204,2.513,1773,4.878,1913,5.144,1919,6.285,1970,3.361,1995,8.038,2809,2.827,3745,3.061,3826,8.719,3827,3.416,3828,6.281,3829,5.192,3830,6.281,3831,6.281,3832,6.281,3833,6.281,3834,3.416,3835,5.192,3836,9.656,3837,3.416,3838,3.416,3839,6.281,3840,3.416,3841,3.416,3842,3.416,3843,3.416,3844,3.416,3845,3.416,3846,3.416,3847,3.416,3848,3.416,3849,6.281,3850,5.192,3851,6.281,3852,5.192,3853,6.281,3854,5.192,3855,6.281,3856,5.192,3857,3.416,3858,3.416,3859,5.192,3860,3.416,3861,3.416,3862,6.281,3863,5.192,3864,5.192,3865,3.416,3866,8.891,3867,6.763,3868,3.416,3869,7.547,3870,7.547,3871,7.017,3872,3.416,3873,7.017,3874,3.416,3875,3.416,3876,3.416,3877,3.416,3878,3.416,3879,3.416,3880,3.416,3881,3.416,3882,3.416,3883,3.416,3884,3.416,3885,3.416]],["title/classes/ValidationConfigException.html",[0,0.226,2527,3.591]],["body/classes/ValidationConfigException.html",[0,0.367,2,0.839,3,0.116,4,0.097,5,0.104,7,0.343,8,0.845,11,0.656,15,1.648,18,0.616,20,1.341,21,0.005,22,0.988,23,0.344,29,0.177,36,0.961,37,0.178,56,1.621,58,0.004,59,0.004,65,1.43,70,2.995,72,2.513,74,2.012,77,1.757,87,3.342,94,1.757,108,3.447,170,1.68,284,4.823,285,5.73,292,2.136,329,2.426,462,3.465,588,3.837,973,4.249,1255,4.197,1286,5.243,1400,4.197,1792,4.487,2527,5.243,2750,7.056,2792,4.197,2943,6.202,3886,4.722,3887,7.315,3888,7.315,3889,7.315,3890,7.555,3891,5.704,3892,5.112,3893,5.112,3894,5.112,3895,4.722,3896,4.722,3897,6.183,3898,6.183,3899,6.183,3900,4.722,3901,4.722,3902,6.894,3903,4.722,3904,4.722,3905,6.183,3906,6.183]],["title/classes/ValidationException.html",[0,0.226,2750,3.765]],["body/classes/ValidationException.html",[0,0.369,2,0.847,3,0.117,4,0.098,5,0.105,7,0.347,8,0.851,11,0.662,15,1.666,18,0.619,20,1.355,21,0.005,22,0.998,23,0.346,29,0.178,36,0.971,37,0.179,56,1.632,58,0.004,59,0.004,65,1.436,70,3.026,72,2.525,74,2.022,77,1.768,94,1.768,108,3.483,170,1.687,284,4.836,285,5.749,292,2.159,329,2.443,462,3.483,588,3.877,973,4.278,1255,4.241,1286,5.875,1400,4.241,1792,4.509,2527,4.045,2750,6.529,2792,4.241,2943,6.227,3886,4.77,3887,7.344,3888,7.344,3889,7.344,3890,7.572,3895,4.77,3896,4.77,3897,6.225,3898,6.225,3899,6.225,3900,4.77,3901,4.77,3902,6.929,3903,4.77,3904,4.77,3905,6.225,3906,6.225,3907,7.521,3908,5.764,3909,5.764]],["title/interfaces/ValidationRecursive.html",[38,1.479,1774,4.235]],["body/interfaces/ValidationRecursive.html",[0,0.239,3,0.11,4,0.092,5,0.098,9,1.588,10,1.842,18,0.378,21,0.005,29,0.192,30,2.296,36,0.913,37,0.116,38,1.565,39,2.455,40,0.769,53,1.787,55,0.6,56,1.88,58,0.004,59,0.004,60,2.34,61,3.986,65,0.877,74,1.309,78,1.274,123,3.613,136,1.892,139,4.143,152,1.932,170,1.646,187,2.592,200,1.501,243,1.634,246,1.48,272,1.768,284,4.929,329,2.345,341,2.949,389,3.06,422,2.254,462,2.254,476,3.454,633,4.51,731,5.607,750,3.802,766,3.506,783,4.673,875,2.213,974,2.174,1002,4.207,1395,3.802,1470,3.506,1770,6.47,1771,4.484,1772,6.47,1773,4.207,1774,7.168,1777,4.484,1778,5.976,1780,4.855,1781,6.306,1783,5.976,1784,4.855,1785,4.855,1786,4.855,1787,4.855,1788,4.855,1789,4.855,1790,5.312,1791,4.855,1792,2.918,1793,4.855,1794,4.484,1795,4.855,1796,4.855,1797,4.484,1798,4.855,1799,4.484,1800,4.855,1801,4.855,1802,4.855,1803,4.855,1804,4.855,1805,4.855,1806,6.47,1807,4.855,1808,4.855,1809,4.855,1810,4.855,1811,4.855,1812,4.855,1813,6.47,1814,4.855,1815,4.855,1816,4.855,3910,5.417]],["title/classes/ValidationSchemaException.html",[0,0.226,2792,3.765]],["body/classes/ValidationSchemaException.html",[0,0.367,2,0.839,3,0.116,4,0.097,5,0.104,7,0.343,8,0.845,11,0.656,15,1.648,18,0.616,20,1.341,21,0.005,22,0.988,23,0.344,29,0.177,36,0.961,37,0.178,56,1.621,58,0.004,59,0.004,65,1.43,70,2.995,72,2.513,74,2.012,77,1.757,87,3.342,94,1.757,108,3.447,170,1.68,284,4.823,285,5.73,292,2.136,329,2.426,462,3.465,588,3.837,973,4.249,1255,4.197,1286,5.243,1400,4.197,1792,4.487,2527,4.003,2750,7.056,2792,5.496,2943,6.202,3886,4.722,3887,7.315,3888,7.315,3889,7.315,3890,7.555,3892,5.112,3893,5.112,3894,5.112,3895,4.722,3896,4.722,3897,6.183,3898,6.183,3899,6.183,3900,4.722,3901,4.722,3902,6.894,3903,4.722,3904,4.722,3905,6.183,3906,6.183,3911,5.704]],["title/classes/VerifyTokenDto.html",[0,0.226,3912,4.586]],["body/classes/VerifyTokenDto.html",[0,0.381,2,1.059,3,0.147,4,0.123,5,0.131,7,0.434,8,0.979,18,0.502,21,0.005,23,0.332,29,0.205,32,1.426,37,0.154,40,0.768,55,0.686,58,0.004,59,0.004,127,1.231,267,2.81,275,2.5,277,2.897,278,1.969,279,3.055,603,5.038,835,6.459,838,5.303,3663,7.753,3671,7.753,3912,7.753,3913,8.651,3914,7.208,3915,7.208,3916,7.208]],["title/interfaces/WorkerResultInfoInterface.html",[38,1.479,3917,4.235]],["body/interfaces/WorkerResultInfoInterface.html",[3,0.149,4,0.125,5,0.133,18,0.511,21,0.005,29,0.173,37,0.187,38,2.526,39,2.494,40,0.877,41,2.563,58,0.004,59,0.004,60,3.168,61,5.396,209,2.747,216,2.278,264,3.295,605,4.973,1116,5.696,1117,5.396,1118,4.747,2970,4.934,3917,7.73,3918,7.834,3919,7.834,3920,7.334,3921,6.572,3922,6.071,3923,6.572]],["title/interfaces/WorkerResultInterface.html",[38,1.479,3922,4.235]],["body/interfaces/WorkerResultInterface.html",[3,0.138,4,0.116,5,0.123,7,0.408,8,0.944,11,1.082,21,0.005,23,0.459,29,0.16,37,0.179,38,2.409,39,2.307,40,0.894,41,2.761,58,0.004,59,0.004,60,2.93,209,3.527,216,2.925,264,4.231,357,3.071,605,3.858,1116,5.267,1117,4.991,1118,4.39,2970,6.335,3917,7.795,3918,6.078,3919,6.078,3921,6.078,3922,6.901,3923,8.439]],["title/classes/additionalFieldsPartDto.html",[0,0.226,2291,3.442]],["body/classes/additionalFieldsPartDto.html",[0,0.349,2,0.917,3,0.127,4,0.106,5,0.113,7,0.375,8,0.896,11,0.909,18,0.606,21,0.005,22,1.582,23,0.46,29,0.187,32,1.234,37,0.134,39,2.956,40,0.869,55,0.74,58,0.004,59,0.004,127,1.485,205,3.541,219,1.728,275,2.641,278,1.704,282,5.199,283,4.944,284,4.833,286,2.57,288,4.635,357,2.915,509,3.292,974,3.175,1895,7.788,2291,5.323,2295,5.553,3924,6.238,3925,6.238,3926,6.238,3927,6.238,3928,6.238]],["title/dependencies.html",[532,2.761,818,3.011]],["body/dependencies.html",[0,0.324,21,0.005,24,3.159,30,2.353,32,1.098,36,0.936,58,0.004,59,0.004,97,4.086,100,4.113,101,3.594,102,3.253,103,3.253,123,2.779,132,1.628,133,2.31,134,1.435,139,3.511,152,1.98,153,4.596,154,4.596,278,1.517,292,2.08,310,2.446,321,4.584,322,3.468,375,3.735,428,4.547,429,3.468,510,2.495,532,2.495,562,4.596,642,4.596,643,4.596,660,4.086,713,4.596,735,4.312,741,5.4,768,4.976,818,3.897,822,3.735,827,3.355,859,3.735,884,3.735,937,4.086,1185,4.976,1632,4.596,1633,6.048,1638,4.596,1640,3.897,1790,4.086,1966,4.312,2523,3.897,2526,5.699,2788,6.074,3311,4.976,3413,4.086,3607,4.976,3654,4.976,3753,4.976,3929,7.339,3930,5.553,3931,8.22,3932,7.339,3933,5.553,3934,5.553,3935,5.553,3936,5.553,3937,5.553,3938,5.553,3939,5.553,3940,5.553,3941,5.553,3942,7.339,3943,5.553,3944,5.553,3945,5.553,3946,5.553,3947,5.553,3948,5.553,3949,5.553,3950,5.553,3951,5.553,3952,5.553,3953,5.553,3954,5.553,3955,5.553,3956,5.553,3957,5.553,3958,5.553,3959,5.553,3960,5.553,3961,5.553,3962,5.553,3963,5.553,3964,5.553,3965,5.553,3966,5.553,3967,8.745,3968,5.553,3969,5.553,3970,5.553,3971,5.553,3972,5.553,3973,5.553,3974,5.553,3975,5.553,3976,5.553,3977,5.553,3978,5.553,3979,5.553,3980,5.553,3981,5.553,3982,5.553,3983,5.553,3984,5.553,3985,5.553,3986,5.553,3987,5.553,3988,5.553,3989,5.553,3990,5.553,3991,5.553]],["title/miscellaneous/enumerations.html",[3992,3.332,3993,5.506]],["body/miscellaneous/enumerations.html",[5,0.098,7,0.325,21,0.005,40,0.48,41,1.585,58,0.004,59,0.004,253,3.796,257,3.867,339,3.077,435,5.061,589,3.638,758,4.847,974,4.201,1115,4.477,1160,4.847,1191,5.306,1252,4.847,1255,3.98,1312,4.102,1320,4.668,1398,3.501,1429,3.796,1583,2.588,1709,5.601,1727,5.306,1901,4.668,2054,4.225,2219,5.061,2232,4.851,2380,4.477,2384,4.477,2548,4.2,2575,4.477,2859,4.2,2895,4.2,2897,5.601,2901,5.601,2980,5.306,3789,6.463,3992,4.2,3993,4.847,3994,5.409,3995,8.654,3996,5.409,3997,8.654,3998,8.113,3999,5.409,4000,7.212,4001,5.409,4002,5.409,4003,7.212,4004,5.409,4005,5.409,4006,5.409,4007,5.409,4008,5.409,4009,5.409,4010,5.409,4011,5.409,4012,7.212,4013,7.212,4014,7.212,4015,7.212,4016,7.212,4017,7.212,4018,7.212,4019,7.212,4020,7.212,4021,7.212,4022,5.409,4023,5.409,4024,5.409,4025,7.271,4026,5.409,4027,5.409,4028,5.409,4029,5.409,4030,5.409,4031,5.409,4032,5.409,4033,5.409,4034,7.212,4035,5.409,4036,3.638,4037,4.847,4038,4.847,4039,7.163,4040,5.409,4041,5.409,4042,5.409,4043,5.409,4044,5.409,4045,5.409,4046,5.409,4047,5.409,4048,5.409,4049,5.409,4050,5.409,4051,5.409,4052,5.409,4053,5.409,4054,5.409,4055,5.409,4056,5.409,4057,5.409,4058,5.409,4059,5.409]],["title/index.html",[7,0.258,1831,3.552,4060,3.845]],["body/index.html",[4,0.119,21,0.005,58,0.004,59,0.004,267,2.258,531,3.003,617,3.955,862,4.14,875,3.728,876,4.05,1045,6.228,1144,3.745,1166,4.14,1338,4.815,1342,4.201,1349,4.201,1357,3.952,1394,3.562,1629,4.879,2255,4.5,2256,6.574,2674,5.115,2735,6.574,2859,6.574,4025,6.23,4061,7.586,4062,6.952,4063,7.006,4064,6.23,4065,5.754,4066,5.754,4067,5.754,4068,5.754,4069,5.754,4070,5.941,4071,6.23,4072,6.23,4073,6.23,4074,6.23,4075,6.23,4076,5.399,4077,6.23,4078,6.952,4079,6.952,4080,6.23,4081,8.179,4082,5.115,4083,6.23,4084,6.23,4085,6.23,4086,6.952,4087,6.23,4088,6.952,4089,6.952,4090,6.952]],["title/classes/inetOrgPerson.html",[0,0.226,2210,2.687]],["body/classes/inetOrgPerson.html",[0,0.151,2,0.503,3,0.07,4,0.058,5,0.062,7,0.206,8,0.589,11,1.141,18,0.673,21,0.005,23,0.471,29,0.166,37,0.111,40,0.934,55,0.77,56,1.129,58,0.003,59,0.003,65,0.554,112,1.363,121,2.204,122,0.961,127,1.65,128,4.523,131,4.593,132,1.003,134,0.885,162,3.631,170,0.651,219,2.596,257,2.124,272,2.214,278,0.935,286,3.262,288,4.115,289,3.224,292,1.948,293,1.637,329,1.112,352,3.009,360,2.302,756,2.833,757,3.067,836,3.479,837,3.479,1079,2.518,1834,4.889,2044,3.222,2210,2.731,2224,3.067,2243,3.067,2244,4.66,2245,3.067,2246,3.067,2500,4.388,2733,3.65,2833,3.067,4091,3.423,4092,4.231,4093,4.884,4094,4.231,4095,4.231,4096,4.884,4097,4.231,4098,4.231,4099,4.231,4100,4.231,4101,4.231,4102,4.231,4103,4.231,4104,3.423,4105,3.423,4106,3.423,4107,3.423,4108,3.423,4109,3.423,4110,3.423,4111,3.423,4112,3.423,4113,3.423,4114,3.423,4115,3.423,4116,3.423,4117,3.423,4118,3.423,4119,3.423,4120,3.423,4121,3.423,4122,3.423,4123,3.423,4124,3.423,4125,3.423,4126,3.423,4127,2.658,4128,2.302,4129,3.423]],["title/classes/inetOrgPersonCreateDto.html",[0,0.226,4130,3.974]],["body/classes/inetOrgPersonCreateDto.html",[0,0.346,2,0.549,3,0.076,4,0.064,5,0.068,7,0.225,8,0.628,11,1.159,18,0.682,21,0.005,23,0.454,29,0.157,32,0.738,37,0.142,40,0.916,55,0.774,58,0.003,59,0.003,65,0.898,112,2.497,127,1.672,272,1.359,275,2.867,277,3.309,278,1.02,289,3.452,352,3.17,504,1.677,507,3.734,509,4.143,510,1.677,515,3.665,516,2.778,836,3.665,837,3.665,1834,4.289,2044,3.395,2308,2.332,2500,4.139,4092,4.457,4093,5.146,4094,4.457,4095,4.457,4096,5.146,4097,4.457,4098,4.457,4099,4.457,4100,4.457,4101,4.457,4102,4.457,4103,4.457,4127,2.899,4128,2.511,4130,5.146,4131,3.09,4132,6.575,4133,3.733,4134,3.345,4135,3.345,4136,3.733,4137,8.148,4138,8.371,4139,3.733,4140,3.345,4141,3.345,4142,3.733,4143,3.733,4144,3.733,4145,3.733,4146,3.733,4147,3.733,4148,3.345,4149,3.733,4150,3.345,4151,3.733,4152,3.733,4153,3.733,4154,3.733,4155,3.733,4156,3.733,4157,3.733,4158,3.733,4159,2.899,4160,3.09]],["title/classes/inetOrgPersonDto.html",[0,0.226,2308,3.196]],["body/classes/inetOrgPersonDto.html",[0,0.34,2,0.526,3,0.073,4,0.061,5,0.065,7,0.215,8,0.609,11,1.154,18,0.678,21,0.005,23,0.452,29,0.153,32,0.708,37,0.138,40,0.913,55,0.772,58,0.003,59,0.003,65,1.046,87,3.903,112,2.478,127,1.661,272,1.317,275,2.852,277,3.29,278,0.978,289,3.426,352,3.092,504,1.609,507,3.619,509,4.122,510,1.609,515,3.575,516,2.692,836,3.575,837,3.575,1834,4.184,2044,3.312,2308,3.361,2500,4.037,4092,4.348,4093,5.019,4094,4.348,4095,4.348,4096,5.019,4097,4.348,4098,4.348,4099,4.348,4100,4.348,4101,4.348,4102,4.348,4103,4.348,4127,2.781,4128,2.409,4130,7.664,4131,2.964,4132,6.44,4134,3.209,4135,3.209,4137,8.065,4138,8.297,4140,3.209,4141,3.209,4148,3.209,4150,3.209,4159,2.781,4160,2.964,4161,3.581,4162,3.581,4163,3.581,4164,3.581,4165,3.581,4166,3.581,4167,3.581,4168,3.581,4169,3.581,4170,3.581,4171,3.581,4172,3.581,4173,3.581,4174,3.581,4175,3.581,4176,3.581,4177,3.581,4178,3.581]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.226,4159,3.974]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.393,2,0.77,3,0.106,4,0.089,5,0.095,21,0.005,23,0.325,29,0.189,32,1.036,37,0.171,40,0.914,55,0.76,58,0.004,59,0.004,65,1.292,112,2.635,272,1.728,275,2.975,277,3.44,278,1.431,289,3.643,352,2.506,504,2.354,507,4.749,509,4.293,510,2.354,515,4.417,516,3.533,836,2.898,837,2.898,1834,3.391,2044,2.684,2308,3.272,2500,3.272,4092,3.524,4093,4.068,4094,3.524,4095,3.524,4096,4.068,4097,3.524,4098,3.524,4099,3.524,4100,3.524,4101,3.524,4102,3.524,4103,3.524,4127,4.068,4128,3.524,4130,5.482,4131,4.336,4159,5.482,4160,5.843]],["title/license.html",[1831,3.552,4060,3.845,4179,3.845]],["body/license.html",[21,0.005,58,0.005,59,0.005]],["title/modules.html",[531,3.001]],["body/modules.html",[21,0.004,58,0.004,59,0.004,530,4.294,531,2.866,702,5.152,706,4.882,707,4.882,708,4.882,709,4.656,921,4.656,926,4.463,1257,4.294,1262,4.294,1263,4.656,1264,4.656,1598,5.152,1738,4.656,1739,4.882,2161,5.152,2502,4.882,2646,4.656,3259,4.882,4180,10.471,4181,10.471,4182,10.471,4183,10.471]],["title/overview.html",[4184,6.226]],["body/overview.html",[2,0.566,21,0.005,58,0.003,59,0.003,60,1.663,137,1.631,166,1.196,325,5.194,387,1.213,530,5.83,531,1.663,532,1.729,533,1.802,534,1.802,535,1.802,536,1.765,537,1.802,538,3.449,539,3.449,540,3.449,541,2.659,542,1.631,543,1.802,634,4.735,702,7.439,703,3.449,704,3.449,705,3.449,706,7.328,707,6.627,708,5.844,709,6.775,710,5.239,738,5.563,742,4.964,882,5.194,921,6.775,922,3.449,923,3.449,924,3.449,925,3.449,926,5.935,927,5.239,928,5.239,957,5.369,983,3.449,1124,5.782,1257,6.291,1258,3.449,1259,3.449,1260,3.449,1261,3.449,1262,6.084,1263,6.032,1264,6.032,1298,5.227,1310,6.032,1316,6.324,1327,4.964,1598,7.114,1599,3.449,1731,4.964,1735,3.449,1736,3.449,1737,3.449,1738,6.429,1739,5.844,1970,5.563,1973,6.032,2030,3.449,2031,3.449,2032,3.449,2078,4.964,2161,5.784,2162,3.449,2163,3.449,2369,5.168,2480,6.191,2502,5.844,2503,3.449,2504,3.449,2505,3.449,2632,3.449,2633,3.449,2634,3.449,2646,5.574,2756,3.449,2757,3.449,2997,6.324,3031,3.449,3032,3.449,3033,3.449,3138,3.449,3139,3.449,3140,3.449,3184,4.964,3187,3.449,3188,3.449,3252,4.964,3256,3.449,3257,3.449,3258,3.449,3259,6.835,3285,3.449,3286,3.449,3559,3.449,3560,3.449,3717,4.964,3720,3.449,3721,3.449,3722,3.449,3809,6.324,3812,3.449,3813,3.449,3814,3.449,4184,3.449,4185,3.849,4186,3.849,4187,3.449,4188,3.849]],["title/properties.html",[8,0.695,818,3.011]],["body/properties.html",[4,0.135,8,0.897,21,0.005,58,0.005,59,0.005,267,2.575,691,5.832,2256,6.156,2735,6.156,4063,6.561,4064,7.103,4065,6.561,4179,7.103,4189,7.927]],["title/miscellaneous/typealiases.html",[3992,3.332,4190,6.145]],["body/miscellaneous/typealiases.html",[7,0.401,21,0.005,22,1.153,23,0.412,40,0.591,41,1.952,58,0.004,59,0.004,121,2.823,124,2.537,162,2.581,205,2.581,211,3.588,270,3.054,288,3.902,294,3.781,357,3.037,448,4.983,588,5.547,605,3.789,852,6.067,1080,5.513,1081,6.825,1082,4.481,1089,5.513,1092,6.825,1094,5.513,1102,4.983,1110,4.901,1111,5.513,1112,5.513,1583,3.187,2205,5.969,2248,7.389,2967,5.969,2986,7.389,3067,5.969,3074,7.389,3165,5.969,3173,7.389,3710,5.969,3713,7.389,3802,5.969,3804,7.389,3890,6.403,3992,5.173,4191,6.661,4192,6.661,4193,6.661,4194,6.661,4195,6.661,4196,6.661,4197,6.661,4198,8.245,4199,6.661,4200,6.661,4201,8.245,4202,6.661,4203,6.661,4204,6.661,4205,8.245,4206,8.245,4207,6.661,4208,6.661,4209,6.661,4210,6.661,4211,6.661,4212,6.661]],["title/additional-documentation/cahier-des-charges.html",[1357,1.349,2381,1.747,4213,1.9,4214,2.907,4215,2.907]],["body/additional-documentation/cahier-des-charges.html",[4,0.124,21,0.005,58,0.003,59,0.003,60,2.37,73,3.691,97,4.037,100,1.839,531,1.588,617,2.091,681,3.042,854,3.293,856,3.851,859,3.691,862,4.257,869,2.625,875,4.193,876,4.399,877,3.823,896,4.917,1118,2.379,1132,3.691,1144,3.922,1164,4.603,1166,4.843,1174,3.042,1176,3.293,1338,4.951,1340,2.579,1343,2.153,1345,4.548,1357,4.062,1394,4.867,1396,2.472,1403,3.042,1422,2.472,1430,4.196,1458,3.042,1459,4.037,1491,4.291,1555,4.249,1591,3.042,1629,2.579,1888,2.296,2255,2.379,2256,5.098,2293,3.121,2298,2.379,2324,2.472,2341,2.854,2344,3.042,2364,2.579,2392,3.851,2466,2.704,2473,6.346,2609,3.042,2674,3.967,2675,3.851,2727,3.042,2735,5.098,2859,2.854,2906,2.854,3413,4.831,3639,3.042,4036,3.691,4061,4.917,4063,6.764,4065,3.042,4067,3.042,4068,3.042,4069,3.042,4070,5.943,4073,3.293,4074,3.293,4075,3.293,4076,2.854,4077,3.293,4080,3.293,4081,6.981,4082,2.704,4083,3.293,4084,3.293,4085,6.524,4087,5.883,4214,3.293,4215,3.293,4216,3.675,4217,3.675,4218,3.675,4219,3.293,4220,4.261,4221,6.23,4222,5.434,4223,6.565,4224,3.675,4225,3.675,4226,5.487,4227,5.241,4228,5.487,4229,3.042,4230,3.675,4231,6.012,4232,5.487,4233,3.675,4234,3.293,4235,3.675,4236,3.675,4237,2.854,4238,5.487,4239,3.042,4240,3.042,4241,3.675,4242,4.037,4243,4.917,4244,5.434,4245,3.675,4246,3.675,4247,3.042,4248,3.675,4249,3.675,4250,3.675,4251,3.293,4252,3.675,4253,3.293,4254,3.675,4255,3.675,4256,3.293,4257,3.675,4258,3.293,4259,3.675,4260,3.675,4261,3.675,4262,3.293,4263,3.675,4264,3.675,4265,3.675,4266,3.675,4267,3.675,4268,3.675,4269,3.675,4270,2.704,4271,3.675,4272,5.487,4273,3.675,4274,3.675,4275,4.917,4276,3.675,4277,3.675,4278,3.675,4279,3.675,4280,3.675,4281,3.293,4282,3.675,4283,3.675,4284,3.675,4285,3.675,4286,3.675,4287,3.675,4288,6.026,4289,7.034,4290,3.675,4291,3.675,4292,3.675,4293,3.675,4294,3.293,4295,3.675,4296,3.675,4297,3.675,4298,3.675,4299,3.675,4300,3.675,4301,6.764,4302,3.293,4303,3.293,4304,3.675,4305,5.487,4306,3.675,4307,3.675,4308,3.675,4309,3.675,4310,3.293,4311,5.487,4312,5.487,4313,4.917,4314,3.293,4315,3.042,4316,3.675,4317,6.026,4318,7.281,4319,3.675,4320,3.675,4321,3.675,4322,3.293,4323,3.675,4324,3.675,4325,3.675,4326,3.675,4327,3.675,4328,3.675,4329,3.675,4330,3.675,4331,3.675,4332,3.675,4333,3.675,4334,3.675,4335,3.675,4336,3.675,4337,3.042,4338,3.675,4339,3.675,4340,3.042,4341,3.675,4342,3.675,4343,2.854,4344,3.675,4345,3.675,4346,3.675,4347,3.293,4348,3.675,4349,3.675,4350,3.675,4351,3.675,4352,3.675,4353,3.675,4354,3.675,4355,3.675,4356,3.293,4357,3.675,4358,3.675,4359,3.675,4360,3.675,4361,3.675,4362,3.675,4363,3.675,4364,3.675]],["title/additional-documentation/filtres-api.html",[617,2.102,2343,2.718,2381,1.99,4213,2.164]],["body/additional-documentation/filtres-api.html",[21,0.005,41,2.82,58,0.004,59,0.004,139,3.456,212,3.891,257,2.951,267,2.346,279,3.672,617,4.109,647,4.109,754,5.979,1053,5.609,1082,4.859,2343,5.315,2669,5.979,2721,8.817,4365,7.223,4366,7.223,4367,7.223,4368,7.223,4369,7.223,4370,7.223,4371,7.223,4372,6.473,4373,7.223,4374,7.223,4375,7.223,4376,7.223,4377,7.223,4378,7.223,4379,7.223,4380,7.223]],["title/additional-documentation/documentation-technique.html",[2381,1.99,2674,2.232,4213,2.164,4343,2.869]],["body/additional-documentation/documentation-technique.html",[21,0.005,58,0.005,59,0.005,1357,3.337,4222,6.64,4317,6.64,4381,6.64,4382,6.64,4383,8.022,4384,7.189,4385,6.64,4386,7.189]],["title/additional-documentation/documentation-technique/demon.html",[2381,2.311,4213,2.514,4387,4.291]],["body/additional-documentation/documentation-technique/demon.html",[21,0.005,58,0.005,59,0.005,1045,6.788,1430,4.331,2673,7.206,4222,7.636,4243,7.206,4388,8.041]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[79,2.685,751,2.026,2381,1.747,4213,1.9,4389,3.243]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.206,2,0.685,5,0.165,9,2.384,15,1.883,21,0.005,29,0.202,36,0.785,37,0.1,53,2.148,55,0.345,56,1.012,58,0.003,59,0.003,63,5.392,65,0.754,70,3.421,71,7.668,73,6.689,74,1.964,78,1.096,79,7.083,83,5.538,97,5.526,100,3.26,102,3.816,103,3.816,113,5.838,116,3.706,117,4.177,136,1.707,170,0.886,246,1.78,267,1.514,279,2.761,751,4.692,752,2.816,862,3.186,869,2.23,875,4.179,876,4.354,877,3.944,989,4.794,1144,4.609,1164,4.186,1166,4.186,1230,3.271,1338,2.651,1347,3.135,1349,3.937,1357,3.125,1394,4.834,1396,4.383,1416,3.271,1420,3.135,1430,2.511,1491,4.27,1629,3.271,1641,3.858,1790,3.429,2298,4.217,2472,4.177,2531,3.619,2817,5.271,3384,6.217,3493,4.177,4036,3.135,4066,3.858,4082,3.429,4220,3.619,4227,5.757,4229,3.858,4231,3.429,4242,3.429,4270,4.794,4275,4.177,4288,3.858,4384,5.838,4390,3.619,4391,3.858,4392,6.515,4393,4.177,4394,5.392,4395,8.132,4396,9.285,4397,4.177,4398,4.177,4399,4.661,4400,6.515,4401,6.515,4402,6.515,4403,4.661,4404,5.838,4405,4.177,4406,4.661,4407,4.177,4408,4.661,4409,3.858,4410,4.661,4411,4.661,4412,4.661,4413,4.177,4414,4.661,4415,4.661,4416,4.661,4417,4.177,4418,3.619,4419,4.177,4420,4.177,4421,5.059,4422,4.661,4423,4.661,4424,4.661,4425,4.661,4426,5.838,4427,3.619,4428,4.661,4429,3.271,4430,4.661,4431,4.661,4432,4.661,4433,4.177,4434,4.661,4435,4.661,4436,4.661,4437,4.661,4438,4.661,4439,4.661,4440,4.661,4441,4.661,4442,4.661,4443,4.661]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[1166,1.066,1357,1.509,2381,1.174,4213,1.277,4242,1.604,4444,2.179,4445,1.953,4446,2.179]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.005,29,0.147,37,0.085,45,0.894,53,1.749,56,1.545,58,0.001,59,0.002,78,1.728,100,3.432,106,3.647,116,0.993,121,1.274,122,2.216,124,0.665,134,1.371,166,1.801,170,1.527,185,0.94,186,2.504,187,2.251,189,3.107,190,2.319,191,2.19,193,2.301,196,3.534,208,1.022,209,2.894,211,2.132,212,2.534,218,2.319,222,2.847,223,1.022,246,1.873,257,1.922,263,0.8,268,2.785,272,1.152,279,3.344,285,1.09,288,1.761,341,3.001,352,1.438,354,2.248,385,0.856,387,0.55,435,1.225,476,1.438,536,0.8,549,0.873,599,2.913,751,5.175,801,2.109,814,1.445,836,1.663,837,1.663,861,1.355,862,4.155,869,3.405,875,3.943,876,4.254,877,2.785,974,1.206,1082,3.165,1102,1.055,1103,1.355,1144,3.694,1145,1.284,1164,4.64,1166,4.106,1174,1.445,1301,1.438,1312,0.993,1313,1.445,1338,4.049,1342,1.816,1343,1.761,1347,2.022,1349,4.301,1357,3.933,1394,4.62,1395,1.225,1412,1.445,1416,2.778,1417,1.284,1422,3.165,1430,3.122,1477,2.212,1491,4.288,1498,1.355,1549,1.445,1564,3.074,1586,1.355,1643,1.355,1661,1.445,1825,1.445,1834,1.946,1845,1.284,1864,2.212,1888,1.09,2044,1.54,2206,2.252,2210,2.47,2214,2.022,2232,1.174,2250,2.694,2262,2.488,2308,1.878,2329,1.816,2330,2.022,2341,1.355,2342,4.753,2362,1.284,2367,1.284,2369,1.022,2387,1.445,2393,3.752,2414,1.564,2465,4.119,2466,1.284,2500,1.878,2646,1.225,2674,3.205,2677,1.355,2711,4.821,2817,3.302,2820,2.778,2837,3.547,3220,1.284,3337,1.355,3384,3.894,3398,5.676,3400,1.564,3401,1.564,3402,1.564,3403,1.564,3404,1.564,3406,1.564,3413,5.046,3414,3.547,3482,2.913,3639,1.445,3756,2.694,4036,2.022,4066,1.445,4067,1.445,4070,4.357,4071,1.564,4072,1.564,4076,1.355,4082,1.284,4092,2.663,4094,2.022,4095,2.022,4097,2.022,4098,2.022,4099,2.022,4100,2.022,4101,2.022,4102,2.022,4103,2.022,4128,2.022,4219,2.694,4220,1.355,4227,2.663,4231,1.284,4242,2.212,4247,3.277,4262,1.564,4270,3.461,4289,1.355,4303,1.564,4314,1.564,4315,2.488,4317,6.759,4340,1.445,4347,4.216,4356,2.694,4381,2.488,4382,2.488,4390,2.334,4391,2.488,4394,5.138,4397,1.564,4407,2.694,4409,1.445,4413,2.694,4417,1.564,4419,3.547,4420,1.564,4421,5.326,4429,2.778,4445,6.925,4447,6.557,4448,2.694,4449,3.006,4450,5.796,4451,7.002,4452,5.304,4453,6.858,4454,3.074,4455,3.547,4456,3.006,4457,3.959,4458,7.889,4459,2.694,4460,3.277,4461,4.216,4462,5.304,4463,3.006,4464,3.006,4465,2.334,4466,1.745,4467,1.745,4468,2.694,4469,1.745,4470,1.745,4471,5.304,4472,4.216,4473,1.745,4474,3.006,4475,3.006,4476,1.745,4477,2.694,4478,6.208,4479,1.745,4480,3.547,4481,1.745,4482,1.745,4483,1.745,4484,1.745,4485,3.959,4486,1.745,4487,5.304,4488,1.745,4489,5.304,4490,3.006,4491,3.006,4492,1.745,4493,1.445,4494,1.745,4495,1.564,4496,1.745,4497,1.745,4498,1.355,4499,1.745,4500,1.564,4501,1.745,4502,1.445,4503,5.304,4504,1.745,4505,1.564,4506,1.745,4507,4.704,4508,7.118,4509,4.704,4510,1.745,4511,1.745,4512,1.745,4513,5.796,4514,1.745,4515,1.745,4516,1.564,4517,1.445,4518,3.006,4519,3.006,4520,3.006,4521,3.006,4522,3.006,4523,3.006,4524,3.006,4525,1.355,4526,1.745,4527,3.006,4528,1.745,4529,1.745,4530,3.006,4531,3.006,4532,3.006,4533,1.745,4534,1.745,4535,1.745,4536,1.745,4537,1.745,4538,1.745,4539,1.745,4540,1.445,4541,1.745,4542,1.745,4543,1.745,4544,1.745,4545,3.277,4546,1.745,4547,1.745,4548,1.745,4549,3.006,4550,4.798,4551,1.745,4552,7.347,4553,1.745,4554,1.745,4555,1.745,4556,1.745,4557,1.745,4558,1.564,4559,1.745,4560,1.745,4561,1.564,4562,1.745,4563,1.745,4564,1.745,4565,1.745,4566,4.704,4567,1.745,4568,1.745,4569,1.745,4570,1.745,4571,1.745,4572,1.745,4573,1.745,4574,1.745,4575,4.704,4576,4.704,4577,4.704,4578,1.745,4579,1.745,4580,1.745,4581,1.745,4582,1.745,4583,1.745,4584,1.445,4585,1.745,4586,1.745,4587,1.745,4588,1.564,4589,1.745,4590,1.745,4591,1.745,4592,1.745,4593,1.745,4594,1.745,4595,1.745,4596,1.745,4597,1.564,4598,1.564,4599,1.745,4600,1.745,4601,1.745,4602,2.488,4603,1.745,4604,1.745,4605,5.876,4606,1.745,4607,1.564,4608,1.745,4609,1.745,4610,1.745,4611,1.745,4612,3.006,4613,4.821,4614,1.745,4615,1.745,4616,1.445,4617,1.745,4618,1.564,4619,1.745,4620,2.694,4621,3.006,4622,1.445,4623,3.006,4624,1.745,4625,1.745,4626,3.006,4627,1.745,4628,1.745,4629,3.006,4630,1.745,4631,3.959,4632,3.006,4633,1.564,4634,1.745,4635,1.745,4636,1.745,4637,3.006,4638,1.355,4639,1.745,4640,1.445,4641,1.745,4642,1.445,4643,1.745,4644,1.745,4645,3.006,4646,1.745,4647,3.006,4648,1.745,4649,1.564,4650,1.745,4651,1.745,4652,1.745,4653,1.745,4654,1.745,4655,1.745,4656,1.745,4657,1.745,4658,1.745,4659,1.745,4660,1.745,4661,1.355,4662,1.745,4663,1.745,4664,1.564,4665,1.745,4666,3.006,4667,3.959,4668,3.006,4669,2.334,4670,1.745,4671,1.745,4672,1.745,4673,1.745,4674,1.745,4675,1.745,4676,1.745,4677,3.006,4678,1.745,4679,1.564,4680,1.564,4681,1.745,4682,1.745,4683,1.745,4684,1.745,4685,1.745,4686,1.745,4687,1.745,4688,1.445,4689,1.745]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1357,1.349,1555,2.099,1792,1.747,2381,1.747,4213,1.9]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.197,21,0.005,23,0.291,40,0.561,45,3.24,58,0.003,59,0.003,72,1.908,78,1.487,100,2.236,134,2.063,136,1.171,162,1.731,166,1.388,200,2.211,267,1.451,279,1.893,280,5.151,284,2.289,329,1.451,751,4.986,822,4.254,856,3.135,862,3.59,869,3.025,870,3.698,875,4.126,876,4.665,877,3.854,1144,4.299,1164,4.686,1166,4.57,1262,2.892,1338,2.541,1342,2.7,1343,2.617,1347,3.005,1349,3.821,1357,4.086,1394,4.787,1401,3.287,1430,4.299,1491,3.854,1498,3.469,1555,4.093,1561,3.005,1629,3.135,1717,3.135,1792,5.29,2293,2.541,2297,3.135,2362,4.653,2364,3.135,2369,4.3,2393,5.166,2436,5.234,2465,3.469,2466,3.287,2473,7.256,2523,5.151,2526,5.7,2550,5.667,2639,4.003,2674,3.821,2675,4.438,2678,3.469,2727,5.234,2733,3.135,2765,4.003,2772,5.667,2778,5.667,2779,5.667,2788,6.972,2812,4.911,2817,4.438,2818,5.667,2819,5.667,2820,3.135,2828,3.287,3177,4.003,4070,5.151,4220,3.469,4227,5.369,4231,4.653,4237,3.469,4239,3.698,4240,3.698,4242,5.401,4247,3.698,4256,5.667,4270,3.287,4343,3.469,4393,4.003,4394,3.698,4398,4.003,4421,3.469,4426,4.003,4427,3.469,4429,3.135,4455,4.003,4460,3.698,4465,3.469,4472,4.003,4477,4.003,4498,6.199,4517,3.698,4525,4.911,4540,3.698,4545,3.698,4550,3.698,4558,4.003,4602,3.698,4616,3.698,4620,6.578,4640,3.698,4661,4.911,4690,4.003,4691,6.323,4692,6.323,4693,3.698,4694,6.323,4695,4.467,4696,5.667,4697,4.467,4698,4.467,4699,4.003,4700,4.467,4701,4.467,4702,4.467,4703,4.467,4704,4.467,4705,4.467,4706,6.323,4707,4.467,4708,4.467,4709,4.467,4710,4.467,4711,4.467,4712,4.467,4713,4.467,4714,4.467,4715,4.467,4716,6.323,4717,4.467,4718,6.323,4719,4.467,4720,4.467,4721,4.467,4722,4.003,4723,4.467,4724,4.467,4725,4.467,4726,4.467,4727,4.467,4728,4.467,4729,4.467,4730,6.323]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[2381,1.99,4213,2.164,4385,3.058,4386,3.311]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.005,22,1.249,23,0.427,40,0.32,41,0.634,43,2.492,58,0.002,59,0.002,100,1.805,112,0.945,122,1.013,133,3.001,134,0.559,166,0.672,182,3.502,196,2.815,205,1.397,257,3.06,263,1.654,267,2.774,272,2.144,279,1.965,306,1.848,476,2.588,542,0.917,647,2.052,822,4.632,862,4.178,869,3.451,870,2.985,875,4.148,876,4.409,877,4.058,974,2.605,1082,1.456,1099,3.838,1144,3.238,1164,4.508,1166,4.178,1338,5.084,1342,1.308,1343,3.521,1347,1.456,1349,4.359,1356,1.791,1357,3.718,1394,4.804,1397,1.592,1416,1.519,1422,1.456,1430,3.497,1459,1.592,1477,5.066,1491,3.787,1554,1.519,1572,3.838,2038,5.062,2040,1.519,2041,4.753,2042,1.401,2043,1.352,2044,2.772,2054,2.113,2124,3.797,2125,4.219,2126,3.797,2127,3.797,2128,3.797,2129,3.797,2130,4.219,2131,4.506,2132,4.219,2169,4.301,2170,3.838,2254,1.681,2260,3.838,2293,5.084,2299,4.632,2301,1.519,2304,6.212,2362,2.654,2364,1.519,2393,1.401,2464,1.939,2465,2.801,2467,2.985,2575,1.791,2589,5.661,2674,3.923,2675,3.254,2711,3.601,2817,1.519,2820,1.519,2828,1.592,3482,4.423,3636,1.939,3824,2.654,3825,2.654,3867,4.848,4036,5.039,4037,1.939,4038,4.848,4039,2.985,4068,2.985,4069,2.985,4070,4.219,4076,1.681,4221,1.592,4227,3.119,4229,6.397,4234,3.232,4237,1.681,4251,1.939,4270,2.654,4294,3.232,4302,1.939,4310,1.939,4315,1.791,4340,2.985,4385,3.838,4390,1.681,4404,3.232,4405,1.939,4409,1.791,4418,1.681,4421,1.681,4429,1.519,4448,3.232,4451,6.302,4454,5.041,4459,3.232,4461,4.155,4493,1.791,4500,1.939,4505,1.939,4516,3.232,4517,1.791,4525,1.681,4540,2.985,4584,4.478,4588,6.925,4597,1.939,4602,4.975,4605,1.939,4607,5.817,4613,1.681,4618,1.939,4633,4.155,4638,1.681,4664,3.232,4669,1.681,4690,1.939,4693,3.838,4722,1.939,4731,7.934,4732,9.709,4733,3.232,4734,6.885,4735,3.607,4736,5.41,4737,6.492,4738,6.011,4739,3.607,4740,4.637,4741,3.607,4742,7.213,4743,3.607,4744,6.492,4745,3.607,4746,3.607,4747,4.637,4748,6.011,4749,2.164,4750,2.164,4751,2.164,4752,1.939,4753,2.164,4754,3.607,4755,1.939,4756,5.41,4757,5.41,4758,4.478,4759,2.164,4760,2.164,4761,5.41,4762,1.939,4763,2.164,4764,3.607,4765,2.164,4766,2.164,4767,2.164,4768,2.164,4769,2.164,4770,3.607,4771,5.41,4772,3.607,4773,6.492,4774,2.164,4775,2.164,4776,2.164,4777,2.164,4778,4.637,4779,3.607,4780,4.848,4781,1.939,4782,2.164,4783,3.607,4784,2.164,4785,1.939,4786,2.164,4787,2.164,4788,2.164,4789,2.164,4790,3.607,4791,3.607,4792,3.607,4793,5.41,4794,5.41,4795,2.164,4796,2.164,4797,4.637,4798,2.164,4799,2.164,4800,2.164,4801,1.939,4802,1.939,4803,2.164,4804,1.939,4805,2.164,4806,4.637,4807,4.637,4808,4.637,4809,4.637,4810,4.637,4811,6.011,4812,3.607,4813,2.164,4814,2.164,4815,2.164,4816,2.164,4817,2.164,4818,2.164,4819,2.164,4820,2.164,4821,3.607,4822,3.607,4823,2.164,4824,5.41,4825,4.637,4826,2.164,4827,3.607,4828,2.164,4829,2.164,4830,2.164,4831,2.164,4832,2.164,4833,2.164,4834,2.164,4835,1.939,4836,2.164,4837,2.164,4838,3.607,4839,1.939,4840,2.164,4841,4.637,4842,2.164,4843,2.164,4844,2.164,4845,2.164,4846,2.164,4847,3.607,4848,2.164,4849,2.164,4850,2.164,4851,3.607,4852,5.41,4853,2.164,4854,2.164,4855,6.011,4856,2.164,4857,2.164,4858,2.164,4859,2.164,4860,3.607,4861,2.164,4862,2.164,4863,2.164,4864,3.607,4865,2.164,4866,2.164,4867,2.164,4868,2.164,4869,2.164,4870,2.164,4871,2.164,4872,2.164,4873,2.164,4874,2.164,4875,2.164,4876,2.164,4877,2.164,4878,3.232]],["title/additional-documentation/documentation-utilisateur.html",[856,2.593,2381,1.99,2674,2.232,4213,2.164]],["body/additional-documentation/documentation-utilisateur.html",[21,0.005,58,0.005,59,0.005,875,3.285,1338,4.574,1357,3.345,1792,4.331,2674,4.859,4221,5.917,4381,6.656,4382,6.656]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1166,1.275,1561,1.754,1864,1.918,2364,1.83,2381,1.404,4213,1.527,4879,2.336]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.005,23,0.353,58,0.002,59,0.002,257,3.01,279,2.769,282,3.979,283,4.191,284,1.295,329,1.331,339,2.331,352,1.209,354,3.123,360,4.395,395,2.844,425,2.908,647,2.331,822,2.757,836,1.398,837,3.87,862,4.513,869,3.987,875,4.147,876,4.504,877,4.029,1144,4.133,1164,4.287,1166,3.753,1169,2.092,1312,2.331,1331,4.92,1338,2.94,1342,3.123,1343,3.827,1347,3.477,1349,3.948,1354,2.092,1357,3.389,1388,1.774,1394,4.647,1397,3.016,1401,4.374,1420,1.701,1422,5.481,1429,2.876,1430,3.968,1459,3.016,1491,3.868,1561,5.334,1792,2.208,1834,4.528,1839,2.092,1845,3.803,1864,6.606,1888,1.579,1896,2.876,1909,2.876,2044,1.295,2206,3.716,2210,4.278,2214,3.477,2260,3.392,2266,2.265,2293,4.833,2296,2.876,2298,1.636,2299,2.757,2300,3.627,2301,3.627,2304,2.876,2324,5.812,2363,2.265,2364,3.627,2385,3.392,2390,3.392,2391,2.092,2392,4.909,2393,5.5,2394,3.392,2395,3.392,2416,6.158,2436,3.392,2500,4.37,2523,3.627,2589,1.701,2674,1.528,2675,2.876,2676,5.327,2677,1.963,2678,3.183,2711,1.963,2820,1.774,2828,3.016,3482,1.86,3631,3.673,3643,3.392,3662,5.327,3742,4.632,3762,3.673,4036,3.999,4070,1.774,4082,1.86,4092,3.999,4094,1.701,4095,1.701,4097,1.701,4098,1.701,4099,1.701,4100,1.701,4101,3.999,4102,1.701,4103,1.701,4128,1.701,4221,5.646,4227,3.477,4231,3.016,4237,4.014,4239,2.092,4240,2.092,4244,6.898,4258,2.265,4288,2.092,4289,4.617,4301,4.278,4313,2.265,4322,2.265,4337,2.092,4343,1.963,4372,5.327,4418,5.721,4427,3.183,4429,1.774,4451,5.959,4454,4.014,4460,3.392,4465,3.183,4468,2.265,4493,2.092,4495,2.265,4498,4.014,4502,3.392,4525,3.183,4545,4.92,4550,3.392,4584,3.392,4598,2.265,4613,3.183,4616,2.092,4622,4.278,4638,3.183,4642,2.092,4661,4.014,4669,3.183,4679,3.673,4680,2.265,4688,6.098,4733,3.673,4752,2.265,4755,3.673,4758,2.092,4781,3.673,4802,3.673,4839,2.265,4879,5.855,4880,7.468,4881,7.614,4882,7.106,4883,3.673,4884,3.673,4885,4.098,4886,4.098,4887,5.945,4888,5.945,4889,2.528,4890,2.528,4891,2.528,4892,2.528,4893,2.528,4894,2.528,4895,2.528,4896,2.528,4897,4.098,4898,4.098,4899,4.098,4900,4.098,4901,5.945,4902,5.945,4903,4.098,4904,5.945,4905,4.098,4906,4.098,4907,5.327,4908,4.098,4909,4.632,4910,5.169,4911,3.673,4912,5.169,4913,5.169,4914,8.147,4915,3.673,4916,3.673,4917,4.098,4918,2.528,4919,2.528,4920,4.098,4921,4.098,4922,2.265,4923,2.528,4924,2.528,4925,4.632,4926,2.528,4927,2.528,4928,2.528,4929,2.528,4930,2.528,4931,2.265,4932,2.528,4933,5.169,4934,4.098,4935,4.098,4936,5.327,4937,5.327,4938,5.945,4939,5.327,4940,5.945,4941,5.327,4942,5.945,4943,5.945,4944,4.098,4945,2.528,4946,4.098,4947,2.528,4948,2.528,4949,2.528,4950,2.528,4951,2.528,4952,2.528,4953,5.945,4954,4.098,4955,4.098,4956,2.528,4957,2.528,4958,2.528,4959,2.528,4960,2.528,4961,5.945,4962,2.528]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[875,0.97,1357,0.988,1792,1.279,2381,1.279,2416,1.844,2609,1.965,4213,1.391,4963,2.374]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.722,21,0.005,22,0.495,23,0.465,40,0.801,41,2.481,58,0.002,59,0.002,133,1.883,205,2.864,209,2.103,257,2.607,263,1.312,267,2.401,270,2.076,272,2.182,279,3.403,282,2.575,283,2.575,288,4.331,289,2.313,292,2.39,306,2.877,352,1.369,354,1.919,647,3.194,754,2.369,756,2.369,785,2.223,822,3.045,836,1.583,837,1.583,861,3.515,862,4.224,869,3.537,875,4.118,876,4.618,877,3.882,975,5.032,1144,3.745,1164,4.359,1166,3.787,1168,2.223,1169,2.369,1338,3.631,1343,2.652,1346,2.369,1349,2.735,1357,3.439,1388,3.177,1394,4.425,1401,2.106,1417,2.106,1420,3.045,1422,5.56,1430,1.542,1477,2.106,1491,3.351,1583,3.704,1792,3.982,1794,3.747,1819,2.565,1834,1.852,1864,2.106,1896,4.88,1900,2.106,2044,2.319,2206,2.575,2210,3.651,2293,4.702,2295,3.177,2296,5.434,2297,2.009,2299,4.294,2300,4.479,2324,4.677,2341,4.361,2392,2.009,2393,3.634,2500,1.788,2523,5.635,2589,1.925,2675,3.941,2677,4.361,2678,4.361,2812,2.223,2817,2.009,2820,2.009,2822,2.565,2828,5.907,3337,2.223,3482,2.106,3614,4.056,3621,4.056,3643,3.747,3765,6.23,3766,4.056,4036,1.925,4039,3.747,4092,1.925,4094,1.925,4095,1.925,4097,1.925,4098,1.925,4099,1.925,4100,1.925,4101,1.925,4102,1.925,4103,1.925,4128,1.925,4187,2.565,4221,2.106,4227,3.777,4244,4.648,4253,4.056,4281,2.565,4289,6.235,4301,6.645,4337,2.369,4390,2.223,4391,2.369,4418,4.957,4427,2.223,4429,2.009,4433,2.565,4451,5.399,4454,2.223,4465,2.223,4480,2.565,4498,3.515,4502,2.369,4561,2.565,4613,2.223,4622,2.369,4638,3.515,4640,5.755,4642,2.369,4649,4.056,4661,3.515,4669,2.223,4688,5.283,4693,2.369,4696,4.056,4699,5.032,4758,2.369,4762,2.565,4780,2.565,4785,2.565,4801,2.565,4804,2.565,4835,2.565,4878,8.561,4880,2.565,4881,2.565,4882,2.565,4883,4.056,4884,2.565,4907,5.032,4909,5.72,4911,2.565,4915,2.565,4916,2.565,4922,7.195,4925,5.032,4931,4.056,4936,4.056,4937,4.056,4939,2.565,4941,2.565,4964,2.862,4965,2.862,4966,2.862,4967,2.862,4968,2.862,4969,2.862,4970,2.862,4971,2.862,4972,2.862,4973,2.862,4974,2.862,4975,2.862,4976,4.526,4977,4.526,4978,4.526,4979,6.953,4980,2.862,4981,2.862,4982,4.526,4983,2.862,4984,2.862,4985,2.862,4986,4.526,4987,2.862,4988,4.526,4989,2.862,4990,4.526,4991,5.615,4992,4.526,4993,4.526,4994,6.953,4995,5.615,4996,2.862,4997,2.862,4998,4.526,4999,5.615,5000,2.862,5001,6.383,5002,4.526,5003,5.615,5004,2.862,5005,4.526,5006,2.862,5007,4.526,5008,2.862,5009,4.526,5010,2.862,5011,4.526,5012,4.526,5013,2.862,5014,4.526,5015,2.862,5016,4.526,5017,2.862,5018,4.526,5019,4.526,5020,2.862,5021,4.526,5022,6.383,5023,2.862,5024,4.526,5025,2.862,5026,4.526,5027,2.862,5028,2.862,5029,2.862,5030,8.029,5031,6.953,5032,4.526,5033,4.526,5034,5.615,5035,4.526,5036,2.862,5037,2.862,5038,2.862,5039,2.862,5040,2.862,5041,2.862,5042,2.862,5043,2.862,5044,2.862,5045,2.862,5046,2.862,5047,2.862,5048,2.862,5049,2.862,5050,2.862,5051,2.862,5052,2.862,5053,2.862]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":476,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.0.0/0",{"_index":3075,"title":{},"body":{"classes/Keyrings.html":{}}}],["0.0.11",{"_index":3940,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":3949,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3978,"title":{},"body":{"dependencies.html":{}}}],["0.41.1",{"_index":3943,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3948,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3982,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3973,"title":{},"body":{"dependencies.html":{}}}],["000000000000000000000000",{"_index":1726,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["01",{"_index":5001,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["07/schema",{"_index":4978,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":257,"title":{"classes/AbstractSettingsService-1.html":{}},"body":{"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1&sort%5bsubject%5d=1",{"_index":4374,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["1.0.0",{"_index":3975,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3939,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3953,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":3938,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":3968,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":3981,"title":{},"body":{"dependencies.html":{}}}],["1.2.37",{"_index":4189,"title":{},"body":{"properties.html":{}}}],["1.4.0",{"_index":3991,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":3985,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":3951,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":3961,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3337,"title":{},"body":{"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.3",{"_index":3936,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":3935,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":3930,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3934,"title":{},"body":{"dependencies.html":{}}}],["10.4.8",{"_index":3931,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":4187,"title":{},"body":{"overview.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1000",{"_index":653,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"interfaces/TokenData.html":{}}}],["10y",{"_index":3097,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["11",{"_index":3763,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["11.0.0",{"_index":3954,"title":{},"body":{"dependencies.html":{}}}],["11.0.2",{"_index":3962,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1331,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["12.1.0",{"_index":3976,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":3662,"title":{},"body":{"classes/ResetByCodeDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["14.1.2",{"_index":3959,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":4943,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["16",{"_index":1329,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["19",{"_index":4185,"title":{},"body":{"overview.html":{}}}],["1980",{"_index":4942,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1y",{"_index":1020,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":4039,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.2",{"_index":3929,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":3986,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":3933,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":3990,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":5011,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["200",{"_index":619,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["201",{"_index":2385,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":4954,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":5004,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":5000,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["22",{"_index":4188,"title":{},"body":{"overview.html":{}}}],["24",{"_index":983,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["25",{"_index":1691,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["256",{"_index":1334,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["3",{"_index":2575,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":3942,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":3966,"title":{},"body":{"dependencies.html":{}}}],["3.17.0",{"_index":3987,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":3932,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3628,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["30000",{"_index":4443,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["31",{"_index":4186,"title":{},"body":{"overview.html":{}}}],["3600",{"_index":982,"title":{},"body":{"injectables/AuthService.html":{}}}],["3f4ac",{"_index":3667,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["4",{"_index":1572,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":3974,"title":{},"body":{"dependencies.html":{}}}],["4.15.3",{"_index":3964,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3956,"title":{},"body":{"dependencies.html":{}}}],["4.9.0",{"_index":3989,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1400,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["404",{"_index":1563,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["465",{"_index":773,"title":{},"body":{"modules/AppModule.html":{}}}],["5",{"_index":975,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":3417,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.4.1",{"_index":3960,"title":{},"body":{"dependencies.html":{}}}],["5.8.2",{"_index":3947,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":4051,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":594,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["5000",{"_index":2915,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":1656,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["53",{"_index":4370,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["587",{"_index":775,"title":{},"body":{"modules/AppModule.html":{}}}],["5f7b1b3b7f7b1b3b7f7b1b3b",{"_index":3174,"title":{},"body":{"classes/Logger.html":{}}}],["6.0.0",{"_index":3988,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":3946,"title":{},"body":{"dependencies.html":{}}}],["6.9.16",{"_index":3970,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":654,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/GithubUpdate.html":{}}}],["604800",{"_index":3623,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["66d80ab41821baca9bf965b2",{"_index":266,"title":{},"body":{"classes/ActivationDto.html":{},"classes/FusionDto.html":{}}}],["7",{"_index":984,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.1.0",{"_index":3957,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3980,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":3604,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["8",{"_index":831,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["8.0.7",{"_index":3937,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":3972,"title":{},"body":{"dependencies.html":{}}}],["8.16.0",{"_index":3941,"title":{},"body":{"dependencies.html":{}}}],["8.8.2",{"_index":3965,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["900",{"_index":3647,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["99",{"_index":4049,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["999999",{"_index":1361,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["9]+/.test(current",{"_index":689,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["9]+\\.[0",{"_index":688,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["9_",{"_index":4125,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["9a",{"_index":402,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":761,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["__dirname",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"injectables/MigrationsService.html":{}}}],["_checkmigrationlockfile",{"_index":3293,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_common/abstracts/abstract.controller",{"_index":430,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":4435,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":825,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":239,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_common/abstracts/dto/custom",{"_index":513,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":2109,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":372,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":135,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/data/api",{"_index":3081,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["_common/data/console",{"_index":1000,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":432,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":886,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":636,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["_common/errors/validationexception",{"_index":2528,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":2651,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["_common/filters/mongoose",{"_index":729,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/guards/auth.guard",{"_index":727,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/pick",{"_index":443,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/observers/shutdown.observer",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/dto",{"_index":732,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/object",{"_index":446,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/plugins/mongoose/auto",{"_index":2244,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["_common/types/agent.type",{"_index":888,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":295,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":449,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":3895,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":2790,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_debug",{"_index":1466,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_dto/_parts/additionalfields.dto",{"_index":2793,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/agents.dto",{"_index":560,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/ask",{"_index":1292,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["_dto/change",{"_index":1294,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["_dto/config.dto",{"_index":2785,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/delete",{"_index":1194,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/execute",{"_index":1186,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/filestorage.dto",{"_index":1969,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_dto/form.dto",{"_index":2077,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":2367,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_dto/jobs.dto",{"_index":2996,"title":{},"body":{"controllers/JobsController.html":{}}}],["_dto/keyrings.dto",{"_index":3148,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["_dto/parts/security.part.dto",{"_index":565,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/reset",{"_index":1297,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["_dto/sync",{"_index":1189,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_enum/action",{"_index":1192,"title":{},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["_enum/types",{"_index":2056,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1714,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":2237,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_enums/state.enum",{"_index":2983,"title":{},"body":{"classes/Jobs.html":{}}}],["_enums/states.enum",{"_index":2239,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_exception",{"_index":1868,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_executemigrations",{"_index":3294,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_id",{"_index":122,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitInfoPart.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_loadmigrationsfiles",{"_index":3295,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_loadmigrationsfiles(currenttimestamp",{"_index":3300,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_metadata",{"_index":3459,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_middlewares/ensure",{"_index":2660,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["_migrateemployeenumbertoarray",{"_index":1821,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["_model",{"_index":181,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["_options",{"_index":2903,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parent",{"_index":3839,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["_parts",{"_index":4501,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":2319,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":2240,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":4486,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/concerned",{"_index":2984,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["_parts/data.part.schema",{"_index":3171,"title":{},"body":{"classes/Logger.html":{}}}],["_parts/inetorgperson.dto",{"_index":2318,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":4488,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":2238,"title":{},"body":{"classes/Identities.html":{}}}],["_queue",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["_req",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":2742,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/filestorage.schema",{"_index":2034,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["_schemas/form.schema",{"_index":2165,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":2368,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["_schemas/jobs.schema",{"_index":3035,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["_schemas/logger.schema",{"_index":3190,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["_schemas/tasks.schema",{"_index":3816,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["_service",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{}}}],["_services/transformers",{"_index":1971,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_validation",{"_index":2372,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["_writemigrationlockfile",{"_index":3296,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["_writemigrationlockfile(migrationkey",{"_index":3303,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["a.match(/\\d{10",{"_index":3369,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["abortearly",{"_index":2852,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["abortsignal.timeout(1000",{"_index":676,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstract.service",{"_index":98,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractschema",{"_index":119,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["abstractservice",{"_index":66,"title":{"injectables/AbstractService.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:17",{"_index":91,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:18",{"_index":92,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:19",{"_index":88,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:20",{"_index":90,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservicecontext",{"_index":80,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["abstractserviceschema",{"_index":179,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:130",{"_index":230,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:16",{"_index":3147,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["abstractserviceschema:165",{"_index":215,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:17",{"_index":556,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:207",{"_index":235,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:24",{"_index":198,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:269",{"_index":237,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:27",{"_index":557,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:330",{"_index":220,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:35",{"_index":224,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:45",{"_index":210,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:51",{"_index":232,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:60",{"_index":226,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:96",{"_index":228,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["abstractsettingsservice",{"_index":176,"title":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["abstractsettingsservice:13",{"_index":3242,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstractsettingsservice:16",{"_index":3238,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstractsettingsservice:22",{"_index":3243,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstractsettingsservice:7",{"_index":3244,"title":{},"body":{"injectables/MailadmService.html":{}}}],["abstraite",{"_index":4392,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acc",{"_index":2586,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["acc[err.path",{"_index":2854,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["acc[groupindex",{"_index":2578,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex].elements.push",{"_index":2581,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["accent",{"_index":4593,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accepted",{"_index":3631,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access_token",{"_index":977,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["access_token_expires_in",{"_index":946,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":947,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":4339,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{}}}],["accompagnement",{"_index":4350,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":4320,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["account.dto",{"_index":1306,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["account.dto.ts",{"_index":2875,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["account.dto.ts:7",{"_index":2877,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["accéder",{"_index":4400,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acls",{"_index":1915,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["action",{"_index":1877,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["actions",{"_index":4839,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["actiontype",{"_index":1191,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.identity_create",{"_index":1247,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_delete].includes",{"_index":1248,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_password_change",{"_index":1461,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_password_reset",{"_index":1538,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_update",{"_index":1246,"title":{},"body":{"controllers/BackendsController.html":{}}}],["activation",{"_index":1438,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{}}}],["activation(@res",{"_index":2283,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation(res",{"_index":2270,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.controller",{"_index":2658,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["activation.controller.ts",{"_index":2269,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.controller.ts:18",{"_index":2274,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["activation.service",{"_index":2277,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"modules/IdentitiesModule.html":{}}}],["activationdto",{"_index":260,"title":{"classes/ActivationDto.html":{}},"body":{"classes/ActivationDto.html":{},"controllers/IdentitiesActivationController.html":{}}}],["active",{"_index":4025,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["active/desactive",{"_index":2272,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["adapter",{"_index":789,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":2582,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["added",{"_index":1245,"title":{},"body":{"controllers/BackendsController.html":{}}}],["added.name",{"_index":1249,"title":{},"body":{"controllers/BackendsController.html":{}}}],["addhttpserver",{"_index":3735,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["addhttpserver(server",{"_index":3737,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["additional",{"_index":2381,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["additionalfields",{"_index":2206,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":280,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":2291,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{}}}],["additionalfieldspartdtostub",{"_index":4485,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":297,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{}}}],["additionalfilters",{"_index":4819,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionnel",{"_index":4905,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":2392,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["administrateurs",{"_index":4312,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adresse",{"_index":3762,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["aes",{"_index":1333,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["affichage",{"_index":4283,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":4831,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affiche",{"_index":1167,"title":{},"body":{"controllers/BackendsController.html":{}}}],["affirmer",{"_index":4542,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterall(async",{"_index":4523,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":4521,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["agent",{"_index":327,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentcreatequestions",{"_index":299,"title":{"classes/AgentCreateQuestions.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/CliModule.html":{}}}],["agents",{"_index":344,"title":{"classes/Agents.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{}}}],["agents.command",{"_index":1602,"title":{},"body":{"modules/CliModule.html":{}}}],["agents.controller",{"_index":547,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":551,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.security.secretkey",{"_index":915,"title":{},"body":{"controllers/AuthController.html":{}}}],["agents.service",{"_index":451,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/_schemas/agents.schema",{"_index":1196,"title":{},"body":{"controllers/BackendsController.html":{}}}],["agents/agents.module",{"_index":1270,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["agents/agents.service",{"_index":1195,"title":{},"body":{"controllers/BackendsController.html":{}}}],["agentscommand",{"_index":347,"title":{"classes/AgentsCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscommand.registerwithsubcommands",{"_index":553,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscontroller",{"_index":386,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agentscontroller.projection",{"_index":465,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatecommand",{"_index":330,"title":{"classes/AgentsCreateCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentscreatedto",{"_index":323,"title":{"classes/AgentsCreateDto.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentscreatedto:17",{"_index":529,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:22",{"_index":522,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:27",{"_index":523,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:32",{"_index":525,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:37",{"_index":528,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:43",{"_index":527,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:48",{"_index":521,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:58",{"_index":526,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:63",{"_index":524,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":397,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentsmodule",{"_index":530,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":378,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{}}}],["agentsservice",{"_index":325,"title":{"injectables/AgentsService.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"overview.html":{}}}],["agentstate",{"_index":3789,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":3791,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstatelist",{"_index":3783,"title":{},"body":{"classes/StatePart.html":{}}}],["agentsupdatedto",{"_index":418,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agenttype",{"_index":852,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["aide",{"_index":1500,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["aident",{"_index":4541,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ainsi",{"_index":4679,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":4307,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":4720,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":4972,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":4803,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":4709,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":2526,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":2791,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":2794,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":2326,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["aliases",{"_index":4191,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aller",{"_index":4090,"title":{},"body":{"index.html":{}}}],["allerrors",{"_index":2529,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":580,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["allons",{"_index":4469,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allowednetworks",{"_index":3068,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["already",{"_index":1013,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MigrationsService.html":{}}}],["alternatif",{"_index":3602,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["alternative",{"_index":3545,"title":{},"body":{"controllers/PasswdController.html":{}}}],["amazonwebservicess3storageconfig",{"_index":1637,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["amount",{"_index":3612,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["améliorant",{"_index":4701,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":4726,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":4691,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":4601,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":4704,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annotations",{"_index":4708,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":4074,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["any).filename",{"_index":3870,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["any).type",{"_index":2843,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["any)?.id",{"_index":2951,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":3154,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["aperçu",{"_index":4588,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":617,"title":{"additional-documentation/filtres-api.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{}}}],["apibearerauth",{"_index":637,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["apicreatedecorator",{"_index":431,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/KeyringsController.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":2082,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":2373,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apicreatedecorator(identitiesupsertdto",{"_index":2709,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":3114,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator",{"_index":434,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":479,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(filestoragedto",{"_index":2002,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":2088,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":2425,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":3118,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apifileuploaddecorator",{"_index":1967,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apifileuploaddecorator(fileuploaddto",{"_index":1978,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apioperation",{"_index":638,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["apipaginateddecorator",{"_index":437,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":464,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(filestoragedto",{"_index":1982,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":2083,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":2398,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(jobsdto",{"_index":3001,"title":{},"body":{"controllers/JobsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":3115,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiparam",{"_index":426,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apiproperty",{"_index":275,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty()@isarray()@isstring({each",{"_index":4134,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["apiproperty({description",{"_index":2887,"title":{},"body":{"classes/InitManyDto.html":{}}}],["apiproperty({enum",{"_index":1871,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({example",{"_index":838,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/InitAccountDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["apiproperty({type",{"_index":1895,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":639,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["apiquery({name",{"_index":625,"title":{},"body":{"controllers/AppController.html":{}}}],["apireadresponsedecorator",{"_index":439,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":473,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(filestoragedto",{"_index":1988,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":2085,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":2401,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apireadresponsedecorator(jobsdto",{"_index":3006,"title":{},"body":{"controllers/JobsController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":3117,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":640,"title":{},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["apisession",{"_index":600,"title":{"classes/ApiSession.html":{}},"body":{"classes/ApiSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["apitags",{"_index":427,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{}}}],["apitags('core",{"_index":1733,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('core/agents",{"_index":452,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('core/auth",{"_index":891,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('core/backends",{"_index":1206,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apitags('core/filestorage",{"_index":1974,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apitags('core/jobs",{"_index":2999,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('core/keyrings",{"_index":3112,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":2080,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":3254,"title":{},"body":{"controllers/ManagementController.html":{}}}],["apitags('management/identities",{"_index":2280,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["apitags('management/identities/jsonforms",{"_index":2482,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["apitags('management/identities/validation",{"_index":2744,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["apitags('management/passwd",{"_index":3518,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apitags('settings",{"_index":3229,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{}}}],["apiupdatedecorator",{"_index":440,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":477,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(filestorageupdatedto",{"_index":2001,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":2087,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":2409,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["apiurl",{"_index":4806,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app",{"_index":630,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["app.controller",{"_index":721,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":635,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/GithubUpdate.html":{}}}],["app_filter",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["app_guard",{"_index":724,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":725,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":612,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/GithubUpdate.html":{}}}],["appel",{"_index":4678,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":4791,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":4798,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":4647,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["application",{"_index":1629,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":4902,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["application/octet",{"_index":3861,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["application/pdf",{"_index":3853,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["applications",{"_index":4076,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appliquer",{"_index":3537,"title":{},"body":{"controllers/PasswdController.html":{}}}],["appliquer'})@apiresponse({status",{"_index":3489,"title":{},"body":{"controllers/PasswdController.html":{}}}],["appmodule",{"_index":702,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":4692,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriés",{"_index":4298,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["appservice",{"_index":634,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/GithubUpdate.html":{},"overview.html":{}}}],["après",{"_index":3636,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":4604,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":4088,"title":{},"body":{"index.html":{}}}],["argon2",{"_index":562,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":991,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":1026,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":4630,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["argumentmetadata",{"_index":1778,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["arguments",{"_index":345,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["argumentshost",{"_index":586,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["array",{"_index":288,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/SyncIdentitiesDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["array.from(filesmap.values",{"_index":2866,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["array.isarray(data",{"_index":679,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["array.isarray(employeenumber",{"_index":1840,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["array.isarray(employeenumbers",{"_index":4123,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["arraynotempty",{"_index":1712,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["arrondi",{"_index":5020,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":4515,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":4689,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":4512,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ascii",{"_index":1519,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ask",{"_index":1495,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asked",{"_index":1377,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asking",{"_index":1362,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken(asktoken",{"_index":1479,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken.mail",{"_index":1486,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktoken.uid",{"_index":1480,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["asktokendto",{"_index":833,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["assertions",{"_index":4458,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assigned",{"_index":4816,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":4817,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assure",{"_index":4561,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assurez",{"_index":4916,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":4617,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asyncquery",{"_index":1142,"title":{},"body":{"controllers/BackendsController.html":{}}}],["atimestamp",{"_index":3368,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["attachment",{"_index":3868,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["attendez",{"_index":4920,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":4888,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":4918,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":4926,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":2146,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":2812,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":2779,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributes",{"_index":282,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes'})@isoptional",{"_index":3925,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["attributes[key",{"_index":2836,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":2807,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributs",{"_index":2299,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":2124,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":2125,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":2126,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":2127,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":2128,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":1347,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":4727,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":930,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":931,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1745,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":845,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":3061,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":847,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":895,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":851,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":960,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":854,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["authguard('jwt",{"_index":816,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":921,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":882,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":1112,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":4773,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementplugin",{"_index":2243,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["autoincrementpluginoptions",{"_index":1079,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["autoincrementplugintrackerspec",{"_index":1113,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["automatique",{"_index":4886,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":4802,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":4318,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autres",{"_index":1477,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":2298,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["avec",{"_index":1430,"title":{},"body":{"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoir",{"_index":4984,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":4495,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["await",{"_index":246,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["awesome",{"_index":3944,"title":{},"body":{"dependencies.html":{}}}],["ayant",{"_index":4891,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["b",{"_index":3367,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["b.match(/\\d{10",{"_index":3371,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["backend",{"_index":1118,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backendcodesenum",{"_index":3998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backendname",{"_index":3919,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backendresultinfointerface",{"_index":1114,"title":{"interfaces/BackendResultInfoInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["backendresultinterface",{"_index":1117,"title":{"interfaces/BackendResultInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backends",{"_index":1132,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends'})@apiresponse({status",{"_index":3484,"title":{},"body":{"controllers/PasswdController.html":{}}}],["backends.command",{"_index":1607,"title":{},"body":{"modules/CliModule.html":{}}}],["backends.controller",{"_index":1266,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":1188,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1746,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscommand",{"_index":1120,"title":{"classes/BackendsCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{}}}],["backendscommand.registerwithsubcommands",{"_index":1611,"title":{},"body":{"modules/CliModule.html":{}}}],["backendscontroller",{"_index":1133,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backendsmodule",{"_index":1257,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":1124,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["backendssyncallcommand",{"_index":1127,"title":{"classes/BackendsSyncallCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["bad",{"_index":1399,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception",{"_index":633,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(\"la",{"_index":2415,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["badrequestexception('identity",{"_index":2411,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["badrequestexception('impossible",{"_index":1497,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('invalid",{"_index":690,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('missing",{"_index":2716,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["badrequestexception(`invalid",{"_index":680,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["barre",{"_index":4829,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":4851,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":4036,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["base64",{"_index":1488,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["based",{"_index":2577,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["baser",{"_index":4970,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":4073,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":350,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":4280,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["basée",{"_index":4863,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":4862,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":4618,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["beforeall(async",{"_index":4518,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeeach(async",{"_index":4531,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["below",{"_index":3629,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["besoin",{"_index":4951,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":4591,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["bien",{"_index":4333,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":1897,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":4982,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":3652,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["blockingconnection",{"_index":807,"title":{},"body":{"modules/AppModule.html":{}}}],["body",{"_index":395,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body('schema",{"_index":2489,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["body.action",{"_index":1232,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.code",{"_index":3531,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.id",{"_index":1233,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.id2",{"_index":2450,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["body.inetorgperson.cn",{"_index":2375,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.displayname",{"_index":2379,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.employeetype",{"_index":2374,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.givenname",{"_index":2378,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.inetorgperson.sn",{"_index":2376,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.payload",{"_index":1235,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.state",{"_index":2420,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["body.status",{"_index":2285,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["body.token",{"_index":3530,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.uid",{"_index":3524,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body?.employeetype",{"_index":2501,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["bodyparser",{"_index":1642,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":3659,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":3656,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["boite",{"_index":3544,"title":{},"body":{"controllers/PasswdController.html":{}}}],["bon",{"_index":4562,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":270,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Identities.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["booléen",{"_index":4996,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":535,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["bouton",{"_index":4796,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":4836,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["break",{"_index":2845,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["browse",{"_index":4183,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4180,"title":{},"body":{"modules.html":{}}}],["btimestamp",{"_index":3370,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["buffer.middleware.ts",{"_index":3651,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["builder.vue",{"_index":4740,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["buildyup",{"_index":2787,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["buildyup(schema",{"_index":2849,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["bullmodule",{"_index":712,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmodule.forrootasync",{"_index":804,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmq",{"_index":97,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"interfaces/ExecuteJobOptions.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["c",{"_index":1402,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cache",{"_index":643,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["cahier",{"_index":4214,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calculer",{"_index":4652,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":4856,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["callhandler",{"_index":1855,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["camelcase",{"_index":5021,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":5023,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["capacités",{"_index":4431,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":4673,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caracteres",{"_index":3764,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["caractères",{"_index":5031,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":5034,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cart",{"_index":4360,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":4460,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["case",{"_index":2844,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["catch",{"_index":249,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["catch((e",{"_index":1444,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["catch(error.validationerror",{"_index":3435,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":584,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":2752,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["ce",{"_index":2820,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ceci",{"_index":4422,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":4675,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":4598,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":4595,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cert",{"_index":1645,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["certaine",{"_index":4892,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":4763,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":4545,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cet",{"_index":4660,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":4429,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":4765,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":4923,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["chalk",{"_index":3312,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["chalk.bold",{"_index":3362,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["champ",{"_index":2304,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":2293,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":165,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{}}}],["change(@body",{"_index":3521,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(body",{"_index":3480,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwddto",{"_index":1448,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["changed",{"_index":3526,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changement",{"_index":1447,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["changepassworddto",{"_index":1273,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["changepwdatnextlogin",{"_index":3674,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["changing",{"_index":1467,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["channel",{"_index":1198,"title":{},"body":{"controllers/BackendsController.html":{}}}],["chaque",{"_index":2675,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["characters",{"_index":3619,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["charactères",{"_index":4924,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":4824,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":4215,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":4694,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":5030,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["check",{"_index":1932,"title":{},"body":{"classes/Filestorage.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":4788,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checked",{"_index":3598,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["checking",{"_index":4712,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["checkinitoutdated",{"_index":1592,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["checkpwned",{"_index":3584,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["chemin",{"_index":4775,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":4297,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["children",{"_index":1751,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["chunk",{"_index":3880,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks",{"_index":3878,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks.push(buffer.from(chunk",{"_index":3881,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["ci",{"_index":4584,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cipher",{"_index":1482,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.final('base64",{"_index":1489,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.getauthtag().tostring('base64",{"_index":1492,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipher.update",{"_index":1485,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cipherdata",{"_index":1284,"title":{"interfaces/CipherData.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ciphers",{"_index":781,"title":{},"body":{"modules/AppModule.html":{}}}],["ciphertext",{"_index":1484,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cl",{"_index":1350,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["clarifier",{"_index":4494,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["classe",{"_index":2817,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cleardatabase",{"_index":3402,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearsession",{"_index":952,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":962,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli/agents.command",{"_index":548,"title":{},"body":{"modules/AgentsModule.html":{}}}],["client",{"_index":4402,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["climodule",{"_index":1598,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["close",{"_index":1242,"title":{},"body":{"controllers/BackendsController.html":{}}}],["cluster_agentsmodule",{"_index":538,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":539,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":540,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":703,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":705,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":704,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":922,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":925,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":923,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":924,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":1258,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_exports",{"_index":1260,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_imports",{"_index":1261,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":1259,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":1599,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_imports",{"_index":1600,"title":{},"body":{"modules/CliModule.html":{}}}],["cluster_coremodule",{"_index":1735,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1736,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1737,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule",{"_index":2030,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_exports",{"_index":2031,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_providers",{"_index":2032,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2162,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2163,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule",{"_index":2503,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_exports",{"_index":2505,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_providers",{"_index":2504,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":2632,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_exports",{"_index":2633,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_imports",{"_index":2635,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["cluster_identitiesmodule_providers",{"_index":2634,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":2756,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":2757,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":2758,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_jobsmodule",{"_index":3031,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":3032,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":3033,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule",{"_index":3138,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_exports",{"_index":3139,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":3140,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3187,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3188,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3256,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3258,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":3257,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_migrationsmodule",{"_index":3285,"title":{},"body":{"modules/MigrationsModule.html":{},"overview.html":{}}}],["cluster_migrationsmodule_providers",{"_index":3286,"title":{},"body":{"modules/MigrationsModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":3559,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_imports",{"_index":3561,"title":{},"body":{"modules/PasswdModule.html":{}}}],["cluster_passwdmodule_providers",{"_index":3560,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":3720,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_exports",{"_index":3721,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":3722,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":3812,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":3813,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":3814,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":2303,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["clés",{"_index":4640,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":4092,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":4336,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1345,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["code.dto",{"_index":1309,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["code.dto.ts",{"_index":3661,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:11",{"_index":3664,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:15",{"_index":3666,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.dto.ts:7",{"_index":3668,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["code.tostring(16",{"_index":1511,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["codes.enum.ts",{"_index":4000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":2129,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collection",{"_index":1105,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Logger.html":{}}}],["collections",{"_index":3424,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":3426,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["command",{"_index":315,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commander",{"_index":322,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["commandrunner",{"_index":316,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["comme",{"_index":4247,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":1888,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":4707,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comments",{"_index":1912,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["commit",{"_index":645,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["commonlogdb",{"_index":2942,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":2958,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":4912,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":4243,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":4287,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["compact",{"_index":4988,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compagny/nestjs_module_factorydrive",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["compagny/nestjs_module_restools",{"_index":429,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"dependencies.html":{}}}],["compile",{"_index":4538,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":4725,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":4459,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["completed",{"_index":1252,"title":{},"body":{"controllers/BackendsController.html":{},"miscellaneous/enumerations.html":{}}}],["completer",{"_index":1571,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["completion",{"_index":4282,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexity",{"_index":3606,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["complémentaires",{"_index":4963,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["complétée",{"_index":2418,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["component",{"_index":2130,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":4645,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":4605,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":2294,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["composant",{"_index":4731,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":4738,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":4083,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":4845,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":4314,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":4072,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":4711,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["compte",{"_index":1392,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["comptes",{"_index":1591,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["concerned",{"_index":3166,"title":{},"body":{"classes/Logger.html":{}}}],["concernedto",{"_index":2968,"title":{},"body":{"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopart",{"_index":1612,"title":{"classes/ConcernedToPart.html":{}},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernedtopartdto",{"_index":1620,"title":{"classes/ConcernedToPartDTO.html":{}},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopartschema",{"_index":1618,"title":{},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernées",{"_index":4919,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":4814,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conditions",{"_index":4544,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('factorydrive.options",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.options",{"_index":803,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.uri",{"_index":802,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('jwt.options.secret",{"_index":3054,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mongoose.options",{"_index":797,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.plugins",{"_index":792,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.uri",{"_index":799,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configinstance",{"_index":1627,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["configmodule",{"_index":714,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["configmodule.forroot",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configobjectattributedto",{"_index":1703,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectobjectclassdto",{"_index":1716,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectschemadto",{"_index":1717,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1709,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configs/identities/jsonforms",{"_index":2491,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/jsonforms/${schema",{"_index":2554,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/validations",{"_index":2600,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["configs/identities/validations/${key}.yml",{"_index":2803,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["configservice",{"_index":83,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":805,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('ioredis.port",{"_index":806,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('jwt.options",{"_index":944,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":942,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":5053,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":4227,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":4586,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":2639,"title":{},"body":{"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configure(consumer",{"_index":2640,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["configurer",{"_index":4603,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":4917,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":4893,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":4782,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":2899,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":2908,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":3420,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":4414,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":116,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connection_error",{"_index":4028,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connexion",{"_index":4420,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["considered",{"_index":3609,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["console",{"_index":1727,"title":{},"body":{"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('erreur",{"_index":1863,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["console.error('error",{"_index":342,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('agent",{"_index":338,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["console.log('data",{"_index":1039,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('dynamic",{"_index":2611,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('error",{"_index":2403,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["console.log('generating",{"_index":2608,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('hard",{"_index":2610,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('indexes",{"_index":1861,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["console.log('keyring",{"_index":3091,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('modifi",{"_index":1594,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["console.log('payload",{"_index":1028,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('req",{"_index":3004,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log('this.storage",{"_index":668,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["console.log('validations",{"_index":1803,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["console.log(`error",{"_index":2603,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`file",{"_index":2559,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`generating",{"_index":2557,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`writing",{"_index":2596,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(e",{"_index":1027,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":4441,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(identity",{"_index":1131,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["console.log(user",{"_index":3161,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":2898,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":999,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{}}}],["const",{"_index":170,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":5025,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":5024,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":4452,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constructeur",{"_index":4409,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"injectables/SettingsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":1786,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":566,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(jobs.name",{"_index":3040,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":3149,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(@injectmodel(logger.name",{"_index":3195,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(@injectmodel(settings.name",{"_index":242,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["constructor(@injectmodel(tasks.name",{"_index":3821,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(_model",{"_index":195,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["constructor(_options",{"_index":2956,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":3043,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["constructor(data",{"_index":604,"title":{},"body":{"classes/ApiSession.html":{}}}],["constructor(identitymodel",{"_index":1849,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["constructor(moduleref",{"_index":381,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["constructor(mongo",{"_index":1823,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{}}}],["constructor(payload",{"_index":3889,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{}}}],["constructor(protected",{"_index":348,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["constructor(request",{"_index":1775,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construire",{"_index":4751,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":4749,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":4784,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consumer",{"_index":2643,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["consumer.apply(ensureidentitiesindexmiddleware).forroutes('/management/identities",{"_index":2663,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["contenant",{"_index":2301,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":4827,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":5028,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":4901,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contentsecuritypolicy",{"_index":1660,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":4870,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":160,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":2821,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contient",{"_index":4835,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":2825,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["control",{"_index":2566,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["controller",{"_index":385,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":453,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":892,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":1207,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1734,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('filestorage",{"_index":1975,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["controller('form",{"_index":2081,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":2281,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["controller('jobs",{"_index":3000,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('keyrings",{"_index":3113,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('logger",{"_index":3186,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":3255,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('management/identities/jsonforms",{"_index":2483,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["controller('management/identities/validation",{"_index":2745,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('passwd",{"_index":3517,"title":{},"body":{"controllers/PasswdController.html":{}}}],["controller('settings",{"_index":3719,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('settings/mail",{"_index":3228,"title":{},"body":{"controllers/MailadmController.html":{}}}],["controller('settings/passwdadm",{"_index":3578,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["controller('settings/sms",{"_index":3776,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["controller('tasks",{"_index":3811,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":387,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convertis",{"_index":4695,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":5022,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["conçu",{"_index":4302,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":4066,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":3950,"title":{},"body":{"dependencies.html":{}}}],["copying",{"_index":2546,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["core",{"_index":1730,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1747,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1732,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":324,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{}}}],["core/agents/_enum/agent",{"_index":3790,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/_parts/security.part.schema",{"_index":374,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/_parts/state.part.schema",{"_index":373,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":546,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["core/agents/agents.module",{"_index":934,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{}}}],["core/agents/agents.service",{"_index":326,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":938,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":939,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.module",{"_index":1609,"title":{},"body":{"modules/CliModule.html":{}}}],["core/auth/auth.service",{"_index":883,"title":{},"body":{"controllers/AuthController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["core/backends/_enum/action",{"_index":1290,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/backends/backends.module",{"_index":1608,"title":{},"body":{"modules/CliModule.html":{},"modules/IdentitiesModule.html":{},"modules/PasswdModule.html":{}}}],["core/backends/backends.service",{"_index":1125,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/core.module",{"_index":715,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":4807,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/filestorage/_dto/filestorage.dto",{"_index":2684,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/_enum/fs",{"_index":1903,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/_schemas/filestorage.schema",{"_index":3858,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["core/filestorage/_services/transformers",{"_index":2036,"title":{},"body":{"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/filestorage/filestorage.module",{"_index":2652,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["core/filestorage/filestorage.service",{"_index":2371,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["core/jobs/_enums/state.enum",{"_index":3019,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["core/jobs/_schemas/jobs.schema",{"_index":1291,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":3083,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":3084,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.module",{"_index":1606,"title":{},"body":{"modules/CliModule.html":{}}}],["core/keyrings/keyrings.service",{"_index":3085,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["corecontroller",{"_index":1728,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["coremodule",{"_index":706,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":810,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1731,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"overview.html":{}}}],["corps",{"_index":4880,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correctement",{"_index":5052,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspond",{"_index":4964,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":2297,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["corresponding",{"_index":2584,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["correspondra",{"_index":4674,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["corrupted",{"_index":1016,"title":{},"body":{"injectables/AuthService.html":{}}}],["count",{"_index":185,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":207,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["count(res",{"_index":2339,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["counter",{"_index":1108,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["cours",{"_index":878,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MigrationsService.html":{}}}],["couvre",{"_index":4683,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create",{"_index":186,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":459,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":213,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["create(res",{"_index":393,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":433,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/KeyringsController.html":{}}}],["createassertions",{"_index":4568,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":4571,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["created",{"_index":339,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["createdat",{"_index":2944,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":2896,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions(service",{"_index":4572,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":4457,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":4532,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":4526,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":4462,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":4655,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createtokens",{"_index":953,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":964,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":343,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{}}}],["creation",{"_index":4736,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crucial",{"_index":4670,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":4461,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crud.controller",{"_index":2655,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["crud.controller.ts",{"_index":2335,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:102",{"_index":2350,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:127",{"_index":2354,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:158",{"_index":2352,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:183",{"_index":2345,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:198",{"_index":2356,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:213",{"_index":2359,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:234",{"_index":2366,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:253",{"_index":2353,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.controller.ts:61",{"_index":2347,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["crud.service",{"_index":1300,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["crudmode",{"_index":4746,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crypto",{"_index":889,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.createcipheriv(passwdservice.token_algorithm",{"_index":1483,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.createdecipheriv(passwdservice.token_algorithm",{"_index":1514,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(13).tostring('hex",{"_index":1578,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_iv).tostring('base64",{"_index":1481,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_k).tostring('hex",{"_index":1425,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cryptographiques",{"_index":4292,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":4415,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":1864,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":4516,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":4454,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":2390,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":4479,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":591,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Identities.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.getrequest",{"_index":3436,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":593,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.inetorgperson.employeetype",{"_index":2265,"title":{},"body":{"classes/Identities.html":{}}}],["curl",{"_index":4372,"title":{},"body":{"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":624,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/MigrationsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["currentmajor",{"_index":693,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentminor",{"_index":694,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentpatch",{"_index":695,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currenttimestamp",{"_index":3302,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["currenttimestamp.tostring",{"_index":3351,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["currentversion",{"_index":685,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentversion.split('.').map(number",{"_index":700,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["customfields",{"_index":351,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Identities.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":484,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto:8",{"_index":503,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":4386,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cwd",{"_index":3357,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["cycle",{"_index":4239,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cypherdata",{"_index":1504,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.iv",{"_index":1515,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.k",{"_index":1526,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.iv",{"_index":1507,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.k",{"_index":1508,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.tag",{"_index":1509,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["d",{"_index":1429,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":4475,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":4837,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":4606,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":4651,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'attente",{"_index":4396,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":4699,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":864,"title":{},"body":{"controllers/AuthController.html":{}}}],["d'autres",{"_index":4662,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":4391,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":4236,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'erreur",{"_index":4706,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":4244,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identitées",{"_index":1146,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["d'identités",{"_index":2735,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":4685,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'initialisation",{"_index":1524,"title":{},"body":{"interfaces/CipherData.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["d'installation",{"_index":4345,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":5049,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":2818,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":2822,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":4875,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":4830,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":2465,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":2364,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'utilisation",{"_index":4347,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":4715,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":4992,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d\\'envoyer",{"_index":3549,"title":{},"body":{"controllers/PasswdController.html":{}}}],["daemon",{"_index":4222,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["daemon|sesame",{"_index":629,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["dans",{"_index":1491,"title":{},"body":{"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":216,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["data.access_token",{"_index":1011,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.attributes",{"_index":2805,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.code",{"_index":1531,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.identity?.security?.secretkey",{"_index":1043,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.length",{"_index":2446,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"controllers/PasswdController.html":{}}}],["data.mime",{"_index":3860,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["data.newpassword",{"_index":1539,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.objectclasses",{"_index":2804,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.password",{"_index":567,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security",{"_index":569,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security.secretkey",{"_index":570,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.token",{"_index":1530,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["data.toobject().state",{"_index":2386,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["data.validations",{"_index":2806,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data[0].name.replace(/^v",{"_index":683,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["data[key",{"_index":611,"title":{},"body":{"classes/ApiSession.html":{}}}],["data[key][index",{"_index":2841,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["database",{"_index":2907,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["datapart",{"_index":1759,"title":{"classes/DataPart.html":{}},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datapartschema",{"_index":1764,"title":{},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datastate",{"_index":1889,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["datastatus",{"_index":2207,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["datastatusenum",{"_index":2219,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/enumerations.html":{}}}],["datastatusenum.inactive",{"_index":2251,"title":{},"body":{"classes/Identities.html":{}}}],["datax=omit(data.toobject,['_id",{"_index":3539,"title":{},"body":{"controllers/PasswdController.html":{}}}],["date",{"_index":1583,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["date.now",{"_index":3096,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["date.settime(date.gettime",{"_index":1593,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["db",{"_index":2901,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["dbmigration",{"_index":3341,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["dbmigration.timestamp.tostring",{"_index":3348,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["de",{"_index":875,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["debug",{"_index":783,"title":{},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":2934,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_debug",{"_index":3525,"title":{},"body":{"controllers/PasswdController.html":{}}}],["debug['_errors",{"_index":1800,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":3437,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["decipher",{"_index":1513,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":1516,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decipher.update(token",{"_index":1518,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["declarations",{"_index":534,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decodeuricomponent(token",{"_index":1502,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypte",{"_index":1499,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypting",{"_index":1521,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypttoken(token",{"_index":1525,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["decrypttokenwithcode(token",{"_index":1501,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["deepobject",{"_index":2671,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["def",{"_index":2839,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["default",{"_index":286,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"injectables/TransformersFilestorageService.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["default_context",{"_index":3172,"title":{},"body":{"classes/Logger.html":{}}}],["default_data_type",{"_index":1762,"title":{},"body":{"classes/DataPart.html":{}}}],["default_message",{"_index":3898,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_status_code",{"_index":3897,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_third_party_auth",{"_index":369,"title":{},"body":{"classes/Agents.html":{}}}],["default_validations",{"_index":3899,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["defaultfile",{"_index":2540,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["defaultfiles",{"_index":2532,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["defaults",{"_index":784,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaultsrc",{"_index":1662,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1680,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":182,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"injectables/MailadmService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["delai",{"_index":1590,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["delete",{"_index":187,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":408,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":217,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["deleteassertions",{"_index":4580,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":4582,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":435,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deletedflag",{"_index":2208,"title":{},"body":{"classes/Identities.html":{}}}],["deleteerrorassertions(service",{"_index":4583,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteidentities",{"_index":1135,"title":{},"body":{"controllers/BackendsController.html":{}}}],["deleteidentities(res",{"_index":1140,"title":{},"body":{"controllers/BackendsController.html":{}}}],["deleteidentitiesdto",{"_index":1141,"title":{"classes/DeleteIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/DeleteIdentitiesDto.html":{}}}],["delivered",{"_index":905,"title":{},"body":{"controllers/AuthController.html":{}}}],["demande",{"_index":1436,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["demi",{"_index":1574,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["demon",{"_index":4387,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["dense",{"_index":4794,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["departmentnumber",{"_index":4093,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["dependencies",{"_index":532,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":1357,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitManyDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1705,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["describe('create",{"_index":4570,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":4581,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":4551,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":4556,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":4564,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":4506,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":4574,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":267,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessous",{"_index":4758,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":4585,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["destfusionid",{"_index":2209,"title":{},"body":{"classes/Identities.html":{}}}],["destination",{"_index":2259,"title":{},"body":{"classes/Identities.html":{}}}],["destinées",{"_index":4890,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["determine",{"_index":2576,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["deux",{"_index":2255,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":979,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":948,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":767,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["devez",{"_index":4921,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devtokenpath",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":2786,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":2810,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["différentes",{"_index":4069,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":4780,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dir",{"_index":786,"title":{},"body":{"modules/AppModule.html":{}}}],["directconnection",{"_index":1676,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["directives",{"_index":1661,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directory",{"_index":2859,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/ActivationDto.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":4023,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disablelogs",{"_index":1226,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["disablelogsquery",{"_index":1151,"title":{},"body":{"controllers/BackendsController.html":{}}}],["discut",{"_index":4363,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["disks",{"_index":1647,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["displayname",{"_index":352,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponible",{"_index":5051,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":4783,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":3867,"title":{},"body":{"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":4825,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["divers",{"_index":4625,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":4543,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["divulguer",{"_index":1421,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["doc",{"_index":4388,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":121,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":1101,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["documentation",{"_index":2674,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/IdentitiesPhotoController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documents",{"_index":4558,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doesn't",{"_index":2580,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["doit",{"_index":4301,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":4288,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["donc",{"_index":3512,"title":{},"body":{"controllers/PasswdController.html":{}}}],["done",{"_index":3046,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MigrationsService.html":{}}}],["done(new",{"_index":3063,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":3065,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":4070,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dont_sync",{"_index":4055,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dossier",{"_index":4480,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doublon.controller",{"_index":2659,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["doublon.controller.ts",{"_index":2427,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.controller.ts:27",{"_index":2439,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.controller.ts:40",{"_index":2433,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["doublon.service",{"_index":2442,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["doublons",{"_index":2437,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["driver",{"_index":1648,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["dto",{"_index":2279,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["dto.ts",{"_index":262,"title":{},"body":{"classes/ActivationDto.html":{}}}],["dto.ts:11",{"_index":274,"title":{},"body":{"classes/ActivationDto.html":{}}}],["dto.ts:7",{"_index":269,"title":{},"body":{"classes/ActivationDto.html":{}}}],["dtovalidationpipe",{"_index":731,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["du",{"_index":1338,"title":{},"body":{"interfaces/CipherData.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dump_package_config",{"_index":4013,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dupont",{"_index":4940,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":4910,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dynamic",{"_index":2607,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfig",{"_index":2861,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles",{"_index":2605,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles].filter((file",{"_index":2612,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["dynamicconfigpath",{"_index":2553,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicmodule",{"_index":1743,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{}}}],["dynamique",{"_index":4607,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":4602,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":4615,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d{1,3}(?:\\.\\d{1,3}){3}|\\[(?:[0",{"_index":759,"title":{},"body":{"modules/AppModule.html":{}}}],["début",{"_index":5045,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenchement",{"_index":4241,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":4352,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":4690,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":4762,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":4934,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":4337,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":5029,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":4649,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":4616,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":4779,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":4930,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":4878,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":4251,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["déj",{"_index":2417,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["délais",{"_index":4357,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":4514,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":4086,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":4663,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":4399,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":4496,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":4424,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":4973,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":4589,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":4686,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":2678,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":4857,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":4319,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":4218,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":4311,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":250,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["e.stack",{"_index":3391,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["e?.response?.error?.response",{"_index":1473,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.job?.status",{"_index":1472,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.status",{"_index":1469,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["each",{"_index":516,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["ecriture",{"_index":4444,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effectue",{"_index":2740,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["effectuées",{"_index":4949,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":4316,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["element",{"_index":2583,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elements",{"_index":2564,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elle",{"_index":4397,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":306,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":5040,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emailattribute",{"_index":3585,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["emetteur",{"_index":3209,"title":{},"body":{"classes/MailSettingsDto.html":{},"classes/SmsSettingsDto.html":{}}}],["emitter",{"_index":154,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["emplacements",{"_index":4838,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":1819,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber",{"_index":1834,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber.map(string",{"_index":1842,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumber1700395200",{"_index":1817,"title":{"classes/EmployeeNumber1700395200.html":{}},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumber[0",{"_index":1841,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["employeenumbers",{"_index":4122,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["employeenumbers.every((employeenumber",{"_index":4124,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["employeetype",{"_index":2500,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["empty",{"_index":1412,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":877,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/MigrationsService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":273,"title":{},"body":{"classes/ActivationDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["enabled",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":1788,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["encodeuricomponent(ciphertext",{"_index":1494,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["endpoint",{"_index":2676,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enr",{"_index":245,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["enr.parameters",{"_index":248,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["enregistre",{"_index":1490,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["enregistrement",{"_index":4250,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":4986,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ensureidentitiesindexmiddleware",{"_index":1846,"title":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"modules/IdentitiesModule.html":{}}}],["entier.example",{"_index":5006,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entite",{"_index":2328,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["entity",{"_index":1067,"title":{},"body":{"injectables/AuthService.html":{}}}],["entityid",{"_index":377,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["entre",{"_index":4068,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entropy",{"_index":3607,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"dependencies.html":{}}}],["entrée",{"_index":4801,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":1874,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{}}}],["enumerations",{"_index":3993,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":4770,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":4818,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":4815,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":4792,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":4771,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envoi",{"_index":1352,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["envoie",{"_index":1341,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"interfaces/TokenData.html":{}}}],["envoy",{"_index":1393,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["envoyées",{"_index":4927,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["equal",{"_index":2721,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["err",{"_index":1204,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TransformersFilestorageService.html":{}}}],["err.errors",{"_index":3444,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":3450,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":3445,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":3449,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":3447,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":2855,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["erreur",{"_index":1395,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":4620,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["error",{"_index":341,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ShutdownObserver.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('erreur",{"_index":4657,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('error",{"_index":3397,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["error('moduleref",{"_index":107,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["error('request",{"_index":169,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error(message",{"_index":2916,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":3431,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":1811,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":1809,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":1805,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":2406,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["error.inner.reduce((acc",{"_index":2853,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["error.message",{"_index":2287,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["error.property",{"_index":1807,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":1813,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.stack",{"_index":2538,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["error.validationerror",{"_index":3430,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":2404,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":1802,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":1810,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":1815,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":1812,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorhttpstatuscode",{"_index":1222,"title":{},"body":{"controllers/BackendsController.html":{}}}],["erroronnotfound",{"_index":2702,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["errors",{"_index":1790,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.map((error",{"_index":1801,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":1865,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["espaces",{"_index":5044,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["est",{"_index":1349,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1166,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":4259,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":4281,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["etre",{"_index":3644,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["event",{"_index":1161,"title":{},"body":{"controllers/BackendsController.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eventemitter2",{"_index":89,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["ex",{"_index":1066,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":279,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"classes/VerifyTokenDto.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":4438,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["examplequeueservice",{"_index":4436,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["exception",{"_index":588,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":3443,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":582,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:5",{"_index":587,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":2753,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":2755,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":2754,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":596,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":597,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1789,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":583,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":4629,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":3157,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["exclusivemaximum",{"_index":5010,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":5008,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["execute",{"_index":1155,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{}}}],["executed",{"_index":3365,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["executejob",{"_index":1136,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejob(res",{"_index":1148,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejobdto",{"_index":1149,"title":{"classes/ExecuteJobDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["executejoboptions",{"_index":1885,"title":{"interfaces/ExecuteJobOptions.html":{}},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["executioncontext",{"_index":1856,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["exemple",{"_index":4451,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":4466,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exhaustive",{"_index":4309,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":4284,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":1014,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["existe",{"_index":1424,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["existssync",{"_index":997,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(dynamicconfigpath",{"_index":2555,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(filepath",{"_index":2560,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(hardconfigpath",{"_index":2556,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":2827,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":3440,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expiresin",{"_index":1019,"title":{},"body":{"injectables/AuthService.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explode",{"_index":2672,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":537,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["exposition",{"_index":4235,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":152,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1942,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["express.user",{"_index":158,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expression",{"_index":5036,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["extended",{"_index":3658,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["extends",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":4300,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extraction",{"_index":4698,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":3051,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":3056,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extrasearch",{"_index":1986,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["extrasearch['hidden",{"_index":1987,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f",{"_index":4041,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f:]+)\\]):(\\d",{"_index":760,"title":{},"body":{"modules/AppModule.html":{}}}],["f]{24",{"_index":472,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":404,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})/raw",{"_index":1993,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/raw')@apiparam({name",{"_index":1954,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/state",{"_index":2410,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["f]{24})/state')@apiparam({name",{"_index":2358,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["fa",{"_index":403,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":4067,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facsimiletelephonenumber",{"_index":4094,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["factorydrive",{"_index":1630,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["factorydrivemodule",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["factorydrivemodule.forrootasync",{"_index":808,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["facultatifs",{"_index":4884,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":1255,"title":{},"body":{"controllers/BackendsController.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/enumerations.html":{}}}],["fails",{"_index":2781,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["falsetoken",{"_index":1426,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["false})@get('/get",{"_index":626,"title":{},"body":{"controllers/AppController.html":{}}}],["false})@isoptional",{"_index":4138,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["famille",{"_index":4913,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fast",{"_index":3952,"title":{},"body":{"dependencies.html":{}}}],["fatal",{"_index":2940,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":2939,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fetch(`https://api.github.com/repos/libertech",{"_index":673,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["fiabilit",{"_index":4324,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":2828,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":4498,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":1082,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":2181,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":2192,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["field]=search",{"_index":4368,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["fieldname",{"_index":2184,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":2169,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":514,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1756,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["fields.dto.ts:8",{"_index":1757,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":4089,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["file.match(/\\d{10",{"_index":3360,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["file.schema.endswith('.yml",{"_index":2613,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileinterceptor",{"_index":1965,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["fileisrequired",{"_index":1980,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filename",{"_index":3363,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["filename=\"${(data",{"_index":3869,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["fileobj",{"_index":2617,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.file.replace('.ui.yml",{"_index":2619,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj.file.replace('.yml",{"_index":2868,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fileobj.path}/${fileobj.file",{"_index":2618,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.source",{"_index":2869,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filepath",{"_index":2498,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["filepaths",{"_index":2621,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["filepaths.find((path",{"_index":2627,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["files",{"_index":2531,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["files.filter((file",{"_index":3358,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["files.includes(file",{"_index":2539,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files.length",{"_index":2615,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files.sort((a",{"_index":3366,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["filesmap",{"_index":2862,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filesmap.has(target.file",{"_index":2865,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filesmap.set(target.file",{"_index":2864,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filestorage",{"_index":1919,"title":{"classes/Filestorage.html":{}},"body":{"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["filestorage.controller",{"_index":2035,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.name",{"_index":2037,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.service",{"_index":1972,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestorage.service.ts",{"_index":3827,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:13",{"_index":3834,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:19",{"_index":3840,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:45",{"_index":3848,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:58",{"_index":3846,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:71",{"_index":3842,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:8",{"_index":3857,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:86",{"_index":3844,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:99",{"_index":3837,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage/filestorage.module",{"_index":1749,"title":{},"body":{"modules/CoreModule.html":{}}}],["filestoragecontroller",{"_index":1937,"title":{"controllers/FilestorageController.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{}}}],["filestoragecontroller.projection",{"_index":1983,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["filestoragecreatedto",{"_index":1904,"title":{"classes/FilestorageCreateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestoragecreatedto:26",{"_index":2029,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:31",{"_index":2026,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:37",{"_index":2027,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:42",{"_index":2022,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:47",{"_index":2024,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:52",{"_index":2021,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:57",{"_index":2025,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:62",{"_index":2023,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:67",{"_index":2028,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:72",{"_index":2020,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragedto",{"_index":1916,"title":{"classes/FilestorageDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filestoragemodule",{"_index":1738,"title":{"modules/FilestorageModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestorageschema",{"_index":1933,"title":{},"body":{"classes/Filestorage.html":{},"modules/FilestorageModule.html":{}}}],["filestorageschema.virtual('filename').get(function",{"_index":1935,"title":{},"body":{"classes/Filestorage.html":{}}}],["filestorageservice",{"_index":1973,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"overview.html":{}}}],["filestorageupdatedto",{"_index":1917,"title":{"classes/FilestorageUpdateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fileuploaddto",{"_index":1893,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["filled",{"_index":4793,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":212,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter.dto",{"_index":2688,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["filter.dto.ts",{"_index":3466,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filter.dto.ts:1",{"_index":3467,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":415,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filterquery",{"_index":208,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":2669,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["filters[=subject]=53",{"_index":4369,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filters[^sequence]=/53",{"_index":4376,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filters[key",{"_index":2718,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filters[prefix",{"_index":4367,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["filterschema",{"_index":413,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filtersquery",{"_index":2701,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filtersquery.length",{"_index":2715,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["filtres",{"_index":2343,"title":{"additional-documentation/filtres-api.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/filtres-api.html":{}}}],["fin",{"_index":4804,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":1078,"title":{},"body":{"injectables/AuthService.html":{}}}],["finalpath",{"_index":2626,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["finaux",{"_index":4348,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":188,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["find(filter",{"_index":221,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findall",{"_index":2509,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findandcount",{"_index":189,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":225,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findandcountassertions",{"_index":4548,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":4553,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions(service",{"_index":4554,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":190,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":227,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["findbyid(id",{"_index":3703,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidassertions",{"_index":4555,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":4557,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions(service",{"_index":4559,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":191,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":229,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findone(schema",{"_index":2514,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findoneassertions",{"_index":4560,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":4565,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions(service",{"_index":4567,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fingerprint",{"_index":1910,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Identities.html":{}}}],["finishedat",{"_index":2969,"title":{},"body":{"classes/Jobs.html":{}}}],["firemessage(observer",{"_index":1197,"title":{},"body":{"controllers/BackendsController.html":{}}}],["first",{"_index":2201,"title":{},"body":{"classes/FusionDto.html":{}}}],["fix",{"_index":2918,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixes",{"_index":4614,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flatten",{"_index":2588,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["flexible",{"_index":4234,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fois",{"_index":4612,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonction",{"_index":2711,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":4356,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":4229,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":4473,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":4563,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":2342,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fontsrc",{"_index":1667,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbiddenexception",{"_index":987,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["form",{"_index":2038,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":2166,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":2167,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":2079,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":1896,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formcontroller",{"_index":2063,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["formcontroller.projection",{"_index":2084,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":2090,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formcreatedto:12",{"_index":2120,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":2115,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":2121,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":2114,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":2117,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":2119,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":2118,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":2116,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":2065,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formdto)@apiresponse({type",{"_index":2067,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":2122,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{}}}],["formfieldpart",{"_index":2147,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{}}}],["formfieldpartschema",{"_index":2159,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["formmodule",{"_index":2161,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":2059,"title":{},"body":{"classes/Form.html":{},"controllers/IdentitiesJsonFormsController.html":{}}}],["formschema",{"_index":2061,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{}}}],["formsectiondto",{"_index":2110,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{}}}],["formsectionpart",{"_index":2057,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formsectionpartschema",{"_index":2049,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formservice",{"_index":2078,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["formtypelist",{"_index":2104,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formtypes",{"_index":2054,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":2060,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formulaire",{"_index":4732,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":4385,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":2074,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["forwardref",{"_index":2644,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["found",{"_index":2412,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["found.dto.ts",{"_index":3454,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:6",{"_index":3456,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":3455,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["fourni",{"_index":1346,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":4310,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":4540,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":4393,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":2344,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":3756,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fr",{"_index":1702,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["fr/${project}/tags",{"_index":674,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["framesrc",{"_index":1665,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":4747,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":4265,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["front",{"_index":1348,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["frontend",{"_index":4226,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontpwd",{"_index":1631,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["fs",{"_index":824,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fs/promises",{"_index":3319,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["fstype",{"_index":1901,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["fstype.file",{"_index":1906,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["fstypelist",{"_index":1902,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["function",{"_index":1102,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/MigrationsService.html":{},"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fusion",{"_index":2258,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{}}}],["fusion(body",{"_index":2429,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["fusiondto",{"_index":2197,"title":{"classes/FusionDto.html":{}},"body":{"classes/FusionDto.html":{},"controllers/IdentitiesDoublonController.html":{}}}],["fusionne",{"_index":2431,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["fusionnée",{"_index":2261,"title":{},"body":{"classes/Identities.html":{}}}],["fusionnées",{"_index":2253,"title":{},"body":{"classes/Identities.html":{}}}],["garantir",{"_index":4322,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gcm",{"_index":1335,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["generate",{"_index":1110,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/typealiases.html":{}}}],["generate(@res",{"_index":2488,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(res",{"_index":2462,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(undefined",{"_index":2516,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["generateall",{"_index":2460,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["generateall(@res",{"_index":2485,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generateall(res",{"_index":2469,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["genere",{"_index":1476,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["generic_error",{"_index":4026,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic_stopped",{"_index":4027,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gestion",{"_index":4231,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get('/get",{"_index":665,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["get(':_id([0",{"_index":401,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(':schema",{"_index":2494,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get(':schema')@apioperation({summary",{"_index":2734,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["get('count",{"_index":2407,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('count')@apioperation({summary",{"_index":2340,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('duplicates",{"_index":2443,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["get('duplicates')@apioperation({summary",{"_index":2435,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["get('get",{"_index":3230,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get('get')@apioperation({summary",{"_index":3219,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get('getdeleted",{"_index":2397,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('getdeleted')@apipaginateddecorator(undefined",{"_index":2349,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["get('getpolicies",{"_index":3536,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('getpolicies')@apioperation({summary",{"_index":3488,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('ioutdated",{"_index":3557,"title":{},"body":{"controllers/PasswdController.html":{}}}],["get('ioutdated')@apioperation({summary",{"_index":3511,"title":{},"body":{"controllers/PasswdController.html":{}}}],["get('path",{"_index":1989,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path')@apireadresponsedecorator(filestoragedto",{"_index":1948,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw",{"_index":1999,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw')@apireadresponsedecorator(filestoragedto",{"_index":1951,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('photo/raw",{"_index":2696,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["get('session",{"_index":898,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined)@apioperation({summary",{"_index":873,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apioperation({summary",{"_index":616,"title":{},"body":{"controllers/AppController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":416,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(@res",{"_index":3231,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["get(identity.toobject",{"_index":1368,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["get(res",{"_index":3218,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getdeleted",{"_index":2336,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["getdeleted(res",{"_index":2348,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["getdoublons",{"_index":2428,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getdoublons(@res",{"_index":2444,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getdoublons(res",{"_index":2434,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["getinfo",{"_index":614,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@res",{"_index":662,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["getinfo(res",{"_index":615,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":3403,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":3409,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":4536,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpaddingforcode",{"_index":1575,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["getparameter",{"_index":183,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["getparameter(settingname",{"_index":201,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["getparams",{"_index":3236,"title":{},"body":{"injectables/MailadmService.html":{}}}],["getpayload",{"_index":3887,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getpolicies",{"_index":3476,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(@res",{"_index":3538,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(res",{"_index":3487,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getqueue",{"_index":95,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getredisconnectiontoken",{"_index":99,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrequest",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath",{"_index":2683,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":2697,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["getservicename",{"_index":150,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":954,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":966,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":4060,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":3916,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken'})@isstring",{"_index":3914,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["getvalidationerrors",{"_index":3429,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":3433,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":3888,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["github",{"_index":681,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["githubupdate",{"_index":644,"title":{"interfaces/GithubUpdate.html":{}},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["givenname",{"_index":4095,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["glob",{"_index":3311,"title":{},"body":{"injectables/MigrationsService.html":{},"dependencies.html":{}}}],["glob(`./jobs/*.js",{"_index":3356,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["good",{"_index":3605,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["goodcomplexity",{"_index":3586,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["grand",{"_index":4327,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["greater",{"_index":4379,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["grille",{"_index":4778,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["group",{"_index":2570,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["groupindex",{"_index":2573,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["guides",{"_index":4346,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":4947,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":2464,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":5047,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":1498,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":4975,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":4861,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":4752,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":4220,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":4946,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["handlebars",{"_index":3955,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":736,"title":{},"body":{"modules/AppModule.html":{}}}],["hard",{"_index":2604,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfig",{"_index":2860,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["hardconfigfiles",{"_index":2601,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfigpath",{"_index":2551,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hash",{"_index":561,"title":{},"body":{"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["hash('sha256",{"_index":909,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["hash(data.password",{"_index":568,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.$set.password",{"_index":577,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.password",{"_index":574,"title":{},"body":{"injectables/AgentsService.html":{}}}],["haslowercase",{"_index":3587,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasnumbers",{"_index":3588,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasspecialchars",{"_index":3589,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hastransformer",{"_index":3862,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["hasuppercase",{"_index":3590,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hdfddyf18a",{"_index":3665,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["header",{"_index":4900,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":881,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":918,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1632,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":1634,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["hibp",{"_index":3958,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["hiddenquery",{"_index":1958,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["hooks",{"_index":4729,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["horizontallayout",{"_index":2579,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["host",{"_index":585,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/SmsSettingsDto.html":{}}}],["host.switchtohttp",{"_index":592,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["html",{"_index":3875,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["http",{"_index":3742,"title":{},"body":{"injectables/ShutdownObserver.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http.server",{"_index":3738,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["http:///identities",{"_index":4945,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities/upsert",{"_index":4962,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1685,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":4976,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["http://localhost/search?limit=9999&filters%5b%5esequence%5d=%2f53%2f&sort%5bmetadata.createdat%5d",{"_index":4373,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["httpexception",{"_index":1286,"title":{},"body":{"interfaces/CipherData.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception('aucune",{"_index":1560,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["httpexception.createbody",{"_index":3441,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["https",{"_index":1644,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://monsite.com",{"_index":3635,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["https://randomkeygen.com",{"_index":1681,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://stackoverflow.com/questions/67314808/how",{"_index":657,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["httpservers",{"_index":3734,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["httpstatus",{"_index":422,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":2388,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["httpstatus.bad_request",{"_index":1470,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":463,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["httpstatus.not_acceptable",{"_index":1223,"title":{},"body":{"controllers/BackendsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":3457,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":471,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["héritent",{"_index":4474,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["iauthmoduleoptions",{"_index":932,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":4493,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["icon",{"_index":2170,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":4769,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":263,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AgentsController.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FusionDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["id1",{"_index":2199,"title":{},"body":{"classes/FusionDto.html":{}}}],["id2",{"_index":2200,"title":{},"body":{"classes/FusionDto.html":{}}}],["identifiant",{"_index":4914,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identit",{"_index":1561,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite",{"_index":4961,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identites",{"_index":1587,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities",{"_index":1301,"title":{"classes/Identities.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitManyDto.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities'})@isarray",{"_index":2888,"title":{},"body":{"classes/InitManyDto.html":{}}}],["identities).state",{"_index":2725,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["identities.dto",{"_index":1190,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identities.dto.ts",{"_index":1767,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["identities.dto.ts:7",{"_index":1769,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["identities.jsonforms.controller",{"_index":2507,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["identities.jsonforms.service",{"_index":2481,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identities.length",{"_index":1559,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities.map((identity",{"_index":1566,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities.name",{"_index":2662,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":2760,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":2743,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/_schemas/identities.schema",{"_index":1302,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities/identities",{"_index":1299,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identities/identities.module",{"_index":3263,"title":{},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}}}],["identitiesactivationcontroller",{"_index":2267,"title":{"controllers/IdentitiesActivationController.html":{}},"body":{"controllers/IdentitiesActivationController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesactivationservice",{"_index":2275,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiescontroller",{"_index":4535,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescreatedto",{"_index":2288,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiescreatedto:17",{"_index":2456,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:23",{"_index":2454,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:29",{"_index":2452,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:35",{"_index":2455,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:41",{"_index":2453,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:60",{"_index":2451,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescrudcontroller",{"_index":2334,"title":{"controllers/IdentitiesCrudController.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiescrudcontroller.projection",{"_index":2399,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["identitiescrudservice",{"_index":1298,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["identitiesdocument",{"_index":2248,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdoubloncontroller",{"_index":2426,"title":{"controllers/IdentitiesDoublonController.html":{}},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesdoublonservice",{"_index":2441,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{}}}],["identitiesdto",{"_index":2329,"title":{"classes/IdentitiesDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":4489,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesjsonformscontroller",{"_index":2457,"title":{"controllers/IdentitiesJsonFormsController.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identitiesjsonformsmodule",{"_index":2502,"title":{"modules/IdentitiesJsonformsModule.html":{}},"body":{"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesjsonformsservice",{"_index":2480,"title":{"injectables/IdentitiesJsonformsService.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesmodel",{"_index":4507,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1262,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesphotocontroller",{"_index":2638,"title":{"controllers/IdentitiesPhotoController.html":{}},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["identitiesschema",{"_index":2262,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":4471,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":2330,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":4491,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupsertcontroller",{"_index":2637,"title":{"controllers/IdentitiesUpsertController.html":{}},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitiesupsertdto",{"_index":2332,"title":{"classes/IdentitiesUpsertDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiesupsertservice",{"_index":2653,"title":{},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitiesvalidation",{"_index":4383,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":2730,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identitiesvalidationfilter",{"_index":2650,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["identitiesvalidationmodule",{"_index":2646,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":2369,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":268,"title":{},"body":{"classes/ActivationDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/FusionDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity._id",{"_index":902,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/TokenData.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":1049,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.decorator",{"_index":887,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.email",{"_index":903,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.get('inetorgperson.uid",{"_index":1568,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.displayname",{"_index":1391,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson.employeenumber",{"_index":1835,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["identity.inetorgperson.uid",{"_index":1390,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.inetorgperson?.employeenumber",{"_index":2692,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identity.inetorgperson?.employeetype",{"_index":2691,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identity.initinfo.initdate",{"_index":1582,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.initinfo.sentdate",{"_index":1584,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.initstate",{"_index":1581,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.save",{"_index":1585,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.state",{"_index":2413,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["identity.tojson",{"_index":1464,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identity.toobject",{"_index":1035,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity_create",{"_index":4015,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_delete",{"_index":4017,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_disable",{"_index":4020,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_enable",{"_index":4021,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_change",{"_index":4019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_reset",{"_index":4018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_update",{"_index":4016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identitycounter",{"_index":1109,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":1104,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":1059,"title":{},"body":{"injectables/AuthService.html":{}}}],["identitylifecycle",{"_index":2232,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.inactive",{"_index":2250,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitymailattribute",{"_index":1411,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{}}}],["identitymobileattribute",{"_index":1653,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["identitymodel",{"_index":1851,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["identitystate",{"_index":1312,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":3163,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.synced",{"_index":1450,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["identitystate.to_complete",{"_index":2387,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":4490,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_validate",{"_index":2414,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.unknown",{"_index":2249,"title":{},"body":{"classes/Identities.html":{}}}],["identité'})@apiresponse({status",{"_index":2273,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["identitée",{"_index":2389,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["identitées",{"_index":1175,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitManyDto.html":{}}}],["identités",{"_index":1555,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identités'})@apiresponse({status",{"_index":2432,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["ids",{"_index":2423,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{}}}],["ids.ids",{"_index":1558,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["ignoreexpiration",{"_index":3057,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":4669,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["image",{"_index":3855,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["imgsrc",{"_index":1668,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":4636,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implements",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/ShutdownObserver.html":{}}}],["implémentation",{"_index":4718,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":4610,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":4425,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":4432,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(`${__dirname}/${file",{"_index":3374,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["import(plugin.package).then((plugin",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["importance",{"_index":4666,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":4735,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["importe",{"_index":2710,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["imported",{"_index":4044,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imports",{"_index":549,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["impossible",{"_index":1544,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["in_progress",{"_index":4059,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive",{"_index":4034,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incluant",{"_index":4627,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inclure",{"_index":4904,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inconnu",{"_index":1475,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["incorrect",{"_index":1474,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["increment",{"_index":1089,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface",{"_index":2246,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["increment.interface.ts",{"_index":1081,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.plugin",{"_index":2245,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["incrementby",{"_index":1083,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{}}}],["index.middleware",{"_index":2661,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["index.middleware.ts",{"_index":1848,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["index.middleware.ts:13",{"_index":1854,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["index.middleware.ts:8",{"_index":1850,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{}}}],["indiquant",{"_index":4955,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":4903,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":4935,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individuel",{"_index":4716,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["indépendant",{"_index":4273,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inetorgperson",{"_index":2210,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":4492,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.employeenumber",{"_index":1839,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"classes/Identities.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.employeetype",{"_index":2266,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.uid",{"_index":1354,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgpersoncreatedto",{"_index":4130,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:103",{"_index":4168,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:14",{"_index":4161,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:21",{"_index":4164,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:26",{"_index":4165,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:32",{"_index":4162,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:37",{"_index":4174,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:42",{"_index":4163,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:47",{"_index":4166,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:52",{"_index":4167,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:57",{"_index":4169,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:62",{"_index":4170,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:68",{"_index":4171,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:73",{"_index":4172,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:78",{"_index":4173,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:83",{"_index":4175,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:88",{"_index":4176,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:9",{"_index":4177,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:93",{"_index":4178,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":2308,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":4487,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":2224,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["inetorgpersonupdatedto",{"_index":4159,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info.part.schema",{"_index":2242,"title":{},"body":{"classes/Identities.html":{}}}],["info.part.schema.ts",{"_index":2880,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["info.part.schema.ts:10",{"_index":2883,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["info.part.schema.ts:7",{"_index":2884,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["informations",{"_index":4882,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":620,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/GithubUpdate.html":{}}}],["infos'})@apiresponse({status",{"_index":618,"title":{},"body":{"controllers/AppController.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["init",{"_index":1553,"title":{},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["init(@body",{"_index":3541,"title":{},"body":{"controllers/PasswdController.html":{}}}],["init(body",{"_index":3491,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initaccount",{"_index":1439,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initaccount(initdto",{"_index":1432,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initaccountdto",{"_index":1304,"title":{"classes/InitAccountDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initdate",{"_index":2881,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["initdto.type",{"_index":1375,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initdto.uid",{"_index":1355,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initialisation",{"_index":1337,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initialise",{"_index":3493,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialisées",{"_index":3553,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initialize",{"_index":1446,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/TokenData.html":{}}}],["initialized",{"_index":2548,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"miscellaneous/enumerations.html":{}}}],["initinfo",{"_index":2211,"title":{},"body":{"classes/Identities.html":{}}}],["initinfo.initdate",{"_index":1596,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initinfopart",{"_index":2226,"title":{"classes/InitInfoPart.html":{}},"body":{"classes/Identities.html":{},"classes/InitInfoPart.html":{}}}],["initinfopartschema",{"_index":2227,"title":{},"body":{"classes/Identities.html":{},"classes/InitInfoPart.html":{}}}],["initmany",{"_index":3477,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(@body",{"_index":3551,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(body",{"_index":3496,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initmany(ids",{"_index":1556,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initmanydto",{"_index":1318,"title":{"classes/InitManyDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initreset",{"_index":3478,"title":{},"body":{"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{}}}],["initreset(@body",{"_index":3555,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(body",{"_index":3499,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(initdto",{"_index":1351,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initresetdto",{"_index":1314,"title":{"classes/InitResetDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["initstate",{"_index":1595,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["initstatesenum",{"_index":1320,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["initstatesenum.initialized",{"_index":1552,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["initstatesenum.nosent",{"_index":2252,"title":{},"body":{"classes/Identities.html":{}}}],["initstatesenum.sent",{"_index":1443,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["inittokenttl",{"_index":3591,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["inject",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AbstractService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ManagementService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"overview.html":{}}}],["injectconnection",{"_index":1829,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{}}}],["injectmodel",{"_index":238,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["injectmodel(form.name",{"_index":2196,"title":{},"body":{"injectables/FormService.html":{}}}],["injectmodel(identities.name",{"_index":1859,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["injectredis",{"_index":989,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["inline",{"_index":3873,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["input",{"_index":4787,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["inputs",{"_index":384,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["inquirer",{"_index":331,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inquirerservice",{"_index":317,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["instance",{"_index":3384,"title":{},"body":{"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instance.up",{"_index":3386,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["instanceof",{"_index":2405,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":4417,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instructions",{"_index":4755,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["int",{"_index":1373,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["integer",{"_index":5005,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["interactions",{"_index":4848,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interagir",{"_index":4403,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["internal",{"_index":598,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":2902,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloggeroptions",{"_index":2900,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloglevel",{"_index":2897,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":2894,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalservererrorexception",{"_index":1287,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["internalservererrorexception('une",{"_index":1543,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["interne",{"_index":855,"title":{},"body":{"controllers/AuthController.html":{}}}],["interorgperson.mail",{"_index":3601,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["interorgperson.mobile",{"_index":3633,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["intersectiontype",{"_index":2317,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["intersectiontype(customfieldsdto",{"_index":2290,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["introduction",{"_index":4448,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":2830,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":4398,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":4256,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":4724,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":4728,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":2383,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["invalid_credentials",{"_index":4030,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_json_response",{"_index":4031,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_login",{"_index":4029,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalide",{"_index":2833,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/inetOrgPerson.html":{}}}],["invalides",{"_index":2395,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["invitation",{"_index":3513,"title":{},"body":{"controllers/PasswdController.html":{}}}],["ioredis",{"_index":102,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":3979,"title":{},"body":{"dependencies.html":{}}}],["isarray",{"_index":515,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/InitManyDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isarray()@apiproperty({type",{"_index":1768,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{},"classes/SyncIdentitiesDto.html":{}}}],["isarray()@isstring({each",{"_index":3687,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["isarray()@type(undefined)@isstring({each",{"_index":4140,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isboolean",{"_index":276,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@apiproperty({example",{"_index":271,"title":{},"body":{"classes/ActivationDto.html":{},"classes/PasswordPoliciesDto.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":490,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":3284,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":3279,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":3126,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isdev",{"_index":765,"title":{},"body":{"modules/AppModule.html":{}}}],["isemail",{"_index":507,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/MailSettingsDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({example",{"_index":3207,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isemail()@apiproperty({required",{"_index":4148,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":488,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1713,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(actiontype",{"_index":1884,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isenum(configobjecttype",{"_index":1715,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(datastatusenum",{"_index":2322,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(formtypelist",{"_index":2112,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":2103,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":2182,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":2179,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(fstypelist",{"_index":1905,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["isenum(fstypelist)@isnotempty()@apiproperty({enum",{"_index":2017,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isenum(identitylifecycle",{"_index":2323,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(identitystate",{"_index":2320,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(initstatesenum",{"_index":2321,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isglobal",{"_index":747,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["isip",{"_index":3129,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":3130,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismimetype",{"_index":1899,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["ismongoid",{"_index":508,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@apiproperty",{"_index":1624,"title":{},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":519,"title":{},"body":{"classes/AgentsDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@isoptional()@apiproperty({example",{"_index":1880,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnotempty",{"_index":505,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePartDTO.html":{}}}],["isnotempty()@isenum(actiontype)@apiproperty({type",{"_index":1878,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnumber",{"_index":2145,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":2139,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isnumber()@apiproperty({example",{"_index":2891,"title":{},"body":{"classes/InitResetDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":2315,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":3794,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isnumber()@isoptional()@isenum(datastatusenum)@apiproperty({enum",{"_index":2306,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isoptional()@isenum(identitylifecycle)@apiproperty({enum",{"_index":2313,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isoptional()@isenum(initstatesenum)@apiproperty({enum",{"_index":2311,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject",{"_index":1758,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@apiproperty",{"_index":3013,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":2093,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":502,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":2107,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@validatenested()@type(undefined)@apiproperty({type",{"_index":2309,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":2172,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isoptional",{"_index":509,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isboolean()@apiproperty({type",{"_index":2007,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismimetype()@apiproperty({type",{"_index":2011,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismongoid()@apiproperty({type",{"_index":2009,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isobject()@apiproperty({type",{"_index":1882,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":4150,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@isstring()@apiproperty({type",{"_index":2004,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@type(undefined",{"_index":2728,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":2292,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":277,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataPartDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":2099,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isstring()@apiproperty()@isoptional",{"_index":4132,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":265,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/FusionDto.html":{},"classes/InitResetDto.html":{},"classes/MailSettingsDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{}}}],["isstring()@apiproperty({required",{"_index":4137,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1710,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":492,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isnotempty()@apiproperty({type",{"_index":2013,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":485,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":2095,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring({each",{"_index":3122,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isurl",{"_index":3213,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isurl({protocols",{"_index":3199,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["isvalidobjectid",{"_index":2707,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["isvalidobjectid(filter",{"_index":2719,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["it('should",{"_index":4552,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["items",{"_index":2295,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["iv",{"_index":1325,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["iverifyoptions",{"_index":3155,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":4354,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":4447,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":4587,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jeton",{"_index":863,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{}}}],["job",{"_index":1230,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.dto",{"_index":1187,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job.dto.ts",{"_index":1876,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:14",{"_index":1881,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:19",{"_index":1883,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:9",{"_index":1879,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":4442,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job:added",{"_index":1250,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:completed",{"_index":1253,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:failed",{"_index":1256,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job['status",{"_index":1471,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["jobid",{"_index":2970,"title":{},"body":{"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobname",{"_index":3923,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobs",{"_index":1165,"title":{"classes/Jobs.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{}}}],["jobs.controller",{"_index":3036,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":3037,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":2998,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":1268,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["jobscontroller",{"_index":2990,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobscontroller.projection",{"_index":3002,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobscreatedto",{"_index":3007,"title":{"classes/JobsCreateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobscreatedto:12",{"_index":3026,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:16",{"_index":3023,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:22",{"_index":3025,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:26",{"_index":3030,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:30",{"_index":3024,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:34",{"_index":3027,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:38",{"_index":3028,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:42",{"_index":3029,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobsdocument",{"_index":2986,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["jobsdto",{"_index":2995,"title":{"classes/JobsDto.html":{}},"body":{"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobsmodule",{"_index":1263,"title":{"modules/JobsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsoptions",{"_index":1892,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["jobsschema",{"_index":2988,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{}}}],["jobsservice",{"_index":2997,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["jobstate",{"_index":2980,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["jobstate.created",{"_index":2987,"title":{},"body":{"classes/Jobs.html":{}}}],["jobsupdatedto",{"_index":3020,"title":{"classes/JobsUpdateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["join",{"_index":2685,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["jour",{"_index":2362,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["jpegphoto",{"_index":4096,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["jpegphoto.jpg'].join",{"_index":2693,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["json",{"_index":822,"title":{},"body":{"injectables/AppService.html":{},"controllers/IdentitiesJsonFormsController.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":1070,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":1038,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":1076,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(plaintext",{"_index":1520,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.parse(readfilesync('package.json",{"_index":829,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":1010,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(result",{"_index":1505,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.stringify",{"_index":1023,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["json.stringify(data[key",{"_index":2847,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(object.values",{"_index":2857,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":2871,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(request.body",{"_index":1804,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["json.stringify(user",{"_index":906,"title":{},"body":{"controllers/AuthController.html":{}}}],["json.stringify(validations",{"_index":1796,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonform",{"_index":2544,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonformpath",{"_index":2593,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms",{"_index":2534,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms')}/${schema",{"_index":2595,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms/identities.jsonforms.module",{"_index":2649,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonforms/identities.jsonforms.service",{"_index":2648,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonschema",{"_index":2561,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required",{"_index":2568,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required.includes(key",{"_index":2569,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonwebtoken",{"_index":994,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":1798,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":3059,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":1073,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":1074,"title":{},"body":{"injectables/AuthService.html":{}}}],["justifi",{"_index":4362,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1684,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":859,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":3055,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":1048,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":1064,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":935,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":943,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":936,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":993,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":958,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":927,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["k",{"_index":1324,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(10",{"_index":1374,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(16",{"_index":1370,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["keep",{"_index":1106,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"classes/ApiSession.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{}}}],["key._id.tostring",{"_index":3099,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.match(/\\d{10",{"_index":3382,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["key.name",{"_index":3100,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat",{"_index":3093,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat.gettime",{"_index":3095,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.tojson",{"_index":3092,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.token",{"_index":3101,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyring",{"_index":3088,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyrings",{"_index":3066,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["keyrings.command",{"_index":1605,"title":{},"body":{"modules/CliModule.html":{}}}],["keyrings.controller",{"_index":3143,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":3144,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":3142,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":940,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["keyrings/keyrings.service",{"_index":1001,"title":{},"body":{"injectables/AuthService.html":{}}}],["keyringscommand",{"_index":1603,"title":{"classes/KeyringsCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscommand.registerwithsubcommands",{"_index":1610,"title":{},"body":{"modules/CliModule.html":{}}}],["keyringscontroller",{"_index":3102,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{}}}],["keyringscontroller.projection",{"_index":3116,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatecommand",{"_index":3087,"title":{"classes/KeyringsCreateCommand.html":{}},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscreatedto",{"_index":3082,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{}}}],["keyringscreatedto:14",{"_index":3137,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:18",{"_index":3134,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:21",{"_index":3136,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":3135,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatequestions",{"_index":1604,"title":{"classes/KeyringsCreateQuestions.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringsdocument",{"_index":3074,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":3105,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["keyringsmodule",{"_index":926,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":3076,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{}}}],["keyringsservice",{"_index":957,"title":{"injectables/KeyringsService.html":{}},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"overview.html":{}}}],["key}.yml",{"_index":2829,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["l",{"_index":1398,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["l'aide",{"_index":4874,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":4306,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":4294,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":4275,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":4979,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":4897,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":4332,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entrée",{"_index":5046,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":4684,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":4671,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":4800,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":2416,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/PasswdController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'identity",{"_index":1434,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["l'identité'})@apiresponse({status",{"_index":3494,"title":{},"body":{"controllers/PasswdController.html":{}}}],["l'init",{"_index":1431,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["l'initiation",{"_index":4596,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":4419,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":4600,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":4907,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":4909,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'orchestrateur",{"_index":4085,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":4667,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":4805,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'échec",{"_index":4628,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":4364,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":2363,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["la",{"_index":876,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":2131,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":4097,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":4658,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["langage",{"_index":4274,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":4263,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["last",{"_index":3346,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["lastbackendsync",{"_index":2212,"title":{},"body":{"classes/Identities.html":{}}}],["lastchangedat",{"_index":3780,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastmajor",{"_index":697,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastminor",{"_index":698,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastparam",{"_index":2920,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["lastpatch",{"_index":699,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["laststmp",{"_index":1385,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["lastsync",{"_index":2213,"title":{},"body":{"classes/Identities.html":{}}}],["lastupdatedat",{"_index":3271,"title":{},"body":{"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":3272,"title":{},"body":{"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastversion",{"_index":682,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastversion.split('.').map(number",{"_index":696,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["ldap",{"_index":4245,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":4075,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":862,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["le/les",{"_index":3483,"title":{},"body":{"controllers/PasswdController.html":{}}}],["legend",{"_index":533,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["len",{"_index":3592,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["length",{"_index":3626,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["les",{"_index":1164,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["less",{"_index":4380,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["lessthan",{"_index":5009,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["letters",{"_index":3613,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["leurs",{"_index":1168,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":2925,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["levées",{"_index":4330,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liaison",{"_index":4776,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["license",{"_index":4179,"title":{"license.html":{}},"body":{"properties.html":{}}}],["lifecycle",{"_index":2214,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifestep",{"_index":4764,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":4877,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["limit",{"_index":1643,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["limit=9999",{"_index":4375,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{}}}],["linkedto",{"_index":1911,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["lire",{"_index":4821,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":4702,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list_backends",{"_index":4012,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liste",{"_index":1145,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listerez",{"_index":4974,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":357,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["livrables",{"_index":4331,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":4358,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":2472,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["loader",{"_index":3331,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["loader.function",{"_index":3316,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["local",{"_index":375,"title":{},"body":{"classes/Agents.html":{},"interfaces/ConfigInstance.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["localstrategy",{"_index":928,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["localstrategy.name",{"_index":3159,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["location",{"_index":3327,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["lock",{"_index":3339,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["locklocation",{"_index":3291,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["log",{"_index":2932,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["log(message",{"_index":2931,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger(`${chalk.bold.red(migrationsservice.name)}\\x1b[33m",{"_index":3309,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["logger(backendscontroller.name",{"_index":1208,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(employeenumber1700395200.name",{"_index":1826,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["logger(identitiesvalidationservice.name",{"_index":2797,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["logger(jwtstrategy.name",{"_index":3049,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger(passwdcontroller.name",{"_index":3519,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":161,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":3191,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":1795,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`observer",{"_index":1202,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.debug(exception['message",{"_index":590,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error(`observer",{"_index":1205,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.name",{"_index":3192,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":3185,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger.verbose(`try",{"_index":3158,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger/logger.module",{"_index":1748,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggercontroller",{"_index":3182,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggerdocument",{"_index":3173,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1739,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggername",{"_index":1199,"title":{},"body":{"controllers/BackendsController.html":{}}}],["loggerschema",{"_index":3175,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{}}}],["loggerservice",{"_index":3184,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["logique",{"_index":4426,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":1640,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["logout",{"_index":848,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":917,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":858,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2906,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["longueur",{"_index":5033,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":1397,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lowercase",{"_index":3614,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lru",{"_index":642,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"dependencies.html":{}}}],["lrucache",{"_index":641,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lt",{"_index":1597,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["léments",{"_index":4433,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":4938,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["mail",{"_index":836,"title":{},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mail'})@apiresponse({status",{"_index":3221,"title":{},"body":{"controllers/MailadmController.html":{}}}],["mail'})@isstring",{"_index":841,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mailadmcontroller",{"_index":3215,"title":{"controllers/MailadmController.html":{}},"body":{"controllers/MailadmController.html":{},"modules/SettingsModule.html":{}}}],["mailadmservice",{"_index":738,"title":{"injectables/MailadmService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["mailattribute",{"_index":1366,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["mailer",{"_index":1336,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{}}}],["mailermodule",{"_index":734,"title":{},"body":{"modules/AppModule.html":{}}}],["mailermodule.forrootasync",{"_index":749,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":1303,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["mailsettingsdto",{"_index":3196,"title":{"classes/MailSettingsDto.html":{}},"body":{"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{}}}],["maintenabilit",{"_index":4703,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":4233,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":4328,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["mais",{"_index":2391,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["majuscule.example",{"_index":5043,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["management",{"_index":3251,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":3262,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":3253,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":4896,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/activation",{"_index":2278,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":4504,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/fusion.dto",{"_index":2440,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["management/identities/_dto/identities.dto",{"_index":4483,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/data",{"_index":2247,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["management/identities/_enums/init",{"_index":1321,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/TokenData.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":4484,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":1313,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_schemas/_parts/init",{"_index":2241,"title":{},"body":{"classes/Identities.html":{}}}],["management/identities/_schemas/identities.schema",{"_index":1858,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/PasswdController.html":{}}}],["management/identities/identities",{"_index":2276,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["management/identities/identities.module",{"_index":1267,"title":{},"body":{"modules/BackendsModule.html":{}}}],["management/identities/jsonforms",{"_index":2459,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["management/identities/upsert",{"_index":4958,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/validation",{"_index":2732,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["management/management.module",{"_index":716,"title":{},"body":{"modules/AppModule.html":{}}}],["management/passwd/_dto/init",{"_index":1305,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["management/passwd/_dto/reset",{"_index":1308,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["managementcontroller",{"_index":3249,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["managementmodule",{"_index":707,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":811,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":3252,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"overview.html":{}}}],["manager",{"_index":631,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["manipulation",{"_index":4228,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":4303,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manquant",{"_index":2813,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":2394,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manuellement",{"_index":1156,"title":{},"body":{"controllers/BackendsController.html":{}}}],["manuels",{"_index":4344,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["many.dto",{"_index":1319,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["many.dto.ts",{"_index":2886,"title":{},"body":{"classes/InitManyDto.html":{}}}],["many.dto.ts:8",{"_index":2889,"title":{},"body":{"classes/InitManyDto.html":{}}}],["map",{"_index":2048,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["map((group",{"_index":2587,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["masse",{"_index":2365,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["matches",{"_index":1900,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matches(/^\\/(?:\\.?[^\\/\\0",{"_index":1908,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["math.floor(index",{"_index":2574,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["matière",{"_index":4894,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":4382,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":3765,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":4998,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum",{"_index":4991,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":4999,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":4990,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":3766,"title":{},"body":{"classes/SmsSettingsDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxretriesperrequest",{"_index":1673,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":4772,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mdp",{"_index":1453,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mdp'})@apiresponse({status",{"_index":3573,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["meilleure",{"_index":4710,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memory",{"_index":3414,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["message",{"_index":329,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["messageevent",{"_index":1201,"title":{},"body":{"controllers/BackendsController.html":{}}}],["messages",{"_index":4705,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":2254,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"classes/AbstractSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"classes/MetadataDto.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":4511,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata['context",{"_index":2947,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":2949,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":2092,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{}}}],["metadatadto:12",{"_index":2108,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["metadatapart",{"_index":126,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["metadatapartdto",{"_index":2106,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{}}}],["metadatapartschema",{"_index":129,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["method",{"_index":659,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"injectables/MigrationsService.html":{}}}],["methode",{"_index":1549,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methodes",{"_index":1478,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["methodstubs",{"_index":4637,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":4592,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":4822,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["middlewareconsumer",{"_index":2641,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["migration",{"_index":3315,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migration.default",{"_index":3375,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrationkey",{"_index":3306,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations",{"_index":3292,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations.lock",{"_index":3324,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["migrations.service",{"_index":3289,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["migrations/migrations.module",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["migrations/migrations.service",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsmodule",{"_index":708,"title":{"modules/MigrationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MigrationsModule.html":{},"modules.html":{},"overview.html":{}}}],["migrationsmodule.register",{"_index":813,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsservice",{"_index":742,"title":{"injectables/MigrationsService.html":{}},"body":{"modules/AppModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"overview.html":{}}}],["migrationtimestamp",{"_index":3304,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["mime",{"_index":1913,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["mime.split('/').pop",{"_index":3877,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["mimetype",{"_index":3859,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["min",{"_index":4994,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mincomplexity",{"_index":3593,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mindate",{"_index":5002,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimal",{"_index":3611,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["minimales",{"_index":4932,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimum",{"_index":4995,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":5003,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":4993,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":5032,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":5042,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["miscellaneous",{"_index":3992,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mise",{"_index":2727,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":4529,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["missing",{"_index":2382,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["mixedvalue",{"_index":294,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mjml",{"_index":3963,"title":{},"body":{"dependencies.html":{}}}],["mobile",{"_index":4098,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mobileattribute",{"_index":3594,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mock",{"_index":4453,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":4631,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["model",{"_index":196,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":4809,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":4528,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":1094,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":1100,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":4842,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modification",{"_index":4879,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":4697,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modifyresult",{"_index":558,"title":{},"body":{"injectables/AgentsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":4304,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":166,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":4539,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":172,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":173,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["modules",{"_index":531,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":101,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":737,"title":{},"body":{"modules/AppModule.html":{}}}],["modèle",{"_index":4472,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":4455,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["moins",{"_index":4959,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["monemail@mondomaine.com",{"_index":839,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongo",{"_index":1825,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":3400,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":3401,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":3413,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb.countoptions",{"_index":3709,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1675,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":3398,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":4522,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":4520,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":4519,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":4524,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":3406,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":3416,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":134,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":2911,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosebasequeryoptions",{"_index":3707,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["mongoosemodule",{"_index":545,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":550,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":790,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosemoduleoptions",{"_index":718,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":717,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongoosevalidationfilter",{"_index":728,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongooseValidationFilter.html":{}}}],["monlogin@mondomaine",{"_index":3211,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["morethan",{"_index":5007,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mot",{"_index":1339,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mote",{"_index":3642,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mots",{"_index":1458,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":4980,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":4981,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["much",{"_index":1091,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":4064,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":1099,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mynewpassword",{"_index":1278,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":1280,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mypassword",{"_index":3205,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["mécanismes",{"_index":4296,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":4550,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":4421,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["même",{"_index":4956,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n",{"_index":1423,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["n'avez",{"_index":4950,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":2816,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":4423,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["namequeue",{"_index":1641,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["namespace",{"_index":1907,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["navigateur",{"_index":3638,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["navigation",{"_index":4860,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":4858,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":1417,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/FilestorageController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["negative",{"_index":5014,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":321,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["nestjs",{"_index":100,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/GithubUpdate.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/bullmq",{"_index":713,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":103,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/IdentitiesModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/ManagementModule.html":{},"injectables/MigrationsService.html":{},"modules/SettingsModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":153,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":937,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":132,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/Filestorage.html":{},"modules/FilestorageModule.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":884,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1966,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/ActivationDto.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["nestmiddleware",{"_index":1857,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["nestmodule",{"_index":2645,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/ShutdownObserver.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newid",{"_index":2448,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["newidentitydata",{"_index":4508,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newpassword",{"_index":1276,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["next",{"_index":332,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{}}}],["niveau",{"_index":4599,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":4246,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":4476,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["node:crypto",{"_index":564,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/KeyringsService.html":{}}}],["node:path",{"_index":2686,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["node_id",{"_index":650,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["nodejs",{"_index":4264,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nodejs.readablestream",{"_index":3836,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["nodemailer",{"_index":3969,"title":{},"body":{"dependencies.html":{}}}],["noinspection",{"_index":1797,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":4418,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":2341,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":4965,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":4928,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":4642,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":4911,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["noreply@mydomain.com",{"_index":1693,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["normes",{"_index":4335,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosent",{"_index":4057,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nosortedges",{"_index":2850,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["notamment",{"_index":4258,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notez",{"_index":4908,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":4566,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":3452,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{}}}],["notfoundexception",{"_index":1288,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["notfoundexception('invalid",{"_index":1510,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["nounknown",{"_index":5026,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":4468,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouveau",{"_index":870,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":4308,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":2260,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":4416,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["null",{"_index":162,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["nullable",{"_index":1914,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/EmployeeNumber1700395200.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["number.ts",{"_index":1820,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:13",{"_index":1828,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:19",{"_index":1827,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["number.ts:6",{"_index":1824,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["numbers",{"_index":3616,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["numtel",{"_index":1408,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["numérations",{"_index":4745,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":4760,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":4266,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":4906,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitent",{"_index":4430,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":5015,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":4639,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["object",{"_index":205,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MailadmService.html":{},"classes/Settings.html":{},"injectables/TransformersFilestorageService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.entries(filtersquery",{"_index":2717,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["object.entries(schema?.properties",{"_index":2840,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(attributes",{"_index":2808,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":3446,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(jsonschema.properties",{"_index":2571,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(jsonschema.properties).map((key",{"_index":2565,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(validations).join",{"_index":1793,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(error.constraints)[0",{"_index":1808,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":1814,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(result",{"_index":1130,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["objectclass",{"_index":4925,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":283,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":2814,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":2824,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":3463,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":445,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["objectif",{"_index":4216,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objectsrc",{"_index":1664,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":4638,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":4722,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligatoires",{"_index":4883,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":1183,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observable((observer",{"_index":1243,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observer.next",{"_index":1200,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observers",{"_index":4813,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ochestrator",{"_index":4062,"title":{},"body":{"index.html":{}}}],["octect",{"_index":1570,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["octets",{"_index":1573,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["official",{"_index":4045,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["offline",{"_index":1022,"title":{},"body":{"injectables/AuthService.html":{}}}],["ok",{"_index":253,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":1281,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldpassword",{"_index":1277,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["oldpasswords",{"_index":3675,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":890,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/LocalStrategy.html":{}}}],["omit(body",{"_index":2695,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["omit(entity.tojson",{"_index":1068,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(options",{"_index":1054,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(user",{"_index":907,"title":{},"body":{"controllers/AuthController.html":{}}}],["omit(user.toobject",{"_index":3164,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":4054,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onapplicationbootstrap",{"_index":2510,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["onapplicationshutdown",{"_index":3736,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["one",{"_index":3345,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["onglet",{"_index":4871,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":4855,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/MigrationsService.html":{}}}],["ont",{"_index":1588,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"interfaces/TokenData.html":{}}}],["open",{"_index":4065,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":4080,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operationoptions",{"_index":2704,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["operator",{"_index":4820,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":4326,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":2917,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":2921,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionlabel",{"_index":4808,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":4257,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":209,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options.createdby",{"_index":2945,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.interface.ts",{"_index":1887,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["options.limit",{"_index":3657,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":2948,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":2950,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target",{"_index":2922,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":2926,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":2923,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options?.scopes",{"_index":1046,"title":{},"body":{"injectables/AuthService.html":{}}}],["options['expiresin",{"_index":3094,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["opérations",{"_index":4664,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ora",{"_index":3971,"title":{},"body":{"dependencies.html":{}}}],["orchestrateur",{"_index":4087,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["orchestrator|sesame",{"_index":628,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["organiser",{"_index":4864,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["originstate",{"_index":2422,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["otherwise",{"_index":2782,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["otpkey",{"_index":3676,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1342,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":543,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["output",{"_index":1119,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["overview",{"_index":4184,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1093,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":1084,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":1092,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":1097,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["package",{"_index":818,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packagejson",{"_index":821,"title":{},"body":{"injectables/AppService.html":{}}}],["padd",{"_index":1364,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["padding",{"_index":1363,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["page",{"_index":4213,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated.decorator",{"_index":438,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["paginatedfilterdto",{"_index":2687,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"controllers/IdentitiesPhotoController.html":{},"classes/PaginatedFilterDto.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{}}}],["pair",{"_index":2302,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["panneaux",{"_index":4868,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["par",{"_index":1343,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["param",{"_index":423,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('_id",{"_index":474,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('project",{"_index":666,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["param('schema",{"_index":2496,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["parameter",{"_index":692,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["parametres",{"_index":1358,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["parametres'})@apiresponse({status",{"_index":3225,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["params",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MailadmService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["params.emailattribute",{"_index":1367,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.host}`.match(regex",{"_index":764,"title":{},"body":{"modules/AppModule.html":{}}}],["params.inittokenttl",{"_index":1437,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.mobileattribute",{"_index":1407,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.password",{"_index":779,"title":{},"body":{"modules/AppModule.html":{}}}],["params.resetcodettl",{"_index":1371,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["params.sender",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["params.username",{"_index":777,"title":{},"body":{"modules/AppModule.html":{}}}],["paramètre",{"_index":4632,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":4413,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parent",{"_index":1996,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["parentid",{"_index":467,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":1639,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{}}}],["parse(readfilesync(filepath",{"_index":2562,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(finalpath",{"_index":2631,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["parse(readfilesync(path",{"_index":2831,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseemail",{"_index":301,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseemail(val",{"_index":304,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parsefilepipe",{"_index":1962,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["parseint(atimestamp",{"_index":3372,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(btimestamp",{"_index":3373,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(migration",{"_index":3336,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(migrationtimestamp",{"_index":3394,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseint(port",{"_index":769,"title":{},"body":{"modules/AppModule.html":{}}}],["parseint(process.env['sesame_smtp_port",{"_index":1690,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parseint(timestampmatch",{"_index":3364,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["parseintpipe",{"_index":1182,"title":{},"body":{"controllers/BackendsController.html":{}}}],["parsename",{"_index":3131,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["parsename(val",{"_index":3086,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["parsepassword",{"_index":302,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parsepassword(val",{"_index":309,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parser",{"_index":3654,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["parseusername",{"_index":303,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseusername(val",{"_index":312,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["partial",{"_index":605,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/typealiases.html":{}}}],["partialprojectiontype",{"_index":448,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":504,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":518,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(filestoragecreatedto",{"_index":1918,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["partialtype(formdto",{"_index":2113,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":2331,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(identitiesupdatedto",{"_index":2333,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":4160,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(jobscreatedto",{"_index":3021,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["particulier",{"_index":4594,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":4497,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partir",{"_index":4517,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts/metadata.part.dto",{"_index":3269,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":2111,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":2058,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":512,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":511,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["pas",{"_index":1420,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pascal",{"_index":992,"title":{},"body":{"injectables/AuthService.html":{}}}],["pass",{"_index":778,"title":{},"body":{"modules/AppModule.html":{}}}],["passe",{"_index":1340,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passe'})@apiresponse({status",{"_index":3568,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["passer",{"_index":4873,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":1633,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":933,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":941,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":3050,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":3042,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":3058,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":3475,"title":{},"body":{"controllers/PasswdController.html":{}}}],["passwd.controller",{"_index":3563,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":3516,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwd/passwd.module",{"_index":3264,"title":{},"body":{"modules/ManagementModule.html":{}}}],["passwdadm.service",{"_index":3577,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["passwdadmcontroller",{"_index":3564,"title":{"controllers/PasswdadmController.html":{}},"body":{"controllers/PasswdadmController.html":{},"modules/SettingsModule.html":{}}}],["passwdadmservice",{"_index":1310,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["passwdcontroller",{"_index":3473,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwddto.newpassword",{"_index":1463,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwddto.oldpassword",{"_index":1462,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwddto.uid",{"_index":1449,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwdmodule",{"_index":3259,"title":{"modules/PasswdModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":1327,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["password",{"_index":310,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["password'})@isstring",{"_index":3669,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto",{"_index":1295,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["password.dto.ts",{"_index":1275,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":3672,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1282,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:14",{"_index":3670,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":1279,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1283,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["passwordpolicies",{"_index":1532,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["passwordpoliciesdto",{"_index":3571,"title":{"classes/PasswordPoliciesDto.html":{}},"body":{"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{}}}],["patch",{"_index":424,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["patch(':_id([0",{"_index":419,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["patch('state",{"_index":2421,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["patch('state')@apioperation({summary",{"_index":2361,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["path",{"_index":996,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"modules/SettingsModule.html":{}}}],["path.replace('validations",{"_index":2594,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["path}/${schema",{"_index":2558,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["pattern",{"_index":5035,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["paul.bismuth",{"_index":843,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/InitResetDto.html":{}}}],["paul.smith",{"_index":2878,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["paul.smith'})@isstring",{"_index":2876,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["payload",{"_index":973,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/SyncIdentitiesDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":2946,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.identity",{"_index":1030,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity._id",{"_index":1033,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity.token",{"_index":1034,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jti].join",{"_index":1037,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.level",{"_index":2953,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":2943,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.scopes.includes('api",{"_index":1031,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.scopes.includes('offline",{"_index":1029,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":3896,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":4205,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":3062,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":4024,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":4325,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":4329,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["perl",{"_index":4279,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["permet",{"_index":4872,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":4219,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":4305,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["persistauthorization",{"_index":1688,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personnalis",{"_index":2467,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":4843,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":4840,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisés",{"_index":2474,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["personne",{"_index":5048,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peut",{"_index":3643,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":4643,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["phonenumber",{"_index":3945,"title":{},"body":{"dependencies.html":{}}}],["photo",{"_index":4127,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["photo.controller",{"_index":2657,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["photo.controller.ts",{"_index":2664,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["photo.controller.ts:56",{"_index":2682,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["photo.controller.ts:97",{"_index":2679,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["pick",{"_index":826,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["pick(identity",{"_index":1051,"title":{},"body":{"injectables/AuthService.html":{}}}],["pick(this.package",{"_index":832,"title":{},"body":{"injectables/AppService.html":{}}}],["pickprojectionhelper",{"_index":442,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["ping_target",{"_index":4014,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":3461,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["pkginfo",{"_index":684,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["pkginfo.name",{"_index":687,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["pkginfo.version",{"_index":686,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["plac",{"_index":4967,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":4295,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":4876,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["plaintext",{"_index":1517,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["planning",{"_index":4351,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":4341,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plugin",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin(autoincrementplugin",{"_index":2264,"title":{},"body":{"classes/Identities.html":{}}}],["plugin.default",{"_index":795,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.options",{"_index":796,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugins",{"_index":1646,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":2677,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":1554,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["police",{"_index":1452,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["policies",{"_index":1404,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["policies.resetbysms",{"_index":1405,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["policy.dto",{"_index":3576,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["policy.dto.ts",{"_index":3583,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:11",{"_index":3622,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:15",{"_index":3615,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:19",{"_index":3617,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:23",{"_index":3620,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:31",{"_index":3632,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:39",{"_index":3610,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:43",{"_index":3600,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:47",{"_index":3646,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:55",{"_index":3641,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:62",{"_index":3603,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:68",{"_index":3634,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:7",{"_index":3627,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:72",{"_index":3648,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:76",{"_index":3625,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["politique",{"_index":1457,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["port",{"_index":763,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["positionnement",{"_index":4777,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":5012,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":5013,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["posix",{"_index":3320,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["posix.join(this.config.get('factorydrive.options.disks.local.config.root",{"_index":3322,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["possibilit",{"_index":4267,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["possible",{"_index":1403,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":425,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post(':schema",{"_index":2495,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post(':schema')@apioperation({summary",{"_index":2476,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('activation",{"_index":2282,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["post('activation')@apioperation({summary",{"_index":2271,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["post('change",{"_index":3520,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":3481,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('delete",{"_index":1209,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('delete')@apioperation({summary",{"_index":1143,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute",{"_index":1218,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute')@apioperation({summary",{"_index":1154,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('fusion",{"_index":2447,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["post('fusion')@apioperation({summary",{"_index":2430,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["post('generate",{"_index":2487,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generate')@apioperation({summary",{"_index":2463,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall",{"_index":2484,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall')@apioperation({summary",{"_index":2470,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('init",{"_index":3540,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('init')@apioperation({summary",{"_index":3492,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initmany",{"_index":3550,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initmany')@apioperation({summary",{"_index":3497,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset",{"_index":3554,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset')@apioperation({summary",{"_index":3500,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('local",{"_index":893,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined)@apioperation({summary",{"_index":853,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":916,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@apioperation({summary",{"_index":860,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":911,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh')@apioperation({summary",{"_index":867,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":3533,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":3504,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode",{"_index":3527,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode')@apioperation({summary",{"_index":3507,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('set",{"_index":3232,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["post('set')@apioperation({summary",{"_index":3224,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["post('setpolicies",{"_index":3579,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('setpolicies')@apioperation({summary",{"_index":3572,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('sync",{"_index":1214,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('sync')@apioperation({summary",{"_index":1180,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall",{"_index":1216,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall')@apioperation({summary",{"_index":1172,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('upsert",{"_index":2708,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert')@apicreatedecorator(identitiesupsertdto",{"_index":2703,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert/photo",{"_index":2689,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["post('upsert/photo')@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":2681,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":396,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":2066,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":2346,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":3104,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["post()@apioperation({summary",{"_index":2739,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["post()@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":1943,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["postaladdress",{"_index":4099,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":1394,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":4969,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["powershell",{"_index":4278,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":4255,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pre",{"_index":4730,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preferredlanguage",{"_index":4100,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":389,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/MailadmController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/SmsadmController.html":{},"controllers/TasksController.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":4677,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":4633,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":4470,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["primaryemployeenumber",{"_index":2215,"title":{},"body":{"classes/Identities.html":{}}}],["principal",{"_index":4828,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":4276,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":4230,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":4084,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prise",{"_index":1356,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"injectables/ShutdownObserver.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":4700,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["process.cwd",{"_index":1678,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env.node_env",{"_index":766,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['sesame_front_mdp",{"_index":1694,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_https_path_cert",{"_index":1659,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_https_path_key",{"_index":1658,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_jwt_secret",{"_index":1683,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_log_level",{"_index":1654,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mdp_sender",{"_index":1692,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mongo_uri",{"_index":1674,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_name_queue",{"_index":1655,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_redis_uri",{"_index":1670,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mail",{"_index":1695,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mobile",{"_index":1696,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_password",{"_index":1699,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_regioncode",{"_index":1701,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_server",{"_index":1697,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_sourceaddr",{"_index":1700,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_systemid",{"_index":1698,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smtp_server",{"_index":1689,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processedat",{"_index":2971,"title":{},"body":{"classes/Jobs.html":{}}}],["processing",{"_index":4050,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processor",{"_index":4389,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":4609,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["procédure",{"_index":4957,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["production",{"_index":1002,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["profile.commonname",{"_index":4811,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["project",{"_index":623,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["projection",{"_index":222,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":444,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type",{"_index":450,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":4201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":223,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projet",{"_index":4081,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":4224,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":4713,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":4619,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise",{"_index":200,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/MigrationsModule.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise((resolve",{"_index":3745,"title":{},"body":{"injectables/ShutdownObserver.html":{},"injectables/TransformersFilestorageService.html":{}}}],["promise.all",{"_index":1565,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/ShutdownObserver.html":{},"interfaces/TokenData.html":{}}}],["promise.reject(new",{"_index":4656,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":2837,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":131,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":1921,"title":{},"body":{"classes/Filestorage.html":{},"classes/StatePart.html":{}}}],["prop({type",{"_index":128,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["properties/${key",{"_index":2567,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["property",{"_index":1095,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{}}}],["propertynames",{"_index":5027,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propres",{"_index":4767,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriét",{"_index":4852,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":4404,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protocol",{"_index":762,"title":{},"body":{"modules/AppModule.html":{}}}],["protocole",{"_index":3752,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["protocoles",{"_index":4291,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["protocols",{"_index":3214,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["provide",{"_index":814,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provider",{"_index":3757,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["providers",{"_index":536,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provisional",{"_index":4046,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["précis",{"_index":4355,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":4682,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":4449,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":4254,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["public()@get('photo/raw')@apireadresponsedecorator(filestoragedto)@apiquery({required",{"_index":2668,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["public()@sse('sse')@apioperation({summary",{"_index":1159,"title":{},"body":{"controllers/BackendsController.html":{}}}],["pwned",{"_index":3599,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["python",{"_index":4277,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":4826,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":4834,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":4859,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":4867,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":4865,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":4966,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":4929,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["quasar",{"_index":4748,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":1422,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":559,"title":{},"body":{"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["query('async",{"_index":1210,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('current",{"_index":667,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["query('disablelogs",{"_index":1220,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('erroronnotfound",{"_index":2713,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('filters",{"_index":2712,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["query('hidden",{"_index":1984,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('id",{"_index":1238,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('key",{"_index":1239,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('mime",{"_index":1994,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["query('mode",{"_index":2497,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["query('namespace",{"_index":1990,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('path",{"_index":1991,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('timeoutdiscard",{"_index":1219,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('updatestatus",{"_index":1221,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('upsert",{"_index":2714,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["queryoptions",{"_index":218,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["question",{"_index":318,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["question({message",{"_index":305,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questions",{"_index":328,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questionset",{"_index":319,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["queue",{"_index":79,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('application.namequeue",{"_index":115,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queue(this.config.get('namequeue",{"_index":4411,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('application.namequeue",{"_index":118,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":4412,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":4384,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":1416,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["radash",{"_index":827,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/LocalStrategy.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["radio",{"_index":4789,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["random_bytes_iv",{"_index":1330,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["random_bytes_k",{"_index":1328,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["randombytes",{"_index":563,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/KeyringsService.html":{}}}],["randombytes(32).tostring('hex",{"_index":571,"title":{},"body":{"injectables/AgentsService.html":{}}}],["randombytes(64).tostring('hex",{"_index":3150,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":1055,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomint",{"_index":1289,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["randomint(100000",{"_index":1360,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["rationalisant",{"_index":4624,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rawbodybuffer(options",{"_index":3655,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":3649,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawresult",{"_index":4577,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rc.4",{"_index":3983,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":390,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["read(@param('_id",{"_index":2086,"title":{},"body":{"controllers/FormController.html":{}}}],["read(_id",{"_index":400,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["readdir",{"_index":2525,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync",{"_index":2524,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(`${process.cwd()}/configs/identities/jsonforms",{"_index":2535,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync(`${process.cwd()}/configs/identities/validations",{"_index":2798,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(`${process.cwd()}/defaults/identities/jsonforms",{"_index":2536,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readdirsync(`${process.cwd()}/defaults/identities/validations",{"_index":2799,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(dynamicconfigpath).map((file",{"_index":2606,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(hardconfigpath).map((file",{"_index":2602,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfile",{"_index":3317,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["readfile(this.locklocation",{"_index":3335,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["readfilesync",{"_index":823,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfilesync(`${process.cwd()}/defaults/identities/jsonforms/${file",{"_index":2541,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["readfilesync(`${process.cwd()}/defaults/identities/validations/${file",{"_index":2800,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["reading",{"_index":2537,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["readpath",{"_index":1939,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpath(namespace",{"_index":1947,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata",{"_index":1940,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata(res",{"_index":1950,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readphotoraw",{"_index":2665,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["readphotoraw(res",{"_index":2667,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["readrawdata",{"_index":1941,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readrawdata(res",{"_index":1953,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["received",{"_index":3663,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/VerifyTokenDto.html":{}}}],["recherche",{"_index":1433,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesPhotoController.html":{},"interfaces/TokenData.html":{}}}],["record",{"_index":285,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["redirection",{"_index":4799,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":2040,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirig",{"_index":3640,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["redis",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1671,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redismodule",{"_index":719,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redismodule.forrootasync",{"_index":800,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redisoptions",{"_index":720,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["reduce((acc",{"_index":2572,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ref",{"_index":167,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["reflect",{"_index":3977,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1752,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["refresh",{"_index":849,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":912,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":866,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":913,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":1058,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":949,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":950,"title":{},"body":{"injectables/AuthService.html":{}}}],["regenerating",{"_index":1017,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["region",{"_index":3759,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["regioncode",{"_index":1652,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["register",{"_index":1741,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{}}}],["reinitialis",{"_index":3645,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reinitialisation",{"_index":1387,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["reinitialise",{"_index":3508,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reject",{"_index":2809,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/ShutdownObserver.html":{},"injectables/TransformersFilestorageService.html":{}}}],["reject(err",{"_index":3883,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["reject(error",{"_index":3747,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["rejects",{"_index":2777,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":4714,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["remarques",{"_index":5050,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["remove",{"_index":391,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["remove(@param('_id",{"_index":2089,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(_id",{"_index":407,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":4757,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":4260,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":4833,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":4869,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendre",{"_index":4850,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":4841,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":955,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":969,"title":{},"body":{"injectables/AuthService.html":{}}}],["renvoie",{"_index":2436,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["reply@mondomaine",{"_index":3208,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["repondu",{"_index":1589,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["repondue",{"_index":3514,"title":{},"body":{"controllers/PasswdController.html":{}}}],["représent",{"_index":4759,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":4405,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":4719,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":4641,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":4721,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":156,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/JobsController.html":{}}}],["req.query",{"_index":3005,"title":{},"body":{"controllers/JobsController.html":{}}}],["reqidentity",{"_index":885,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/filtres-api.html":{}}}],["request.query['debug",{"_index":1799,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["requestcontext",{"_index":155,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":163,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":722,"title":{},"body":{"modules/AppModule.html":{}}}],["requete",{"_index":4885,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["require_protocol",{"_index":3200,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["required",{"_index":289,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requiretls",{"_index":774,"title":{},"body":{"modules/AppModule.html":{}}}],["requis",{"_index":2300,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":4933,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":4881,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requêtes",{"_index":4895,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":399,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["res.json",{"_index":663,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["res.render('core/filestorage/transformers/html",{"_index":3874,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.setheader('content",{"_index":3866,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.socket.on('close",{"_index":1241,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(code).json",{"_index":2726,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":1213,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":2286,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["res.status(httpstatus.created).json",{"_index":461,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.internal_server_error).json",{"_index":3548,"title":{},"body":{"controllers/PasswdController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":470,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":920,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":2396,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["reset",{"_index":542,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"classes/PasswordPoliciesDto.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"interfaces/TokenData.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["reset'})@apiresponse({status",{"_index":3501,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(@body",{"_index":3534,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(body",{"_index":3503,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(data",{"_index":1550,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["reset.dto",{"_index":1315,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["reset.dto.ts",{"_index":2890,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:11",{"_index":2892,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:7",{"_index":2893,"title":{},"body":{"classes/InitResetDto.html":{}}}],["resetaccount",{"_index":1389,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetbycode",{"_index":3479,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(@body",{"_index":3529,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(body",{"_index":3506,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(data",{"_index":1528,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetbycodedto",{"_index":1307,"title":{"classes/ResetByCodeDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{}}}],["resetbysms",{"_index":3595,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["resetcodettl",{"_index":3596,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reseting",{"_index":1413,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["resetpassworddto",{"_index":1296,"title":{"classes/ResetPasswordDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["resetvalidation",{"_index":4846,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":995,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(buffer.concat(chunks).tostring('utf8",{"_index":3885,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["resolve(null",{"_index":3748,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["resolve(process.cwd",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolveconfigpath",{"_index":2764,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolveconfigpath(key",{"_index":2770,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolved",{"_index":2628,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath",{"_index":2511,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath(schema",{"_index":2520,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolves",{"_index":2775,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["respecte",{"_index":1456,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["respecter",{"_index":4334,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":5038,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":4359,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":394,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/MailadmController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["response.decorator",{"_index":436,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":3468,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:12",{"_index":3470,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":3471,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":3472,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":3438,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":595,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["response?.status",{"_index":1540,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["responsible",{"_index":2762,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ressource",{"_index":4899,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":4238,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["result",{"_index":1128,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["result.interface",{"_index":3921,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts",{"_index":1116,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts:13",{"_index":3920,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{}}}],["result.push",{"_index":2620,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["retoune",{"_index":1415,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["retour",{"_index":4653,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":3220,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":4668,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":4463,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retrieve",{"_index":2858,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingsModule.html":{},"injectables/ShutdownObserver.html":{},"controllers/SmsadmController.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["reussi",{"_index":3637,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reçu",{"_index":3528,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reçu'})@apiresponse({status",{"_index":3509,"title":{},"body":{"controllers/PasswdController.html":{}}}],["rien",{"_index":1419,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["roles",{"_index":517,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["root",{"_index":1677,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{}}}],["round",{"_index":5019,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1744,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["routermodule.register",{"_index":1750,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingsModule.html":{}}}],["row",{"_index":2132,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rules",{"_index":1085,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["run",{"_index":380,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["run(inputs",{"_index":335,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["running",{"_index":3389,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["rxjs",{"_index":1185,"title":{},"body":{"controllers/BackendsController.html":{},"dependencies.html":{}}}],["règles",{"_index":4253,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupère",{"_index":868,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["récupér",{"_index":4750,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["récupération",{"_index":874,"title":{},"body":{"controllers/AuthController.html":{}}}],["réel",{"_index":1163,"title":{},"body":{"controllers/BackendsController.html":{}}}],["référence",{"_index":4634,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":4464,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":4687,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":5037,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réinitialisation",{"_index":1548,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["réinitialiser",{"_index":1545,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["réponse",{"_index":4887,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":4349,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":4665,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":4717,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["s3",{"_index":1638,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":3671,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["save",{"_index":3177,"title":{},"body":{"classes/Logger.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":214,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["schema",{"_index":292,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":1867,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:12",{"_index":1873,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":1869,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":1872,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":1870,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.endswith('.ui.yml",{"_index":2590,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.endswith('.yml",{"_index":2549,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.org/draft",{"_index":4977,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.replace('.yml",{"_index":2591,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schemafactory",{"_index":293,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/InitInfoPart.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":298,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["schemafactory.createforclass(agents",{"_index":379,"title":{},"body":{"classes/Agents.html":{}}}],["schemafactory.createforclass(concernedtopart",{"_index":1619,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["schemafactory.createforclass(datapart",{"_index":1765,"title":{},"body":{"classes/DataPart.html":{}}}],["schemafactory.createforclass(filestorage).index",{"_index":1934,"title":{},"body":{"classes/Filestorage.html":{}}}],["schemafactory.createforclass(form",{"_index":2062,"title":{},"body":{"classes/Form.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":2160,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":2193,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["schemafactory.createforclass(identities",{"_index":2263,"title":{},"body":{"classes/Identities.html":{}}}],["schemafactory.createforclass(inetorgperson).index",{"_index":4129,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(initinfopart",{"_index":2885,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["schemafactory.createforclass(jobs",{"_index":2989,"title":{},"body":{"classes/Jobs.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":3077,"title":{},"body":{"classes/Keyrings.html":{}}}],["schemafactory.createforclass(logger).pre",{"_index":3176,"title":{},"body":{"classes/Logger.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":3277,"title":{},"body":{"classes/MetadataPart.html":{}}}],["schemafactory.createforclass(securitypart",{"_index":3685,"title":{},"body":{"classes/SecurityPart.html":{}}}],["schemafactory.createforclass(settings",{"_index":3714,"title":{},"body":{"classes/Settings.html":{}}}],["schemafactory.createforclass(statepart",{"_index":3792,"title":{},"body":{"classes/StatePart.html":{}}}],["schemafactory.createforclass(tasks",{"_index":3806,"title":{},"body":{"classes/Tasks.html":{}}}],["schemas",{"_index":2609,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":3708,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["schema}.${employeetype.tolowercase()}.ui",{"_index":2624,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.${mode}.${employeetype.tolowercase()}.ui",{"_index":2622,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.${mode}.ui",{"_index":2623,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.ui",{"_index":2625,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema}.ui.yml",{"_index":2630,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schéma",{"_index":2466,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2473,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":1783,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/ValidationRecursive.html":{}}}],["scope.request",{"_index":1784,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":1021,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["scopes.push(...options.scopes",{"_index":1047,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":4741,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":4223,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1669,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":4626,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":4082,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":392,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["search(@res",{"_index":2747,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["search(res",{"_index":411,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["searchall",{"_index":2461,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(@res",{"_index":2492,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(res",{"_index":2478,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchfield",{"_index":4810,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":414,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["searchfilterschema",{"_index":412,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["second",{"_index":2203,"title":{},"body":{"classes/FusionDto.html":{}}}],["secondary",{"_index":840,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secondes",{"_index":3624,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["secret",{"_index":1682,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":3677,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":3053,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":4734,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":2183,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":2041,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["secure",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["securit",{"_index":1534,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["security",{"_index":353,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/GithubUpdate.html":{}}}],["security.secretkey",{"_index":1042,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitypart",{"_index":363,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["securitypartdto",{"_index":494,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["securitypartschema",{"_index":364,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["see",{"_index":656,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{}}}],["sein",{"_index":4481,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":4786,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1663,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["selon",{"_index":4622,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["send",{"_index":1203,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitResetDto.html":{}}}],["sender",{"_index":1649,"title":{},"body":{"interfaces/ConfigInstance.html":{},"classes/MailSettingsDto.html":{},"interfaces/MongoosePlugin.html":{}}}],["senders",{"_index":4790,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sendmail",{"_index":1383,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["sensibles",{"_index":4299,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sent",{"_index":1160,"title":{},"body":{"controllers/BackendsController.html":{},"miscellaneous/enumerations.html":{}}}],["sentdate",{"_index":2882,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["sera",{"_index":3639,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sert",{"_index":1418,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["server",{"_index":599,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"classes/MongoDbTestInstance.html":{},"injectables/ShutdownObserver.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["server.close((error",{"_index":3746,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["serveur",{"_index":1396,"title":{},"body":{"interfaces/CipherData.html":{},"classes/MailSettingsDto.html":{},"controllers/PasswdController.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":4079,"title":{},"body":{"index.html":{}}}],["service",{"_index":751,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["service.getparams",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["servicename",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":4394,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":3696,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["servit",{"_index":2257,"title":{},"body":{"classes/Identities.html":{}}}],["ses",{"_index":4766,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":1045,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["session",{"_index":850,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["session(@res",{"_index":900,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":872,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ts",{"_index":602,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:2",{"_index":607,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:3",{"_index":609,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:4",{"_index":608,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":606,"title":{},"body":{"classes/ApiSession.html":{}}}],["set",{"_index":256,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["set(@body",{"_index":3233,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["set(body",{"_index":3223,"title":{},"body":{"controllers/MailadmController.html":{},"controllers/SmsadmController.html":{}}}],["setinitstate(identity",{"_index":1580,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["setoninsert",{"_index":255,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["setparameter",{"_index":184,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["setparameter(settingname",{"_index":204,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["setparams",{"_index":3237,"title":{},"body":{"injectables/MailadmService.html":{}}}],["setparams(params",{"_index":3240,"title":{},"body":{"injectables/MailadmService.html":{}}}],["setpolicies",{"_index":3567,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(@body",{"_index":3580,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(body",{"_index":3570,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settimeout",{"_index":2913,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["settingname",{"_index":203,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["settings",{"_index":240,"title":{"classes/Settings.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings.name",{"_index":3730,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.service",{"_index":3246,"title":{},"body":{"injectables/MailadmService.html":{}}}],["settings.service.ts",{"_index":178,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:13",{"_index":202,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:22",{"_index":206,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:41",{"_index":199,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings.service.ts:7",{"_index":197,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["settings/_abstracts/abstract",{"_index":3245,"title":{},"body":{"injectables/MailadmService.html":{}}}],["settings/_dto/mail.settings.dto",{"_index":3227,"title":{},"body":{"controllers/MailadmController.html":{},"injectables/MailadmService.html":{}}}],["settings/_dto/password",{"_index":3575,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settings/_dto/sms.settings.dto",{"_index":3775,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["settings/_schemas/settings.schema",{"_index":241,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"modules/SettingsModule.html":{}}}],["settings/mail",{"_index":3217,"title":{},"body":{"controllers/MailadmController.html":{}}}],["settings/mailadm.controller",{"_index":3729,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/mailadm.service",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{}}}],["settings/passwdadm",{"_index":3566,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["settings/passwdadm.controller",{"_index":3728,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/passwdadm.service",{"_index":1311,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{}}}],["settings/settings.controller",{"_index":3726,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/settings.module",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"modules/PasswdModule.html":{}}}],["settings/settings.service",{"_index":3718,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settings/sms",{"_index":3771,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["settings/smsadm.controller",{"_index":3727,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings/smsadm.service",{"_index":1317,"title":{},"body":{"interfaces/CipherData.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["settingscontroller",{"_index":3715,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{}}}],["settingsdocument",{"_index":3713,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["settingsmodule",{"_index":709,"title":{"modules/SettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsmodule.register",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["settingsname",{"_index":180,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/MailadmService.html":{}}}],["settingsschema",{"_index":259,"title":{},"body":{"classes/AbstractSettingsService-1.html":{},"classes/Settings.html":{},"modules/SettingsModule.html":{}}}],["settingsservice",{"_index":3717,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"overview.html":{}}}],["sha",{"_index":646,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["showfriendlyerrorstack",{"_index":1672,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["showunfocuseddescription",{"_index":2585,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["shutdownobserver",{"_index":710,"title":{"injectables/ShutdownObserver.html":{}},"body":{"modules/AppModule.html":{},"injectables/ShutdownObserver.html":{},"overview.html":{}}}],["si",{"_index":1401,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["signal",{"_index":675,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["significatif",{"_index":4361,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":4672,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":4676,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":4597,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["simplifie",{"_index":4608,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":4530,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":4681,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":4659,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":4478,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulées",{"_index":4621,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":4456,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":801,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["skip",{"_index":4510,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["slots",{"_index":4844,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["smpp",{"_index":3753,"title":{},"body":{"classes/SmsSettingsDto.html":{},"dependencies.html":{}}}],["smpp.org",{"_index":3761,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["smpp://smscsim.smpp.org:2775",{"_index":3751,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["sms",{"_index":1344,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/InitResetDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{}}}],["sms'})@apiresponse({status",{"_index":3772,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["smsadmcontroller",{"_index":3724,"title":{"controllers/SmsadmController.html":{}},"body":{"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{}}}],["smsadmservice",{"_index":1316,"title":{},"body":{"interfaces/CipherData.html":{},"modules/SettingsModule.html":{},"controllers/SmsadmController.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["smsattribute",{"_index":1406,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smssettingsdto",{"_index":3749,"title":{"classes/SmsSettingsDto.html":{}},"body":{"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{}}}],["smtp",{"_index":3203,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtp://localhost:25",{"_index":3198,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtp://smscsim.smpp.org:25",{"_index":3202,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["smtpparams",{"_index":1378,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtpparams.host",{"_index":1381,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtpparams.sender",{"_index":1386,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["smtps",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"classes/MailSettingsDto.html":{}}}],["smtps?|):\\/\\/([a",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["sn",{"_index":4101,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["software",{"_index":428,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["sommaire",{"_index":4733,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":4723,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":2393,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":1586,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sort[metadata.createdat",{"_index":4377,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["sort[subject]=1list",{"_index":4378,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["sorties",{"_index":4271,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["soumission",{"_index":4797,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"modules/MigrationsModule.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingsModule.html":{},"injectables/SettingsService.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sourceaddr",{"_index":1651,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["sources",{"_index":2256,"title":{},"body":{"classes/Identities.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":4768,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["spam",{"_index":3547,"title":{},"body":{"controllers/PasswdController.html":{}}}],["special",{"_index":3618,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["specific",{"_index":658,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["specifier",{"_index":4960,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["sprints",{"_index":4353,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":4654,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":4952,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":4427,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":4661,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":4997,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":4623,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../action",{"_index":3994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent",{"_index":3996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent.type.ts",{"_index":4192,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auto",{"_index":4199,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../backend",{"_index":3999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.object.ts",{"_index":4001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../data",{"_index":4002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../fs",{"_index":4005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../identities.schema.ts",{"_index":4193,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../init",{"_index":4008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../internal.logger.ts",{"_index":4009,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jobs.schema.ts",{"_index":4194,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../keyrings.schema.ts",{"_index":4195,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":4006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.schema.ts",{"_index":4196,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mixed",{"_index":4197,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":4200,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.schema.ts",{"_index":4202,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../state.enum.ts",{"_index":4010,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../states.enum.ts",{"_index":4007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.schema.ts",{"_index":4203,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../types.ts",{"_index":4004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validation",{"_index":4204,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrapper.type.ts",{"_index":4207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract",{"_index":177,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:11",{"_index":86,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:12",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:13",{"_index":85,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:15",{"_index":96,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:17",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:24",{"_index":93,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:9",{"_index":84,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":138,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":149,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:43",{"_index":151,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":175,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1755,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":3267,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":3268,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":3278,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":3280,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":3283,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":3282,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":3281,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":3697,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:18",{"_index":3701,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":3698,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:26",{"_index":3702,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:32",{"_index":3704,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:38",{"_index":3705,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":3699,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:46",{"_index":3706,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:52",{"_index":3700,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":120,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":125,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":130,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":3270,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":3273,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":3276,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":3275,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":3274,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/data/api",{"_index":601,"title":{},"body":{"classes/ApiSession.html":{}}}],["src/_common/data/console",{"_index":1725,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["src/_common/dto/error",{"_index":1866,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["src/_common/dto/not",{"_index":3453,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["src/_common/dto/paginated",{"_index":3465,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":3886,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":3909,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":3908,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":3911,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":3891,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":3907,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":581,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/_common/filters/identities",{"_index":2748,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["src/_common/filters/mongoose",{"_index":3428,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["src/_common/middlewares/raw",{"_index":3650,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["src/_common/observers/shutdown.observer.ts",{"_index":3733,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:12",{"_index":3740,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:6",{"_index":3741,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/observers/shutdown.observer.ts:8",{"_index":3739,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["src/_common/pipes/dto",{"_index":1770,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["src/_common/pipes/object",{"_index":3458,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":1080,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":3399,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":3412,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":3408,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":3410,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":3407,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":3405,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":3411,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/agent.type.ts",{"_index":4208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/mixed",{"_index":4209,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":4210,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":4211,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":4212,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":613,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["src/app.controller.ts:37",{"_index":621,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:45",{"_index":632,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":711,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":817,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:10",{"_index":819,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":820,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cli/agents.command.ts",{"_index":300,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:12",{"_index":314,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:20",{"_index":307,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:29",{"_index":311,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:35",{"_index":481,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:45",{"_index":482,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:57",{"_index":382,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/agents.command.ts:63",{"_index":383,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/backends.command.ts",{"_index":1121,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:15",{"_index":1272,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:26",{"_index":1122,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:32",{"_index":1123,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:6",{"_index":1271,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/cli.module.ts",{"_index":1601,"title":{},"body":{"modules/CliModule.html":{}}}],["src/cli/keyrings.command.ts",{"_index":3078,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:15",{"_index":3132,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:21",{"_index":3119,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:32",{"_index":3120,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:63",{"_index":3079,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/cli/keyrings.command.ts:69",{"_index":3080,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/config.ts",{"_index":1628,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":483,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:17",{"_index":501,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:22",{"_index":487,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:27",{"_index":489,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:32",{"_index":493,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:37",{"_index":500,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:43",{"_index":499,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:48",{"_index":486,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:58",{"_index":496,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:63",{"_index":491,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:69",{"_index":520,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":3686,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":3693,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":3695,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":3689,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":3690,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":3694,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":3692,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":3793,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":3796,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":3797,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":3799,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":3798,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":3795,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":4022,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts",{"_index":3673,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:10",{"_index":3681,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:15",{"_index":3682,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:20",{"_index":3684,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:25",{"_index":3679,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:31",{"_index":3680,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:36",{"_index":3683,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts",{"_index":3779,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:13",{"_index":3784,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:19",{"_index":3785,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:22",{"_index":3786,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:25",{"_index":3788,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:28",{"_index":3787,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":349,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":371,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":359,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":361,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":362,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":370,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":368,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":356,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":365,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":358,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":388,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:104",{"_index":410,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:41",{"_index":398,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:51",{"_index":417,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:72",{"_index":406,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:89",{"_index":421,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":544,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":554,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/agents/agents.service.ts:12",{"_index":555,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":3041,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:12",{"_index":3044,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:27",{"_index":3048,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":3152,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":3153,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":3156,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":846,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:28",{"_index":857,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:39",{"_index":879,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:54",{"_index":871,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:64",{"_index":865,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":929,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":945,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:118",{"_index":965,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:168",{"_index":967,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:183",{"_index":970,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:195",{"_index":963,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:21",{"_index":981,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:22",{"_index":986,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:24",{"_index":978,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:25",{"_index":985,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:27",{"_index":976,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:28",{"_index":959,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:40",{"_index":968,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:70",{"_index":961,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:83",{"_index":972,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/_dto/delete",{"_index":1766,"title":{},"body":{"classes/DeleteIdentitiesDto.html":{}}}],["src/core/backends/_dto/execute",{"_index":1875,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["src/core/backends/_dto/sync",{"_index":3800,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["src/core/backends/_enum/action",{"_index":4011,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/backend",{"_index":1115,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/execute",{"_index":1886,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["src/core/backends/_interfaces/worker",{"_index":3918,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":1134,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:132",{"_index":1170,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:54",{"_index":1147,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:69",{"_index":1181,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:84",{"_index":1177,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:94",{"_index":1157,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":1265,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/core.controller.ts",{"_index":1729,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":1740,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:29",{"_index":1742,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1753,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:4",{"_index":1754,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts",{"_index":1894,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:19",{"_index":1898,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:26",{"_index":2018,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:31",{"_index":2014,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:37",{"_index":2015,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:42",{"_index":2006,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:47",{"_index":2010,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:52",{"_index":2005,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:57",{"_index":2012,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:62",{"_index":2008,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:67",{"_index":2016,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:72",{"_index":2003,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:78",{"_index":2019,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["src/core/filestorage/_enum/fs",{"_index":4040,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts",{"_index":1920,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:15",{"_index":1931,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:20",{"_index":1927,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:26",{"_index":1928,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:33",{"_index":1929,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:39",{"_index":1925,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:45",{"_index":1923,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:51",{"_index":1926,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:57",{"_index":1930,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:63",{"_index":1922,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:70",{"_index":1924,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_services/transformers",{"_index":3826,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["src/core/filestorage/filestorage.controller.ts",{"_index":1938,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:102",{"_index":1946,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:115",{"_index":1949,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:130",{"_index":1955,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:141",{"_index":1952,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:154",{"_index":1961,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:169",{"_index":1957,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:59",{"_index":1944,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:73",{"_index":1959,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.module.ts",{"_index":2033,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":2091,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":2102,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":2096,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":2105,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":2094,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":2098,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":2101,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":2100,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":2097,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":2123,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":2142,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":2143,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":2144,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":2140,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":2135,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":2134,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":2137,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":2138,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":2136,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":2141,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":2168,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":2176,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":2180,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":2175,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":2171,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":2178,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":2174,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":4035,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":3823,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":2039,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":2053,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":2046,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":2045,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":2055,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":2050,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":2052,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":2051,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":2047,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":2148,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":2157,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":2158,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":2154,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":2150,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":2149,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":2152,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":2153,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":2151,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":2155,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":2156,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":2185,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":2189,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":2191,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":2188,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":2186,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":2190,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":2187,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":2064,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":2068,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":2073,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":2070,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":2076,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":2072,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":2164,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":2194,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/form/form.service.ts:9",{"_index":2195,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/jobs/_dto/_parts/concerned",{"_index":1621,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts",{"_index":3008,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:12",{"_index":3012,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:16",{"_index":3009,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:22",{"_index":3011,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:26",{"_index":3017,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:30",{"_index":3010,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:34",{"_index":3014,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:38",{"_index":3015,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:42",{"_index":3016,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:48",{"_index":3022,"title":{},"body":{"classes/JobsDto.html":{}}}],["src/core/jobs/_enums/state.enum.ts",{"_index":4058,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/jobs/_schemas/_parts/concerned",{"_index":1613,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts",{"_index":2967,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:15",{"_index":2976,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:21",{"_index":2972,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:26",{"_index":2974,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:29",{"_index":2982,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:32",{"_index":2973,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:35",{"_index":2977,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:38",{"_index":2979,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:41",{"_index":2978,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:44",{"_index":2975,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:47",{"_index":2981,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/jobs.controller.ts",{"_index":2991,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:39",{"_index":2994,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:63",{"_index":2993,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.module.ts",{"_index":3034,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/core/jobs/jobs.service.ts",{"_index":3038,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/jobs/jobs.service.ts:8",{"_index":3039,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":3121,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:14",{"_index":3128,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:18",{"_index":3124,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:21",{"_index":3127,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:27",{"_index":3133,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":3125,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":3067,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":3071,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:19",{"_index":3073,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:25",{"_index":3070,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:28",{"_index":3072,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":3103,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:37",{"_index":3106,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:47",{"_index":3111,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:68",{"_index":3108,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:84",{"_index":3110,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":3141,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":3145,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/keyrings/keyrings.service.ts:11",{"_index":3146,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts",{"_index":1760,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:12",{"_index":1763,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:18",{"_index":1761,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/logger.schema.ts",{"_index":3165,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:15",{"_index":3170,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:22",{"_index":3169,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:29",{"_index":3168,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:36",{"_index":3167,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":2895,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:107",{"_index":2965,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:123",{"_index":2962,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:139",{"_index":2959,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":2957,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":2963,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":2961,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:62",{"_index":2966,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:78",{"_index":2964,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:91",{"_index":2960,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":3183,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/core/logger/logger.module.ts",{"_index":3189,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":3193,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/logger.service.ts:8",{"_index":3194,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts",{"_index":3802,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts:10",{"_index":3803,"title":{},"body":{"classes/Tasks.html":{}}}],["src/core/tasks/tasks.controller.ts",{"_index":3808,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/core/tasks/tasks.module.ts",{"_index":3815,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/core/tasks/tasks.service.ts",{"_index":3819,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/tasks/tasks.service.ts:8",{"_index":3820,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/management/identities/_dto/_parts/activation",{"_index":261,"title":{},"body":{"classes/ActivationDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":3924,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:11",{"_index":3927,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:18",{"_index":3926,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:24",{"_index":3928,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":4131,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:103",{"_index":4146,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:14",{"_index":4133,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:21",{"_index":4142,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:26",{"_index":4143,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:32",{"_index":4136,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:37",{"_index":4154,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:42",{"_index":4139,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:47",{"_index":4144,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:52",{"_index":4145,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:57",{"_index":4147,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:62",{"_index":4149,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:68",{"_index":4151,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:73",{"_index":4152,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:78",{"_index":4153,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:83",{"_index":4155,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:88",{"_index":4156,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:9",{"_index":4157,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:93",{"_index":4158,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts",{"_index":2198,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts:11",{"_index":2204,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/fusion.dto.ts:7",{"_index":2202,"title":{},"body":{"classes/FusionDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":2289,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:17",{"_index":2316,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:23",{"_index":2312,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:29",{"_index":2307,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:35",{"_index":2314,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:41",{"_index":2310,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:60",{"_index":2305,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:70",{"_index":2729,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_enums/data",{"_index":4033,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/init",{"_index":4056,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":4043,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":4047,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_middlewares/ensure",{"_index":1847,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":281,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:11",{"_index":287,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:14",{"_index":291,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:8",{"_index":290,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":4091,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:12",{"_index":4106,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:15",{"_index":4109,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:18",{"_index":4110,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:21",{"_index":4112,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:24",{"_index":4113,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:27",{"_index":4114,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:30",{"_index":4115,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:33",{"_index":4116,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:36",{"_index":4117,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:39",{"_index":4118,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:42",{"_index":4119,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:45",{"_index":4120,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:61",{"_index":4107,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:64",{"_index":4108,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:67",{"_index":4105,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:70",{"_index":4111,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:76",{"_index":4121,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:9",{"_index":4104,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/init",{"_index":2879,"title":{},"body":{"classes/InitInfoPart.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":2205,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":2236,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":2233,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:26",{"_index":2220,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:29",{"_index":2221,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:32",{"_index":2225,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:35",{"_index":2217,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:38",{"_index":2223,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:41",{"_index":2231,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:44",{"_index":2230,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:47",{"_index":2229,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:50",{"_index":2228,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:55",{"_index":2218,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:59",{"_index":2235,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:63",{"_index":2222,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:66",{"_index":2234,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/identities",{"_index":2268,"title":{},"body":{"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":2636,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/identities.module.ts:58",{"_index":2642,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/jsonforms/_config",{"_index":2616,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/_config/${schema",{"_index":2552,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts",{"_index":2458,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:16",{"_index":2475,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:26",{"_index":2468,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:36",{"_index":2479,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:47",{"_index":2477,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.module.ts",{"_index":2506,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts",{"_index":2508,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:124",{"_index":2518,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:156",{"_index":2513,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:17",{"_index":2519,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:185",{"_index":2515,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:46",{"_index":2521,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:59",{"_index":2517,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:9",{"_index":2512,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/validations/_config",{"_index":2599,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/${key}.yml",{"_index":2802,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1704,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1706,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1711,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1708,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:22",{"_index":1720,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:25",{"_index":1719,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:28",{"_index":1718,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:34",{"_index":1724,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1723,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1707,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":4032,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":2731,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:18",{"_index":2741,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:50",{"_index":2737,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:60",{"_index":2736,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":2759,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":2761,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:151",{"_index":2780,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:191",{"_index":2767,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:20",{"_index":2783,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:21",{"_index":2784,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:22",{"_index":2766,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:246",{"_index":2768,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:30",{"_index":2769,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:58",{"_index":2771,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:75",{"_index":2773,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":3250,"title":{},"body":{"controllers/ManagementController.html":{}}}],["src/management/management.module.ts",{"_index":3260,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:14",{"_index":3261,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":3265,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/management.service.ts:4",{"_index":3266,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/_dto/ask",{"_index":834,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["src/management/passwd/_dto/change",{"_index":1274,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/management/passwd/_dto/init",{"_index":2874,"title":{},"body":{"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{}}}],["src/management/passwd/_dto/reset",{"_index":3660,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{}}}],["src/management/passwd/_dto/verify",{"_index":3913,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":3474,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:118",{"_index":3498,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:127",{"_index":3502,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:139",{"_index":3515,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:28",{"_index":3486,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:48",{"_index":3510,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:73",{"_index":3505,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:90",{"_index":3490,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:99",{"_index":3495,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":3562,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":1285,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["src/migrations/jobs/1700395200",{"_index":1818,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["src/migrations/migrations.module.ts",{"_index":3287,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["src/migrations/migrations.module.ts:10",{"_index":3288,"title":{},"body":{"modules/MigrationsModule.html":{}}}],["src/migrations/migrations.service.ts",{"_index":3290,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:125",{"_index":3299,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:14",{"_index":3310,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:16",{"_index":3308,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:162",{"_index":3305,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:17",{"_index":3297,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:28",{"_index":3307,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:40",{"_index":3298,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/migrations/migrations.service.ts:84",{"_index":3301,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["src/settings/_abstracts/abstract",{"_index":258,"title":{},"body":{"classes/AbstractSettingsService-1.html":{}}}],["src/settings/_dto/mail.settings.dto.ts",{"_index":3197,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:11",{"_index":3210,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:15",{"_index":3212,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:19",{"_index":3206,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/mail.settings.dto.ts:7",{"_index":3204,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["src/settings/_dto/password",{"_index":3582,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts",{"_index":3750,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:11",{"_index":3769,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:15",{"_index":3758,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:19",{"_index":3760,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:28",{"_index":3767,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_dto/sms.settings.dto.ts:7",{"_index":3754,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["src/settings/_schemas/settings.schema.ts",{"_index":3710,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["src/settings/_schemas/settings.schema.ts:11",{"_index":3712,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/_schemas/settings.schema.ts:9",{"_index":3711,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/mailadm.controller.ts",{"_index":3216,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.controller.ts:15",{"_index":3222,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.controller.ts:24",{"_index":3226,"title":{},"body":{"controllers/MailadmController.html":{}}}],["src/settings/mailadm.service.ts",{"_index":3235,"title":{},"body":{"injectables/MailadmService.html":{}}}],["src/settings/mailadm.service.ts:12",{"_index":3241,"title":{},"body":{"injectables/MailadmService.html":{}}}],["src/settings/mailadm.service.ts:7",{"_index":3239,"title":{},"body":{"injectables/MailadmService.html":{}}}],["src/settings/passwdadm.controller.ts",{"_index":3565,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm.controller.ts:15",{"_index":3574,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm.controller.ts:24",{"_index":3569,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/settings.controller.ts",{"_index":3716,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.module.ts",{"_index":3723,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.module.ts:27",{"_index":3725,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/settings/settings.service.ts",{"_index":3731,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:4",{"_index":3732,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/smsadm.controller.ts",{"_index":3770,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["src/settings/smsadm.controller.ts:15",{"_index":3773,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["src/settings/smsadm.controller.ts:24",{"_index":3774,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["srcfusionid",{"_index":2216,"title":{},"body":{"classes/Identities.html":{}}}],["sse",{"_index":1137,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse('sse",{"_index":1236,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(@res",{"_index":1237,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(res",{"_index":1158,"title":{},"body":{"controllers/BackendsController.html":{}}}],["ssetoken",{"_index":908,"title":{},"body":{"controllers/AuthController.html":{}}}],["sslv3,tlsv1,tlsv1.1,tlsv1.2",{"_index":782,"title":{},"body":{"modules/AppModule.html":{}}}],["stabilit",{"_index":4323,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["standards",{"_index":4272,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["start",{"_index":1103,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":1086,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{}}}],["started",{"_index":1831,"title":{"index.html":{},"license.html":{}},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["startloader",{"_index":3313,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["startloader('migration",{"_index":3332,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["state",{"_index":354,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":1322,"title":{},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{}}}],["state.enum.ts",{"_index":3997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statepart",{"_index":366,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["statepartdto",{"_index":497,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["statepartschema",{"_index":367,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["static",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"interfaces/CipherData.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/SettingsModule.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["status",{"_index":264,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["status.ts",{"_index":4003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":462,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{}}}],["statut",{"_index":4953,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":4744,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":4037,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":4500,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":4248,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":4268,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":4232,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":3404,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stoploader",{"_index":3314,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["stoploader(loader",{"_index":3334,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["storage",{"_index":651,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{}}}],["storage.get(project",{"_index":669,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["storage.has(project",{"_index":670,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["storage.set(project",{"_index":678,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["storage/identities",{"_index":1679,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["storagemanagerconfig",{"_index":1636,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["strategy",{"_index":3052,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":1995,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["stream.on('data",{"_index":3879,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('end",{"_index":3884,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('error",{"_index":3882,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.pipe(res",{"_index":3871,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring",{"_index":3829,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring(stream",{"_index":3835,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["strict",{"_index":111,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/IdentitiesValidationService.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MailadmService.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["stringify",{"_index":2522,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["stringify(jsonform",{"_index":2598,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":409,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(filestoragedto",{"_index":1956,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":2071,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":3109,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":405,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(filestoragedto",{"_index":1945,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":2069,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":2351,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["string})@apireadresponsedecorator(jobsdto",{"_index":2992,"title":{},"body":{"controllers/JobsController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":3107,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":420,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(filestorageupdatedto",{"_index":1960,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":2075,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":2355,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["structure",{"_index":2589,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":4853,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":4503,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":4450,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["style",{"_index":2670,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["stylesrc",{"_index":1666,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subcommand",{"_index":320,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subcommands",{"_index":346,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subject",{"_index":1053,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/filtres-api.html":{}}}],["submit",{"_index":4847,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":2042,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":2043,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["subscriber",{"_index":1184,"title":{},"body":{"controllers/BackendsController.html":{}}}],["succeeded",{"_index":2838,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":2776,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["success",{"_index":1040,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":340,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["succès",{"_index":1845,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suite",{"_index":4680,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":4321,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":4505,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":4785,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":4889,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["summary",{"_index":661,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/MailadmController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SmsadmController.html":{}}}],["supann",{"_index":2324,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":4931,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":2325,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["supannbirthdate",{"_index":4941,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":4939,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":4983,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":4937,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":4936,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":2327,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["super",{"_index":243,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":4437,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":105,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["super(message",{"_index":3900,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":3906,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.create",{"_index":3151,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["super.create(data",{"_index":572,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.debug(...[message",{"_index":2935,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error('failed",{"_index":2912,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":2927,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal('failed",{"_index":2954,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":2941,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":2905,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":2933,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.transform(value",{"_index":1785,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["super.update",{"_index":578,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.verbose(...[message",{"_index":2938,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":2930,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super[payload.level](payload.message",{"_index":2955,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplémentaires",{"_index":4465,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":4181,"title":{},"body":{"modules.html":{}}}],["supportant",{"_index":4611,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supposés",{"_index":2438,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["supprime",{"_index":861,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":4823,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sur",{"_index":3482,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["survenue",{"_index":1455,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["suspendedat",{"_index":3069,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":3781,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":3782,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["svg",{"_index":4182,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":660,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["swagger/json",{"_index":1686,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":1635,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1687,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["switch",{"_index":2842,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["switchtoprocessing",{"_index":1465,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["symlink",{"_index":4042,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["syncall",{"_index":1126,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["syncallidentities",{"_index":1138,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(@res",{"_index":1217,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(res",{"_index":1171,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synced",{"_index":4048,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronis",{"_index":3485,"title":{},"body":{"controllers/PasswdController.html":{}}}],["synchronisation",{"_index":4063,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronise",{"_index":1173,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synchroniser",{"_index":1176,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronization",{"_index":3354,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["synchronized",{"_index":1862,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["syncidentities",{"_index":1139,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentities(res",{"_index":1178,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentitiesdto",{"_index":1179,"title":{"classes/SyncIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/SyncIdentitiesDto.html":{}}}],["syncronisation",{"_index":4948,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["synctimeout",{"_index":1153,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["syntax",{"_index":4366,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["system",{"_index":2919,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["systemid",{"_index":1650,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/SmsSettingsDto.html":{}}}],["système",{"_index":4221,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":4293,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":4290,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":4286,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":4499,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":4650,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":4061,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":211,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["table",{"_index":4381,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":2296,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":4648,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tabs",{"_index":4038,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tag",{"_index":1326,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["tags",{"_index":672,"title":{},"body":{"controllers/AppController.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubUpdate.html":{}}}],["tant",{"_index":4985,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":4761,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tarball_url",{"_index":649,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["target",{"_index":2863,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["targetstate",{"_index":1890,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"controllers/IdentitiesCrudController.html":{}}}],["task",{"_index":1891,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["tasks",{"_index":3801,"title":{"classes/Tasks.html":{}},"body":{"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":3817,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.name",{"_index":3818,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":3810,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":1269,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["taskscontroller",{"_index":3807,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasksdocument",{"_index":3804,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["tasksmodule",{"_index":1264,"title":{"modules/TasksModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksschema",{"_index":3805,"title":{},"body":{"classes/Tasks.html":{},"modules/TasksModule.html":{}}}],["tasksservice",{"_index":3809,"title":{"injectables/TasksService.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["tat",{"_index":1169,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":4781,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":4968,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":3469,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["technique",{"_index":4343,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":4285,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technologies",{"_index":4261,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["teh",{"_index":3597,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["tel",{"_index":4225,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephonenumber",{"_index":4102,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":4854,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["template",{"_index":785,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["templates",{"_index":788,"title":{},"body":{"modules/AppModule.html":{}}}],["temporaire",{"_index":4513,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["temps",{"_index":1162,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["tendez",{"_index":4428,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":4434,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tentative",{"_index":1547,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["terminée",{"_index":1844,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["test",{"_index":4445,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test(employeenumber",{"_index":4126,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["test.createtestingmodule",{"_index":4534,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["teste",{"_index":4569,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":4467,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":4533,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":4317,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["text/html",{"_index":3851,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["text/plain",{"_index":3849,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["texte",{"_index":4795,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["themes",{"_index":3984,"title":{},"body":{"dependencies.html":{}}}],["thirdpartyauth",{"_index":355,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._checkmigrationlockfile",{"_index":3328,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._executemigrations",{"_index":3333,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._loadmigrationsfiles(currenttimestamp",{"_index":3330,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this._migrateemployeenumbertoarray",{"_index":1832,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this._model",{"_index":252,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this._options.mongoose.options",{"_index":2909,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._queue",{"_index":104,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this._req",{"_index":159,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.activation(body.id",{"_index":2284,"title":{},"body":{"controllers/IdentitiesActivationController.html":{}}}],["this._service.count(searchfilterschema",{"_index":2408,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.create",{"_index":1981,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.create(body",{"_index":460,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":480,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findall",{"_index":2493,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findandcount",{"_index":469,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":475,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyidwithrawdata(_id",{"_index":1997,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone",{"_index":1992,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone(schema",{"_index":2499,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findone(searchfilterschema",{"_index":2690,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["this._service.findonewithrawdata",{"_index":2000,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.fusion(body.id1",{"_index":2449,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["this._service.generate",{"_index":2490,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.generateall",{"_index":2486,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.searchdoubles",{"_index":2445,"title":{},"body":{"controllers/IdentitiesDoublonController.html":{}}}],["this._service.transformnullstostring(json.parse(json.stringify(identity",{"_index":2402,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.trashandcount(identitiescrudcontroller.projection",{"_index":2400,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.update(_id",{"_index":478,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["this._service.updatestate(_id",{"_index":2419,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.updatestatemany(body",{"_index":2424,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["this._service.upsertwithfingerprint(filters",{"_index":2722,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["this._service.validate(body",{"_index":2746,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this._writemigrationlockfile(key",{"_index":3392,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.access_token_expires_in",{"_index":1052,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":1063,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.create(agent",{"_index":337,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.agentsservice.findbyid(id",{"_index":1240,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.agentsservice.findone",{"_index":1025,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.model.countdocuments",{"_index":1041,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.compile(validschema",{"_index":2796,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":2834,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":664,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["this.asktoken",{"_index":1369,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":3160,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":3064,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.createtokens",{"_index":3098,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.backends.executejob",{"_index":1460,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.backendsservice.deleteidentities(body.payload",{"_index":1212,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.executejob",{"_index":1231,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('added",{"_index":1244,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('completed",{"_index":1251,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('failed",{"_index":1254,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.syncallidentities",{"_index":1129,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{}}}],["this.backendsservice.syncidentities(body.payload",{"_index":1215,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.commonlogdb",{"_index":2924,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.concerned",{"_index":3180,"title":{},"body":{"classes/Logger.html":{}}}],["this.concerned.tolocalelowercase",{"_index":3181,"title":{},"body":{"classes/Logger.html":{}}}],["this.config",{"_index":109,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.config.get('frontpwd.url",{"_index":1440,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.connection",{"_index":2910,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":2952,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.constructor.name",{"_index":108,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":174,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.context",{"_index":3178,"title":{},"body":{"classes/Logger.html":{}}}],["this.context.tolocalelowercase",{"_index":3179,"title":{},"body":{"classes/Logger.html":{}}}],["this.createtokens(new",{"_index":1018,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":1071,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decrypttoken(data.token",{"_index":1551,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.decrypttokenwithcode(data.token",{"_index":1535,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.defaultvalues",{"_index":251,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.dev_token_path",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.filestorage.findonewithrawdata",{"_index":2698,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{}}}],["this.filestorage.upsertfile(filter",{"_index":2694,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["this.findone",{"_index":247,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.generate(file",{"_index":2614,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.getpaddingforcode",{"_index":1365,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.getparameter('smtpserver",{"_index":3247,"title":{},"body":{"injectables/MailadmService.html":{}}}],["this.getstatus",{"_index":3904,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":3442,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.httpservers.map",{"_index":3744,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["this.httpservers.push(server",{"_index":3743,"title":{},"body":{"injectables/ShutdownObserver.html":{}}}],["this.identities.find",{"_index":1557,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identities.findone",{"_index":1353,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.identitymodel.ensureindexes",{"_index":1860,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["this.initaccount",{"_index":1569,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.initialize",{"_index":2914,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.inquirer.ask('agent",{"_index":336,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.inquirer.ask('keyrings",{"_index":3089,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.jwtservice.decode(jwt",{"_index":1072,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":1050,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keyringsservice.create(keyring",{"_index":3090,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.keyringsservice.findone",{"_index":1032,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locklocation",{"_index":3321,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findall",{"_index":2856,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findone",{"_index":2870,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(`additionalfields",{"_index":2846,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(`session",{"_index":901,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.debug(chalk.yellow('checking",{"_index":3329,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.debug(chalk.yellow('lock",{"_index":3326,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.debug(chalk.yellow('migrations",{"_index":3325,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error('erreur",{"_index":1445,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error('error",{"_index":1410,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error(`error",{"_index":2545,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error(`token",{"_index":1015,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(chalk.red('database",{"_index":3352,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(chalk.red('error",{"_index":3350,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(chalk.red(`error",{"_index":3388,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(e",{"_index":3396,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.error(e.message",{"_index":3390,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log('datatoken",{"_index":1536,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('decrypt",{"_index":1506,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('delete",{"_index":1541,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('employeenumber1700395200",{"_index":1830,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log('identities",{"_index":2547,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.log('init",{"_index":1441,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('initializing",{"_index":2533,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.log('k",{"_index":1512,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('mailer.identitymailattribute",{"_index":1435,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('migration",{"_index":1843,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log('reset",{"_index":1376,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('resetbycode",{"_index":1529,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('token",{"_index":1372,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(`call",{"_index":3523,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`fetching",{"_index":671,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.log(`migrating",{"_index":1837,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.logger.log(`new",{"_index":1024,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":1012,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(chalk.blue('all",{"_index":3393,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.blue('no",{"_index":3380,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.blue(`migration",{"_index":3338,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('database",{"_index":3355,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('migration",{"_index":3349,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.green('no",{"_index":3379,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.yellow(`migration",{"_index":3376,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.log(chalk.yellow(`running",{"_index":3387,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.verbose('error",{"_index":1527,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose('send",{"_index":1567,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose(`atempt",{"_index":3060,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.logger.warn('dev",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('invalid",{"_index":1044,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`copied",{"_index":2543,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.warn(chalk.red('no",{"_index":3340,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.warn(chalk.yellow('no",{"_index":3344,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.logger.warn(chalk.yellow(`migration",{"_index":3361,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mailadmservice.getparams",{"_index":1379,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/MailadmController.html":{},"interfaces/TokenData.html":{}}}],["this.mailadmservice.setparams(body",{"_index":3234,"title":{},"body":{"controllers/MailadmController.html":{}}}],["this.mailer",{"_index":1382,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.mailer.addtransporter('laststmp",{"_index":1380,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.message",{"_index":3903,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.migrations.get(key",{"_index":3383,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.keys",{"_index":3381,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.set(file",{"_index":3377,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.migrations.size",{"_index":3378,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.moduleref.create(migration.default",{"_index":3385,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.moduleref.get(configservice",{"_index":110,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.moduleref.get(getredisconnectiontoken",{"_index":114,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.mongo.collection('identities').find",{"_index":1833,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.mongo.collection('identities').updateone",{"_index":1838,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{}}}],["this.mongo.collection('migrations').findone",{"_index":3342,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mongo.collection('migrations').insertone",{"_index":3353,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["this.mongoconnection",{"_index":3419,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":3422,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":3425,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":3421,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":3427,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":3415,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":3418,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":3423,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":3901,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":828,"title":{},"body":{"injectables/AppService.html":{}}}],["this.passwdadmservice.checkpolicies(data.newpassword",{"_index":1533,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.checkpolicies(passwddto.newpassword",{"_index":1454,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.getpolicies",{"_index":1359,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.setpolicies(body",{"_index":3581,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["this.passwdservice.change(body",{"_index":3522,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.checkinitoutdated",{"_index":3558,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initaccount(body",{"_index":3542,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initmany(body",{"_index":3552,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initreset(body",{"_index":3556,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(body",{"_index":3535,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.resetbycode(body",{"_index":3532,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.path.split('/').pop",{"_index":1936,"title":{},"body":{"classes/Filestorage.html":{}}}],["this.queue",{"_index":4410,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add('exemple",{"_index":4439,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents",{"_index":117,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('failed",{"_index":4440,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis",{"_index":113,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":1075,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":1077,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del(data.token",{"_index":1542,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.exists('codepadding",{"_index":1576,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.expire",{"_index":1060,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire(ciphertext",{"_index":1493,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get('codepadding",{"_index":1577,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":1036,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":1069,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get(token",{"_index":1503,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set",{"_index":1056,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set('codepadding",{"_index":1579,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.refresh_token_expires_in",{"_index":1061,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":1057,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":168,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":171,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.resolveconfigpath(key",{"_index":2826,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolveconfigpath(schema",{"_index":2873,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolvejsonformpath(path",{"_index":2629,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":919,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":897,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":904,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":914,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.setinitstate(identity",{"_index":1442,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":2904,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.setparameter('smtpserver",{"_index":3248,"title":{},"body":{"injectables/MailadmService.html":{}}}],["this.smsadmservice.getparams",{"_index":3777,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["this.smsadmservice.send(numtel",{"_index":1409,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["this.smsadmservice.setparams(body",{"_index":3778,"title":{},"body":{"controllers/SmsadmController.html":{}}}],["this.transformerservice.transform(mime",{"_index":1998,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{}}}],["this.upsert",{"_index":254,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{}}}],["this.validateattribute(key",{"_index":2835,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":2795,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":2832,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":1791,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":1816,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":3902,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this[key",{"_index":610,"title":{},"body":{"classes/ApiSession.html":{}}}],["throw",{"_index":106,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ticket",{"_index":4737,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":3822,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["ticketformfield",{"_index":3824,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":3825,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":4753,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":4077,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":4269,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["timeoutdiscard",{"_index":1224,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["timeoutdiscardquery",{"_index":1150,"title":{},"body":{"controllers/BackendsController.html":{}}}],["timestamp",{"_index":3343,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["timestampmatch",{"_index":3359,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["tiquette",{"_index":4774,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":2044,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":4754,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":4742,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":4832,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tls",{"_index":780,"title":{},"body":{"modules/AppModule.html":{}}}],["tmp",{"_index":3323,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["to.part.dto",{"_index":3018,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["to.part.dto.ts",{"_index":1622,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:13",{"_index":1625,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:18",{"_index":1626,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:9",{"_index":1623,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.parts.schema",{"_index":2985,"title":{},"body":{"classes/Jobs.html":{}}}],["to.parts.schema.ts",{"_index":1614,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:10",{"_index":1616,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:13",{"_index":1617,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:7",{"_index":1615,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to_complete",{"_index":2380,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":4053,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":4052,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":2384,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":164,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"classes/Filestorage.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{}}}],["token",{"_index":603,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"controllers/PasswdController.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto",{"_index":1293,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token.dto.ts",{"_index":835,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:10",{"_index":3915,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:11",{"_index":842,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.dto.ts:7",{"_index":844,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.json",{"_index":980,"title":{},"body":{"injectables/AuthService.html":{}}}],["token=${data?.token",{"_index":1546,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token=${token",{"_index":1522,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token_algorithm",{"_index":1332,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["token_path_separator",{"_index":951,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendata",{"_index":1323,"title":{"interfaces/TokenData.html":{}},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["tokendata.uid",{"_index":1537,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["tokens",{"_index":896,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["total",{"_index":468,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{}}}],["toujours",{"_index":4987,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["touppercase",{"_index":2377,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["tous",{"_index":2471,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["tout",{"_index":1459,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":1174,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["track",{"_index":1107,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":1096,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":1087,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":1088,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["traitement",{"_index":4395,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":4406,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transform",{"_index":1773,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(mime",{"_index":3838,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transform(value",{"_index":1777,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformer",{"_index":510,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["transformers",{"_index":3828,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformerservice",{"_index":1976,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["transformersfilestorageservice",{"_index":1970,"title":{"injectables/TransformersFilestorageService.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/TransformersFilestorageService.html":{},"overview.html":{}}}],["transformersfilestorageservice.streamtostring(stream",{"_index":3876,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype",{"_index":3863,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype.split('/')[0",{"_index":3864,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype.split('/')[0",{"_index":3865,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype](mime",{"_index":3872,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformhtml",{"_index":3852,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformimage",{"_index":3856,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformpdf",{"_index":3854,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformplain",{"_index":3850,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml",{"_index":3830,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml(_",{"_index":3841,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage",{"_index":3831,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage(mime",{"_index":3843,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformkeys",{"_index":4812,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformoptions",{"_index":1787,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformpdf",{"_index":3832,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformpdf(_",{"_index":3845,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain",{"_index":3833,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain(_",{"_index":3847,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transport",{"_index":768,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["transportername",{"_index":1384,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["trashandcount",{"_index":192,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["trashandcount(projection",{"_index":231,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["travers",{"_index":4340,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":4289,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tree",{"_index":466,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["trim",{"_index":1794,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":5017,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":4482,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["trouvée",{"_index":1562,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["true",{"_index":272,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true|on|yes|1/i.test(asyncquery",{"_index":1211,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(disablelogsquery",{"_index":1227,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(erroronnotfound",{"_index":2723,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true|on|yes|1/i.test(hiddenquery",{"_index":1985,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["true|on|yes|1/i.test(timeoutdiscardquery",{"_index":1225,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(updatestatusquery",{"_index":1229,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(upsert",{"_index":2724,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["true})@apiproperty()@isoptional",{"_index":4141,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["true})@apiproperty({example",{"_index":3201,"title":{},"body":{"classes/MailSettingsDto.html":{}}}],["true})@apiproperty({type",{"_index":3691,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":3123,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional",{"_index":4135,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":3688,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":2177,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1722,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":2173,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":5016,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":244,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"controllers/IdentitiesActivationController.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/MigrationsService.html":{},"controllers/PasswdController.html":{},"interfaces/TokenData.html":{}}}],["ts",{"_index":3439,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ttl",{"_index":652,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["ttlautopurge",{"_index":655,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["typage",{"_index":4252,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/ActivationDto.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/DeleteIdentitiesDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitInfoPart.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.enum",{"_index":1193,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"interfaces/TokenData.html":{}}}],["type.enum.ts",{"_index":3995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.vue",{"_index":4743,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":4190,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1836,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/MigrationsService.html":{}}}],["types",{"_index":133,"title":{},"body":{"classes/AbstractSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"classes/InitManyDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":124,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"classes/InitManyDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid(`${filter",{"_index":2720,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["types.objectid(body.id",{"_index":1234,"title":{},"body":{"controllers/BackendsController.html":{}}}],["types.objectid(value",{"_index":3464,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":3462,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["têtes",{"_index":4866,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":3678,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ui.yml",{"_index":2592,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["uid",{"_index":837,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uid=${asktoken?.uid",{"_index":1496,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["uid=${initdto?.uid",{"_index":1414,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["uid=${passwddto?.uid",{"_index":1468,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["un",{"_index":869,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unauthorizedexception",{"_index":988,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":219,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesActivationController.html":{},"classes/IdentitiesCreateDto.html":{},"controllers/IdentitiesDoublonController.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MailSettingsDto.html":{},"controllers/MailadmController.html":{},"injectables/MailadmService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SmsadmController.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["une",{"_index":1144,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uniforme",{"_index":4646,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":360,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/Settings.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":4547,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniques",{"_index":4644,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unknown",{"_index":589,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/MigrationsService.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{}}}],["unsafe",{"_index":3003,"title":{},"body":{"controllers/JobsController.html":{}}}],["unused",{"_index":333,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["up",{"_index":1822,"title":{},"body":{"classes/EmployeeNumber1700395200.html":{},"injectables/MigrationsService.html":{}}}],["update",{"_index":193,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(_id",{"_index":233,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesCrudController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["update(res",{"_index":622,"title":{},"body":{"controllers/AppController.html":{}}}],["update.$set.password",{"_index":576,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.$set?.password",{"_index":575,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.decorator",{"_index":441,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesCrudController.html":{}}}],["update.json",{"_index":677,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["update.password",{"_index":573,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update/:project(sesame",{"_index":627,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["update?.$set",{"_index":579,"title":{},"body":{"injectables/AgentsService.html":{}}}],["updateassertions",{"_index":4573,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":4578,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateavailable",{"_index":701,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["updated",{"_index":1564,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/MigrationsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":4575,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":4509,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":4527,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions(service",{"_index":4579,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":4576,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":234,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["updatestate",{"_index":2337,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestate(_id",{"_index":2357,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatemany",{"_index":2338,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatemany(res",{"_index":2360,"title":{},"body":{"controllers/IdentitiesCrudController.html":{}}}],["updatestatus",{"_index":1228,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/TokenData.html":{}}}],["updatestatusquery",{"_index":1152,"title":{},"body":{"controllers/BackendsController.html":{}}}],["updating",{"_index":3395,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["upload.decorator",{"_index":1968,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uploadedfile",{"_index":1963,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uploadedfile(new",{"_index":1979,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upper",{"_index":3608,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["uppercase",{"_index":3621,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":194,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["upsert(filter",{"_index":236,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"injectables/TasksService.html":{}}}],["upsert(res",{"_index":2700,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller",{"_index":2656,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["upsert.controller.ts",{"_index":2699,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller.ts:113",{"_index":2706,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.controller.ts:60",{"_index":2705,"title":{},"body":{"controllers/IdentitiesUpsertController.html":{}}}],["upsert.service",{"_index":2654,"title":{},"body":{"modules/IdentitiesModule.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upsertinetorgpersonjpegphoto",{"_index":2666,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["upsertinetorgpersonjpegphoto(res",{"_index":2680,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["uri",{"_index":798,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":647,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/TokenData.html":{},"additional-documentation/filtres-api.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":5041,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usage",{"_index":4371,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["usages",{"_index":4365,"title":{},"body":{"additional-documentation/filtres-api.html":{}}}],["use",{"_index":1090,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["use(req",{"_index":1852,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{}}}],["useclass",{"_index":815,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["used",{"_index":1111,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":552,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{}}}],["useguards",{"_index":880,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('jwt",{"_index":899,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":894,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":1964,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1977,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["user",{"_index":157,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{}}}],["user.security.secretkey",{"_index":910,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["user.state.current",{"_index":3162,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usercertificate",{"_index":4103,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["useridentity",{"_index":1062,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridentity.tojson",{"_index":1065,"title":{},"body":{"injectables/AuthService.html":{}}}],["username",{"_index":313,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/MailSettingsDto.html":{}}}],["userpassword",{"_index":4128,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usevalue",{"_index":4537,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utf",{"_index":830,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/MigrationsService.html":{}}}],["utf8",{"_index":1487,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TokenData.html":{}}}],["utilis",{"_index":4525,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":4546,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":4270,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":856,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":4313,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":4242,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":4693,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":4315,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":4407,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":4262,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":4477,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":4590,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":4446,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["va",{"_index":4635,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["val",{"_index":308,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["valeur",{"_index":4922,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":5018,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":4613,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":1909,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesUpsertController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validate",{"_index":2733,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":3045,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":2772,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":2738,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validateattribute",{"_index":2765,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":2778,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validatenested",{"_index":506,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":2133,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":495,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":498,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["validatenested({each",{"_index":1721,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validates",{"_index":2774,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validateschema",{"_index":2530,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":2763,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation",{"_index":1792,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["validation.filter.ts",{"_index":2749,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:34",{"_index":3434,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":2751,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":3432,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":447,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["validation.pipe.ts",{"_index":1771,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:15",{"_index":3910,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:21",{"_index":1779,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:23",{"_index":1776,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:57",{"_index":1782,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":3460,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validation/inetorgperson.json",{"_index":2872,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validationconfigexception",{"_index":2527,"title":{"classes/ValidationConfigException.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationerror",{"_index":1781,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":2750,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:18",{"_index":3894,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":3893,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":3892,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":3890,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationpipe",{"_index":1772,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":1774,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive(error",{"_index":1780,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":284,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":2647,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":2370,"title":{},"body":{"controllers/IdentitiesCrudController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{}}}],["validations[`${key}.${property",{"_index":3448,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":1806,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":2811,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":3451,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":2815,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":2792,"title":{"classes/ValidationSchemaException.html":{}},"body":{"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validator",{"_index":278,"title":{},"body":{"classes/ActivationDto.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DeleteIdentitiesDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/FusionDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitManyDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MailSettingsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SmsSettingsDto.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["valide",{"_index":2819,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":4696,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":2823,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":2789,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validés",{"_index":4915,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":974,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/EmployeeNumber1700395200.html":{},"controllers/FilestorageController.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/MailSettingsDto.html":{},"injectables/MigrationsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PasswordPoliciesDto.html":{},"injectables/ShutdownObserver.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":296,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesCrudController.html":{},"controllers/IdentitiesUpsertController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":4198,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variabilit",{"_index":4249,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variables",{"_index":4401,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vars",{"_index":334,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["verbe",{"_index":4898,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":2937,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":2936,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verification",{"_index":1451,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["verifiedcallback",{"_index":3047,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verifiez",{"_index":3543,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verify",{"_index":990,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":956,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":971,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytokendto",{"_index":3912,"title":{"classes/VerifyTokenDto.html":{}},"body":{"classes/VerifyTokenDto.html":{}}}],["vers",{"_index":4078,"title":{},"body":{"index.html":{}}}],["version",{"_index":691,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubUpdate.html":{},"classes/MongoDbTestInstance.html":{},"properties.html":{}}}],["versionkey",{"_index":376,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["versionn",{"_index":4338,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":4342,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["verticallayout",{"_index":2563,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["veuillez",{"_index":4756,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":4237,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vides",{"_index":4989,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":4240,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vise",{"_index":4217,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["voici",{"_index":4502,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":1853,"title":{},"body":{"injectables/EnsureIdentitiesIndexMiddleware.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ShutdownObserver.html":{}}}],["voir",{"_index":2673,"title":{},"body":{"controllers/IdentitiesPhotoController.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["vos",{"_index":3546,"title":{},"body":{"controllers/PasswdController.html":{}}}],["votre",{"_index":1388,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"classes/SmsSettingsDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":4688,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":4971,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":4390,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":4739,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":4849,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":4408,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":4549,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["wanting",{"_index":1098,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":2929,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":2928,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["whitelistedheaders",{"_index":3653,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["winston",{"_index":3967,"title":{},"body":{"dependencies.html":{}}}],["wkfsjldxgryajg1",{"_index":3768,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}],["wont",{"_index":3630,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["workerresultinfointerface",{"_index":3917,"title":{"interfaces/WorkerResultInfoInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["workerresultinterface",{"_index":3922,"title":{"interfaces/WorkerResultInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["wrappertype",{"_index":4206,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefile",{"_index":3318,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["writefile(this.locklocation",{"_index":3347,"title":{},"body":{"injectables/MigrationsService.html":{}}}],["writefilesync",{"_index":998,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["writefilesync(`${jsonformpath",{"_index":2597,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${process.cwd()}/configs/identities/jsonforms/${file",{"_index":2542,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${process.cwd()}/configs/identities/validations/${file",{"_index":2801,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["wrong",{"_index":3905,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["x",{"_index":4944,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["xx",{"_index":1523,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["xxxxxx@xxxxxxxxxxx",{"_index":1427,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["xxxxxxxx@xxxxxxx",{"_index":1428,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/TokenData.html":{}}}],["y",{"_index":4071,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":2523,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"classes/AbstractSettingsService.html":{},"classes/AbstractSettingsService-1.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesPhotoController.html":{},"controllers/IdentitiesUpsertController.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/MailadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["yes|1|on|true/i.test(process.env['sesame_https_enabled",{"_index":1657,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["yml",{"_index":2550,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yml$/.test(fileobj.file",{"_index":2867,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup",{"_index":2788,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yupschema",{"_index":2848,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema.validate(attribute",{"_index":2851,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["z",{"_index":5039,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["z0",{"_index":757,"title":{},"body":{"modules/AppModule.html":{},"classes/inetOrgPerson.html":{}}}],["za",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zipball_url",{"_index":648,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["zoom",{"_index":541,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/MigrationsModule.html":{},"modules/PasswdModule.html":{},"modules/SettingsModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["zsvyngf8",{"_index":3755,"title":{},"body":{"classes/SmsSettingsDto.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    queue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.queue.processor.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queue\n                    \n                \n\n                \n                    \n                        getqueue()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.queue.processor.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Queue, QueueEvents } from 'bullmq';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { getRedisConnectionToken } from '@nestjs-modules/ioredis';\nimport { Redis } from 'ioredis';\nimport { OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport abstract class AbstractQueueProcessor extends AbstractService implements OnModuleInit {\n  protected config: ConfigService;\n\n  private redis: Redis;\n  protected _queue: Queue;\n  public queueEvents: QueueEvents;\n\n  public get queue(): Queue {\n    return this._queue;\n  }\n\n  public constructor(context?: AbstractServiceContext) {\n    super(context);\n    if (!this.moduleRef) throw new Error('ModuleRef is not defined in ' + this.constructor.name);\n  }\n\n  public async onModuleInit() {\n    this.config = this.moduleRef.get(ConfigService, { strict: false });\n    this.redis = this.moduleRef.get(getRedisConnectionToken(), { strict: false });\n\n    this._queue = new Queue(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata?: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService.html":{"url":"classes/AbstractSettingsService.html","title":"class - AbstractSettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Settings } from '~/settings/_schemas/settings.schema';\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string;\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr = await this.findOne({ name: settingName });\n      return enr.parameters;\n    } catch (e) {\n      return this.defaultValues();\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    // const enr = new this._model({\n    //   name: settingName,\n    //   parameters: parameters,\n    // });\n    const ok = await this.upsert(\n      { name: settingName },\n      {\n        $setOnInsert: {\n          name: settingName,\n        },\n        $set: {\n          parameters: parameters,\n        },\n      },\n    );\n    return ok;\n  }\n\n  protected async defaultValues(): Promise {\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService-1.html":{"url":"classes/AbstractSettingsService-1.html","title":"class - AbstractSettingsService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/settings/_abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/settings/_abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/_abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Settings, SettingsSchema } from '~/settings/_schemas/settings.schema';\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string;\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr = await this.findOne({ name: settingName });\n      return enr.parameters;\n    } catch (e) {\n      return this.defaultValues();\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    const enr = new this._model({\n      name: settingName,\n      parameters: parameters,\n    });\n    const ok = await this.upsert(\n      { name: settingName },\n      {\n        $setOnInsert: {\n          name: settingName,\n        },\n        $set: {\n          parameters: parameters,\n        },\n      },\n    );\n    return ok;\n  }\n\n  protected async defaultValues(): Promise {\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivationDto.html":{"url":"classes/ActivationDto.html","title":"class - ActivationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/activation-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/activation-dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: 'true', description: 'true or false to enable or disable the identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/activation-dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, IsString } from 'class-validator';\n\nexport class ActivationDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of identity', type: String })\n  public id: string;\n\n  @IsBoolean()\n  @ApiProperty({ example: 'true', description: 'true or false to enable or disable the identity', type: String })\n  public status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                objectClasses\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart extends Document {\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  public objectClasses: string[];\n\n  @Prop({ type: Object, default: {} })\n  public attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  public validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateQuestions.html":{"url":"classes/AgentCreateQuestions.html","title":"class - AgentCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseEmail\n                            \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseEmail(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Email ?', name: 'email'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Password ?', name: 'password', type: 'password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseUsername(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Username ?', name: 'username'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/_parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/_parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCommand.html":{"url":"classes/AgentsCommand.html","title":"class - AgentsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from './agents.service';\n\n@ApiTags('core/agents')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    email: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n      security: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateCommand.html":{"url":"classes/AgentsCreateCommand.html","title":"class - AgentsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, agentsService: AgentsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:43\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n// import { AgentsCommand } from '~/cli/agents.command';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService /* ...AgentsCommand.registerWithSubCommands() */],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: AgentsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:17\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:27\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AgentsCreateDto } from './_dto/agents.dto';\nimport { hash } from 'argon2';\nimport { randomBytes } from 'node:crypto';\nimport { SecurityPartDTO } from './_dto/parts/security.part.dto';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: AgentsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    data.password = await hash(data.password);\n    data.security = (data.security || {}) as SecurityPartDTO;\n    data.security.secretKey = randomBytes(32).toString('hex');\n    return await super.create(data, options);\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery & any,\n    options?: QueryOptions,\n  ): Promise>> {\n    if (update.password) {\n      update.password = await hash(update.password);\n    }\n    if (update.$set?.password) {\n      update.$set.password = await hash(update.$set.password);\n    }\n    return await super.update(\n      _id,\n      {\n        ...update,\n        $set: {\n          ...(update?.$set || {}),\n        },\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, ValidateNested, IsEmail, IsBoolean, IsMongoId, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSession.html":{"url":"classes/ApiSession.html","title":"class - ApiSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/api-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/api-session.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiSession {\n  public readonly _id: string;\n  public readonly username: string;\n  public readonly displayName: string;\n  public readonly token: string;\n\n  public constructor(data: Partial) {\n    for (const key in data) {\n      this[key] = data[key];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                getInfo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get API infos'})@ApiResponse({status: 200, description: 'Return API infos'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(res: Response, project?: string, current?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'current', required: false})@Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { LRUCache } from 'lru-cache';\n\ninterface GithubUpdate {\n  name?: string;\n  commit?: {\n    sha?: string;\n    url?: string;\n  };\n  zipball_url?: string;\n  tarball_url?: string;\n  node_id?: string;\n}\n\nconst storage = new LRUCache({\n  ttl: 1000 * 60 * 60,\n  ttlAutopurge: true,\n});\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data: GithubUpdate[] | object = {};\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`);\n      data = storage.get(project) as GithubUpdate[] | object;\n    } else {\n      this.logger.log(`Fetching ${project} tags`);\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/tags`, {\n        signal: AbortSignal.timeout(1000),\n      });\n      data = await update.json();\n      storage.set(project, data);\n      // console.log('this.storage', storage.get(project))\n    }\n    if (!Array.isArray(data)) {\n      throw new BadRequestException(`Invalid data from Github `);\n    }\n    const lastVersion = data[0].name.replace(/^v/, '');\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nAppModule -->\n\nMigrationsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nShutdownObserver\n\nShutdownObserver\n\nAppModule -->\n\nShutdownObserver->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            ShutdownObserver\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                        \n                            MigrationsModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AuthGuard } from './_common/guards/auth.guard';\nimport { MongooseValidationFilter } from './_common/filters/mongoose-validation.filter';\nimport { DtoValidationPipe } from './_common/pipes/dto-validation.pipe';\nimport { SettingsModule } from '~/settings/settings.module';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { MigrationsService } from './migrations/migrations.service';\nimport { MigrationsModule } from './migrations/migrations.module';\nimport { ShutdownObserver } from './_common/observers/shutdown.observer';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MailerModule.forRootAsync({\n      imports: [SettingsModule],\n      inject: [MailadmService],\n      useFactory: async (service: MailadmService) => {\n        const params = await service.getParams();\n        const regex = /^(smtps?|):\\/\\/([a-zA-Z0-9.-]+|\\d{1,3}(?:\\.\\d{1,3}){3}|\\[(?:[0-9a-fA-F:]+)\\]):(\\d+)$/;\n        const [_, protocol, host, port] = `${params.host}`.match(regex);\n        const isDev = process.env.NODE_ENV === 'development';\n\n        return {\n          transport: {\n            host,\n            port: parseInt(port),\n            from: params.sender,\n            secure: protocol === 'smtps' && port === '465',\n            requireTLS: protocol === 'smtps' && port === '587',\n            auth: {\n              user: params.username,\n              pass: params.password,\n            },\n            tls: {\n              ciphers: 'SSLv3,TLSv1,TLSv1.1,TLSv1.2',\n            },\n            debug: isDev,\n            logger: isDev,\n          },\n          defaults: {\n            from: params.sender,\n          },\n          template: {\n            dir: __dirname + '/../templates',\n            adapter: new HandlebarsAdapter(),\n            options: {\n              strict: true,\n            },\n          },\n        };\n      },\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n        blockingConnection: true,\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    RequestContextModule,\n    CoreModule.register(),\n    ManagementModule.register(),\n    SettingsModule.register(),\n    MigrationsModule.register(),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    ShutdownObserver,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard('jwt'),\n    },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionFilter,\n    // },\n    {\n      provide: APP_FILTER,\n      useClass: MongooseValidationFilter,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: DtoValidationPipe,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Partial\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\n\n@Injectable()\nexport class AppService extends AbstractService {\n  protected package: Partial;\n\n  public constructor(protected moduleRef: ModuleRef) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                mail\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class AskTokenDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  public uid: string;\n\n  @ApiProperty({ example: 'monemail@mondomaine.com', description: 'secondary mail' })\n  @IsString()\n  public mail: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)@ApiOperation({summary: 'Authentification interne utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ApiOperation({summary: 'Supprime le jeton d'authentification utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')@ApiOperation({summary: 'Récupère un nouveau jeton d'authentification'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)@ApiOperation({summary: 'Récupération de la session en cours'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { hash } from 'crypto';\nimport { omit, pick } from 'radash';\n\n@Public()\n@ApiTags('core/auth')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  @ApiOperation({ summary: 'Authentification interne utilisateur' })\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiOperation({ summary: 'Récupération de la session en cours' })\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    this.logger.debug(`Session request for ${identity._id} (${identity.email})`);\n    const user = await this.service.getSessionData(identity);\n    this.logger.debug(`Session data delivered for ${identity._id} (${identity.email}) with ${JSON.stringify(user)}`);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...omit(user, ['security', 'metadata']),\n        sseToken: hash('sha256', user.security.secretKey),\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  @ApiOperation({ summary: \"Récupère un nouveau jeton d'authentification\" })\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const [agents, tokens] = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      sseToken: hash('sha256', agents.security.secretKey),\n    });\n  }\n\n  @Post('logout')\n  @ApiOperation({ summary: \"Supprime le jeton d'authentification utilisateur\" })\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\nimport { KeyringsModule } from '../keyrings/keyrings.module';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, keyringsService: KeyringsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity: AgentType, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit, pascal, pick } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\nimport { KeyringsService } from '../keyrings/keyrings.service';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    protected readonly keyringsService: KeyringsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n        scopes: ['offline', 'api'],\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType & { token: string } }): Promise {\n    // console.log('payload', payload);\n    if (payload.scopes.includes('offline')) {\n      return payload.identity;\n    }\n    if (payload.scopes.includes('api')) {\n      try {\n        const identity = await this.keyringsService.findOne({\n          _id: payload.identity._id,\n          token: payload.identity.token,\n        });\n        if (identity) {\n          return identity.toObject();\n        }\n      } catch (e) { }\n      return null;\n    }\n    try {\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        const data = JSON.parse(identity);\n        console.log('data', data);\n        const success = await this.agentsService.model.countDocuments({\n          _id: payload.identity._id,\n          'security.secretKey': data.identity?.security?.secretKey,\n        });\n\n        return success ? data : null;\n      }\n    } catch (e) {\n      this.logger.warn('Invalid jwt session', e);\n    }\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['sesame'];\n    if (options?.scopes) scopes.push(...options.scopes);\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity: pick(identity, ['_id', 'username', 'email']), scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...omit(options, ['scopes']),\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    const userIdentity = await this.agentsService.findOne({ _id: identity._id });\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity: userIdentity.toJSON(),\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  public async getSessionData(identity: AgentType): Promise {\n    const entity = await this.agentsService.findOne(\n      { _id: identity._id },\n      {\n        projection: {\n          metadata: 0,\n          password: 0,\n        },\n      },\n    )\n    return {\n      ...omit(entity.toJSON(), ['password']),\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return [identity, await this.createTokens(omit(identity.toObject(), ['password']), refresh_token)];\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rules\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rules:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  type?: string;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n\n  rules?: Function;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  type?: string;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n\n  rules?: Function;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInfoInterface.html":{"url":"interfaces/BackendResultInfoInterface.html","title":"interface - BackendResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInterface.html":{"url":"interfaces/BackendResultInterface.html","title":"interface - BackendResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsCommand.html":{"url":"classes/BackendsCommand.html","title":"class - BackendsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                deleteIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                sse\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        deleteIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteIdentities(res: Response, body: DeleteIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete')@ApiOperation({summary: 'Supprime une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            DeleteIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(res: Response, body: ExecuteJobDto, asyncQuery: string, timeoutDiscardQuery: string, disableLogsQuery: string, updateStatusQuery: string, syncTimeout?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')@ApiOperation({summary: 'Execute un backend manuellement'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ExecuteJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timeoutDiscardQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                disableLogsQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                syncTimeout\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        sse\n                        \n                    \n                \n            \n            \n                \n                        \n                    sse(res: Response, id: string, key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('sse')@ApiOperation({summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(res: Response, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('syncall')@ApiOperation({summary: 'Synchronise toutes les identitées à synchroniser'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(res: Response, body: SyncIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sync')@ApiOperation({summary: 'Synchronise une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SyncIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  Body,\n  Controller,\n  HttpStatus,\n  Logger,\n  ParseIntPipe,\n  Post,\n  Query,\n  Req,\n  Res,\n  Sse,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response, Request } from 'express';\nimport Redis from 'ioredis';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ExecuteJobDto } from './_dto/execute-job.dto';\nimport { BackendsService } from './backends.service';\nimport { SyncIdentitiesDto } from './_dto/sync-identities.dto';\nimport { Types } from 'mongoose';\nimport { ActionType } from './_enum/action-type.enum';\nimport { DeleteIdentitiesDto } from './_dto/delete-identities.dto';\nimport { hash } from 'crypto';\nimport { AgentsService } from '../agents/agents.service';\nimport { Agents } from '../agents/_schemas/agents.schema';\n\nfunction fireMessage(observer: Subscriber, channel: string, message: any, loggername: string) {\n  try {\n    observer.next({\n      data: { channel, payload: message },\n    } as MessageEvent);\n    Logger.debug(`Observer send to  with data `, loggername);\n  } catch (err) {\n    Logger.error(`Observer error from  with data . Error: ${err}`, loggername);\n  }\n}\n\n@ApiTags('core/backends')\n@Controller('backends')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(\n    private agentsService: AgentsService,\n    private backendsService: BackendsService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) { }\n\n  @Post('delete')\n  @ApiOperation({ summary: \"Supprime une liste d'identitées\" })\n  public async deleteIdentities(\n    @Res() res: Response,\n    @Body() body: DeleteIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.deleteIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('sync')\n  @ApiOperation({ summary: \"Synchronise une liste d'identitées\" })\n  public async syncIdentities(\n    @Res() res: Response,\n    @Body() body: SyncIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('syncall')\n  @ApiOperation({ summary: 'Synchronise toutes les identitées à synchroniser' })\n  public async syncAllIdentities(@Res() res: Response, @Query('async') asyncQuery: string) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncAllIdentities({\n      async: false,\n    });\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('execute')\n  @ApiOperation({ summary: 'Execute un backend manuellement' })\n  public async executeJob(\n    @Res() res: Response,\n    @Body() body: ExecuteJobDto,\n    @Query('async') asyncQuery: string,\n    @Query('timeoutDiscard') timeoutDiscardQuery: string,\n    @Query('disableLogs') disableLogsQuery: string,\n    @Query('updateStatus') updateStatusQuery: string,\n    @Query(\n      'syncTimeout',\n      new ParseIntPipe({\n        optional: true,\n        errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE,\n      }),\n    )\n    syncTimeout?: number,\n  ): Promise {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const timeoutDiscard = /true|on|yes|1/i.test(timeoutDiscardQuery);\n    const disableLogs = /true|on|yes|1/i.test(disableLogsQuery);\n    const updateStatus = /true|on|yes|1/i.test(updateStatusQuery);\n    const [job, response] = await this.backendsService.executeJob(\n      body.action,\n      body.id ? new Types.ObjectId(body.id) : null,\n      body.payload,\n      {\n        async,\n        syncTimeout,\n        timeoutDiscard,\n        disableLogs,\n        updateStatus,\n      },\n    );\n    return res.status(HttpStatus.ACCEPTED).json({ async, job, response });\n  }\n\n  @Public()\n  @Sse('sse')\n  @ApiOperation({ summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état' })\n  public async sse(@Res() res: Response, @Query('id') id: string, @Query('key') key: string): Promise> {\n    if (!id || !key) throw new UnauthorizedException();\n    const user = await this.agentsService.findById(id);\n    if (!user) throw new UnauthorizedException();\n    if (key !== hash('sha256', user.security.secretKey)) throw new UnauthorizedException();\n\n    res.socket.on('close', () => {\n      Logger.debug(`Observer close connection`, this.constructor.name);\n    });\n\n    return new Observable((observer) => {\n      this.backendsService.queueEvents.on('added', (added) => {\n        if (\n          ![ActionType.IDENTITY_UPDATE, ActionType.IDENTITY_CREATE, ActionType.IDENTITY_DELETE].includes(\n            added.name,\n          )\n        )\n          return;\n        return fireMessage(observer, 'job:added', added, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('completed', (completed) => {\n        return fireMessage(observer, 'job:completed', completed, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('failed', (failed) => {\n        return fireMessage(observer, 'job:failed', failed, this.constructor.name);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nAgentsModule->BackendsModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\nimport { JobsModule } from '../jobs/jobs.module';\nimport { TasksModule } from '../tasks/tasks.module';\nimport { AgentsModule } from '../agents/agents.module';\n@Module({\n  imports: [ConfigModule, IdentitiesModule, JobsModule, TasksModule, AgentsModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n  exports: [BackendsService],\n})\nexport class BackendsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsSyncallCommand.html":{"url":"classes/BackendsSyncallCommand.html","title":"class - BackendsSyncallCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsSyncallCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, backendsService: BackendsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendsService\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public uid: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old password', type: String })\n  public oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CipherData.html":{"url":"interfaces/CipherData.html","title":"interface - CipherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CipherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport { randomInt } from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './_dto/ask-token.dto';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { IdentitiesCrudService } from '../identities/identities-crud.service';\nimport { get } from 'radash';\nimport { Identities } from '../identities/_schemas/identities.schema';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { InitAccountDto } from '~/management/passwd/_dto/init-account.dto';\nimport { ConfigService } from '@nestjs/config';\nimport { ResetByCodeDto } from '~/management/passwd/_dto/reset-by-code.dto';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { InitResetDto } from '~/management/passwd/_dto/init-reset.dto';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { InitManyDto } from '~/management/passwd/_dto/init-many.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { MailadmService } from '~/settings/mailadm.service';\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesCrudService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsadmService: SmsadmService,\n    private mailadmService: MailadmService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto): Promise {\n    //envoi du mail\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //prise des parametres\n      const params = await this.passwdadmService.getPolicies();\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode();\n      const mailAttribute = params.emailAttribute;\n      const mail = get(identity.toObject(), mailAttribute);\n      if (mail) {\n        const token = await this.askToken({ mail: mail, uid: initDto.uid }, padd + k.toString(16), params.resetCodeTTL);\n        this.logger.log('Token :' + token + '  int : ' + k.toString(10));\n        if (initDto.type === 0) {\n          this.logger.log('Reset password asked by mail for  : ' + initDto.uid);\n          const smtpParams = await this.mailadmService.getParams();\n          if (mailAttribute !== '') {\n            // this.mailer.addTransporter('lastStmp', smtpParams.host)\n            this.mailer\n              .sendMail({\n                // transporterName: 'lastStmp',\n                from: smtpParams.sender,\n                to: mail,\n                subject: 'Reinitialisation de votre mot de passe',\n                template: 'resetaccount',\n                context: {\n                  uid: identity.inetOrgPerson.uid,\n                  displayName: identity.inetOrgPerson.displayName,\n                  code: k,\n                },\n              })\n              .then(() => {\n                this.logger.log('reset compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              })\n              .catch(() => {\n                throw new BadRequestException({\n                  message: 'Erreur serveur lors de l envoi du mail',\n                  error: 'Bad Request',\n                  statusCode: 400,\n                });\n              });\n            return token;\n          } else {\n            return false;\n          }\n        } else {\n          //envoi par SMS si c est possible\n          const policies = await this.passwdadmService.getPolicies();\n          if (policies.resetBySms === true) {\n            this.logger.log('Reset password asked by SMS for  : ' + initDto.uid);\n            const smsAttribute = params.mobileAttribute;\n            if (smsAttribute !== '') {\n              const numTel = get(identity.toObject(), smsAttribute);\n              await this.smsadmService.send(numTel, 'Votre code de reinitialisation : ' + k.toString(10));\n            }\n            return token;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        this.logger.error('Error while reset identityMailAttribute Empty');\n      }\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken = await this.askToken({ mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx' }, k, 0);\n      return falseToken;\n    }\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto): Promise {\n    //recherche de l'identity\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //envoi du mail\n      const params = await this.passwdadmService.getPolicies();\n      const mailAttribute = params.emailAttribute;\n      this.logger.log('mailer.identityMailAttribute : ' + mailAttribute);\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute);\n        if (mail) {\n          const smtpParams = await this.mailadmService.getParams();\n          //demande du token\n          const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n          const token = await this.askToken({ mail: mail, uid: initDto.uid }, k, params.initTokenTTL);\n          //envoi du token\n          this.mailer\n            .sendMail({\n              from: smtpParams.sender,\n              to: mail,\n              subject: 'Activation de votre compte',\n              template: 'initaccount',\n              context: {\n                displayName: identity.inetOrgPerson.displayName,\n                uid: initDto.uid,\n                url: this.config.get('frontPwd.url') + '/initaccount/' + token,\n              },\n            })\n            .then(() => {\n              this.logger.log('Init compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              this.setInitState(identity, InitStatesEnum.SENT);\n            })\n            .catch((e) => {\n              this.logger.error('Erreur serveur lors de l envoi du mail' + e);\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail' + e,\n                error: 'Bad Request',\n                statusCode: 400,\n              });\n            });\n\n          return true;\n        } else {\n          this.logger.error('Error while initAccount identityMailAttribute Empty');\n          return false;\n        }\n      } else {\n        this.logger.error('Error while initAccount identityMailAttribute not defined');\n        return false;\n      }\n    } catch (e) {\n      this.logger.error('Error while initialize password. ' + e + ` (uid=${initDto?.uid})`);\n      return false;\n    }\n  }\n\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': passwdDto.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n      //verification de la police de mdp\n      if ((await this.passwdadmService.checkPolicies(passwdDto.newPassword)) === false) {\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: 'Bad Request',\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      return await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_CHANGE,\n        identity._id,\n        {\n          uid: passwdDto.uid,\n          oldPassword: passwdDto.oldPassword,\n          newPassword: passwdDto.newPassword,\n          ...identity.toJSON(),\n        },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error('Error while changing password. ' + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: 'Bad Request',\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto, k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl > 0) {\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error('Error while ask token. ' + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string, code: number): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' + cypherData);\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd = await this.getPaddingForCode();\n      const k = padd + code.toString(16);\n      this.logger.log('k=' + k);\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  // reset du password\n  public async resetByCode(data: ResetByCodeDto): Promise {\n    this.logger.log('resetByCode : ' + data.token + ' ' + data.code);\n    //verification du passwordPolicies\n    if ((await this.passwdadmService.checkPolicies(data.newpassword)) === false) {\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: 'Bad Request',\n        statusCode: 400,\n      });\n    }\n    const tokenData = await this.decryptTokenWithCode(data.token, data.code);\n    this.logger.log('dataToken :' + tokenData);\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid })) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: identity.inetOrgPerson.uid, newPassword: data.newpassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key');\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n      this.logger.error('Error from backend while reseting password by code');\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password by code. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': tokenData.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        await this.setInitState(identity, InitStatesEnum.INITIALIZED);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  //Envoi le message d init à plusieurs identités\n  public async initMany(ids: InitManyDto): Promise {\n    const identities = await this.identities.find({ _id: { $in: ids.ids } });\n    if (identities.length === 0) {\n      throw new HttpException('Aucune identité trouvée.', 404);\n    }\n    const updated = await Promise.all(\n      identities.map((identity) => {\n        this.logger.verbose('send To :' + identity.get('inetOrgPerson.uid'));\n        return this.initAccount({ uid: identity.get('inetOrgPerson.uid') });\n      }),\n    );\n    return updated as any;\n  }\n\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise {\n    let code = '';\n    if (await this.redis.exists('CODEPADDING')) {\n      code = await this.redis.get('CODEPADDING');\n    } else {\n      code = crypto.randomBytes(13).toString('hex') + '0';\n      await this.redis.set('CODEPADDING', code);\n    }\n    return code;\n  }\n\n  private async setInitState(identity: Identities, state: InitStatesEnum): Promise {\n    identity.initState = state;\n    if (state === InitStatesEnum.SENT) {\n      identity.initInfo.initDate = new Date();\n      identity.initInfo.sentDate = null;\n    } else if (state === InitStatesEnum.INITIALIZED) {\n      identity.initInfo.sentDate = new Date();\n    }\n    const ok = await identity.save();\n    return ok;\n  }\n\n  // sort les identites qui n ont pas repondu dans le delai à l init de leurs comptes\n  public async checkInitOutDated(): Promise {\n    const date = new Date();\n    const params = await this.passwdadmService.getPolicies();\n    date.setTime(date.getTime() - params.initTokenTTL * 1000);\n    console.log('modifié:' + date);\n    const identities = await this.identities.find({\n      initState: InitStatesEnum.SENT,\n      'initInfo.initDate': { $lt: date },\n    });\n    return identities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentCreateQuestions, AgentsCommand } from './agents.command';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bullmq';\nimport { RedisOptions } from 'ioredis';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport config, { MongoosePlugin } from '~/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { KeyringsCommand, KeyringsCreateQuestions } from './keyrings.command';\nimport { KeyringsModule } from '~/core/keyrings/keyrings.module';\nimport { BackendsCommand } from './backends.command';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { AuthModule } from '~/core/auth/auth.module';\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n    BackendsModule,\n    AuthModule,\n  ],\n  providers: [\n    ...AgentsCommand.registerWithSubCommands(),\n    ...KeyringsCommand.registerWithSubCommands(),\n    ...BackendsCommand.registerWithSubCommands(),\n    AgentCreateQuestions,\n    KeyringsCreateQuestions,\n  ],\n})\nexport class CliModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPart.html":{"url":"classes/ConcernedToPart.html","title":"class - ConcernedToPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n@Schema({ _id: false })\nexport class ConcernedToPart extends Document {\n  @Prop({ type: String, required: true })\n  public $ref: string;\n\n  @Prop({ type: Types.ObjectId, required: true })\n  public id: Types.ObjectId;\n\n  @Prop({ type: String })\n  public name?: string;\n}\n\nexport const ConcernedToPartSchema = SchemaFactory.createForClass(ConcernedToPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPartDTO.html":{"url":"classes/ConcernedToPartDTO.html","title":"class - ConcernedToPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/_parts/concerned-to.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class ConcernedToPartDTO {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public $ref: string;\n\n  @IsMongoId()\n  @ApiProperty()\n  public id: Types.ObjectId;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            factorydrive\n                                        \n                                \n                                \n                                        \n                                            frontPwd\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mailer\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            sms\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        factorydrive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factorydrive:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frontPwd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frontPwd:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mailer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sms:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\nimport { parse } from 'path';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n    https: {\n      enabled: boolean;\n      key: string;\n      cert: string;\n    }\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3';\n          config: AmazonWebServicesS3StorageConfig;\n        };\n      };\n    };\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string;\n    systemId: string;\n    password: string;\n    sourceAddr: string;\n    regionCode: string;\n  };\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n    https: {\n      enabled: /yes|1|on|true/i.test(process.env['SESAME_HTTPS_ENABLED']),\n      key: process.env['SESAME_HTTPS_PATH_KEY'] || '',\n      cert: process.env['SESAME_HTTPS_PATH_CERT'] || '',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n    ],\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        identities: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/identities',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com',\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || '',\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR',\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                desc\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                required\n                            \n                            \n                                    \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                desc\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    \n                                    Public\n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  public type: ConfigObjectType;\n\n  @IsBoolean()\n  public required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  public name: string;\n\n  @IsString()\n  public desc: string;\n\n  @ArrayNotEmpty()\n  public attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  public objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  public attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly displayName: string = 'Console';\n\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            FilestorageModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AgentsModule } from './agents/agents.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BackendsModule } from './backends/backends.module';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { FilestorageModule } from './filestorage/filestorage.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    BackendsModule,\n    LoggerModule,\n    KeyringsModule,\n    AgentsModule,\n    JobsModule,\n    TasksModule,\n    FilestorageModule,\n  ],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPart.html":{"url":"classes/DataPart.html","title":"class - DataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/_parts/data.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_DATA_TYPE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport const DEFAULT_DATA_TYPE = 'default';\n\n@Schema({ _id: false })\nexport class DataPart extends Document {\n  @Prop({\n    type: String,\n    default: DEFAULT_DATA_TYPE,\n  })\n  public type?: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public message: string;\n}\n\nexport const DataPartSchema = SchemaFactory.createForClass(DataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteIdentitiesDto.html":{"url":"classes/DeleteIdentitiesDto.html","title":"class - DeleteIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/delete-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/delete-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class DeleteIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeNumber1700395200.html":{"url":"classes/EmployeeNumber1700395200.html","title":"class - EmployeeNumber1700395200","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeNumber1700395200\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/jobs/1700395200-employee-number.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _migrateEmployeeNumberToArray\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/jobs/1700395200-employee-number.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(EmployeeNumber1700395200.name)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/jobs/1700395200-employee-number.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _migrateEmployeeNumberToArray\n                        \n                    \n                \n            \n            \n                \n                        \n                    _migrateEmployeeNumberToArray()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1700395200-employee-number.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/jobs/1700395200-employee-number.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from \"@nestjs/common\"\nimport { InjectConnection, InjectModel } from \"@nestjs/mongoose\"\nimport { Connection, Model } from \"mongoose\"\n\nexport default class EmployeeNumber1700395200 {\n  private readonly logger = new Logger(EmployeeNumber1700395200.name)\n\n  public constructor(\n    @InjectConnection() private mongo: Connection,\n  ) {\n  }\n\n  public async up(): Promise {\n    this.logger.log('EmployeeNumber1700395200 up started')\n\n    await this._migrateEmployeeNumberToArray()\n  }\n\n  private async _migrateEmployeeNumberToArray(): Promise {\n    const identities = await this.mongo.collection('identities').find();\n\n    for await (const identity of identities) {\n      const employeeNumber = identity.inetOrgPerson.employeeNumber;\n\n      if (typeof employeeNumber === 'string') {\n        this.logger.log(`Migrating employeeNumber for identity ${identity._id}`);\n        identity.inetOrgPerson.employeeNumber = [employeeNumber];\n        this.mongo.collection('identities').updateOne({ _id: identity._id }, { $set: { 'inetOrgPerson.employeeNumber': [employeeNumber] } });\n      } else if (Array.isArray(employeeNumber)) {\n        if (typeof employeeNumber[0] === 'number') {\n          this.logger.log(`Migrating employeeNumber for identity ${identity._id}`);\n          identity.inetOrgPerson.employeeNumber = employeeNumber.map(String);\n          this.mongo.collection('identities').updateOne({ _id: identity._id }, { $set: { 'inetOrgPerson.employeeNumber': employeeNumber.map(String) } });\n        }\n      }\n    }\n\n    this.logger.log('Migration terminée avec succès');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnsureIdentitiesIndexMiddleware.html":{"url":"injectables/EnsureIdentitiesIndexMiddleware.html","title":"injectable - EnsureIdentitiesIndexMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EnsureIdentitiesIndexMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_middlewares/ensure-identities-index.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(identityModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/_middlewares/ensure-identities-index.middleware.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identityModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                        \n                    use(req: Request, res: Response, next: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/_middlewares/ensure-identities-index.middleware.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestMiddleware } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Request, Response } from 'express';\nimport { Model } from 'mongoose';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\n\n@Injectable()\nexport class EnsureIdentitiesIndexMiddleware implements NestMiddleware {\n  constructor(\n    @InjectModel(Identities.name) private readonly identityModel: Model,\n  ) { }\n\n  public async use(req: Request, res: Response, next: () => void) {\n    try {\n      await this.identityModel.ensureIndexes();\n      console.log('Indexes synchronized.');\n    } catch (err) {\n      console.error('Erreur lors de la création des index :', err);\n    }\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecuteJobDto.html":{"url":"classes/ExecuteJobDto.html","title":"class - ExecuteJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecuteJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/execute-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ActionType)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsOptional()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional } from 'class-validator';\nimport { ActionType } from '../_enum/action-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ExecuteJobDto {\n  @IsNotEmpty()\n  @IsEnum(ActionType)\n  @ApiProperty({ type: String })\n  public action: ActionType;\n\n  @IsMongoId()\n  @IsOptional()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id?: string;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: Object })\n  public payload: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecuteJobOptions.html":{"url":"interfaces/ExecuteJobOptions.html","title":"interface - ExecuteJobOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecuteJobOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/execute-job-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLogs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            job\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            switchToProcessing\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syncTimeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            targetState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutDiscard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataState:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLogs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job:         JobsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JobsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchToProcessing\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        switchToProcessing:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syncTimeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syncTimeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetState:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutDiscard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutDiscard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JobsOptions } from 'bullmq';\nimport { Types } from 'mongoose';\n\nexport interface ExecuteJobOptions {\n  job?: JobsOptions;\n  async?: boolean;\n  disableLogs?: boolean;\n  syncTimeout?: number;\n  timeoutDiscard?: boolean;\n  updateStatus?: boolean;\n  switchToProcessing?: boolean;\n  comment?: string;\n  targetState?: any;\n  dataState?: any;\n  task?: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filestorage.html":{"url":"classes/Filestorage.html","title":"class - Filestorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filestorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_schemas/filestorage.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                fingerprint\n                            \n                            \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String, enum: FsTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\n\n@Schema({\n  collection: 'filestorage',\n  versionKey: false,\n})\nexport class Filestorage extends AbstractSchema {\n  @Prop({\n    required: true,\n    type: String,\n    enum: FsTypeList,\n  })\n  public type: FsType;\n\n  @Prop({\n    type: String,\n  })\n  public mime?: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public namespace: string;\n\n  @Prop({\n    required: true,\n    type: String,\n    //TODO: check file path ..?\n  })\n  public path: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public fingerprint: string;\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  public comments?: string;\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public hidden: boolean;\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public tags?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public acls?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  // eslint-disable-next-line\n  public customFields?: { [key: string]: any }\n}\n\nexport const FilestorageSchema = SchemaFactory.createForClass(Filestorage).index(\n  { namespace: 1, path: 1 },\n  { unique: true },\n);\n\nFilestorageSchema.virtual('filename').get(function (this: Filestorage): string {\n  return this.path.split('/').pop();\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilestorageController.html":{"url":"controllers/FilestorageController.html","title":"controller - FilestorageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilestorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/filestorage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                filestorage\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPath\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPathRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FilestorageCreateDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        readPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPath(namespace: string, path: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path')@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        readPathRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPathRawData(res: Response, namespace: string, path: string, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path/raw')@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        readRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readRawData(res: Response, _id: Types.ObjectId, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})/raw')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions, hiddenQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hiddenQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FilestorageUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  ParseFilePipe,\n  Patch,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  ObjectIdValidationPipe,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { FilestorageCreateDto, FilestorageDto, FilestorageUpdateDto, FileUploadDto } from './_dto/filestorage.dto';\nimport { TransformersFilestorageService } from './_services/transformers-filestorage.service';\nimport { FilestorageService } from './filestorage.service';\n\n@ApiTags('core/filestorage')\n@Controller('filestorage')\nexport class FilestorageController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    type: 1,\n    namespace: 1,\n    path: 1,\n    hidden: 1,\n  };\n\n  public constructor(\n    private readonly _service: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n\n  @Post()\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: FilestorageCreateDto,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const data = await this._service.create({ ...body, file });\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FilestorageDto, FilestorageController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n    @Query('hidden') hiddenQuery: string,\n  ): Promise {\n    const hidden = /true|on|yes|1/i.test(hiddenQuery);\n    const extraSearch = { hidden: { $ne: true } };\n    if (hidden) delete extraSearch['hidden'];\n\n    const [data, total] = await this._service.findAndCount(\n      {\n        ...extraSearch,\n        ...searchFilterSchema,\n      },\n      FilestorageController.projection,\n      searchFilterOptions,\n    );\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Get('path')\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readPath(\n    @Query('namespace') namespace: string,\n    @Query('path') path: string,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findOne({ namespace, path });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})/raw')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readRawData(\n    @Res() res: Response,\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const [data, stream, parent] = await this._service.findByIdWithRawData(_id);\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n\n  @Get('path/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readPathRawData(\n    @Res() res: Response,\n    @Query('namespace') namespace: string,\n    @Query('path') path: string,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const [data, stream, parent] = await this._service.findOneWithRawData({ namespace, path });\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FilestorageUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FilestorageDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageCreateDto.html":{"url":"classes/FilestorageCreateDto.html","title":"class - FilestorageCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                fingerprint\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageDto.html":{"url":"classes/FilestorageDto.html","title":"class - FilestorageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FilestorageCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                fingerprint\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilestorageModule.html":{"url":"modules/FilestorageModule.html","title":"module - FilestorageModule","body":"\n                   \n\n\n\n\n    Modules\n    FilestorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\n\nFilestorageService \n\nFilestorageService \n\n\n\nTransformersFilestorageService \n\nTransformersFilestorageService \n\n\n\nFilestorageModule\n\nFilestorageModule\n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\nTransformersFilestorageService  -->\n\nFilestorageModule->TransformersFilestorageService \n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/filestorage/filestorage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilestorageController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Filestorage, FilestorageSchema } from './_schemas/filestorage.schema';\nimport { FilestorageService } from './filestorage.service';\nimport { FilestorageController } from './filestorage.controller';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Filestorage.name,\n        useFactory: () => FilestorageSchema,\n      },\n    ]),\n  ],\n  controllers: [FilestorageController],\n  providers: [FilestorageService, TransformersFilestorageService],\n  exports: [FilestorageService, TransformersFilestorageService],\n})\nexport class FilestorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageUpdateDto.html":{"url":"classes/FilestorageUpdateDto.html","title":"class - FilestorageUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(FilestorageCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport {\n  IsMongoId,\n  IsString,\n  IsEnum,\n  IsOptional,\n  IsObject,\n  IsBoolean,\n  IsNotEmpty,\n  IsMimeType,\n  Matches,\n} from 'class-validator';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string;\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE })\n  public type: FsType;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(?:\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public fingerprint?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string;\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue };\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FusionDto.html":{"url":"classes/FusionDto.html","title":"class - FusionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FusionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/fusion.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                id1\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of the first identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/fusion.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '66d80ab41821baca9bf965b2', description: 'Id of the second identity', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/fusion.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class FusionDto {\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of the first identity', type: String })\n  public id1: string;\n\n  @IsString()\n  @ApiProperty({ example: '66d80ab41821baca9bf965b2', description: 'Id of the second identity', type: String })\n  public id2: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubUpdate.html":{"url":"interfaces/GithubUpdate.html","title":"interface - GithubUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            commit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            node_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tarball_url\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipball_url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tarball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tarball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport { LRUCache } from 'lru-cache';\n\ninterface GithubUpdate {\n  name?: string;\n  commit?: {\n    sha?: string;\n    url?: string;\n  };\n  zipball_url?: string;\n  tarball_url?: string;\n  node_id?: string;\n}\n\nconst storage = new LRUCache({\n  ttl: 1000 * 60 * 60,\n  ttlAutopurge: true,\n});\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data: GithubUpdate[] | object = {};\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`);\n      data = storage.get(project) as GithubUpdate[] | object;\n    } else {\n      this.logger.log(`Fetching ${project} tags`);\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/tags`, {\n        signal: AbortSignal.timeout(1000),\n      });\n      data = await update.json();\n      storage.set(project, data);\n      // console.log('this.storage', storage.get(project))\n    }\n    if (!Array.isArray(data)) {\n      throw new BadRequestException(`Invalid data from Github `);\n    }\n    const lastVersion = data[0].name.replace(/^v/, '');\n    const pkgInfo = this.appService.getInfo();\n    const currentVersion = current || pkgInfo.version;\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter');\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number);\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number);\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch;\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                additionalFields\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    Public\n                                deletedFlag\n                            \n                            \n                                    \n                                    Public\n                                destFusionId\n                            \n                            \n                                    \n                                    Public\n                                fingerprint\n                            \n                            \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    Public\n                                initInfo\n                            \n                            \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    Public\n                                lastBackendSync\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastSync\n                            \n                            \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    Public\n                                primaryEmployeeNumber\n                            \n                            \n                                    \n                                    Public\n                                srcFusionId\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: DataStatusEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deletedFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        destFusionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        initInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitInfoPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: InitInfoPartSchema, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: InitStatesEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastBackendSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        primaryEmployeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        srcFusionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { InitInfoPart, InitInfoPartSchema } from '~/management/identities/_schemas/_parts/init-info.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AutoIncrementPlugin } from '~/_common/plugins/mongoose/auto-increment.plugin';\nimport { AutoIncrementPluginOptions } from '~/_common/plugins/mongoose/auto-increment.interface';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  public state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  public lifecycle: IdentityLifecycle;\n\n  @Prop({ type: Number, enum: DataStatusEnum, default: DataStatusEnum.INACTIVE })\n  public dataStatus: DataStatusEnum;\n\n  @Prop({ type: Boolean, default: false })\n  public deletedFlag: boolean;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  public inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  public additionalFields: AdditionalFieldsPart;\n\n  @Prop({ type: String })\n  public fingerprint: string;\n\n  @Prop({ type: Date })\n  public lastSync?: Date;\n\n  @Prop({ type: Date, default: null })\n  public lastBackendSync: Date;\n\n  @Prop({ type: Number, enum: InitStatesEnum, default: InitStatesEnum.NOSENT })\n  public initState: InitStatesEnum;\n\n  @Prop({ type: InitInfoPartSchema, default: {} })\n  public initInfo: InitInfoPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n\n  //pour les identités fusionnées ont met les deux identités sources\n  @Prop({ type: Types.ObjectId, required: false, default: null })\n  public srcFusionId: Types.ObjectId;\n\n  //pour les identités qui on servit à une fusion on met la destination (la nouvelle identité fusionnée)\n  @Prop({ type: Types.ObjectId, required: false })\n  public destFusionId: Types.ObjectId;\n\n  @Prop({ type: String, required: false, default: null })\n  public primaryEmployeeNumber: string;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities)\n  .plugin(AutoIncrementPlugin, {\n    incrementBy: 1,\n    field: 'inetOrgPerson.employeeNumber',\n    startAt: 1,\n    type: 'array',\n    rules: (ctx) => {\n      return ctx.inetOrgPerson.employeeType === 'LOCAL';\n    },\n  })\n  .index(\n    { 'inetOrgPerson.employeeNumber': 1, 'inetOrgPerson.employeeType': 1 },\n    { unique: true },\n  );\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesActivationController.html":{"url":"controllers/IdentitiesActivationController.html","title":"controller - IdentitiesActivationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesActivationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-activation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                activation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        activation\n                        \n                    \n                \n            \n            \n                \n                        \n                    activation(res: Response, body: ActivationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('activation')@ApiOperation({summary: 'active/desactive l identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-activation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ActivationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesActivationService } from '~/management/identities/identities-activation.service';\nimport { ApiOperation, ApiResponse, ApiTags} from '@nestjs/swagger';\nimport { Body, Controller, HttpStatus, Post, Res} from '@nestjs/common';\nimport { Response } from 'express';\nimport { ActivationDto } from '~/management/identities/_dto/_parts/activation-dto';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesActivationController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesActivationService) {\n    super();\n  }\n\n  @Post('activation')\n  @ApiOperation({ summary: 'active/desactive l identité' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async activation(@Res() res: Response, @Body() body: ActivationDto): Promise {\n    try {\n      const data = await this._service.activation(body.id, body.status);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IntersectionType(CustomFieldsDto, MetadataDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(DataStatusEnum)@ApiProperty({enum: DataStatusEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(InitStatesEnum)@ApiProperty({enum: InitStatesEnum})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesCrudController.html":{"url":"controllers/IdentitiesCrudController.html","title":"controller - IdentitiesCrudController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesCrudController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-crud.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getdeleted\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateStateMany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Compte le nombre d'identitées en fonctions des filtres fournis'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getdeleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    getdeleted(res: Response, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getdeleted')@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:253\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})/state')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        updateStateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStateMany(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('state')@ApiOperation({summary: 'Met à jour l'état d'une ou plusieurs  en masse'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-crud.controller.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesCreateDto, IdentitiesDto, IdentitiesUpdateDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesCrudController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesCrudService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n    dataStatus: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    if (!body.inetOrgPerson.employeeType) {\n      body.inetOrgPerson.employeeType = 'LOCAL';\n    }\n    if (!body.inetOrgPerson.cn) {\n      body.inetOrgPerson.cn = `${(body.inetOrgPerson.sn || '').toUpperCase()} ${body.inetOrgPerson.givenName}`;\n    }\n    if (!body.inetOrgPerson.displayName) {\n      body.inetOrgPerson.displayName = body.inetOrgPerson.givenName + ' ' + (body.inetOrgPerson.sn || '').toUpperCase();\n    }\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if (data.toObject().state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n  @Get('getdeleted')\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesCrudController.projection))\n  public async getdeleted(\n    @Res() res: Response,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.trashAndCount(IdentitiesCrudController.projection, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesCrudController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      IdentitiesCrudController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const identity = await this._service.findById(_id);\n      const data = this._service.transformNullsToString(JSON.parse(JSON.stringify(identity)));\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      console.log('error', error);\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: \"Compte le nombre d'identitées en fonctions des filtres fournis\" })\n  public async count(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const total = await this._service.count(searchFilterSchema, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: total,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})/state')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async updateState(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const identity = await this._service.findById(_id);\n    if (!identity) {\n      throw new BadRequestException('Identity not found');\n    }\n    if (identity.state !== IdentityState.TO_VALIDATE) {\n      throw new BadRequestException(\"La validation de l'identité est déjà complétée.\");\n    }\n    const data = await this._service.updateState(_id, body.state);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch('state')\n  @ApiOperation({ summary: \"Met à jour l'état d'une ou plusieurs  en masse\" })\n  public async updateStateMany(\n    @Res() res: Response,\n    @Body()\n    body: {\n      originState: IdentityState;\n      targetState: IdentityState;\n      ids: Types.ObjectId[];\n    },\n  ): Promise {\n    const data = await this._service.updateStateMany(body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  //@Delete(':_id([0-9a-fA-F]{24})')\n  //@ApiParam({ name: '_id', type: String })\n  //@ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesDoublonController.html":{"url":"controllers/IdentitiesDoublonController.html","title":"controller - IdentitiesDoublonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesDoublonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-doublon.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                fusion\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getDoublons\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        fusion\n                        \n                    \n                \n            \n            \n                \n                        \n                    fusion(body: FusionDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('fusion')@ApiOperation({summary: 'fusionne les deux identités'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-doublon.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            FusionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        getDoublons\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDoublons(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('duplicates')@ApiOperation({summary: 'Renvoie la liste des doublons supposés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-doublon.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto } from './_dto/identities.dto';\nimport { FusionDto } from '~/management/identities/_dto/fusion.dto';\nimport { IdentitiesDoublonService } from '~/management/identities/identities-doublon.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\n\nexport class IdentitiesDoublonController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesDoublonService) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Get('duplicates')\n  @ApiOperation({ summary: 'Renvoie la liste des doublons supposés' })\n  public async getDoublons(@Res() res: Response): Promise {\n    const data = await this._service.searchDoubles();\n    const total = data.length;\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n      total,\n    });\n  }\n\n  @Post('fusion')\n  @ApiOperation({ summary: 'fusionne les deux identités' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async fusion(\n    @Body() body: FusionDto,\n    @Res() res: Response,\n  ): Promise {\n    const newId = await this._service.fusion(body.id1, body.id2);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      newId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                dataStatus\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                initState\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        dataStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataStatusEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(DataStatusEnum)@ApiProperty({enum: DataStatusEnum})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        initState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InitStatesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(InitStatesEnum)@ApiProperty({enum: InitStatesEnum})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:17\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesJsonFormsController.html":{"url":"controllers/IdentitiesJsonFormsController.html","title":"controller - IdentitiesJsonFormsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesJsonFormsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/jsonforms\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                generate\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                generateAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(res: Response, schema: string | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate')@ApiOperation({summary: 'Génère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                schema\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateAll')@ApiOperation({summary: 'Génère tous les JSON Forms liés aux schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema, mode: \"create\" | \"update\", body: Partial)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':schema')@ApiOperation({summary: 'Récupère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                        \"create\" | \"update\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les JSON Forms de schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Query, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { Response } from 'express';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management/identities/jsonforms')\n@Controller('management/identities/jsonforms')\nexport class IdentitiesJsonFormsController extends AbstractController {\n  public constructor(private readonly _service: IdentitiesJsonformsService) {\n    super();\n  }\n\n  @Post('generateAll')\n  @ApiOperation({ summary: 'Génère tous les JSON Forms liés aux schémas personnalisés' })\n  public async generateAll(@Res() res: Response): Promise {\n    const result = await this._service.generateAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Post('generate')\n  @ApiOperation({ summary: \"Génère un JSON Forms d'un schéma personnalisé\" })\n  public async generate(@Res() res: Response, @Body('schema') schema: string | null = null): Promise {\n    const result = await this._service.generate({ schema, path: './configs/identities/jsonforms' });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Liste les JSON Forms de schémas personnalisés' })\n  public async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  // @Get(':schema')\n  @Post(':schema')\n  @ApiOperation({ summary: \"Récupère un JSON Forms d'un schéma personnalisé\" })\n  public async search(\n    @Res() res: Response,\n    @Param('schema') schema,\n    @Query('mode') mode: 'create' | 'update',\n    @Body() body: Partial,\n  ): Promise {\n    const [filePath, result] = await this._service.findOne(schema, { mode, employeeType: body?.employeeType });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n      file: filePath,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesJsonformsModule.html":{"url":"modules/IdentitiesJsonformsModule.html","title":"module - IdentitiesJsonformsModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesJsonformsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesJsonFormsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { IdentitiesJsonFormsController } from './identities.jsonforms.controller';\n\n@Module({\n  controllers: [IdentitiesJsonFormsController],\n  providers: [IdentitiesJsonformsService],\n  exports: [IdentitiesJsonformsService],\n})\nexport class IdentitiesJsonformsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesJsonformsService.html":{"url":"injectables/IdentitiesJsonformsService.html","title":"injectable - IdentitiesJsonformsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesJsonformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                generate\n                            \n                            \n                                    Public\n                                    Async\n                                generateAll\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                resolveJsonFormPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema: string, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveJsonFormPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveJsonFormPath(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationBootstrap, OnModuleInit } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { parse, stringify } from 'yaml';\nimport { existsSync, readFileSync, writeFileSync, readdirSync, readdir } from 'fs';\n// import Ajv from 'ajv';\nimport { ValidationConfigException } from '~/_common/errors/ValidationException';\n\n@Injectable()\nexport class IdentitiesJsonformsService extends AbstractService implements OnApplicationBootstrap {\n  // private ajv: Ajv = new Ajv({ allErrors: true });\n  // private validateSchema;\n\n  public constructor() {\n    super();\n  }\n\n  public onApplicationBootstrap(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.log('Initializing identities jsonforms service');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/identities/jsonforms`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/identities/jsonforms`);\n    } catch (error) {\n      this.logger.error('Error reading identities jsonforms', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/identities/jsonforms/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/identities/jsonforms/${file}`, defaultFile);\n\n          this.logger.warn(`Copied default jsonform file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default jsonform file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('Identities jsonforms service initialized');\n  }\n\n  private resolveJsonFormPath(schema: string): string | null {\n    if (!schema.endsWith('.yml')) schema += '.yml';\n    const hardConfigPath = `./src/management/identities/jsonforms/_config/${schema}`;\n    const dynamicConfigPath = `./configs/identities/jsonforms/${schema}`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  public async generate({ schema, path }): Promise {\n    if (schema) {\n      console.log(`Generating jsonforms for schema: ${schema}`);\n      if (!schema.endsWith('.yml')) schema += '.yml';\n      const filePath = `${path}/${schema}`;\n      console.log(`File path: ${filePath}`);\n      if (!existsSync(filePath)) {\n        console.log(`File not found: ${filePath}`);\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n\n      const jsonSchema = parse(readFileSync(filePath, 'utf-8'));\n\n      // const jsonForm = {\n      //   type: 'VerticalLayout',\n      //   elements: Object.keys(jsonSchema.properties).map((key) => {\n      //     return {\n      //       type: 'Control',\n      //       label: key,\n      //       scope: `#/properties/${key}`,\n      //       options: {\n      //         required: jsonSchema.required && jsonSchema.required.includes(key),\n      //       },\n      //     };\n      //   }),\n      // };\n\n      const jsonForm = {\n        type: 'Group',\n        label: schema,\n        elements: Object.keys(jsonSchema.properties)\n          .reduce((acc, key, index) => {\n            const groupIndex = Math.floor(index / 3); // Determine the current group based on the index\n            if (!acc[groupIndex]) {\n              acc[groupIndex] = {\n                // Initialize a new HorizontalLayout group if it doesn't exist\n                type: 'HorizontalLayout',\n                elements: [],\n              };\n            }\n\n            acc[groupIndex].elements.push({\n              // Add the current element to its corresponding group\n              type: 'Control',\n              label: key,\n              scope: `#/properties/${key}`,\n              options: {\n                required: jsonSchema.required && jsonSchema.required.includes(key),\n                showUnfocusedDescription: false,\n              },\n            });\n\n            return acc;\n          }, [])\n          .map((group) => group), // Flatten the structure\n      };\n      if (!schema.endsWith('.ui.yml')) schema = schema.replace('.yml', '.ui.yml');\n      const jsonFormPath = `${path.replace('validations', 'jsonforms')}/${schema}`;\n      console.log(`Writing jsonform to: ${jsonFormPath}`);\n      writeFileSync(`${jsonFormPath}`, stringify(jsonForm));\n      return jsonForm;\n    }\n  }\n\n  public async generateAll(): Promise {\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ schema: file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        schema: file,\n        path: dynamicConfigPath,\n      }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    console.log('Generating jsonforms for all schemas');\n    console.log('Hard config files:', hardConfigFiles);\n    console.log('Dynamic config files:', dynamicConfigFiles);\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles].filter((file) => file.schema.endsWith('.yml'));\n    for (const file of files) {\n      this.generate(file);\n    }\n    return files.length;\n  }\n\n  public async findAll(): Promise {\n    const hardConfigPath = './src/management/identities/jsonforms/_config';\n    const dynamicConfigPath = './configs/identities/jsonforms';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({ file, path: dynamicConfigPath }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.ui.yml', '');\n      result.push({ [key]: data });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(\n    schema: string,\n    options?: { mode?: string; employeeType?: string }\n  ): Promise {\n    const { mode = 'create', employeeType = '' } = options || {};\n    if (schema.endsWith('.yml')) schema = schema.replace('.yml', '');\n\n    const filePaths = [\n      `${schema}.${mode}.${employeeType.toLowerCase()}.ui`,\n      `${schema}.${mode}.ui`,\n      `${schema}.${employeeType.toLowerCase()}.ui`,\n      `${schema}.ui`,\n    ];\n\n    let finalPath = null;\n    const filePath = filePaths.find((path) => {\n      const resolved = this.resolveJsonFormPath(path)\n      if (!resolved) return null;\n      finalPath = resolved;\n\n      return resolved;\n    });\n\n    if (!filePath) {\n      throw new ValidationConfigException({ message: `File not found: ${schema}.ui.yml` });\n    }\n\n    return [filePath, parse(readFileSync(finalPath, 'utf-8'))];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesModule_imports\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nFilestorageModule->IdentitiesModule\n\n\n\n\n\nIdentitiesCrudService \n\nIdentitiesCrudService \n\nIdentitiesCrudService  -->\n\nIdentitiesModule->IdentitiesCrudService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesCrudController\n                        \n                        \n                            IdentitiesUpsertController\n                        \n                        \n                            IdentitiesPhotoController\n                        \n                        \n                            IdentitiesDoublonController\n                        \n                        \n                            IdentitiesActivationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FilestorageModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesCrudService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                        \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities.module.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { forwardRef, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Identities, IdentitiesSchema } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentitiesJsonformsService } from './jsonforms/identities.jsonforms.service';\nimport { IdentitiesJsonformsModule } from './jsonforms/identities.jsonforms.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\nimport { FilestorageModule } from '~/core/filestorage/filestorage.module';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesUpsertService } from '~/management/identities/identities-upsert.service';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\nimport { IdentitiesDoublonService } from '~/management/identities/identities-doublon.service';\nimport { IdentitiesCrudController } from '~/management/identities/identities-crud.controller';\nimport { IdentitiesUpsertController } from '~/management/identities/identities-upsert.controller';\nimport { IdentitiesPhotoController } from '~/management/identities/identities-photo.controller';\nimport { IdentitiesActivationController } from '~/management/identities/identities-activation.controller';\nimport { IdentitiesActivationService } from '~/management/identities/identities-activation.service';\nimport { IdentitiesDoublonController } from '~/management/identities/identities-doublon.controller';\nimport { EnsureIdentitiesIndexMiddleware } from './_middlewares/ensure-identities-index.middleware';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule, IdentitiesJsonformsModule],\n        inject: [IdentitiesValidationService, IdentitiesJsonformsService],\n        useFactory: () => IdentitiesSchema,\n      },\n    ]),\n    FilestorageModule,\n    forwardRef(() => BackendsModule),\n  ],\n  providers: [\n    IdentitiesUpsertService,\n    IdentitiesCrudService,\n    IdentitiesDoublonService,\n    IdentitiesValidationService,\n    IdentitiesActivationService,\n    {\n      provide: APP_FILTER,\n      useClass: IdentitiesValidationFilter,\n    },\n    IdentitiesJsonformsService,\n  ],\n  controllers: [\n    IdentitiesCrudController,\n    IdentitiesUpsertController,\n    IdentitiesPhotoController,\n    IdentitiesDoublonController,\n    IdentitiesActivationController,\n  ],\n  exports: [IdentitiesCrudService],\n})\nexport class IdentitiesModule implements NestModule {\n  public configure(consumer: MiddlewareConsumer) {\n    consumer.apply(EnsureIdentitiesIndexMiddleware).forRoutes('/management/identities/*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesPhotoController.html":{"url":"controllers/IdentitiesPhotoController.html","title":"controller - IdentitiesPhotoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesPhotoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-photo.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPhotoRaw\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsertInetOrgPersonJpegPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Async\n                        readPhotoRaw\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPhotoRaw(res: Response, searchFilterSchema: FilterSchema, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('photo/raw')@ApiReadResponseDecorator(FilestorageDto)@ApiQuery({required: false, name: 'filters', style: 'deepObject', explode: true, type: 'object', schema: undefined, description: 'Filtres de recherche, voir la documentation de chaque endpoint pour plus de détails'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-photo.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        upsertInetOrgPersonJpegPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertInetOrgPersonJpegPhoto(res: Response, body: Partial, searchFilterSchema: FilterSchema, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert/photo')@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, undefined, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-photo.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  ParseFilePipe,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiQuery, ApiTags, getSchemaPath, PartialType } from '@nestjs/swagger';\nimport { FilterSchema, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto } from './_dto/identities.dto';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { FilestorageCreateDto, FilestorageDto, FileUploadDto } from '~/core/filestorage/_dto/filestorage.dto';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { FsType } from '~/core/filestorage/_enum/fs-type.enum';\nimport { join } from 'node:path';\nimport { omit } from 'radash';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { PaginatedFilterDto } from '~/_common/dto/paginated-filter.dto';\nimport { IdentitiesCrudService } from '~/management/identities/identities-crud.service';\nimport { Public } from '~/_common/decorators/public.decorator';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesPhotoController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesCrudService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Post('upsert/photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, PartialType(FilestorageCreateDto), FilestorageDto)\n  public async upsertInetOrgPersonJpegPhoto(\n    @Res() res: Response,\n    @Body() body: Partial,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const filter = {\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    };\n\n    const data = await this.filestorage.upsertFile(filter, {\n      ...filter,\n      type: FsType.FILE,\n      file,\n      ...omit(body, ['namespace', 'path', 'type', 'file'] as any),\n    });\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Public()\n  @Get('photo/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  @ApiQuery({\n    required: false,\n    name: 'filters',\n    style: 'deepObject',\n    explode: true,\n    type: 'object',\n    schema: {\n      $ref: getSchemaPath(PaginatedFilterDto),\n    },\n    description: 'Filtres de recherche, voir la documentation de chaque endpoint pour plus de détails',\n  })\n  public async readPhotoRaw(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @Query('mime') mime: string = '',\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const [data, stream, parent] = await this.filestorage.findOneWithRawData({\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    });\n    await this.transformerService.transform(mime, res, data, stream, parent);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesUpsertController.html":{"url":"controllers/IdentitiesUpsertController.html","title":"controller - IdentitiesUpsertController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesUpsertController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities-upsert.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsertInetOrgPersonJpegPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesUpsertDto, filtersQuery: literal type[], errorOnNotFound: string, upsert: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {operationOptions: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-upsert.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpsertDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filtersQuery\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                errorOnNotFound\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'false'\n                                            \n\n                                        \n                                        \n                                                upsert\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'true'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        upsertInetOrgPersonJpegPhoto\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsertInetOrgPersonJpegPhoto(res: Response, body: Partial, searchFilterSchema: FilterSchema, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert/photo')@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, undefined, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities-upsert.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  HttpStatus,\n  ParseFilePipe,\n  Post,\n  Query,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiTags, PartialType } from '@nestjs/swagger';\nimport { FilterSchema, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types, isValidObjectId } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesDto, IdentitiesUpsertDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator';\nimport { FilestorageCreateDto, FilestorageDto, FileUploadDto } from '~/core/filestorage/_dto/filestorage.dto';\nimport { FilestorageService } from '~/core/filestorage/filestorage.service';\nimport { FsType } from '~/core/filestorage/_enum/fs-type.enum';\nimport { join } from 'node:path';\nimport { omit } from 'radash';\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service';\nimport { IdentitiesUpsertService } from '~/management/identities/identities-upsert.service';\n\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesUpsertController extends AbstractController {\n  public constructor(\n    protected readonly _service: IdentitiesUpsertService,\n    protected readonly _validation: IdentitiesValidationService,\n    protected readonly filestorage: FilestorageService,\n    private readonly transformerService: TransformersFilestorageService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    initState: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n    metadata: 1,\n  };\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {\n    operationOptions: {\n      summary: 'Importe ou met à jour une  en fonction des filtres fournis',\n    },\n  })\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesUpsertDto,\n    @Query('filters')\n    filtersQuery: {\n      [key: string]: string;\n    }[] = [],\n    @Query('errorOnNotFound') errorOnNotFound: string = 'false',\n    @Query('upsert') upsert: string = 'true',\n  ): Promise;\n      message?: string;\n      validations?: MixedValue;\n    }>\n  > {\n    const filters = {};\n    if (filtersQuery.length === 0) {\n      throw new BadRequestException('Missing filters array');\n    }\n    for (const [key, filter] of Object.entries(filtersQuery)) {\n      filters[key] = isValidObjectId(filter) ? new Types.ObjectId(`${filter}`) : filter;\n    }\n\n    //TODO: check if the filters are valid and if the body is equal to filters\n\n    const [code, data] = await this._service.upsertWithFingerprint(filters, body, {\n      errorOnNotFound: /true|on|yes|1/i.test(errorOnNotFound),\n      upsert: /true|on|yes|1/i.test(upsert),\n    });\n\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      return res.status(HttpStatus.ACCEPTED).json({\n        statusCode: HttpStatus.ACCEPTED,\n        message: 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.',\n        data,\n      });\n    }\n\n    return res.status(code).json({\n      statusCode: code,\n      message: code === HttpStatus.OK ? 'Identitée mise à jour avec succès.' : 'Identitée créée avec succès.',\n      data,\n    });\n  }\n\n  @Post('upsert/photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, PartialType(FilestorageCreateDto), FilestorageDto)\n  public async upsertInetOrgPersonJpegPhoto(\n    @Res() res: Response,\n    @Body() body: Partial,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const identity = await this._service.findOne(searchFilterSchema);\n    const filter = {\n      namespace: 'identities',\n      path: join(\n        [identity.inetOrgPerson?.employeeType, identity.inetOrgPerson?.employeeNumber, 'jpegPhoto.jpg'].join('/'),\n      ),\n    };\n\n    const data = await this.filestorage.upsertFile(filter, {\n      ...filter,\n      type: FsType.FILE,\n      file,\n      ...omit(body, ['namespace', 'path', 'type', 'file'] as any),\n    });\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpsertDto.html":{"url":"classes/IdentitiesUpsertDto.html","title":"class - IdentitiesUpsertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpsertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesUpdateDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                $setOnInsert\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        $setOnInsert\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, IntersectionType, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber, ValidateNested } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { DataStatusEnum } from '~/management/identities/_enums/data-status';\n\nexport class IdentitiesCreateDto extends IntersectionType(CustomFieldsDto, MetadataDto) {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  public state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(InitStatesEnum)\n  @ApiProperty({ enum: InitStatesEnum })\n  public initState: InitStatesEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(DataStatusEnum)\n  @ApiProperty({ enum: DataStatusEnum })\n  public dataStatus: DataStatusEnum;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  public lifecycle: number;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  public inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  public additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  @IsOptional()\n  @Type(() => IdentitiesUpdateDto)\n  public $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Async\n                                searchAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')@ApiOperation({summary: 'Récupère un schéma personnalisé d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Effectue la validation des schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management/identities/validation')\n@Controller('management/identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  public constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  @ApiOperation({ summary: \"Effectue la validation des schémas personnalisés d'identités\" })\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: \"Liste les schémas personnalisés d'identités\" })\n  async searchAll(@Res() res: Response): Promise {\n    const [result] = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  @ApiOperation({ summary: \"Récupère un schéma personnalisé d'identités\" })\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                            \n                                    Private\n                                resolveConfigPath\n                            \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveConfigPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveConfigPath(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart | additionalFieldsPartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        AdditionalFieldsPart | additionalFieldsPartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnApplicationBootstrap } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync, readdirSync, writeFileSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport { buildYup } from 'schema-to-yup';\nimport validSchema from './_config/validSchema';\nimport ajvErrors from 'ajv-errors';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { additionalFieldsPartDto } from '../_dto/_parts/additionalFields.dto';\n\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService implements OnApplicationBootstrap {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  public constructor() {\n    ajvErrors(this.ajv);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger(IdentitiesValidationService.name);\n  }\n\n  public onApplicationBootstrap(): void {\n    let files = [];\n    let defaultFiles = [];\n\n    this.logger.log('Initializing identities validations service');\n\n    try {\n      files = readdirSync(`${process.cwd()}/configs/identities/validations`);\n      defaultFiles = readdirSync(`${process.cwd()}/defaults/identities/validations`);\n    } catch (error) {\n      this.logger.error('Error reading identities validations files', error.message, error.stack);\n    }\n\n    for (const file of defaultFiles) {\n      if (!files.includes(file)) {\n        try {\n          const defaultFile = readFileSync(`${process.cwd()}/defaults/identities/validations/${file}`, 'utf-8');\n          writeFileSync(`${process.cwd()}/configs/identities/validations/${file}`, defaultFile);\n          this.logger.warn(`Copied default validation file: ${file}`);\n        } catch (error) {\n          this.logger.error(`Error copying default validation file: ${file}`, error.message, error.stack);\n        }\n      }\n    }\n\n    this.logger.log('Identities validations service initialized');\n  }\n\n  private resolveConfigPath(key: string): string | null {\n    const hardConfigPath = `./src/management/identities/validations/_config/${key}.yml`;\n    const dynamicConfigPath = `./configs/identities/validations/${key}.yml`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  public async validate(data: AdditionalFieldsPart | additionalFieldsPartDto): Promise {\n    if (!data.objectClasses) {\n      data.objectClasses = [];\n    }\n    if (!data.attributes) {\n      data.attributes = {};\n    }\n    data.validations = {};\n\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = this.resolveConfigPath(key);\n      if (!existsSync(path)) {\n        validations[key] = `Fichier de config '${key}.yml' introuvable`;\n        reject = true;\n        continue;\n      }\n\n      // Check for invalid schema\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations[key] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        reject = true;\n        continue;\n      }\n    }\n\n    if (reject) {\n      throw new ValidationConfigException({ validations });\n    }\n\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key], attributes);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any, data: any): Promise {\n    const path = this.resolveConfigPath(key);\n    const schema: any = parse(readFileSync(path, 'utf8'));\n\n    for (const [index, def] of Object.entries(schema?.properties || {})) {\n      if (typeof data[key][index] === 'undefined' || data[key][index] === null) {\n        switch ((def as any).type) {\n          case 'array':\n            data[key][index] = [];\n            break;\n\n          case 'object':\n            data[key][index] = {};\n            break;\n\n          case 'number':\n            data[key][index] = 0;\n            break;\n\n          default:\n            data[key][index] = '';\n            break;\n        }\n      }\n    }\n\n    this.logger.debug(`Additionalfields object validation: ${JSON.stringify(data[key])}`);\n\n    const yupSchema = buildYup(schema, { noSortEdges: true });\n    try {\n      await yupSchema.validate(attribute, { strict: true, abortEarly: false });\n      return null;\n    } catch (error) {\n      return error.inner.reduce((acc, err) => {\n        acc[err.path] = err.message;\n        return acc;\n      }, {});\n    }\n  }\n\n  public async findAll(): Promise {\n    this.logger.debug(['findAll', JSON.stringify(Object.values({ ...arguments }))].join(' '));\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    // Retrieve files from each directory and tag them with their source\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({\n        file,\n        path: hardConfigPath,\n        source: 'hardConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        file,\n        path: dynamicConfigPath,\n        source: 'dynamicConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    // const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const filesMap = new Map();\n\n    for (const target of dynamicConfigFiles) {\n      filesMap.set(target.file, target);\n    }\n\n    for (const target of hardConfigFiles) {\n      if (filesMap.has(target.file)) {\n        continue;\n      }\n      filesMap.set(target.file, target);\n    }\n\n    const files = Array.from(filesMap.values());\n\n    const result = [];\n    for (const fileObj of files) {\n      if (/.yml$/.test(fileObj.file) === false) continue;\n\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.yml', '');\n      result.push({ [key]: data, source: fileObj.source, name: key });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(schema): Promise {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '));\n    let filePath = '';\n    if (schema === 'inetorgperson') {\n      filePath = './validation/inetorgperson.json';\n      if (!existsSync(filePath)) {\n        const message = `File not found /validation/inetorgperson.json`;\n        throw new ValidationConfigException({ message });\n      }\n    } else {\n      filePath = this.resolveConfigPath(schema);\n      if (!existsSync(filePath)) {\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n    }\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAccountDto.html":{"url":"classes/InitAccountDto.html","title":"class - InitAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uid', description: 'paul.smith'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-account.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class InitAccountDto {\n  @ApiProperty({ example: 'uid', description: 'paul.smith' })\n  @IsString()\n  public uid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitInfoPart.html":{"url":"classes/InitInfoPart.html","title":"class - InitInfoPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitInfoPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/init-info.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                initDate\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                sentDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        initDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/init-info.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        sentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/init-info.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class InitInfoPart extends Document {\n  @Prop({ type: Date })\n  public sentDate?: Date;\n\n  @Prop({ type: Date })\n  public initDate?: Date;\n}\nexport const InitInfoPartSchema = SchemaFactory.createForClass(InitInfoPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitManyDto.html":{"url":"classes/InitManyDto.html","title":"class - InitManyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitManyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-many.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Envoie la demande d init à plusieurs identitées. Id des identities'})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-many.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class InitManyDto {\n  @ApiProperty({ description: 'Envoie la demande d init à plusieurs identitées. Id des identities' })\n  @IsArray()\n  public ids: Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitResetDto.html":{"url":"classes/InitResetDto.html","title":"class - InitResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: 0, description: '0 = send by mail, 1 = send by SMS'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class InitResetDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  public uid: string;\n\n  @IsNumber()\n  @ApiProperty({ example: 0, description: '0 = send by mail, 1 = send by SMS' })\n  public type: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/jobs.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                concernedTo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                finishedAt\n                            \n                            \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                params\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                processedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                result\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ConcernedToPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        processedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: JobState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { JobState } from '../_enums/state.enum';\nimport { ConcernedToPart, ConcernedToPartSchema } from './_parts/concerned-to.parts.schema';\n\nexport type JobsDocument = Jobs & Document;\n\n@Schema({ versionKey: false })\nexport class Jobs extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public jobId: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public action: string;\n\n  @Prop({\n    type: ConcernedToPartSchema,\n  })\n  public concernedTo?: ConcernedToPart;\n\n  @Prop({ type: Types.ObjectId })\n  public task?: Types.ObjectId;\n\n  @Prop({ type: String })\n  public comment?: string;\n\n  @Prop({ type: Object, default: {} })\n  public params?: object;\n\n  @Prop({ type: Object, default: {} })\n  public result?: object;\n\n  @Prop({ type: Date })\n  public processedAt?: Date;\n\n  @Prop({ type: Date })\n  public finishedAt?: Date;\n\n  @Prop({ type: Number, enum: JobState, default: JobState.CREATED })\n  state: JobState;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(JobsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, req: Request, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Param, Req, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { JobsDto } from './_dto/jobs.dto';\nimport { JobsService } from './jobs.service';\n\n@ApiTags('core/jobs')\n@Controller('jobs')\nexport class JobsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    jobId: 1,\n    action: 1,\n    concernedTo: 1,\n    metadata: 1,\n    params: 1,\n    result: 1,\n    state: 1,\n  };\n\n  public constructor(private readonly _service: JobsService) {\n    super();\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(JobsDto, JobsController.projection))\n  public async search(\n    @Res() res: Response,\n    @Req() req: Request,\n    @SearchFilterSchema({ unsafe: true }) searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    // console.log('req', req.query)\n\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      JobsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(JobsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsCreateDto.html":{"url":"classes/JobsCreateDto.html","title":"class - JobsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsDto.html":{"url":"classes/JobsDto.html","title":"class - JobsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JobsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Jobs, JobsSchema } from './_schemas/jobs.schema';\nimport { JobsController } from './jobs.controller';\nimport { JobsService } from './jobs.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Jobs.name,\n        useFactory: () => JobsSchema,\n      },\n    ]),\n  ],\n  providers: [JobsService],\n  controllers: [JobsController],\n  exports: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Jobs } from './_schemas/jobs.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JobsService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Jobs.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsUpdateDto.html":{"url":"classes/JobsUpdateDto.html","title":"class - JobsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(JobsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {IsMongoId, IsNotEmpty, IsNumber, IsObject, IsString, ValidateNested} from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\nimport {JobState} from \"~/core/jobs/_enums/state.enum\";\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n\n  @IsNumber()\n  @ApiProperty()\n  public state: number;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(JwtStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  protected logger: Logger = new Logger(JwtStrategy.name);\n\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    this.logger.verbose(`Atempt to authenticate with JTI: `);\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public name: string;\n\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n    default: ['0.0.0.0/0'],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCommand.html":{"url":"classes/KeyringsCommand.html","title":"class - KeyringsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport {\n  FilterOptions,\n  FilterSchema,\n  SearchFilterOptions,\n  SearchFilterSchema,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core/keyrings')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    token: 0,\n    // allowedNetworks: 1,\n    // suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      token: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateCommand.html":{"url":"classes/KeyringsCreateCommand.html","title":"class - KeyringsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, keyringsService: KeyringsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateQuestions.html":{"url":"classes/KeyringsCreateQuestions.html","title":"class - KeyringsCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseName\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseName(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Name ?', name: 'name'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\n\nKeyringsService \n\nKeyringsService \n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n  exports: [KeyringsService],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: KeyringsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:16\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model, SaveOptions, Document } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { KeyringsCreateDto } from './_dto/keyrings.dto';\nimport { randomBytes } from 'node:crypto';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: KeyringsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    const token = randomBytes(64).toString('hex');\n    return await super.create(\n      {\n        ...data,\n        token,\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.verbose(`Try to authenticate user : ${username}`, LocalStrategy.name);\n    const user = await this.auth.authenticateWithLocal(username, password);\n    // console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/logger.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                concerned\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                context\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concerned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:36\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:29\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DataPartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { DataPart, DataPartSchema } from './_parts/data.part.schema';\n\nexport const DEFAULT_CONTEXT = 'default';\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public level: string;\n\n  @Prop({\n    type: DataPartSchema,\n    required: true,\n    default: {},\n  })\n  public data: DataPart;\n\n  /**\n   * @description The context of the log message.\n   * @example 'identity'\n   */\n  @Prop({ type: String })\n  public context?: string;\n\n  /**\n   * @description The concerned document in collection of the log message.\n   * @example '5f7b1b3b7f7b1b3b7f7b1b3b'\n   */\n  @Prop({ type: String })\n  public concerned?: string;\n}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './_schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Logger } from './_schemas/logger.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoggerService extends AbstractServiceSchema {\n  constructor(@InjectModel(Logger.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MailSettingsDto.html":{"url":"classes/MailSettingsDto.html","title":"class - MailSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MailSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/mail.settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                host\n                            \n                            \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sender\n                            \n                            \n                                    \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'smtp://localhost:25'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl({protocols: undefined, require_protocol: true})@ApiProperty({example: 'smtp://smscsim.smpp.org:25', description: 'Serveur SMTP', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'myPassword', description: 'password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({example: 'no-reply@mondomaine', description: 'Emetteur', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'monlogin@mondomaine', description: 'username', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/mail.settings.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString, IsUrl } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MailSettingsDto {\n  @IsUrl({ protocols: ['smtp', 'smtps'], require_protocol: true })\n  @ApiProperty({ example: 'smtp://smscsim.smpp.org:25', description: 'Serveur SMTP', type: String })\n  public host: string = 'smtp://localhost:25';\n\n  @IsEmail()\n  @ApiProperty({ example: 'no-reply@mondomaine', description: 'Emetteur', type: String })\n  public sender: string;\n\n  @IsString()\n  @ApiProperty({ example: 'monlogin@mondomaine', description: 'username', type: String })\n  public username: string;\n\n  @IsString()\n  @ApiProperty({ example: 'myPassword', description: 'password', type: String })\n  public password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailadmController.html":{"url":"controllers/MailadmController.html","title":"controller - MailadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/mailadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@ApiOperation({summary: 'Retourne les parametres pour l envoi Mail'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/mailadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(body: MailSettingsDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set')@ApiOperation({summary: 'Enregistre les parametres'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/mailadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            MailSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { MailSettingsDto } from '~/settings/_dto/mail.settings.dto';\n\n@Controller('settings/mail')\n@ApiTags('settings')\nexport class MailadmController {\n  public constructor(private mailadmService: MailadmService) {}\n\n  @Get('get')\n  @ApiOperation({ summary: 'Retourne les parametres pour l envoi Mail' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async get(@Res() res: Response): Promise {\n    const data = await this.mailadmService.getParams();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('set')\n  @ApiOperation({ summary: 'Enregistre les parametres' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async set(@Body() body: MailSettingsDto, @Res() res: Response): Promise {\n    const data = await this.mailadmService.setParams(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailadmService.html":{"url":"injectables/MailadmService.html","title":"injectable - MailadmService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailadmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/mailadm.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractSettingsService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Public\n                                    Async\n                                getParams\n                            \n                            \n                                    Public\n                                    Async\n                                setParams\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:16\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/mailadm.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        setParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParams(params: MailSettingsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/mailadm.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            MailSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractSettingsService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractSettingsService:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractSettingsService } from '~/settings/_abstracts/abstract-settings.service';\nimport { Injectable } from '@nestjs/common';\nimport { MailSettingsDto } from '~/settings/_dto/mail.settings.dto';\n\n@Injectable()\nexport class MailadmService extends AbstractSettingsService {\n  public async getParams(): Promise {\n    const data = await this.getParameter('smtpServer');\n    return data;\n  }\n\n  public async setParams(params: MailSettingsDto): Promise {\n    return await this.setParameter('smtpServer', params);\n  }\n\n  protected async defaultValues(): Promise {\n    return new MailSettingsDto();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\nimport { PasswdModule } from './passwd/passwd.module';\n\n@Module({\n  imports: [IdentitiesModule, PasswdModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MigrationsModule.html":{"url":"modules/MigrationsModule.html","title":"module - MigrationsModule","body":"\n                   \n\n\n\n\n    Modules\n    MigrationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MigrationsModule\n\n\n\ncluster_MigrationsModule_providers\n\n\n\n\nMigrationsService\n\nMigrationsService\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nMigrationsModule -->\n\nMigrationsService->MigrationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/migrations/migrations.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MigrationsService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.module.ts:10\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { MigrationsService } from './migrations.service';\n\n@Module({\n  providers: [\n    MigrationsService,\n  ],\n})\nexport class MigrationsModule {\n  public static async register(): Promise {\n    return {\n      module: this,\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MigrationsService.html":{"url":"injectables/MigrationsService.html","title":"injectable - MigrationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MigrationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/migrations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                lockLocation\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Protected\n                                migrations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                _checkMigrationLockFile\n                            \n                            \n                                    Private\n                                    Async\n                                _executeMigrations\n                            \n                            \n                                    Private\n                                    Async\n                                _loadMigrationsFiles\n                            \n                            \n                                    Private\n                                    Async\n                                _writeMigrationLockFile\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(mongo: Connection, moduleRef: ModuleRef, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/migrations/migrations.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongo\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _checkMigrationLockFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    _checkMigrationLockFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _executeMigrations\n                        \n                    \n                \n            \n            \n                \n                        \n                    _executeMigrations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _loadMigrationsFiles\n                        \n                    \n                \n            \n            \n                \n                        \n                    _loadMigrationsFiles(currentTimestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                currentTimestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        _writeMigrationLockFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    _writeMigrationLockFile(migrationKey: string, migrationTimestamp: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                migrationKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                migrationTimestamp\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/migrations.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        lockLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(`${chalk.bold.red(MigrationsService.name)}\\x1b[33m`)\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        migrations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/migrations/migrations.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common'\nimport { glob } from 'glob'\nimport chalk from 'chalk'\nimport { ModuleRef } from '@nestjs/core'\nimport { startLoader, stopLoader } from './migration-loader.function'\nimport { readFile, writeFile } from 'fs/promises'\nimport { posix } from 'path'\nimport { ConfigService } from '@nestjs/config'\nimport { Connection } from 'mongoose'\nimport { InjectConnection } from '@nestjs/mongoose'\n\n@Injectable()\nexport class MigrationsService implements OnModuleInit {\n  private readonly logger = new Logger(`${chalk.bold.red(MigrationsService.name)}\\x1b[33m`)\n\n  protected lockLocation: string\n  protected migrations = new Map()\n\n  public constructor(\n    @InjectConnection() private readonly mongo: Connection,\n    private readonly moduleRef: ModuleRef,\n    private readonly config: ConfigService,\n\n  ) {\n    this.lockLocation = posix.join(this.config.get('factorydrive.options.disks.local.config.root', '/tmp'), 'migrations.lock')\n  }\n\n  public async onModuleInit() {\n    this.logger.debug(chalk.yellow('Migrations service initialized.'));\n    this.logger.debug(chalk.yellow('Lock file location: ' + this.lockLocation));\n    const currentTimestamp = await this._checkMigrationLockFile()\n    this.logger.debug(chalk.yellow('Checking migrations files...'));\n    await this._loadMigrationsFiles(currentTimestamp);\n\n    const loader = startLoader('Migration en cours...');\n    await this._executeMigrations();\n    stopLoader(loader);\n  }\n\n  private async _checkMigrationLockFile() {\n    let currentTimestamp = 0\n\n    try {\n      const migration = await readFile(this.lockLocation, 'utf-8');\n      currentTimestamp = parseInt(migration, 10);\n      this.logger.log(chalk.blue(`Migration lock state is  !`));\n    } catch (error) {\n      this.logger.warn(chalk.red('No migration lock file found.'));\n    }\n\n    const dbMigration = await this.mongo.collection('migrations').findOne({}, { sort: { timestamp: -1 } });\n\n    if (currentTimestamp === 0) {\n      if (dbMigration) {\n        try {\n          this.logger.warn(chalk.yellow('No migration lock file found. Creating one with the last migration timestamp...'));\n          await writeFile(this.lockLocation, dbMigration.timestamp.toString());\n          this.logger.log(chalk.green('Migration lock file created.'));\n        } catch (error) {\n          this.logger.error(chalk.red('Error while creating migration lock file !'));\n        }\n      } else {\n        try {\n          await writeFile(this.lockLocation, currentTimestamp.toString());\n          this.logger.log(chalk.green('Migration lock file created.'));\n        } catch (error) {\n          this.logger.error(chalk.red('Error while creating migration lock file !'));\n        }\n      }\n    }\n\n    if (!dbMigration && currentTimestamp !== 0) {\n      this.logger.error(chalk.red('Database is not up to date with the migrations files !'));\n      await this.mongo.collection('migrations').insertOne({\n        timestamp: currentTimestamp,\n        comment: 'Synchronization with the migration lock file',\n      });\n      this.logger.log(chalk.green('Database updated with the current migration lock file !'));\n    }\n\n    return currentTimestamp\n  }\n\n  private async _loadMigrationsFiles(currentTimestamp = 0) {\n    let files = await glob(`./jobs/*.js`, {\n      cwd: __dirname,\n      root: __dirname,\n    });\n\n    files = files.filter((file) => {\n      const [timestampMatch] = file.match(/\\d{10,}/) || []\n\n      if (!timestampMatch) {\n        this.logger.warn(chalk.yellow(`Migration ${chalk.bold('')} does not have a timestamp in the filename !`));\n        return;\n      }\n\n      if (parseInt(timestampMatch) ')} are already executed !`));\n        return false;\n      }\n\n      return true\n    })\n\n    files = files.sort((a, b) => {\n      const [aTimestamp] = a.match(/\\d{10,}/) || []\n      const [bTimestamp] = b.match(/\\d{10,}/) || []\n\n      return parseInt(aTimestamp) - parseInt(bTimestamp)\n    })\n\n    for (const file of files) {\n      const migration = await import(`${__dirname}/${file}`);\n\n      if (!migration.default) {\n        this.logger.log(chalk.yellow(`Migration ${chalk.bold('')} does not have a default export !`));\n        return;\n      }\n\n      this.migrations.set(file, migration)\n    }\n  }\n\n  private async _executeMigrations() {\n    if (this.migrations.size === 0) {\n      this.logger.log(chalk.green('No migrations to execute.'));\n      return;\n    }\n\n    if (!this.migrations.size) {\n      this.logger.log(chalk.blue('No migrations to execute.'));\n      return;\n    }\n\n    for (const key of this.migrations.keys()) {\n      const [migrationTimestamp] = key.match(/\\d{10,}/) || []\n\n      const migration = this.migrations.get(key);\n      const instance = await this.moduleRef.create(migration.default);\n\n      if (typeof instance.up !== 'function') {\n        this.logger.log(chalk.yellow(`Migration ${chalk.bold('')} does not have an up method !`));\n        break;\n      }\n\n      try {\n        this.logger.log(chalk.yellow(`Running migration ${chalk.bold('')}...`));\n        await instance.up();\n      } catch (e) {\n        this.logger.error(chalk.red(`Error while running migration ${chalk.bold('')} !`));\n        this.logger.error(e.message, e.stack);\n        return;\n      }\n\n      this._writeMigrationLockFile(key, migrationTimestamp);\n    }\n\n    this.logger.log(chalk.blue('All migrations done.'));\n  }\n\n  private async _writeMigrationLockFile(migrationKey: string, migrationTimestamp: string) {\n    try {\n      await writeFile(this.lockLocation, migrationTimestamp);\n      await this.mongo.collection('migrations').insertOne({\n        timestamp: parseInt(migrationTimestamp),\n        comment: `Migration ${migrationKey} executed`,\n      })\n      this.logger.log(chalk.blue(`Migration ${chalk.bold('')} done.`));\n    } catch (e) {\n      this.logger.error(chalk.red(`Error while updating migration lock file !`));\n      this.logger.error(e);\n\n      throw new Error('Error while updating migration lock file !');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\nimport { parse } from 'path';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n    https: {\n      enabled: boolean;\n      key: string;\n      cert: string;\n    }\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3';\n          config: AmazonWebServicesS3StorageConfig;\n        };\n      };\n    };\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string;\n    systemId: string;\n    password: string;\n    sourceAddr: string;\n    regionCode: string;\n  };\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n    https: {\n      enabled: /yes|1|on|true/i.test(process.env['SESAME_HTTPS_ENABLED']),\n      key: process.env['SESAME_HTTPS_PATH_KEY'] || '',\n      cert: process.env['SESAME_HTTPS_PATH_CERT'] || '',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [\n    ],\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        identities: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/identities',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com',\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || '',\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR',\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initMany\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initreset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                resetbycode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(body: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'Execute un job de changement de mot de passe sur le/les backends'})@ApiResponse({status: undefined, description: 'Mot de passe synchronisé sur le/les backends'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la politique de mot de passe à appliquer'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(body: InitAccountDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('init')@ApiOperation({summary: 'Initialise le compte envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    initMany(body: InitManyDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initmany')@ApiOperation({summary: 'Initialise plusieurs identités. envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitManyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initreset\n                        \n                    \n                \n            \n            \n                \n                        \n                    initreset(body: InitResetDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initreset')@ApiOperation({summary: 'Demande l envoi de mail pour le reset'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitResetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(body: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        resetbycode\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetbycode(body: ResetByCodeDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resetbycode')@ApiOperation({summary: 'reinitialise le mot de passe avec le code reçu'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetByCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('ioutdated')@ApiOperation({summary: 'Compte donc l invitation d init n a pas été repondue dans les temps'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { Document } from 'mongoose';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\nimport { InitAccountDto } from '~/management/passwd/_dto/init-account.dto';\nimport { InitManyDto } from '~/management/passwd/_dto/init-many.dto';\nimport { InitResetDto } from '~/management/passwd/_dto/init-reset.dto';\nimport { ResetByCodeDto } from '~/management/passwd/_dto/reset-by-code.dto';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { PasswdService } from './passwd.service';\n\n@Controller('passwd')\n@ApiTags('management/passwd')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  public constructor(\n    private passwdService: PasswdService,\n    private passwdadmService: PasswdadmService,\n  ) { }\n\n  @Post('change')\n  @ApiOperation({ summary: 'Execute un job de changement de mot de passe sur le/les backends' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Mot de passe synchronisé sur le/les backends' })\n  public async change(@Body() body: ChangePasswordDto, @Res() res: Response): Promise {\n    const debug = {};\n\n    const [_, data] = await this.passwdService.change(body);\n    this.logger.log(`Call passwd change for : ${body.uid}`);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      status: 0,\n      ...debug,\n    });\n  }\n\n  @Post('resetbycode')\n  @ApiOperation({ summary: 'reinitialise le mot de passe avec le code reçu' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async resetbycode(@Body() body: ResetByCodeDto, @Res() res: Response): Promise {\n    const debug = {};\n    this.logger.log('Reset by code : ' + body.token + ' code : ' + body.code);\n    try{\n      const [_, data] = await this.passwdService.resetByCode(body);\n      if (process.env.NODE_ENV === 'development') {\n        debug['_debug'] = data;\n      }\n\n      return res.status(HttpStatus.OK).json({\n        message: 'Password changed',\n        ...debug,\n      });\n    } catch (e) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        message: 'Erreur serveur',\n        ...debug,\n      });\n    }\n\n  }\n\n  @Post('reset')\n  @ApiOperation({ summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async reset(@Body() body: ResetPasswordDto, @Res() res: Response): Promise {\n    const debug = {};\n    const [_, data] = await this.passwdService.reset(body);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      ...debug,\n    });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({ summary: 'Retourne la politique de mot de passe à appliquer' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies();\n    //const datax=omit(data.toObject,['_id'])\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('init')\n  @ApiOperation({ summary: \"Initialise le compte envoi un jeton par mail à l'identité\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async init(@Body() body: InitAccountDto, @Res() res: Response): Promise {\n    const debug = {};\n    const ok = await this.passwdService.initAccount(body);\n    if (ok){\n      return res.status(HttpStatus.OK).json({\n        message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n        ...debug,\n      });\n    }else{\n      return res.status(HttpStatus.INTERNAL_SERVER_ERROR).json({\n        message: 'Erreur serveur impossible d\\'envoyer le mail',\n        ...debug,\n      });\n    }\n\n  }\n  @Post('initmany')\n  @ApiOperation({ summary: \"Initialise plusieurs identités. envoi un jeton par mail à l'identité\" })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async initMany(@Body() body: InitManyDto, @Res() res: Response): Promise {\n    const result = await this.passwdService.initMany(body);\n    return res.status(HttpStatus.OK).json({\n      message: 'identités initialisées',\n    });\n  }\n  @Post('initreset')\n  @ApiOperation({ summary: 'Demande l envoi de mail pour le reset' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async initreset(@Body() body: InitResetDto, @Res() res: Response): Promise {\n    const debug = {};\n    const data = await this.passwdService.initReset(body);\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n      token: data,\n      ...debug,\n    });\n  }\n  @Get('ioutdated')\n  @ApiOperation({ summary: 'Compte donc l invitation d init n a pas été repondue dans les temps' })\n  public async search(@Res() res: Response): Promise;\n      },\n      any\n    >\n  > {\n    const data = await this.passwdService.checkInitOutDated();\n    const total = data.length;\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_PasswdModule_imports\n\n\n\n\nBackendsModule\n\nBackendsModule\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nPasswdModule -->\n\nSettingsModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            SettingsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesModule } from '../identities/identities.module';\nimport { SettingsModule } from '~/settings/settings.module';\n\n@Module({\n  imports: [BackendsModule, IdentitiesModule, SettingsModule],\n  controllers: [PasswdController],\n  providers: [PasswdService],\n})\nexport class PasswdModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdadmController.html":{"url":"controllers/PasswdadmController.html","title":"controller - PasswdadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/passwdadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/passwdadm\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                setPolicies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la police de mot de passe'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        setPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPolicies(body: PasswordPoliciesDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('setpolicies')@ApiOperation({summary: 'enregistre la police de mdp'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            PasswordPoliciesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { PasswordPoliciesDto } from '~/settings/_dto/password-policy.dto';\nimport { PasswdadmService } from './passwdadm.service';\n\n@Controller('settings/passwdadm')\n@ApiTags('settings')\nexport class PasswdadmController {\n  public constructor(private passwdadmService: PasswdadmService) {}\n\n  @Post('setpolicies')\n  @ApiOperation({ summary: 'enregistre la police de mdp' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async setPolicies(@Body() body: PasswordPoliciesDto, @Res() res: Response): Promise {\n    const data = await this.passwdadmService.setPolicies(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({ summary: 'Retourne la police de mot de passe' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordPoliciesDto.html":{"url":"classes/PasswordPoliciesDto.html","title":"class - PasswordPoliciesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordPoliciesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/password-policy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                checkPwned\n                            \n                            \n                                    \n                                    \n                                    Public\n                                emailAttribute\n                            \n                            \n                                    \n                                    \n                                    Public\n                                goodComplexity\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasLowerCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasNumbers\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasSpecialChars\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasUpperCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                initTokenTTL\n                            \n                            \n                                    \n                                    \n                                    Public\n                                len\n                            \n                            \n                                    \n                                    \n                                    Public\n                                minComplexity\n                            \n                            \n                                    \n                                    Public\n                                mobileAttribute\n                            \n                            \n                                    \n                                    \n                                    Public\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetBySms\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetCodeTTL\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        checkPwned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Teh password will be checked on Pwned', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        emailAttribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'interOrgPerson.mail', description: 'Attribut de l email alternatif pour envoi message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        goodComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 70\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '70', description: 'Good complexity (entropy), Upper this number the password is considered  good', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasLowerCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in lowercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of numbers', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of special characters', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasUpperCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in uppercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        initTokenTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 604800\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '604800', description: 'TTL du jeton d'initialisation ( en secondes)', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        len\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '8', description: 'Password minimal Length', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        minComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '30', description: 'Minimal complexity (entropy), Below this number the password wont be accepted', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        mobileAttribute\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'interOrgPerson.mobile', description: 'Attribut de l email alternatif pour envoi message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'https://monsite.com', description: 'Après un changement ou reset reussi le navigateur sera redirigé', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetBySms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetCodeTTL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 900\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '900', description: 'TTL du code de reset ( en secondes)', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/password-policy.dto.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsBoolean, IsString } from 'class-validator';\n\nexport class PasswordPoliciesDto {\n  @IsNumber()\n  @ApiProperty({ example: '8', description: 'Password minimal Length', type: Number })\n  public len: number = 10;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in uppercase', type: Number })\n  public hasUpperCase: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in lowercase', type: Number })\n  public hasLowerCase: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of numbers', type: Number })\n  public hasNumbers: number = 1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of special characters', type: Number })\n  public hasSpecialChars: number = 1;\n\n  @IsNumber()\n  @ApiProperty({\n    example: '30',\n    description: 'Minimal complexity (entropy), Below this number the password wont be accepted',\n    type: Number,\n  })\n  public minComplexity: number = 30;\n\n  @IsNumber()\n  @ApiProperty({\n    example: '70',\n    description: 'Good complexity (entropy), Upper this number the password is considered  good',\n    type: Number,\n  })\n  public goodComplexity: number = 70;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Teh password will be checked on Pwned', type: Boolean })\n  public checkPwned: boolean = true;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean })\n  public resetBySms: boolean = false;\n\n  @IsString()\n  @ApiProperty({\n    example: 'https://monsite.com',\n    description: 'Après un changement ou reset reussi le navigateur sera redirigé',\n    type: Number,\n  })\n  public redirectUrl: string = '';\n  @IsString()\n  @ApiProperty({\n    example: 'interOrgPerson.mail',\n    description: 'Attribut de l email alternatif pour envoi message',\n    type: String,\n  })\n  public emailAttribute: string = '';\n  @ApiProperty({\n    example: 'interOrgPerson.mobile',\n    description: 'Attribut de l email alternatif pour envoi message',\n    type: String,\n  })\n  public mobileAttribute: string = '';\n\n  @IsNumber()\n  @ApiProperty({ example: '900', description: 'TTL du code de reset ( en secondes)', type: Number })\n  public resetCodeTTL: number = 900;\n\n  @IsNumber()\n  @ApiProperty({ example: '604800', description: \"TTL du jeton d'initialisation ( en secondes)\", type: Number })\n  public initTokenTTL: number = 604800;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetByCodeDto.html":{"url":"classes/ResetByCodeDto.html","title":"class - ResetByCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetByCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-by-code.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                code\n                            \n                            \n                                    \n                                    \n                                    Public\n                                newpassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '123456', description: 'Code received by email or Sms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'hdfddyf18A', description: 'new password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '3F4AC...', description: 'Token received by initreset'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class ResetByCodeDto {\n  @IsString()\n  @ApiProperty({ example: '3F4AC...', description: 'Token received by initreset' })\n  public token: string;\n\n  @IsNumber()\n  @ApiProperty({ example: '123456', description: 'Code received by email or Sms' })\n  public code: number;\n\n  @IsString()\n  @ApiProperty({ example: 'hdfddyf18A', description: 'new password' })\n  public newpassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MyNewPassword', description: 'New Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  public token: string;\n\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  @IsString()\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: String,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:52\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:38\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:46\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  MongooseBaseQueryOptions,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\nimport mongodb from 'mongodb';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: (mongodb.CountOptions & MongooseBaseQueryOptions) | null): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_schemas/settings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameters\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '', required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type SettingsDocument = Document;\n\n@Schema({ versionKey: false })\nexport class Settings extends AbstractSchema {\n  @Prop({ type: String, default: '', required: true, unique: true })\n  name: string;\n  @Prop({ type: Object, default: {} })\n  parameters: object;\n}\n\nexport const SettingsSchema = SchemaFactory.createForClass(Settings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { SettingsService } from '~/settings/settings.service';\n\n@ApiTags('settings')\n@Controller('settings')\nexport class SettingsController {\n  public constructor(private readonly _service: SettingsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nMailadmService \n\nMailadmService \n\n\n\nPasswdadmService \n\nPasswdadmService \n\n\n\nSmsadmService \n\nSmsadmService \n\n\n\nSettingsModule\n\nSettingsModule\n\nMailadmService  -->\n\nSettingsModule->MailadmService \n\n\n\nPasswdadmService  -->\n\nSettingsModule->PasswdadmService \n\n\n\nSmsadmService  -->\n\nSettingsModule->SmsadmService \n\n\n\n\n\nMailadmService\n\nMailadmService\n\nSettingsModule -->\n\nMailadmService->SettingsModule\n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nSettingsModule -->\n\nPasswdadmService->SettingsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsadmService\n\nSmsadmService\n\nSettingsModule -->\n\nSmsadmService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailadmService\n                        \n                        \n                            PasswdadmService\n                        \n                        \n                            SettingsService\n                        \n                        \n                            SmsadmService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                        \n                            SmsadmController\n                        \n                        \n                            PasswdadmController\n                        \n                        \n                            MailadmController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailadmService\n                        \n                        \n                            PasswdadmService\n                        \n                        \n                            SmsadmService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.module.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { SettingsController } from '~/settings/settings.controller';\nimport { SettingsService } from '~/settings/settings.service';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Settings, SettingsSchema } from '~/settings/_schemas/settings.schema';\nimport { SmsadmController } from '~/settings/smsadm.controller';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { PasswdadmController } from '~/settings/passwdadm.controller';\nimport { MailadmService } from '~/settings/mailadm.service';\nimport { MailadmController } from '~/settings/mailadm.controller';\n@Module({\n  exports: [SmsadmService, PasswdadmService, MailadmService],\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Settings.name,\n        useFactory: () => SettingsSchema,\n      },\n    ]),\n  ],\n  providers: [SettingsService, SmsadmService, PasswdadmService, MailadmService],\n  controllers: [SettingsController, SmsadmController, PasswdadmController, MailadmController],\n})\nexport class SettingsModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'settings',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/settings/settings.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SettingsService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShutdownObserver.html":{"url":"injectables/ShutdownObserver.html","title":"injectable - ShutdownObserver","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShutdownObserver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/observers/shutdown.observer.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpServers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addHttpServer\n                            \n                            \n                                    Public\n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addHttpServer\n                        \n                    \n                \n            \n            \n                \n                        \n                    addHttpServer(server: http.Server)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/observers/shutdown.observer.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                        http.Server\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/observers/shutdown.observer.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpServers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     http.Server[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/_common/observers/shutdown.observer.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationShutdown } from \"@nestjs/common\";\nimport * as http from 'http';\n\n@Injectable()\nexport class ShutdownObserver implements OnApplicationShutdown {\n  private httpServers: http.Server[] = [];\n\n  public addHttpServer(server: http.Server): void {\n    this.httpServers.push(server);\n  }\n\n  public async onApplicationShutdown(): Promise {\n    await Promise.all(\n      this.httpServers.map(\n        (server) =>\n          new Promise((resolve, reject) => {\n            server.close((error) => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve(null);\n              }\n            });\n          }),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SmsSettingsDto.html":{"url":"classes/SmsSettingsDto.html","title":"class - SmsSettingsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SmsSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_dto/sms.settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                host\n                            \n                            \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    Public\n                                regionCode\n                            \n                            \n                                    \n                                    \n                                    Public\n                                sourceAddr\n                            \n                            \n                                    \n                                    \n                                    Public\n                                systemId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        host\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'smpp://smscsim.smpp.org:2775', description: 'Serveur Sms (protocole SMPP)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'ZsvyNgf8', description: 'Password (fournit par votre provider)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        regionCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FR'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'FR', description: 'Code region', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        sourceAddr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'SMPP.ORG', description: 'Adresse emetteur (11 caracteres max)', type: String, maxLength: 11})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        systemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'WkFSJlDXGryAJG1', description: 'SystemId (fournit par votre provider)', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_dto/sms.settings.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class SmsSettingsDto {\n  @IsString()\n  @ApiProperty({ example: 'smpp://smscsim.smpp.org:2775', description: 'Serveur Sms (protocole SMPP)', type: String })\n  public host: string;\n\n  @IsString()\n  @ApiProperty({ example: 'WkFSJlDXGryAJG1', description: 'SystemId (fournit par votre provider)', type: String })\n  public systemId: string;\n\n  @IsString()\n  @ApiProperty({ example: 'ZsvyNgf8', description: 'Password (fournit par votre provider)', type: String })\n  public password: string;\n\n  @IsString()\n  @ApiProperty({ example: 'FR', description: 'Code region', type: String })\n  public regionCode: string = 'FR';\n\n  @IsString()\n  @ApiProperty({\n    example: 'SMPP.ORG',\n    description: 'Adresse emetteur (11 caracteres max)',\n    type: String,\n    maxLength: 11,\n  })\n  public sourceAddr: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SmsadmController.html":{"url":"controllers/SmsadmController.html","title":"controller - SmsadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SmsadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/smsadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings/sms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('get')@ApiOperation({summary: 'Retourne les parametres pour l envoi SMS'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/smsadm.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        set\n                        \n                    \n                \n            \n            \n                \n                        \n                    set(body: SmsSettingsDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('set')@ApiOperation({summary: 'Enregistre les parametres'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/smsadm.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            SmsSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Logger, Post, Res } from '@nestjs/common';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { Response } from 'express';\nimport { SmsSettingsDto } from '~/settings/_dto/sms.settings.dto';\n\n@Controller('settings/sms')\n@ApiTags('settings')\nexport class SmsadmController {\n  public constructor(private smsadmService: SmsadmService) {}\n\n  @Get('get')\n  @ApiOperation({ summary: 'Retourne les parametres pour l envoi SMS' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async get(@Res() res: Response): Promise {\n    const data = await this.smsadmService.getParams();\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n\n  @Post('set')\n  @ApiOperation({ summary: 'Enregistre les parametres' })\n  @ApiResponse({ status: HttpStatus.OK })\n  public async set(@Body() body: SmsSettingsDto, @Res() res: Response): Promise {\n    const data = await this.smsadmService.setParams(body);\n\n    return res.status(HttpStatus.OK).json({ data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyncIdentitiesDto.html":{"url":"classes/SyncIdentitiesDto.html","title":"class - SyncIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyncIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/sync-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/sync-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class SyncIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tasks.html":{"url":"classes/Tasks.html","title":"class - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/_schemas/tasks.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/tasks/_schemas/tasks.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type TasksDocument = Tasks & Document;\n\n@Schema({ versionKey: false })\nexport class Tasks extends AbstractSchema {\n  @Prop({ type: [Types.ObjectId] })\n  public jobs?: Types.ObjectId[];\n}\n\nexport const TasksSchema = SchemaFactory.createForClass(Tasks);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: TasksService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TasksSchema, Tasks } from './_schemas/tasks.schema';\nimport { TasksService } from './tasks.service';\nimport { TasksController } from './tasks.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Tasks.name,\n        useFactory: () => TasksSchema,\n      },\n    ]),\n  ],\n  providers: [TasksService],\n  controllers: [TasksController],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                trashAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:45\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:165\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:330\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:35\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:60\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:96\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:130\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        trashAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    trashAndCount(projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:51\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:207\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:269\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Tasks } from './_schemas/tasks.schema';\n\n@Injectable()\nexport class TasksService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Tasks.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iv\n                                        \n                                \n                                \n                                        \n                                            k\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        k\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        k:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport { randomInt } from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './_dto/ask-token.dto';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { IdentitiesCrudService } from '../identities/identities-crud.service';\nimport { get } from 'radash';\nimport { Identities } from '../identities/_schemas/identities.schema';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { InitAccountDto } from '~/management/passwd/_dto/init-account.dto';\nimport { ConfigService } from '@nestjs/config';\nimport { ResetByCodeDto } from '~/management/passwd/_dto/reset-by-code.dto';\nimport { PasswdadmService } from '~/settings/passwdadm.service';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { InitResetDto } from '~/management/passwd/_dto/init-reset.dto';\nimport { SmsadmService } from '~/settings/smsadm.service';\nimport { InitManyDto } from '~/management/passwd/_dto/init-many.dto';\nimport { InitStatesEnum } from '~/management/identities/_enums/init-state.enum';\nimport { MailadmService } from '~/settings/mailadm.service';\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesCrudService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsadmService: SmsadmService,\n    private mailadmService: MailadmService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto): Promise {\n    //envoi du mail\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //prise des parametres\n      const params = await this.passwdadmService.getPolicies();\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode();\n      const mailAttribute = params.emailAttribute;\n      const mail = get(identity.toObject(), mailAttribute);\n      if (mail) {\n        const token = await this.askToken({ mail: mail, uid: initDto.uid }, padd + k.toString(16), params.resetCodeTTL);\n        this.logger.log('Token :' + token + '  int : ' + k.toString(10));\n        if (initDto.type === 0) {\n          this.logger.log('Reset password asked by mail for  : ' + initDto.uid);\n          const smtpParams = await this.mailadmService.getParams();\n          if (mailAttribute !== '') {\n            // this.mailer.addTransporter('lastStmp', smtpParams.host)\n            this.mailer\n              .sendMail({\n                // transporterName: 'lastStmp',\n                from: smtpParams.sender,\n                to: mail,\n                subject: 'Reinitialisation de votre mot de passe',\n                template: 'resetaccount',\n                context: {\n                  uid: identity.inetOrgPerson.uid,\n                  displayName: identity.inetOrgPerson.displayName,\n                  code: k,\n                },\n              })\n              .then(() => {\n                this.logger.log('reset compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              })\n              .catch(() => {\n                throw new BadRequestException({\n                  message: 'Erreur serveur lors de l envoi du mail',\n                  error: 'Bad Request',\n                  statusCode: 400,\n                });\n              });\n            return token;\n          } else {\n            return false;\n          }\n        } else {\n          //envoi par SMS si c est possible\n          const policies = await this.passwdadmService.getPolicies();\n          if (policies.resetBySms === true) {\n            this.logger.log('Reset password asked by SMS for  : ' + initDto.uid);\n            const smsAttribute = params.mobileAttribute;\n            if (smsAttribute !== '') {\n              const numTel = get(identity.toObject(), smsAttribute);\n              await this.smsadmService.send(numTel, 'Votre code de reinitialisation : ' + k.toString(10));\n            }\n            return token;\n          } else {\n            return false;\n          }\n        }\n      } else {\n        this.logger.error('Error while reset identityMailAttribute Empty');\n      }\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken = await this.askToken({ mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx' }, k, 0);\n      return falseToken;\n    }\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto): Promise {\n    //recherche de l'identity\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid })) as Identities;\n      //envoi du mail\n      const params = await this.passwdadmService.getPolicies();\n      const mailAttribute = params.emailAttribute;\n      this.logger.log('mailer.identityMailAttribute : ' + mailAttribute);\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute);\n        if (mail) {\n          const smtpParams = await this.mailadmService.getParams();\n          //demande du token\n          const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n          const token = await this.askToken({ mail: mail, uid: initDto.uid }, k, params.initTokenTTL);\n          //envoi du token\n          this.mailer\n            .sendMail({\n              from: smtpParams.sender,\n              to: mail,\n              subject: 'Activation de votre compte',\n              template: 'initaccount',\n              context: {\n                displayName: identity.inetOrgPerson.displayName,\n                uid: initDto.uid,\n                url: this.config.get('frontPwd.url') + '/initaccount/' + token,\n              },\n            })\n            .then(() => {\n              this.logger.log('Init compte envoyé  pour uid' + initDto.uid + ' à ' + mail);\n              this.setInitState(identity, InitStatesEnum.SENT);\n            })\n            .catch((e) => {\n              this.logger.error('Erreur serveur lors de l envoi du mail' + e);\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail' + e,\n                error: 'Bad Request',\n                statusCode: 400,\n              });\n            });\n\n          return true;\n        } else {\n          this.logger.error('Error while initAccount identityMailAttribute Empty');\n          return false;\n        }\n      } else {\n        this.logger.error('Error while initAccount identityMailAttribute not defined');\n        return false;\n      }\n    } catch (e) {\n      this.logger.error('Error while initialize password. ' + e + ` (uid=${initDto?.uid})`);\n      return false;\n    }\n  }\n\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': passwdDto.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n      //verification de la police de mdp\n      if ((await this.passwdadmService.checkPolicies(passwdDto.newPassword)) === false) {\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: 'Bad Request',\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      return await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_CHANGE,\n        identity._id,\n        {\n          uid: passwdDto.uid,\n          oldPassword: passwdDto.oldPassword,\n          newPassword: passwdDto.newPassword,\n          ...identity.toJSON(),\n        },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error('Error while changing password. ' + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: 'Bad Request',\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto, k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl > 0) {\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error('Error while ask token. ' + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string, code: number): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' + cypherData);\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd = await this.getPaddingForCode();\n      const k = padd + code.toString(16);\n      this.logger.log('k=' + k);\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token = decodeURIComponent(token);\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose('Error while decrypting token. ' + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n\n  // reset du password\n  public async resetByCode(data: ResetByCodeDto): Promise {\n    this.logger.log('resetByCode : ' + data.token + ' ' + data.code);\n    //verification du passwordPolicies\n    if ((await this.passwdadmService.checkPolicies(data.newpassword)) === false) {\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: 'Bad Request',\n        statusCode: 400,\n      });\n    }\n    const tokenData = await this.decryptTokenWithCode(data.token, data.code);\n    this.logger.log('dataToken :' + tokenData);\n    try {\n      const identity = (await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid })) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: identity.inetOrgPerson.uid, newPassword: data.newpassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key');\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n      this.logger.error('Error from backend while reseting password by code');\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password by code. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = (await this.identities.findOne({\n        'inetOrgPerson.uid': tokenData.uid,\n        state: IdentityState.SYNCED,\n      })) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...identity.toJSON() },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: false,\n          switchToProcessing: false,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        await this.setInitState(identity, InitStatesEnum.INITIALIZED);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    } catch (e) {\n      this.logger.error('Error while reseting password. ' + e + ` (token=${data?.token})`);\n      throw new BadRequestException(\n        'Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible',\n      );\n    }\n  }\n\n  //Envoi le message d init à plusieurs identités\n  public async initMany(ids: InitManyDto): Promise {\n    const identities = await this.identities.find({ _id: { $in: ids.ids } });\n    if (identities.length === 0) {\n      throw new HttpException('Aucune identité trouvée.', 404);\n    }\n    const updated = await Promise.all(\n      identities.map((identity) => {\n        this.logger.verbose('send To :' + identity.get('inetOrgPerson.uid'));\n        return this.initAccount({ uid: identity.get('inetOrgPerson.uid') });\n      }),\n    );\n    return updated as any;\n  }\n\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise {\n    let code = '';\n    if (await this.redis.exists('CODEPADDING')) {\n      code = await this.redis.get('CODEPADDING');\n    } else {\n      code = crypto.randomBytes(13).toString('hex') + '0';\n      await this.redis.set('CODEPADDING', code);\n    }\n    return code;\n  }\n\n  private async setInitState(identity: Identities, state: InitStatesEnum): Promise {\n    identity.initState = state;\n    if (state === InitStatesEnum.SENT) {\n      identity.initInfo.initDate = new Date();\n      identity.initInfo.sentDate = null;\n    } else if (state === InitStatesEnum.INITIALIZED) {\n      identity.initInfo.sentDate = new Date();\n    }\n    const ok = await identity.save();\n    return ok;\n  }\n\n  // sort les identites qui n ont pas repondu dans le delai à l init de leurs comptes\n  public async checkInitOutDated(): Promise {\n    const date = new Date();\n    const params = await this.passwdadmService.getPolicies();\n    date.setTime(date.getTime() - params.initTokenTTL * 1000);\n    console.log('modifié:' + date);\n    const identities = await this.identities.find({\n      initState: InitStatesEnum.SENT,\n      'initInfo.initDate': { $lt: date },\n    });\n    return identities;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformersFilestorageService.html":{"url":"injectables/TransformersFilestorageService.html","title":"injectable - TransformersFilestorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformersFilestorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_services/transformers-filestorage.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                TRANSFORMERS\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Async\n                                streamToString\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Static\n                                    Async\n                                transformHtml\n                            \n                            \n                                    Static\n                                    Async\n                                transformImage\n                            \n                            \n                                    Static\n                                    Async\n                                transformPdf\n                            \n                            \n                                    Static\n                                    Async\n                                transformPlain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Async\n                        streamToString\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToString(stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream, _parent?: Filestorage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _parent\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformHtml(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformImage(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPdf(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPlain\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPlain(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TRANSFORMERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { Injectable } from '@nestjs/common';\nimport { Response } from 'express';\nimport { Filestorage } from '~/core/filestorage/_schemas/filestorage.schema';\n\n@Injectable()\nexport class TransformersFilestorageService extends AbstractService {\n  public static readonly TRANSFORMERS = {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  };\n\n  public constructor() {\n    super();\n  }\n\n  public async transform(\n    mime: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n    _parent?: Filestorage,\n  ): Promise {\n    const mimeType = mime || data.mime || 'application/octet-stream';\n    const hasTransformer = TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType);\n    // TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType) || TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')\n    if (!hasTransformer) {\n      if (TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')) {\n        await TransformersFilestorageService.TRANSFORMERS[mimeType.split('/')[0] + '/*'](mime, res, data, stream);\n        return;\n      }\n    }\n    if (!hasTransformer) {\n      res.setHeader('Content-Type', mimeType);\n      // eslint-disable-next-line\n      res.setHeader('Content-Disposition', `attachment; filename=\"${(data as any).filename}\"`)\n      stream.pipe(res);\n      return;\n    }\n    await TransformersFilestorageService.TRANSFORMERS[mimeType](mime, res, data, stream);\n  }\n\n  public static async transformPlain(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'text/plain');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  public static async transformPdf(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'application/pdf');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  public static async transformHtml(\n    _: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'text/html');\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    res.render('core/filestorage/transformers/html', {\n      data,\n      html: await TransformersFilestorageService.streamToString(stream),\n    });\n  }\n\n  public static async transformImage(\n    mime: string,\n    res: Response,\n    data: Filestorage,\n    stream: NodeJS.ReadableStream,\n  ): Promise {\n    res.setHeader('Content-Type', 'image/' + mime.split('/').pop());\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res);\n    return;\n  }\n\n  private static async streamToString(stream: NodeJS.ReadableStream): Promise {\n    const chunks = [];\n    return new Promise((resolve, reject) => {\n      stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\n      stream.on('error', (err) => reject(err));\n      stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class VerifyTokenDto {\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  @IsString()\n  public token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInfoInterface.html":{"url":"interfaces/WorkerResultInfoInterface.html","title":"interface - WorkerResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [backendName: string]:        Partial\n\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/_interfaces/worker-result.interface.ts:13\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobName?: string;\n  options?: {\n    [key: string | number]: any;\n  };\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInterface.html":{"url":"interfaces/WorkerResultInterface.html","title":"interface - WorkerResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jobName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         WorkerResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WorkerResultInfoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobName?: string;\n  options?: {\n    [key: string | number]: any;\n  };\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                attributes\n                            \n                            \n                                    \n                                    Public\n                                objectClasses\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, name: 'attributes'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Object, name: 'validations'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional } from 'class-validator';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  public objectClasses: string[] = [];\n\n  @ApiProperty({\n    type: Object,\n    name: 'attributes',\n  })\n  @IsOptional()\n  public attributes: { [key: string]: any } = {};\n\n  @ApiProperty({\n    type: Object,\n    name: 'validations',\n  })\n  public validations?: { [key: string]: { [key: string]: string } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/ioredis : ^2.0.2\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.4.8\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.4.8\n        \n            @nestjs/event-emitter : ^2.1.1\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.8\n        \n            @nestjs/swagger : ^8.0.7\n        \n            @the-software-compagny/nestjs_module_factorydrive : ^1.1.5\n        \n            @the-software-compagny/nestjs_module_factorydrive-s3 : ^1.0.1\n        \n            @the-software-compagny/nestjs_module_restools : ^0.0.11\n        \n            ajv : ^8.16.0\n        \n            ajv-errors : ^3.0.0\n        \n            argon2 : ^0.41.1\n        \n            awesome-phonenumber : ^6.10.0\n        \n            bullmq : ^5.8.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            fast-password-entropy : ^1.1.1\n        \n            glob : ^11.0.0\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            hibp : ^14.1.2\n        \n            ioredis : ^5.4.1\n        \n            loglevel : ^1.9.1\n        \n            lru-cache : ^11.0.2\n        \n            mjml : ^4.15.3\n        \n            mongoose : ^8.8.2\n        \n            nest-commander : ^3.13.0\n        \n            nest-winston : ^1.10.0\n        \n            nestjs-request-context : ^3.0.0\n        \n            nodemailer : ^6.9.16\n        \n            ora : ^8.1.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^12.1.0\n        \n            reflect-metadata : ^0.2.2\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            smpp : ^0.6.0-rc.4\n        \n            swagger-themes : ^1.4.3\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.17.0\n        \n            winston-mongodb : ^6.0.0\n        \n            winston-transport : ^4.9.0\n        \n            yaml : ^2.6.1\n        \n            yup : ^1.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../action-type.enum.ts)\n                        \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            BackendCodesEnum   (src/.../backend-codes.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            DataStatusEnum   (src/.../data-status.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            FsType   (src/.../fs-type.enum.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InitStatesEnum   (src/.../init-state.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                        \n                            JobState   (src/.../state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/backends/_enum/action-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                Value : LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                 DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                Value : DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                 PING_TARGET\n                            \n                        \n                        \n                            \n                                Value : PING_TARGET\n                            \n                        \n                        \n                            \n                                 IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DISABLE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DISABLE\n                            \n                        \n                        \n                            \n                                 IDENTITY_ENABLE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_ENABLE\n                            \n                        \n            \n        \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/core/backends/_interfaces/backend-codes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        BackendCodesEnum\n                    \n                \n                    \n                        \n                            BackendCodesEnum\n\n                        \n                    \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 GENERIC_ERROR\n                            \n                        \n                        \n                            \n                                 GENERIC_STOPPED\n                            \n                        \n                        \n                            \n                                 CONNECTION_ERROR\n                            \n                        \n                        \n                            \n                                 INVALID_LOGIN\n                            \n                        \n                        \n                            \n                                 INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 INVALID_JSON_RESPONSE\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/data-status.ts\n    \n        \n            \n                \n                    \n                        \n                        DataStatusEnum\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/filestorage/_enum/fs-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FsType\n                    \n                \n                        \n                            \n                                 DIRECTORY\n                            \n                        \n                        \n                            \n                                Value : d\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : f\n                            \n                        \n                        \n                            \n                                 SYMLINK\n                            \n                        \n                        \n                            \n                                Value : l\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n                        \n                            \n                                 DONT_SYNC\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/init-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        InitStatesEnum\n                    \n                \n                        \n                            \n                                 NOSENT\n                            \n                        \n                        \n                            \n                                 SENT\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 INITIALIZED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n    src/core/jobs/_enums/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobState\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nSesame Orchestrateur\nAPI du projet SESAME\nArchitecture du projet\nFigma\nDocumentation\n Aller à la documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    Public\n                                sn\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, validate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AutoIncrementPluginOptions } from '~/_common/plugins/mongoose/auto-increment.interface';\nimport { AutoIncrementPlugin } from '~/_common/plugins/mongoose/auto-increment.plugin';\n\n@Schema({ _id: false })\nexport class inetOrgPerson extends Document {\n  @Prop({ type: String, required: true })\n  public cn: string;\n\n  @Prop({ type: String, default: null })\n  public displayName?: string;\n\n  @Prop({ type: String, default: null })\n  public facsimileTelephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  public givenName?: string;\n\n  @Prop({ type: String, default: null })\n  public labeledURI?: string;\n\n  @Prop({ type: String, default: null })\n  public mail?: string;\n\n  @Prop({ type: String, default: null })\n  public mobile?: string;\n\n  @Prop({ type: String, default: null })\n  public postalAddress?: string;\n\n  @Prop({ type: String, default: null })\n  public preferredLanguage?: string;\n\n  @Prop({ type: String, required: true })\n  public sn: string;\n\n  @Prop({ type: String, default: null })\n  public telephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  public title?: string;\n\n  @Prop({ type: String, required: true })\n  public uid: string;\n\n  @Prop({\n    type: Array,\n    of: String,\n    validate: [\n      {\n        validator: (employeeNumbers: string[]) => {\n          if (!Array.isArray(employeeNumbers)) return false;\n\n          return employeeNumbers.every((employeeNumber) => /[A-Za-z0-9_-]+/.test(employeeNumber));\n        },\n        message: 'EmployeeNumber invalide.',\n      },\n    ],\n  })\n  public employeeNumber: string[];\n\n  @Prop({ type: String, required: true })\n  public employeeType: string;\n\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  public departmentNumber: string[];\n\n  @Prop({ type: String, default: null })\n  public jpegPhoto?: string;\n\n  // @Prop({ type: String, default: null })\n  // public photo?: string;\n\n  @Prop({ type: String, default: null })\n  public userCertificate?: string;\n\n  // @Prop({ type: String, default: null })\n  // public userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson).index(\n  { employeeNumber: 1, employeeType: 1 },\n  { unique: true },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsString({each: true})@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:93\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                userCertificate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsArray()@IsString({each: true})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@Type(undefined)@IsString({each: true})@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:103\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:73\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:78\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:83\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:88\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:93\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsString, IsEmail, IsOptional, IsArray } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public uid: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public cn: string;\n\n  @IsArray()\n  @Type(() => String)\n  @IsString({ each: true })\n  @ApiProperty()\n  @IsOptional()\n  public employeeNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public employeeType: string;\n\n  @ApiProperty()\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  public departmentNumber: string[];\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  public sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public userCertificate?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public userPassword?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  public jpegPhoto?: string;\n\n  // @IsString()\n  // @ApiProperty({ required: false })\n  // @IsOptional()\n  // public photo?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilestorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesJsonformsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MigrationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CliModule\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_MigrationsModule\n\n\n\ncluster_MigrationsModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_exports\n\n\n\ncluster_SettingsModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nAgentsModule->BackendsModule\n\n\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nMigrationsModule\n\nMigrationsModule\n\nAppModule -->\n\nMigrationsModule->AppModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nAppModule -->\n\nSettingsModule->AppModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nSettingsModule->PasswdModule\n\n\n\n\n\nMailadmService \n\nMailadmService \n\nMailadmService  -->\n\nSettingsModule->MailadmService \n\n\n\n\n\nPasswdadmService \n\nPasswdadmService \n\nPasswdadmService  -->\n\nSettingsModule->PasswdadmService \n\n\n\n\n\nSmsadmService \n\nSmsadmService \n\nSmsadmService  -->\n\nSettingsModule->SmsadmService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nShutdownObserver\n\nShutdownObserver\n\nAppModule -->\n\nShutdownObserver->AppModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\nKeyringsService \n\nKeyringsService \n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nIdentitiesCrudService \n\nIdentitiesCrudService \n\nIdentitiesCrudService  -->\n\nIdentitiesModule->IdentitiesCrudService \n\n\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\nIdentitiesModule -->\n\nFilestorageModule->IdentitiesModule\n\n\n\n\n\nFilestorageService \n\nFilestorageService \n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\n\n\nTransformersFilestorageService \n\nTransformersFilestorageService \n\nTransformersFilestorageService  -->\n\nFilestorageModule->TransformersFilestorageService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\nMigrationsService\n\nMigrationsService\n\nMigrationsModule -->\n\nMigrationsService->MigrationsModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nMailadmService\n\nMailadmService\n\nSettingsModule -->\n\nMailadmService->SettingsModule\n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nSettingsModule -->\n\nPasswdadmService->SettingsModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingsModule -->\n\nSettingsService->SettingsModule\n\n\n\n\n\nSmsadmService\n\nSmsadmService\n\nSettingsModule -->\n\nSmsadmService->SettingsModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    24 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    31 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    100 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.2.37\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            SettingsDocument   (src/.../settings.schema.ts)\n                        \n                        \n                            TasksDocument   (src/.../tasks.schema.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/jobs/_schemas/jobs.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/_schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/settings/_schemas/settings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsDocument\n                \n            \n            \n                \n                        Document\n\n                \n            \n        \n    \n    src/core/tasks/_schemas/tasks.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/filtres-api.html":{"url":"additional-documentation/filtres-api.html","title":"additional-page - Filtres API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFiltres API\nUsages\nFilters\nSyntax\nfilters[PREFIX + FIELD]=SEARCH\nExample\nfilters[=subject]=53\nsubject field equal to 53\nUsage\nExample :curl --request GET \\\n  --url 'http://localhost/search?limit=9999&filters%5B%5Esequence%5D=%2F53%2F&sort%5Bmetadata.createdAt%5D=-1&sort%5Bsubject%5D=1'\n  \n# limit=9999\n# filters[^sequence]=/53/\n# sort[metadata.createdAt]=-1\n# sort[subject]=1List\n\n\n\nFilter\nDescription\n\n\n\n\n:\nEqual\n\n\n#\nNumber Equal\n\n\n!#\nNumber Not Equal\n\n\n!:\nNot Equal\n\n\n>\nGreater Than\n\n\n>\n\n\n\n\nLess Than\n\n\n\n\n\n\n@\nin\n\n\n!@\nnot in\n\n\n@#\nnumber in\n\n\n!@#\nnumber not in\n\n\n^\nregex\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    employeeNumber: 'employeeNumber',\n    employeeType: 'employeeType',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nRéponse Attendue\n\n\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), uid (Identifiant Unique), et employeeNumber + employeeType (Identifiant Identité). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identité\"\n    \"employeeType\": \"Type Identité\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identité\",\n             \"employeeType\": \"Type Identité\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nEndpoint pour la Création d'Identité\nMême procédure pour la validation, mais ici nous avons : \nURL: /management/identities/upsert : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure au moins la données (inetOrgPerson.uid) et (inetOrgPerson.employeeNumber + inetOrgPerson.employeeType), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nDe plus pour une modification, il specifier le state a -1\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identite\",\n    \"employeeType\": \"Type Identite\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Example :curl -X POST \"http:///identities/upsert\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identite\",\n             \"employeeType\": \"Type Identite\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'Réponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nformat: 'email'\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nformat: 'url'\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nCorps de la Requête\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
