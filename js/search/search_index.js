var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.217,1,2.543]],["body/classes/AbstractController.html",[0,0.269,1,3.97,2,0.955,3,0.132,4,0.11,5,0.117,6,5.577,7,0.407,8,0.895,9,2.845,10,3.246,11,1.03,12,3.697,13,6.081,14,7.708,15,1.841,16,5.483,17,7.465,18,0.716,19,7.866,20,1.562,21,0.006,22,1.106,23,0.451,24,3.313,25,2.806,26,6.235,27,6.235,28,6.235,29,0.224,30,2.586,31,5.577,32,1.371,33,4.82,34,5.577,35,5.577,36,1.059,37,0.176,38,1.706,39,2.125,40,0.674,41,1.841,42,2.16,43,2.056,44,2.399,45,3.071,46,3.227,47,4.347,48,5.577,49,3.227,50,4.562,51,4.82,52,4.562,53,2.056,54,5.577,55,0.733,56,1.432,57,5.577,58,0.004,59,0.004]],["title/interfaces/AbstractControllerContext.html",[17,4.157,38,1.379]],["body/interfaces/AbstractControllerContext.html",[0,0.282,1,3.301,3,0.138,4,0.115,5,0.123,6,5.85,7,0.427,8,0.922,9,2.56,10,3.001,11,0.969,12,3.786,14,5.85,16,4.559,17,7.265,18,0.518,21,0.006,23,0.342,29,0.228,30,2.713,31,5.85,32,1.439,33,5.056,34,5.85,35,5.85,36,1.111,37,0.181,38,1.79,39,2.761,40,0.754,41,2.393,42,2.266,43,2.156,44,2.516,45,3.222,46,3.386,47,4.559,48,5.85,49,3.386,50,4.785,51,5.056,52,4.785,53,2.156,54,5.85,55,0.769,56,1.502,57,5.85,58,0.004,59,0.004,60,2.767,61,4.785,62,6.54]],["title/classes/AbstractQueueProcessor.html",[0,0.217,63,3.895]],["body/classes/AbstractQueueProcessor.html",[0,0.22,2,0.781,3,0.108,4,0.09,5,0.096,7,0.333,8,0.785,9,2.839,10,2.663,11,1.046,12,2.953,13,5.333,15,1.506,16,4.809,18,0.773,20,1.278,21,0.006,22,0.905,23,0.49,24,2.711,25,2.296,29,0.224,36,0.866,37,0.114,49,2.641,50,3.732,53,2.577,55,1.118,56,1.172,58,0.004,59,0.004,63,5.333,64,5.101,65,1.057,66,4.062,67,4.605,68,7.605,69,6.992,70,3.85,71,7.439,72,2.664,73,5.579,74,1.654,75,3.244,76,3.244,77,1.754,78,1.987,79,7.127,80,6.127,81,5.101,82,5.101,83,4.528,84,5.101,85,5.101,86,5.101,87,3.054,88,2.513,89,2.399,90,2.513,91,2.513,92,2.513,93,5.101,94,1.297,95,5.101,96,5.101,97,3.556,98,4.563,99,5.101,100,2.454,101,3.157,102,2.867,103,2.867,104,6.899,105,4.563,106,2.513,107,5.101,108,3.051,109,5.101,110,5.101,111,5.691,112,1.779,113,6.992,114,5.101,115,5.101,116,4.126,117,4.563,118,5.101]],["title/classes/AbstractSchema.html",[0,0.217,119,2.752]],["body/classes/AbstractSchema.html",[0,0.291,2,1.034,3,0.143,4,0.119,5,0.127,7,0.441,8,0.941,11,1.113,18,0.654,21,0.006,23,0.467,29,0.222,37,0.151,42,2.339,43,2.226,44,2.598,49,3.495,55,1.143,58,0.004,59,0.004,65,1.266,74,2.142,119,4.514,120,6.752,121,3.705,122,2.557,123,4.624,124,3.123,125,6.752,126,7.369,127,1.306,128,3.175,129,7.99,130,6.752,131,3.886,132,2.024,133,2.801,134,1.794,135,6.752]],["title/injectables/AbstractService.html",[66,2.22,136,1.226]],["body/injectables/AbstractService.html",[0,0.221,3,0.109,4,0.09,5,0.096,7,0.335,8,0.789,9,2.842,10,3.078,11,1.048,12,3.548,13,5.355,15,1.515,16,4.829,18,0.753,20,1.286,21,0.006,22,0.91,23,0.439,24,3.681,25,2.31,29,0.217,30,2.129,36,0.872,37,0.155,38,1.405,39,1.749,40,0.672,41,1.515,42,2.717,43,2.585,44,3.017,45,2.528,46,2.657,47,3.578,49,2.657,50,3.755,51,3.968,52,3.755,53,2.284,55,0.815,56,1.801,58,0.004,59,0.004,66,3.053,72,2.388,74,1.88,75,3.687,76,3.947,80,6.142,89,3.947,100,2.469,106,2.528,108,3.07,136,1.685,137,2.088,138,4.591,139,4.739,140,7.841,141,7.014,142,6.927,143,5.133,144,5.133,145,5.133,146,5.133,147,5.133,148,5.133,149,5.133,150,5.133,151,5.133,152,2.011,153,4.235,154,3.968,155,4.591,156,4.235,157,4.059,158,6.469,159,6.196,160,4.591,161,4.591,162,2.011,163,4.591,164,2.728,165,3.427,166,1.539,167,3.755,168,4.591,169,4.591,170,0.993,171,4.591,172,4.591,173,4.591,174,4.591]],["title/interfaces/AbstractServiceContext.html",[38,1.379,80,3.687]],["body/interfaces/AbstractServiceContext.html",[0,0.236,3,0.116,4,0.096,5,0.103,7,0.357,8,0.823,9,2.603,10,2.758,11,1.1,12,3.676,16,3.813,18,0.572,21,0.006,23,0.378,24,2.906,29,0.222,30,2.269,36,0.929,37,0.162,38,1.497,39,2.463,40,0.738,41,2.134,42,2.805,43,2.669,44,3.114,45,2.694,46,2.831,47,3.813,49,2.831,50,4.001,51,4.228,52,4.001,53,2.383,55,0.85,56,1.859,58,0.004,59,0.004,60,2.314,61,4.001,66,2.41,72,1.665,74,1.312,75,2.572,76,4.211,80,5.922,89,4.211,100,2.631,106,2.694,108,3.271,136,1.758,138,4.892,139,4.643,140,7.241,141,4.892,152,2.143,153,4.512,154,4.228,155,4.892,156,7.104,157,4.19,158,6.678,159,6.465,160,4.892,161,4.892,162,2.143,163,4.892,164,2.906,165,3.651,166,1.64,167,4.001,168,4.892,169,4.892,170,1.058,171,4.892,172,4.892,173,4.892,174,4.892,175,5.469]],["title/injectables/AbstractServiceSchema.html",[136,1.226,176,3.014]],["body/injectables/AbstractServiceSchema.html",[0,0.075,3,0.037,4,0.03,5,0.032,7,0.113,8,0.338,9,2.107,10,1.334,11,0.93,12,1.479,13,2.299,15,0.51,16,2.073,18,0.638,20,2.098,21,0.006,22,1.246,23,0.455,24,0.918,25,3.769,29,0.152,36,0.293,37,0.039,41,0.51,42,1.03,43,0.57,49,2.406,53,2.566,55,1.058,56,1.613,58,0.002,59,0.002,65,0.455,66,2.701,67,1.153,72,0.905,74,0.713,75,1.398,76,1.398,77,0.756,78,2.273,80,3.401,87,1.695,88,0.851,89,0.812,90,0.851,91,0.851,92,0.851,94,1.72,98,1.545,105,1.545,106,3.668,119,0.944,121,1.623,122,2.011,123,0.894,124,2.557,133,0.717,134,0.459,136,0.723,137,0.703,154,2.299,162,3.561,164,1.58,170,1.766,176,1.778,177,1.728,178,2.422,179,3.042,180,1.258,181,1.398,182,2.341,183,2.267,184,2.267,185,2.138,186,3.93,187,2.693,188,2.949,189,2.973,190,1.778,191,4.665,192,3.583,193,1.728,194,4.067,195,4.707,196,2.443,197,1.778,198,2.78,199,1.728,200,2.844,201,1.778,202,5.078,203,2.629,204,1.728,205,1.033,206,4.326,207,4.416,208,1.728,209,1.033,210,1.728,211,1.069,212,1.728,213,1.033,214,1.728,215,0.918,216,3.666,217,1.728,218,1.069,219,1.728,220,1.425,221,1.728,222,4.425,223,1.336,224,2.973,225,1.033,226,1.728,227,1.728,228,1.728,229,2.453,230,1.728,231,1.545,232,2.175,233,4.158,234,2.66,235,2.66,236,1.728,237,6.483,238,2.608,239,1.728,240,1.728,241,5.724,242,1.728,243,1.728,244,1.728,245,1.728,246,7.781,247,7.781,248,7.781,249,7.781,250,7.781,251,4.507,252,1.728,253,1.336,254,1.728,255,6.129,256,7.781,257,3.914,258,3.914,259,3.914,260,4.05,261,2.053,262,3.914,263,6.129,264,6.129,265,1.728,266,1.728,267,7.781,268,4.649,269,6.129,270,3.914,271,3.914,272,1.728,273,1.728,274,5.239,275,1.728,276,1.728,277,1.728,278,1.545,279,1.728,280,1.728,281,1.728,282,2.973,283,2.973,284,1.84,285,0.761,286,3.914,287,3.542,288,1.728,289,2.973,290,1.728,291,2.973,292,1.728,293,1.204,294,5.724,295,5.724,296,1.204,297,2.82,298,1.425,299,1.425,300,3.035,301,1.728,302,1.728,303,1.728,304,1.109,305,1.336,306,3.914,307,1.728,308,1.728,309,2.973,310,5.12,311,1.728,312,2.073,313,2.973,314,2.66,315,2.073,316,2.66,317,2.973,318,2.973,319,1.513,320,2.973,321,2.973,322,2.973,323,1.728,324,1.728,325,1.728,326,1.728,327,1.728,328,2.889,329,1.728,330,1.728,331,1.728,332,1.728,333,1.728,334,1.728,335,1.728,336,3.673,337,1.728,338,1.728,339,1.728,340,1.204]],["title/classes/AbstractSettingsService.html",[0,0.217,341,4.157]],["body/classes/AbstractSettingsService.html",[0,0.136,2,0.482,3,0.067,4,0.055,5,0.059,7,0.206,8,0.553,9,2.781,10,2.023,11,1.108,12,2.243,15,0.929,18,0.749,20,2.459,21,0.006,22,1.63,23,0.51,25,4.233,29,0.166,37,0.07,40,0.703,49,2.516,53,1.038,55,1.106,56,1.533,58,0.003,59,0.003,65,0.745,66,2.941,72,1.48,74,1.166,75,2.285,76,2.285,77,1.235,78,2.488,87,3.32,88,1.551,89,1.48,90,1.551,91,1.551,92,1.551,94,2.259,122,1.7,124,2.88,132,0.944,134,0.836,162,3.729,170,1.148,176,5.384,178,4.13,179,2.583,180,2.056,181,2.285,182,2.907,183,2.815,184,2.815,185,2.655,186,3.668,187,2.815,188,3.47,190,1.883,191,4.983,192,3.491,194,4.6,195,4.054,196,2.713,197,1.883,198,2.907,200,1.038,201,1.883,202,5.273,203,2.735,205,1.883,206,3.948,207,4.754,209,1.883,211,1.948,213,1.883,215,1.673,216,3.992,218,1.948,233,2.816,238,1.457,261,2.326,312,2.195,315,2.195,341,4.01,342,7.623,343,3.148,344,5.31,345,4.456,346,4.347,347,4.347,348,2.102,349,4.86,350,2.02,351,3.148,352,4.347,353,3.148,354,6.819,355,4.347,356,3.148,357,2.02,358,2.195,359,2.02,360,2.02,361,2.02,362,2.02,363,2.02,364,2.102,365,2.02,366,2.102,367,2.02,368,2.304,369,2.597,370,2.816,371,3.148,372,0.944,373,1.448,374,4.86,375,3.148,376,3.148,377,1.359,378,2.02,379,3.148,380,3.388,381,3.148]],["title/classes/AdditionalFieldsPart.html",[0,0.217,382,3.513]],["body/classes/AdditionalFieldsPart.html",[0,0.273,2,0.97,3,0.134,4,0.111,5,0.119,7,0.413,8,0.904,11,0.949,18,0.687,21,0.006,23,0.5,29,0.215,37,0.178,40,0.779,58,0.004,59,0.004,65,0.97,112,2.238,121,3.294,122,1.812,127,1.678,128,4.08,131,4.278,132,1.898,134,1.682,170,1.224,203,2.309,261,3.565,319,1.96,382,5.536,383,6.33,384,4.877,385,4.877,386,4.491,387,5.442,388,3.206,389,6.33,390,5.301,391,3.261,392,6.33,393,6.33,394,3,395,3.045,396,2.976,397,3.045,398,3.045,399,5.662,400,6.33]],["title/classes/AgentCreateQuestions.html",[0,0.217,401,3.687]],["body/classes/AgentCreateQuestions.html",[0,0.332,2,0.756,3,0.104,4,0.087,5,0.093,7,0.322,9,1.435,11,0.919,12,3.268,15,1.457,18,0.608,20,1.925,21,0.006,22,1.723,23,0.452,29,0.205,30,2.047,37,0.172,40,0.843,42,2.337,43,2.224,44,2.595,45,3.323,46,3.492,55,0.793,56,1.765,58,0.004,59,0.004,65,1.033,72,2.054,74,1.618,77,1.715,78,1.715,94,1.953,127,1.486,170,0.954,180,3.251,192,2.504,196,1.991,203,1.435,238,2.022,284,3.054,300,2.859,372,2.022,373,2.27,377,2.131,401,4.935,402,4.072,403,6.745,404,6.745,405,6.745,406,5.565,407,6.874,408,4.276,409,4.936,410,6.224,411,5.565,412,3.777,413,4.936,414,5.565,415,4.276,416,4.936,417,4.329,418,4.932,419,4.702,420,5.758,421,4.702,422,4.329,423,3.054,424,3.054,425,3.054,426,3.816,427,4.755,428,3.816,429,6.34,430,4.702,431,2.453,432,5.215,433,3.441,434,3.172,435,4.174,436,4.174,437,4.329,438,4.072,439,4.072,440,4.072,441,3.295,442,2.693,443,3.441,444,3.441,445,3.054,446,3.167,447,3.441,448,2.859]],["title/classes/Agents.html",[0,0.217,445,3.118]],["body/classes/Agents.html",[0,0.202,2,0.718,3,0.099,4,0.082,5,0.088,7,0.306,8,0.741,11,0.778,18,0.739,21,0.006,23,0.524,29,0.211,37,0.146,39,1.597,40,0.868,55,1.198,58,0.004,59,0.004,65,0.718,112,1.209,119,3.555,124,2.459,127,1.804,128,4.388,131,4.489,132,1.405,170,1.259,203,1.362,261,2.55,319,2.41,388,3.096,391,3.345,394,2.459,395,2.254,396,3.061,397,2.254,398,2.254,408,3.871,412,3.164,415,3.871,445,4.027,449,4.686,450,5.781,451,4.332,452,3.439,453,4.992,454,3.774,455,5.781,456,4.686,457,1.771,458,4.686,459,4.686,460,5.919,461,4.686,462,4.686,463,6.17,464,6.689,465,4.686,466,6.17,467,6.689,468,4.686,469,7.478,470,4.686,471,4.686,472,2.9,473,4.686,474,4.686,475,3.429,476,2.9,477,3.429,478,4.192,479,4.686]],["title/classes/AgentsCommand.html",[0,0.217,447,3.513]],["body/classes/AgentsCommand.html",[0,0.342,2,0.801,3,0.111,4,0.092,5,0.098,7,0.341,9,1.52,11,0.839,12,3.563,15,2.071,18,0.555,20,1.757,21,0.006,22,1.673,23,0.414,29,0.21,30,2.169,37,0.177,40,0.795,42,2.43,43,2.313,44,2.699,45,3.455,46,3.631,55,0.931,56,1.818,58,0.004,59,0.004,65,1.075,72,2.136,74,1.682,77,1.783,78,2.15,94,1.329,170,1.011,180,3.349,192,3.14,196,2.337,203,1.52,238,2.103,284,3.236,300,3.029,372,2.103,373,2.405,377,2.257,401,3.826,402,4.314,406,4.314,408,3.631,410,5.518,411,4.314,412,3.349,414,4.314,415,3.631,417,4.501,418,5.08,419,4.89,420,5.897,421,4.89,422,4.501,423,3.236,424,3.236,425,3.236,426,4.043,427,4.898,428,4.043,429,6.53,430,4.89,431,2.527,432,5.423,433,3.645,434,3.298,435,4.34,436,4.34,437,5.08,438,4.314,439,4.314,440,4.314,441,3.491,442,2.8,443,3.645,444,3.645,445,3.236,446,3.356,447,4.89,448,3.029,480,4.683,481,3.236,482,5.229,483,5.229,484,3.645]],["title/controllers/AgentsController.html",[485,1.661,486,4.157]],["body/controllers/AgentsController.html",[0,0.158,1,2.745,3,0.077,4,0.064,5,0.069,7,0.238,9,1.061,11,0.921,18,0.61,20,1.929,21,0.006,22,1.524,23,0.474,29,0.236,32,0.803,36,0.62,37,0.082,40,0.557,55,1.119,56,1.768,58,0.003,59,0.003,65,0.833,74,1.304,77,1.382,78,2.401,94,1.957,122,2.63,124,3.318,127,1.489,133,1.515,134,0.97,152,1.431,164,1.94,170,1.489,180,2.301,181,1.717,186,3.126,196,2.639,200,2.947,206,1.757,215,1.94,238,2.308,285,3.557,336,2.343,372,1.095,408,1.89,412,1.545,415,1.89,425,4.455,426,2.823,427,3.365,445,2.259,452,1.679,453,2.437,454,1.843,477,2.671,485,1.204,486,4.486,487,1.204,488,3.651,489,1.717,490,5.019,491,4.754,492,4.621,493,2.671,494,4.191,495,4.882,496,3.651,497,5.633,498,3.651,499,4.983,500,2.545,501,3.791,502,5.627,503,5.627,504,4.53,505,3.651,506,3.651,507,2.671,508,3.979,509,3.651,510,3.651,511,2.343,512,5.627,513,5.019,514,5.627,515,5.019,516,2.545,517,3.651,518,5.268,519,4.204,520,3.651,521,3.651,522,1.609,523,2.115,524,2.823,525,3.057,526,5.019,527,1.89,528,2.184,529,2.437,530,1.994,531,2.671,532,5.367,533,2.671,534,2.671,535,3.791,536,2.545,537,2.545,538,2.545,539,2.823,540,2.823,541,2.545,542,2.545,543,2.545,544,4.621,545,2.823,546,1.757,547,2.671,548,3.63,549,2.545,550,2.545,551,3.266,552,3.651,553,3.651,554,1.994,555,2.184,556,1.717,557,1.994,558,3.651,559,3.012,560,2.823,561,2.671,562,3.393,563,2.545,564,3.651,565,5.438,566,3.012,567,3.012,568,3.63,569,2.545,570,4.306,571,4.171,572,4.53,573,3.651,574,4.53,575,2.545,576,2.447,577,3.651,578,2.823,579,3.651,580,2.671]],["title/classes/AgentsCreateCommand.html",[0,0.217,432,3.895]],["body/classes/AgentsCreateCommand.html",[0,0.339,2,0.791,3,0.109,4,0.091,5,0.097,7,0.337,9,1.501,11,0.832,12,3.553,15,2.054,18,0.551,20,1.742,21,0.006,22,1.668,23,0.411,29,0.209,30,2.142,37,0.176,40,0.792,42,2.41,43,2.294,44,2.676,45,3.426,46,3.601,55,0.925,56,1.806,58,0.004,59,0.004,65,1.066,72,2.118,74,1.668,77,1.768,78,2.139,94,1.313,170,0.999,180,3.328,192,3.124,196,2.322,203,1.501,238,2.086,284,3.196,300,2.992,372,2.086,373,2.375,377,2.229,401,3.779,402,4.261,406,4.261,408,3.601,410,5.484,411,4.261,412,3.328,414,4.261,415,3.601,417,4.464,418,5.048,419,5.867,420,5.867,421,4.849,422,4.464,423,3.196,424,3.196,425,3.196,426,3.993,427,5.722,428,3.993,429,6.489,430,4.849,431,2.511,432,6.081,433,5.484,434,3.271,435,4.304,436,4.304,437,5.048,438,4.261,439,4.261,440,4.261,441,3.448,442,2.777,443,3.6,444,3.6,445,3.196,446,3.314,447,3.6,448,2.992,480,4.644,481,3.196,484,3.6,581,5.165,582,5.165]],["title/classes/AgentsCreateDto.html",[0,0.217,425,3.118]],["body/classes/AgentsCreateDto.html",[0,0.365,2,0.709,3,0.098,4,0.081,5,0.087,7,0.302,8,0.734,11,1.095,18,0.746,21,0.006,23,0.521,29,0.217,32,1.018,37,0.166,40,0.851,55,1.204,58,0.004,59,0.004,65,1.231,87,1.688,122,1.325,127,1.822,319,1.142,408,3.845,412,3.143,415,3.845,425,4.596,450,5.743,451,3.738,452,3.416,453,4.959,454,3.749,455,5.743,457,1.748,477,3.386,497,3.386,518,3.386,555,4.443,583,3.818,584,4.271,585,5.179,586,4.628,587,4.628,588,4.139,589,4.628,590,3.034,591,3.818,592,4.628,593,4.721,594,4.628,595,6.102,596,4.139,597,4.628,598,6.404,599,3.578,600,4.628,601,4.628,602,4.628,603,2.863,604,2.97,605,2.948,606,2.128,607,3.112,608,4.531,609,3.749,610,4.498,611,3.627,612,4.141,613,3.948,614,3.439,615,1.345,616,2.176,617,3.818,618,3.818,619,2.601,620,2.601,621,2.459,622,3.818,623,3.818]],["title/classes/AgentsDto.html",[0,0.217,497,3.687]],["body/classes/AgentsDto.html",[0,0.359,2,0.68,3,0.094,4,0.078,5,0.083,7,0.29,8,0.713,11,1.084,18,0.748,21,0.006,23,0.521,29,0.214,32,0.976,37,0.162,40,0.853,55,1.203,58,0.003,59,0.003,65,1.209,87,3.407,122,2.079,127,1.827,319,1.095,408,3.759,412,3.072,415,3.759,425,5.902,450,5.614,451,3.629,452,3.339,453,4.848,454,3.665,455,5.614,457,1.676,477,3.246,497,4.583,518,3.246,555,4.343,583,3.661,584,3.859,585,5.062,588,3.969,590,2.946,591,3.661,593,4.583,595,6.02,596,3.969,598,6.318,599,3.43,603,2.745,604,2.847,605,2.928,606,2.041,607,3.075,608,4.47,609,3.665,610,4.367,611,3.521,612,4.02,613,3.859,614,3.385,615,1.29,616,2.086,617,3.661,618,3.661,619,2.494,620,2.494,621,2.358,622,3.661,623,3.661,624,3.43,625,4.437,626,4.437,627,4.437,628,4.437,629,4.437,630,4.437,631,4.437,632,4.437,633,4.437,634,4.437]],["title/modules/AgentsModule.html",[166,1.511,635,3.364]],["body/modules/AgentsModule.html",[0,0.281,3,0.138,4,0.114,5,0.122,21,0.006,22,1.153,29,0.239,36,1.104,37,0.145,58,0.004,59,0.004,132,1.949,166,2.633,427,6.258,445,4.023,447,4.533,478,7.223,486,7.246,487,2.662,551,5.816,635,6.517,636,2.751,637,2.865,638,2.99,639,2.99,640,2.99,641,3.953,642,4.039,643,5.816,644,5.816,645,5.816,646,3.714,647,2.646,648,2.99,649,6.502,650,3.767,651,5.364,652,6.502,653,6.502,654,3.128,655,4.023,656,6.502,657,3.655,658,5.816]],["title/injectables/AgentsService.html",[136,1.226,427,3.118]],["body/injectables/AgentsService.html",[0,0.14,3,0.069,4,0.057,5,0.061,7,0.212,8,0.567,9,2.471,10,2.063,11,1.095,12,2.288,15,0.959,18,0.732,20,2.382,21,0.006,22,1.539,23,0.507,25,4.255,29,0.211,36,0.552,37,0.073,49,2.578,55,1.125,56,1.144,58,0.003,59,0.003,65,0.763,66,2.991,72,1.516,74,1.194,75,2.342,76,2.342,77,1.266,78,2.431,87,3.341,88,1.601,89,1.528,90,1.601,91,1.601,92,1.601,94,2.161,121,1.348,122,2.095,124,3.036,132,0.974,133,1.348,134,0.863,136,1.212,137,1.322,162,3.747,176,5.421,178,4.199,179,2.646,180,2.561,181,2.342,182,2.978,183,2.885,184,2.885,185,2.72,186,4.089,187,2.885,188,3.521,190,1.943,191,5.026,192,3.583,194,4.643,195,4.113,196,2.605,197,1.943,198,4.059,200,1.642,201,1.943,202,5.401,203,2.749,205,1.943,206,3.989,207,4.803,209,1.943,211,2.011,213,1.943,215,1.727,216,4.059,218,2.011,223,2.512,225,1.943,238,2.194,315,2.265,316,2.907,348,2.169,350,2.085,357,2.085,359,2.085,360,2.085,361,2.085,362,2.085,363,2.085,365,2.085,366,2.169,367,2.085,372,0.974,425,4.199,427,3.081,445,2.011,595,3.472,651,2.681,659,3.25,660,3.25,661,3.25,662,3.25,663,3.25,664,3.25,665,2.681,666,2.681,667,2.907,668,3.25,669,3.25,670,3.25,671,3.25,672,4.98,673,3.25,674,3.25,675,3.25,676,4.98,677,3.25,678,3.25,679,3.25,680,3.25,681,3.25]],["title/classes/AgentsUpdateDto.html",[0,0.217,518,3.687]],["body/classes/AgentsUpdateDto.html",[0,0.392,2,0.874,3,0.121,4,0.1,5,0.107,21,0.006,23,0.503,29,0.231,32,1.254,37,0.185,40,0.851,55,1.168,58,0.004,59,0.004,65,1.341,122,1.633,319,1.408,408,2.952,412,2.413,415,2.952,425,4.596,450,4.409,452,2.623,453,3.807,454,2.878,455,4.409,477,4.172,497,4.172,518,5.435,555,3.411,583,4.705,584,3.947,590,2.681,595,6.102,598,6.404,605,3.04,606,2.623,607,3.283,608,4.817,609,4.17,610,5.178,611,4.175,612,4.767,613,4.39,614,3.693,615,1.658,616,2.681,617,4.705,618,4.705,619,3.205,620,3.205,621,3.03,622,4.705,623,6.128]],["title/classes/AllExceptionFilter.html",[0,0.217,682,4.157]],["body/classes/AllExceptionFilter.html",[0,0.29,2,1.028,3,0.142,4,0.118,5,0.126,7,0.438,10,2.287,11,0.802,18,0.531,20,1.681,21,0.006,22,1.19,23,0.351,29,0.204,36,1.14,37,0.15,56,1.541,58,0.004,59,0.004,67,5.497,77,2.093,94,1.706,152,2.63,170,1.723,304,4.307,377,4.01,431,2.143,442,2.679,494,3.629,562,2.957,682,7.349,683,8.234,684,6.711,685,7.349,686,6.793,687,5.717,688,7.663,689,6.711,690,4.48,691,5.537,692,5.537,693,5.537,694,5.537,695,4.77,696,6.711,697,6.003,698,6.003,699,6.711,700,6.711,701,5.188]],["title/classes/ApiSession.html",[0,0.217,702,3.687]],["body/classes/ApiSession.html",[0,0.277,2,0.985,3,0.136,4,0.113,5,0.121,7,0.42,8,0.913,11,0.768,15,1.897,18,0.745,20,1.61,21,0.006,22,1.14,23,0.492,37,0.144,39,2.19,40,0.843,55,1.197,58,0.004,59,0.004,74,2.422,122,2.502,170,1.243,200,2.643,415,4.523,452,4.018,702,5.865,703,9.6,704,5.749,705,4.203,706,8.017,707,5.406,708,8.017,709,5.749,710,5.749,711,5.749,712,6.427,713,6.427]],["title/controllers/AppController.html",[485,1.661,714,3.895]],["body/controllers/AppController.html",[0,0.187,1,3.115,3,0.092,4,0.076,5,0.082,7,0.284,11,0.738,18,0.489,20,1.546,21,0.006,22,1.386,23,0.323,25,2.778,29,0.219,32,0.956,36,0.738,37,0.097,38,1.189,40,0.814,43,1.433,53,2.367,55,1.061,56,1.795,58,0.003,59,0.003,65,0.945,74,1.042,77,1.569,78,1.825,94,1.569,100,2.09,106,3.04,112,1.121,127,1.193,152,1.702,170,1.743,186,3.76,196,1.822,200,2.828,225,2.598,238,1.85,261,2.418,372,1.303,391,2.212,453,2.9,485,2.367,487,1.433,494,4.042,499,4.44,523,2.517,530,2.373,556,2.043,576,1.955,695,2.517,714,4.771,715,3.886,716,5.521,717,4.345,718,3.584,719,4.674,720,4.345,721,5.521,722,2.175,723,5.922,724,4.345,725,4.345,726,7.891,727,6.019,728,4.345,729,4.345,730,5.521,731,5.521,732,5.521,733,5.521,734,5.521,735,4.345,736,2.598,737,5.004,738,3.584,739,3.359,740,5.521,741,3.691,742,5.521,743,4.516,744,6.421,745,5.521,746,5.922,747,3.886,748,3.886,749,2.598,750,3.886,751,3.886,752,3.886,753,3.359,754,3.179,755,5.092,756,3.886,757,3.359,758,3.886,759,3.886,760,3.886,761,3.179,762,2.9,763,3.886,764,5.521,765,5.521,766,3.886,767,3.886,768,3.886,769,5.521,770,6.421,771,3.886,772,5.521,773,4.12,774,3.886,775,3.886,776,3.886,777,3.886,778,3.886,779,3.886,780,3.886,781,3.584,782,3.584,783,5.521,784,3.886,785,3.886,786,5.521,787,3.886,788,3.886,789,5.521,790,3.886,791,3.179,792,3.179,793,3.886,794,5.521,795,5.521,796,5.521,797,3.886,798,5.521,799,5.521,800,5.521,801,3.886,802,5.521]],["title/modules/AppModule.html",[166,1.511,803,3.895]],["body/modules/AppModule.html",[0,0.189,3,0.093,4,0.077,5,0.082,21,0.006,23,0.23,24,2.333,29,0.247,30,1.821,36,0.746,37,0.098,53,1.448,56,1.008,58,0.003,59,0.003,70,4.359,78,2.107,83,5.515,100,3.778,101,2.717,102,2.468,103,2.468,111,3.622,116,2.626,132,1.316,134,1.652,139,2.216,166,2.164,170,0.849,192,2.308,319,1.535,487,2.05,528,2.626,547,3.212,636,1.857,637,1.935,638,2.019,639,2.019,640,2.019,641,3.249,642,2.019,646,2.86,647,1.786,648,2.019,650,2.543,654,4.257,657,4.658,682,3.622,687,2.817,714,5.581,737,6,738,3.622,749,2.626,803,7.36,804,3.927,805,3.927,806,3.927,807,6.064,808,6.064,809,6.064,810,4.39,811,3.927,812,3.622,813,6.653,814,4.39,815,4.39,816,3.212,817,2.931,818,3.927,819,3.394,820,4.39,821,6.218,822,6.458,823,6.218,824,6.218,825,3.927,826,4.39,827,5.13,828,4.39,829,3.622,830,4.807,831,4.39,832,4.39,833,3.394,834,3.212,835,6.218,836,4.39,837,4.39,838,3.394,839,3.927,840,3.927,841,3.927,842,4.39,843,5.778,844,3.927,845,4.39,846,4.39,847,3.622,848,4.39,849,3.212,850,4.39,851,4.39,852,4.39,853,4.39,854,3.927,855,5.562,856,3.927,857,3.927,858,3.927,859,3.927,860,3.927,861,3.927,862,2.817,863,3.927,864,3.927,865,3.061,866,3.927,867,3.927,868,3.927,869,3.927,870,3.394,871,3.927,872,4.39,873,4.39,874,4.39,875,4.39,876,4.39,877,6.478,878,7.024,879,4.39]],["title/injectables/AppService.html",[136,1.226,737,3.513]],["body/injectables/AppService.html",[0,0.252,3,0.124,4,0.103,5,0.11,7,0.381,8,0.859,9,2.837,10,2.848,11,1.094,12,3.718,15,1.725,18,0.755,20,1.463,21,0.006,22,1.338,23,0.478,29,0.232,30,2.423,36,0.992,37,0.131,55,1.076,56,1.342,58,0.004,59,0.004,65,1.156,66,4.2,72,2.298,74,1.81,75,3.548,76,3.548,77,1.918,87,3.222,88,2.878,89,2.747,90,2.878,91,2.878,92,2.878,94,1.485,133,2.423,136,1.836,137,2.377,372,1.752,448,3.384,481,3.615,707,5.466,716,7.902,737,5.26,792,4.274,880,5.842,881,6.158,882,7.546,883,5.842,884,5.842,885,3.9,886,4.517,887,4.517,888,3.749,889,5.842,890,3.494,891,5.842,892,5.842,893,4.517,894,4.274,895,5.842]],["title/classes/AskTokenDto.html",[0,0.217,896,3.513]],["body/classes/AskTokenDto.html",[0,0.359,2,1.045,3,0.144,4,0.12,5,0.128,7,0.445,8,0.947,18,0.658,21,0.006,23,0.435,29,0.206,32,1.5,37,0.153,40,0.8,58,0.005,59,0.005,127,1.608,157,4.305,546,4.001,605,2.732,607,3.109,615,1.983,722,3.291,896,5.798,897,8.972,898,6.101,899,5.101,900,4.768,901,5.273,902,8.316,903,8.316,904,6.821,905,6.821,906,4.755,907,6.429,908,6.821,909,3.825]],["title/controllers/AuthController.html",[485,1.661,910,4.157]],["body/controllers/AuthController.html",[0,0.187,1,3.115,3,0.092,4,0.076,5,0.082,7,0.284,9,1.263,11,0.934,12,2.712,15,1.283,18,0.619,20,1.958,21,0.006,22,1.386,23,0.449,29,0.231,30,1.802,32,0.956,36,0.738,37,0.097,40,0.669,55,1.135,56,1.795,58,0.003,59,0.003,65,0.945,72,1.323,74,1.042,77,1.569,78,2.415,94,1.987,127,1.511,152,1.702,157,4.567,164,3.815,165,4.792,170,1.388,196,2.662,238,2.343,251,2.517,287,4.836,372,1.303,457,2.332,485,1.433,487,1.433,489,2.043,494,4.222,495,4.509,499,4.748,522,1.915,525,2.442,527,2.249,530,2.373,570,4.293,705,2.969,739,3.359,741,4.937,762,5.217,825,3.886,910,5.092,911,4.345,912,3.584,913,5.521,914,6.172,915,6.172,916,4.345,917,6.455,918,4.345,919,5.521,920,6.172,921,5.217,922,4.345,923,4.345,924,4.792,925,4.345,926,5.092,927,2.902,928,6.991,929,6.172,930,4.345,931,4.345,932,4.345,933,4.516,934,2.838,935,5.092,936,4.345,937,4.345,938,4.035,939,4.345,940,6.172,941,2.418,942,3.195,943,3.371,944,6.172,945,4.345,946,4.345,947,4.345,948,3.691,949,3.179,950,2.9,951,7.178,952,4.345,953,4.345,954,3.359,955,4.345,956,4.345,957,4.345,958,4.345,959,4.345,960,6.991,961,4.345,962,4.345,963,4.345,964,4.345,965,4.345,966,6.172,967,5.521,968,6.172,969,4.345,970,6.172,971,4.345,972,3.886,973,4.345,974,4.345,975,4.345,976,4.345,977,4.345,978,4.345]],["title/modules/AuthModule.html",[166,1.511,979,3.513]],["body/modules/AuthModule.html",[0,0.246,3,0.121,4,0.1,5,0.107,21,0.006,29,0.243,36,0.968,37,0.128,58,0.004,59,0.004,78,1.888,83,5.49,103,3.205,166,2.477,487,2.449,635,6.212,636,2.413,637,2.513,638,2.623,639,2.623,640,2.623,641,3.718,642,3.799,646,3.416,647,2.32,648,2.623,654,4.211,657,4.175,813,6.387,843,5.178,910,6.816,948,5.941,950,3.807,979,7.019,980,5.101,981,5.101,982,5.101,983,5.101,984,6.212,985,7.194,986,7.194,987,5.703,988,5.703,989,5.101,990,4.705,991,5.703,992,5.101,993,5.703,994,4.705,995,4.172,996,5.703,997,5.703,998,5.101,999,5.703,1000,5.703,1001,5.703,1002,5.703]],["title/injectables/AuthService.html",[136,1.226,948,3.014]],["body/injectables/AuthService.html",[0,0.109,3,0.054,4,0.045,5,0.077,7,0.165,8,0.466,9,2.768,10,1.754,11,0.986,12,2.967,15,1.208,18,0.716,20,1.83,21,0.006,22,1.296,23,0.447,25,1.842,29,0.222,30,1.05,36,0.43,37,0.057,40,0.786,42,0.877,43,0.835,44,0.974,53,1.349,55,1.1,56,1.962,58,0.002,59,0.002,65,0.627,66,3.219,67,1.691,68,5.727,72,1.8,73,4.52,74,2.168,75,1.924,76,1.924,77,1.04,78,2.349,87,2.156,88,1.247,89,1.191,90,1.247,91,1.247,92,1.247,94,1.857,100,1.218,101,1.567,102,1.423,106,2.016,112,1.328,122,1.693,123,1.311,136,0.996,137,1.03,157,2.665,162,2.543,164,1.346,165,1.691,170,1.762,192,1.911,196,2.559,200,2.507,206,1.218,238,2.631,287,2.532,300,1.467,372,0.759,373,2.985,377,2.552,378,4.165,388,2.446,412,2.746,415,2.118,427,4.52,428,1.958,434,1.191,445,1.567,481,1.567,576,1.14,651,2.089,665,2.089,666,2.089,705,2.477,719,1.515,723,3.376,755,3.376,886,1.958,887,1.958,888,1.625,890,1.515,893,1.958,894,1.853,913,3.66,917,5.563,924,2.732,938,4.802,948,2.447,954,1.958,972,7.643,995,1.853,1003,2.532,1004,5.149,1005,5.149,1006,5.149,1007,5.149,1008,5.149,1009,5.149,1010,4.092,1011,5.149,1012,4.092,1013,4.092,1014,4.092,1015,4.52,1016,7.305,1017,4.092,1018,4.092,1019,2.532,1020,4.092,1021,2.532,1022,2.532,1023,2.532,1024,4.092,1025,2.532,1026,2.532,1027,4.092,1028,2.532,1029,4.092,1030,2.532,1031,1.423,1032,3.059,1033,3.376,1034,2.532,1035,5.648,1036,2.532,1037,4.092,1038,4.092,1039,2.532,1040,4.092,1041,4.092,1042,4.092,1043,2.532,1044,2.532,1045,3.376,1046,3.163,1047,1.853,1048,2.853,1049,2.532,1050,2.532,1051,1.958,1052,3.66,1053,2.265,1054,2.532,1055,1.311,1056,2.089,1057,3.66,1058,3.376,1059,2.532,1060,2.532,1061,1.625,1062,1.958,1063,2.532,1064,1.958,1065,2.089,1066,4.092,1067,2.532,1068,2.532,1069,2.532,1070,2.532,1071,2.532,1072,2.532,1073,2.265,1074,2.265,1075,2.532,1076,2.532,1077,2.532,1078,2.532,1079,4.092,1080,2.532,1081,4.571,1082,2.532,1083,3.98,1084,2.532,1085,5.149,1086,2.532,1087,2.532,1088,2.532,1089,2.532,1090,2.532,1091,2.532,1092,4.092,1093,2.532,1094,2.532,1095,4.092,1096,2.532,1097,2.532,1098,3.66,1099,2.532,1100,2.532,1101,2.532,1102,2.532,1103,1.853,1104,2.532,1105,2.532,1106,4.092,1107,2.532,1108,2.532,1109,4.092,1110,1.958,1111,3.98,1112,2.532,1113,2.532,1114,3.163,1115,4.092,1116,5.912,1117,5.149,1118,2.532,1119,2.532,1120,2.532,1121,2.532,1122,2.532,1123,4.092,1124,2.532,1125,2.532,1126,2.532,1127,2.532,1128,2.532,1129,2.265,1130,4.092,1131,2.532,1132,2.532,1133,2.532,1134,2.532]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.379,1135,4.157]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.103,4,0.085,5,0.091,7,0.318,8,0.76,11,1.159,21,0.006,22,1.353,23,0.476,29,0.121,37,0.171,38,1.828,40,0.849,41,2.688,42,1.685,43,1.604,44,1.871,58,0.004,59,0.004,60,2.058,121,2.77,122,2.351,134,1.292,179,4.362,188,4.276,285,2.943,315,5.723,388,3.354,394,1.838,434,2.287,546,3.213,576,3.005,727,4.458,847,5.509,865,4.655,1032,3.791,1135,5.509,1136,4.012,1137,4.012,1138,7.032,1139,7.343,1140,7.343,1141,7.343,1142,7.343,1143,7.343,1144,7.098,1145,8.294,1146,5.973,1147,6.773,1148,5.973,1149,7.333,1150,4.886,1151,8.415,1152,5.973,1153,5.973,1154,5.509,1155,5.973,1156,5.973,1157,5.163,1158,5.973,1159,4.886,1160,5.973,1161,5.973,1162,5.973,1163,5.973,1164,3.009,1165,3.558,1166,4.012,1167,4.012,1168,4.012]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.379,1168,4.157]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.118,4,0.098,5,0.104,7,0.363,8,0.832,21,0.006,22,1.296,23,0.453,29,0.138,37,0.183,38,2,40,0.848,41,2.658,42,1.926,43,1.833,44,2.139,58,0.004,59,0.004,60,2.352,121,2.306,122,2.092,134,1.477,179,5.006,188,4.446,285,2.45,315,5.093,388,3.172,394,2.761,434,2.614,546,2.675,576,2.502,727,5.786,847,4.587,865,3.876,1135,4.587,1136,4.587,1137,4.587,1138,7.139,1139,4.973,1140,4.973,1141,4.973,1142,4.973,1143,4.973,1144,6.732,1145,7.753,1146,4.973,1147,6.028,1148,4.973,1149,7.976,1150,4.068,1151,8.266,1152,4.973,1153,4.973,1154,4.587,1155,4.973,1156,4.973,1157,4.298,1158,4.973,1159,4.068,1160,4.973,1161,4.973,1162,4.973,1163,4.973,1164,3.44,1165,4.068,1166,4.587,1167,4.587,1168,6.028]],["title/interfaces/BackendResultInfoInterface.html",[38,1.379,1169,4.157]],["body/interfaces/BackendResultInfoInterface.html",[3,0.15,4,0.124,5,0.133,7,0.461,8,0.967,11,1.13,21,0.005,23,0.476,37,0.19,38,2.325,40,0.81,41,2.791,58,0.005,59,0.005,60,2.99,200,3.117,261,3.57,431,3.018,442,2.821,695,5.602,1169,7.798,1170,5.83,1171,5.463,1172,5.17,1173,4.372,1174,6.321]],["title/interfaces/BackendResultInterface.html",[38,1.379,1172,3.687]],["body/interfaces/BackendResultInterface.html",[3,0.147,4,0.122,5,0.131,7,0.455,8,0.959,11,1.125,21,0.006,23,0.492,37,0.188,38,2.305,40,0.806,41,2.777,58,0.005,59,0.005,60,2.946,200,2.296,261,2.728,431,2.223,442,3.755,695,5.579,1169,8.169,1170,5.745,1171,5.383,1172,6.161,1173,5.82,1174,8.413]],["title/classes/BackendsCommand.html",[0,0.217,1175,3.895]],["body/classes/BackendsCommand.html",[0,0.328,2,0.906,3,0.125,4,0.104,5,0.111,7,0.386,9,1.72,11,0.909,12,3.658,15,2.245,18,0.602,20,1.905,21,0.006,22,1.574,23,0.398,29,0.209,30,2.454,37,0.17,40,0.76,42,2.635,43,2.508,44,2.926,45,3.746,46,3.937,55,0.989,58,0.004,59,0.004,65,1.165,72,1.801,74,1.418,77,1.933,78,2.334,94,1.503,170,1.471,192,3.294,196,2.482,238,1.773,284,3.66,319,1.46,328,2.985,372,2.28,417,4.881,418,5.395,422,4.881,423,3.66,424,3.66,434,3.576,435,4.706,436,4.706,437,5.395,446,3.796,448,3.426,480,5.078,481,3.66,484,4.123,938,3.324,1175,5.88,1176,5.291,1177,5.915,1178,5.915,1179,5.028,1180,4.327,1181,5.291,1182,6.275,1183,4.88,1184,5.291,1185,5.291,1186,3.796]],["title/controllers/BackendsController.html",[485,1.661,1187,4.157]],["body/controllers/BackendsController.html",[0,0.149,3,0.073,4,0.061,5,0.065,7,0.225,9,1.001,10,1.774,11,0.898,15,1.017,18,0.554,20,1.752,21,0.006,22,1.24,23,0.366,25,1.55,29,0.225,32,0.758,36,0.585,37,0.077,39,2.383,40,0.836,41,1.852,53,2.476,55,1.09,56,1.939,58,0.003,59,0.003,72,1.585,73,3.882,74,1.248,77,1.323,78,2.462,94,1.777,100,1.657,101,2.131,102,1.936,106,1.696,108,4.182,116,2.06,127,1.352,133,1.429,134,0.915,152,1.349,162,1.349,170,1.671,196,2.064,200,2.704,225,3.113,235,4.656,238,1.881,304,3.34,319,0.85,373,1.584,377,1.487,431,1.662,442,2.078,485,1.136,487,1.136,489,1.619,494,4.119,495,4.72,499,4.632,522,1.518,525,1.936,527,1.783,701,4.024,739,2.662,741,4.491,762,4.668,933,3.808,934,2.394,943,2.843,967,3.081,1031,1.936,1046,4.024,1048,3.629,1164,2.131,1173,3.221,1179,3.753,1183,2.841,1186,2.21,1187,4.294,1188,3.444,1189,5.612,1190,6.274,1191,4.656,1192,5.612,1193,3.444,1194,5.769,1195,8.642,1196,6.274,1197,6.274,1198,6.274,1199,6.716,1200,3.444,1201,4.656,1202,5.205,1203,3.444,1204,3.444,1205,3.444,1206,4.656,1207,5.205,1208,5.205,1209,3.716,1210,3.015,1211,2.447,1212,5.205,1213,4.656,1214,4.294,1215,3.444,1216,3.444,1217,3.444,1218,6.993,1219,4.294,1220,5.205,1221,4.656,1222,3.444,1223,3.444,1224,5.769,1225,3.444,1226,2.766,1227,4.024,1228,3.081,1229,3.444,1230,5.205,1231,3.444,1232,5.205,1233,3.081,1234,3.444,1235,3.444,1236,3.081,1237,3.444,1238,3.444,1239,2.299,1240,2.841,1241,1.995,1242,6.993,1243,5.205,1244,6.274,1245,3.444,1246,3.444,1247,5.205,1248,2.841,1249,3.808,1250,3.444,1251,3.444,1252,3.444,1253,3.444,1254,3.444,1255,3.081,1256,6.274,1257,6.274,1258,3.444,1259,5.612,1260,3.444,1261,3.444,1262,3.444,1263,3.444,1264,3.444,1265,3.444,1266,3.444,1267,3.081,1268,3.808,1269,3.444,1270,3.808,1271,3.444,1272,3.629,1273,3.444,1274,3.34,1275,3.444,1276,3.444,1277,3.444,1278,3.444,1279,3.444,1280,3.444,1281,3.444,1282,3.444,1283,3.444,1284,3.444,1285,3.444,1286,3.444,1287,5.205,1288,3.081,1289,3.444,1290,3.444,1291,3.444,1292,3.444,1293,4.294,1294,3.444,1295,3.444,1296,3.629,1297,3.444]],["title/modules/BackendsModule.html",[166,1.511,1298,3.234]],["body/modules/BackendsModule.html",[0,0.273,3,0.134,4,0.111,5,0.119,21,0.006,29,0.241,36,1.073,37,0.141,58,0.004,59,0.004,103,3.551,166,2.599,487,2.615,636,2.673,637,2.784,638,2.905,639,2.905,640,2.905,641,3.902,642,3.987,646,3.647,647,2.57,648,2.905,654,3.816,813,6.131,1179,6.026,1187,7.152,1236,5.651,1298,6.493,1299,5.651,1300,5.651,1301,5.651,1302,5.651,1303,6.134,1304,6.664,1305,6.664,1306,6.318,1307,6.318,1308,6.318,1309,5.651,1310,5.651]],["title/injectables/BackendsService.html",[136,1.226,1179,3.014]],["body/injectables/BackendsService.html",[0,0.095,3,0.046,4,0.039,5,0.041,7,0.143,8,0.414,9,2.427,10,1.587,11,0.859,12,2.904,15,1.073,18,0.65,20,1.358,21,0.006,22,1.066,23,0.412,25,2.705,29,0.21,30,0.909,36,0.372,37,0.049,39,1.239,40,0.399,42,0.759,43,0.723,44,0.843,45,1.08,46,1.134,53,2.892,55,1.009,56,1.488,58,0.002,59,0.002,63,5.554,65,0.557,66,2.389,68,4.472,69,3.252,70,1.791,71,3.843,72,1.651,73,2.882,74,0.872,75,1.709,76,1.709,77,0.924,78,2.153,79,2.81,83,1.27,87,2.719,88,1.08,89,1.031,90,1.08,91,1.08,92,1.08,94,1.378,97,1.528,106,3.193,121,1.508,124,1.76,133,0.909,134,0.582,136,0.884,137,0.892,162,2.69,167,1.603,170,1.784,187,1.27,192,2.767,196,1.913,223,3.601,225,1.311,238,2.766,285,0.966,297,3.539,304,3.857,315,5.618,319,1.695,328,3.762,372,0.657,373,1.672,377,1.569,387,2.786,431,1.919,434,1.031,435,1.356,436,1.356,442,3.279,454,4.468,480,1.463,481,1.356,494,2.856,522,0.966,546,1.054,576,0.986,695,3.14,736,2.786,938,4.616,1031,4.432,1064,1.694,1073,1.96,1179,2.174,1189,4.167,1191,4.167,1192,3.252,1210,3.755,1239,4.976,1240,1.808,1241,1.27,1249,4.398,1272,2.534,1274,4.784,1288,3.252,1293,4.472,1296,3.779,1311,2.192,1312,4.406,1313,4.786,1314,4.786,1315,2.192,1316,2.192,1317,5.357,1318,6.34,1319,2.192,1320,2.192,1321,3.635,1322,2.192,1323,3.635,1324,2.192,1325,2.192,1326,2.192,1327,2.192,1328,2.192,1329,2.66,1330,3.635,1331,3.635,1332,1.96,1333,1.197,1334,1.603,1335,4.596,1336,2.192,1337,2.192,1338,2.999,1339,2.192,1340,6.482,1341,2.192,1342,2.192,1343,3.247,1344,2.192,1345,2.192,1346,2.192,1347,2.192,1348,3.635,1349,2.192,1350,2.192,1351,2.192,1352,1.528,1353,2.192,1354,3.635,1355,2.192,1356,2.192,1357,2.192,1358,2.192,1359,3.635,1360,2.192,1361,3.635,1362,5.421,1363,3.857,1364,6.011,1365,3.619,1366,6.865,1367,5.377,1368,2.192,1369,2.192,1370,4.658,1371,2.192,1372,4.658,1373,2.192,1374,2.192,1375,4.658,1376,4.658,1377,2.192,1378,6.865,1379,2.192,1380,1.808,1381,3.635,1382,3.252,1383,1.96,1384,2.192,1385,3.635,1386,2.192,1387,2.192,1388,3.635,1389,2.192,1390,2.192,1391,2.192,1392,2.192,1393,2.192,1394,2.192,1395,3.635,1396,2.192,1397,3.619,1398,4.19,1399,3.635,1400,3.635,1401,6.482,1402,2.192,1403,5.421,1404,2.192,1405,2.192,1406,3.635,1407,4.658,1408,3.252,1409,2.192,1410,2.192,1411,2.192,1412,3.635,1413,2.192,1414,1.96,1415,2.249,1416,1.96,1417,2.192,1418,2.192,1419,2.192,1420,2.192,1421,2.192,1422,2.192,1423,3.635,1424,3.635,1425,2.192,1426,2.192,1427,3.635,1428,4.658,1429,2.192,1430,2.192,1431,1.463,1432,2.192,1433,2.192,1434,1.356,1435,2.192,1436,2.192,1437,1.96,1438,4.658,1439,4.658,1440,2.192,1441,1.96,1442,2.192,1443,1.694,1444,3.635,1445,2.192,1446,4.658,1447,3.635,1448,2.192,1449,2.192,1450,5.421,1451,1.603,1452,2.192,1453,2.192,1454,2.192,1455,3.635,1456,2.192,1457,2.192,1458,1.808,1459,2.192,1460,2.192,1461,2.192,1462,2.192,1463,2.192,1464,2.192,1465,2.192]],["title/classes/BackendsSyncallCommand.html",[0,0.217,1182,4.157]],["body/classes/BackendsSyncallCommand.html",[0,0.327,2,0.9,3,0.124,4,0.103,5,0.11,7,0.384,9,1.707,11,0.905,12,3.653,15,2.235,18,0.599,20,1.897,21,0.006,22,1.57,23,0.396,29,0.208,30,2.436,37,0.169,40,0.758,42,2.623,43,2.496,44,2.913,45,3.729,46,3.919,55,0.986,58,0.004,59,0.004,65,1.16,72,1.788,74,1.408,77,1.925,78,2.329,94,1.493,170,1.464,192,3.285,196,2.474,238,1.761,284,3.634,319,1.45,328,2.964,372,2.27,417,4.859,418,5.377,422,4.859,423,3.634,424,3.634,434,3.56,435,4.685,436,4.685,437,5.377,446,3.769,448,3.402,480,5.054,481,3.634,484,4.094,938,3.301,1175,4.54,1176,5.253,1179,5.707,1180,4.297,1181,5.253,1182,6.913,1183,4.845,1184,5.253,1185,5.253,1186,3.769,1466,5.873,1467,5.873]],["title/classes/ChangePasswordDto.html",[0,0.217,1468,3.513]],["body/classes/ChangePasswordDto.html",[0,0.339,2,0.952,3,0.131,4,0.109,5,0.117,7,0.406,8,0.893,18,0.681,21,0.006,23,0.516,29,0.195,32,1.366,37,0.139,40,0.861,53,2.587,55,1.161,58,0.004,59,0.004,127,1.663,157,4.062,261,3.075,412,3.823,546,3.775,605,2.752,607,3.131,615,1.806,722,3.354,900,4.571,906,5.997,907,6.067,909,3.956,1468,5.471,1469,9.037,1470,5.556,1471,5.997,1472,8.602,1473,7.019,1474,6.212,1475,7.847,1476,7.847,1477,6.212,1478,6.212]],["title/interfaces/CipherData.html",[38,1.379,1479,3.895]],["body/interfaces/CipherData.html",[0,0.081,3,0.04,4,0.033,5,0.035,7,0.123,8,0.363,9,1.428,15,0.554,18,0.149,21,0.006,23,0.167,24,1.696,29,0.221,36,0.319,37,0.042,38,0.874,39,0.64,40,0.622,41,0.942,53,2.633,55,0.939,56,1.865,58,0.002,59,0.002,60,0.794,65,0.288,66,1.407,70,0.925,72,1.496,73,3.039,74,1.612,78,1.949,83,1.849,100,1.536,101,1.162,102,1.055,103,1.055,106,3.934,112,1.977,136,0.777,139,2.779,170,1.823,196,1.768,203,1.955,222,1.451,238,2.673,251,1.088,319,1.66,328,1.611,372,0.563,373,3.092,377,2.585,378,4.658,380,1.309,408,0.972,412,3.071,431,1.758,442,2.799,452,1.468,494,2.165,522,0.827,554,3.007,562,2.426,576,2.875,647,1.694,705,4.289,736,3.581,754,4.028,791,2.335,833,1.451,834,1.374,849,2.335,888,1.205,890,1.123,896,1.309,899,4.669,900,4.316,921,1.253,927,3.413,934,3.092,938,3.094,941,3.577,942,2.543,943,1.025,1047,3.047,1048,2.225,1061,1.205,1083,2.468,1110,2.468,1111,3.219,1114,1.451,1173,1.975,1179,1.909,1180,1.374,1186,1.205,1209,0.998,1210,1.088,1211,1.501,1226,2.61,1239,1.253,1241,1.088,1268,3.047,1270,3.047,1272,2.903,1274,2.672,1312,2.048,1333,1.025,1334,1.374,1335,3.82,1365,3.279,1415,1.162,1443,2.468,1468,2.225,1471,2.225,1479,2.468,1480,1.549,1481,1.549,1482,1.549,1483,1.549,1484,1.451,1485,1.451,1486,1.451,1487,2.468,1488,2.225,1489,1.451,1490,1.549,1491,1.549,1492,1.549,1493,2.633,1494,1.253,1495,2.335,1496,1.374,1497,1.549,1498,1.309,1499,1.451,1500,5.23,1501,1.451,1502,2.491,1503,1.374,1504,1.309,1505,1.451,1506,2.78,1507,1.451,1508,2.131,1509,1.374,1510,1.374,1511,4.256,1512,5.198,1513,4.052,1514,2.468,1515,1.253,1516,1.549,1517,1.549,1518,1.549,1519,1.451,1520,1.549,1521,1.549,1522,1.549,1523,1.549,1524,1.549,1525,1.549,1526,1.549,1527,1.549,1528,1.374,1529,3.435,1530,4.502,1531,5.129,1532,4.846,1533,2.633,1534,1.909,1535,2.412,1536,2.577,1537,1.451,1538,2.048,1539,1.549,1540,4.441,1541,1.549,1542,1.549,1543,1.549,1544,4.938,1545,4.94,1546,4.629,1547,5.547,1548,1.549,1549,1.549,1550,1.549,1551,1.549,1552,2.633,1553,2.633,1554,2.633,1555,3.435,1556,4.542,1557,3.435,1558,1.549,1559,1.549,1560,1.549,1561,2.633,1562,1.549,1563,3.435,1564,2.633,1565,1.549,1566,2.633,1567,2.633,1568,2.633,1569,2.225,1570,1.549,1571,1.549,1572,4.673,1573,2.468,1574,3.779,1575,2.633,1576,4.846,1577,2.335,1578,2.335,1579,4.028,1580,4.542,1581,3.838,1582,2.225,1583,1.451,1584,1.451,1585,1.549,1586,1.549,1587,1.549,1588,2.633,1589,1.549,1590,1.549,1591,2.633,1592,5.784,1593,4.052,1594,2.633,1595,1.549,1596,2.225,1597,1.549,1598,1.549,1599,3.675,1600,1.549,1601,1.205,1602,1.549,1603,1.549,1604,1.549,1605,1.549,1606,1.549,1607,1.549,1608,1.549,1609,1.549,1610,1.374,1611,1.025,1612,1.549,1613,1.549,1614,1.549,1615,1.549,1616,1.549,1617,1.549,1618,1.451,1619,1.451,1620,1.549,1621,1.549,1622,2.633,1623,1.549,1624,1.549,1625,1.374,1626,1.253,1627,1.374,1628,1.549,1629,1.549,1630,2.633,1631,1.451,1632,1.451,1633,1.549,1634,5.547,1635,2.633,1636,2.468,1637,1.378,1638,1.451,1639,1.309,1640,1.549,1641,1.549,1642,1.549,1643,2.213,1644,3.435,1645,1.549,1646,1.549,1647,1.549,1648,1.549,1649,1.549,1650,1.451,1651,1.549,1652,1.549,1653,1.549,1654,2.633,1655,1.309,1656,1.549,1657,1.549,1658,1.549,1659,2.468,1660,1.549,1661,1.549,1662,1.549,1663,3.435,1664,1.549,1665,1.549,1666,1.451,1667,4.542,1668,1.549,1669,1.451,1670,0.972,1671,1.549,1672,1.549,1673,1.549,1674,1.549,1675,1.549,1676,1.549,1677,1.374,1678,2.633,1679,1.549,1680,1.549,1681,1.549,1682,2.633,1683,2.633,1684,3.435,1685,2.633,1686,1.549,1687,2.633,1688,2.633,1689,2.633,1690,2.633,1691,1.549,1692,1.549,1693,1.549,1694,1.549,1695,2.633,1696,2.633,1697,2.633,1698,2.633,1699,2.633,1700,2.633,1701,2.633,1702,2.633,1703,2.633,1704,2.633,1705,1.549,1706,1.549,1707,1.549,1708,1.549,1709,1.549,1710,1.549,1711,1.549,1712,1.549,1713,1.549,1714,1.549,1715,1.549,1716,1.549,1717,1.549,1718,1.549,1719,1.549,1720,1.549,1721,3.435,1722,3.152,1723,2.633,1724,2.633,1725,2.633,1726,2.633,1727,1.549,1728,2.633,1729,2.633,1730,4.052,1731,2.633,1732,2.633,1733,2.633,1734,2.633,1735,2.468,1736,1.451,1737,1.549,1738,1.549,1739,1.549,1740,1.549,1741,1.549,1742,1.451,1743,1.549,1744,1.549,1745,1.549,1746,1.549,1747,1.549,1748,1.549,1749,1.549]],["title/modules/CliModule.html",[166,1.511,1750,3.895]],["body/modules/CliModule.html",[0,0.224,3,0.11,4,0.091,5,0.097,21,0.006,23,0.271,29,0.247,36,0.881,37,0.116,56,1.192,58,0.004,59,0.004,70,4.334,78,2.004,83,5.453,100,2.496,101,3.21,102,2.916,103,2.916,116,3.103,132,1.556,134,1.854,166,2.364,170,1.003,192,1.926,319,1.281,401,5.105,447,3.617,635,6.049,636,2.195,637,2.286,638,2.386,639,2.386,640,2.386,641,3.14,642,2.386,646,3.209,647,2.111,648,2.386,650,3.006,654,4.233,657,4.432,658,4.641,687,3.33,749,3.103,811,4.641,812,4.281,813,6.519,816,3.796,817,3.464,818,4.641,819,4.011,839,4.641,840,4.641,841,4.641,843,5.496,854,4.641,855,6.242,856,4.641,857,4.641,858,4.641,859,4.641,860,4.641,861,4.641,862,3.33,863,4.641,864,4.641,865,3.617,866,4.641,867,4.641,868,4.641,869,4.641,870,4.011,871,4.641,979,6.317,984,6.049,992,4.641,1175,4.011,1298,5.815,1750,7.57,1751,4.641,1752,5.189,1753,5.189,1754,5.189,1755,3.796,1756,5.105,1757,5.189,1758,5.189,1759,5.189,1760,4.281,1761,5.189,1762,5.189,1763,5.189]],["title/classes/ConcernedToPart.html",[0,0.217,1764,4.157]],["body/classes/ConcernedToPart.html",[0,0.274,2,0.973,3,0.134,4,0.112,5,0.119,7,0.415,8,0.906,11,0.952,18,0.688,21,0.006,22,1.542,23,0.501,29,0.197,37,0.178,40,0.841,55,1.165,58,0.004,59,0.004,65,0.973,112,1.639,121,3.302,122,1.819,124,3.284,127,1.681,128,4.087,131,4.284,132,1.905,133,2.636,134,1.688,167,6.359,170,1.229,203,1.847,319,2.249,391,3.266,394,3.007,395,3.057,546,4.182,1764,6.566,1765,9.111,1766,6.354,1767,6.354,1768,6.354,1769,6.354,1770,5.683,1771,6.354]],["title/classes/ConcernedToPartDTO.html",[0,0.217,1772,3.687]],["body/classes/ConcernedToPartDTO.html",[0,0.352,2,1.012,3,0.14,4,0.116,5,0.124,7,0.431,8,0.928,11,0.975,18,0.7,21,0.006,22,1.569,23,0.463,29,0.219,32,1.453,37,0.148,40,0.791,55,1.173,58,0.004,59,0.004,124,3.081,127,1.71,133,2.74,134,1.755,167,6.471,546,4.255,585,4.605,593,4.832,605,2.813,607,3.065,608,4.221,613,4.333,614,3.318,615,1.92,1772,5.966,1773,9.237,1774,6.605,1775,6.605,1776,5.449,1777,6.605,1778,6.605]],["title/interfaces/ConfigInstance.html",[38,1.379,1779,4.157]],["body/interfaces/ConfigInstance.html",[3,0.118,4,0.066,5,0.071,7,0.246,8,0.633,21,0.006,23,0.526,29,0.215,32,0.828,37,0.148,38,1.523,39,1.283,40,0.832,41,1.112,42,1.305,43,1.242,44,1.449,45,1.855,46,1.95,47,2.626,58,0.003,59,0.003,60,1.593,70,3.26,102,4.589,112,0.971,132,1.129,134,2.072,157,1.95,162,1.476,192,3.466,287,2.33,319,1.634,387,2.253,388,1.961,412,2.354,457,3.687,475,5.349,528,3.328,590,1.771,687,4.691,719,3.328,749,3.328,753,2.912,757,2.912,761,5.973,816,4.072,817,3.715,819,4.302,838,4.302,862,4.691,870,4.302,881,2.626,924,5.45,950,2.514,990,4.591,994,4.591,995,2.756,1055,2.881,1065,3.107,1103,2.756,1150,2.756,1528,5.707,1536,4.826,1625,4.072,1779,5.46,1780,3.369,1781,5.437,1782,6.977,1783,6.977,1784,6.735,1785,5.707,1786,6.539,1787,4.978,1788,4.978,1789,4.978,1790,4.591,1791,3.88,1792,4.591,1793,4.591,1794,4.302,1795,4.978,1796,4.978,1797,5.92,1798,4.978,1799,4.591,1800,4.591,1801,4.591,1802,4.978,1803,3.369,1804,3.369,1805,3.369,1806,3.369,1807,3.107,1808,3.369,1809,7.555,1810,3.369,1811,3.369,1812,3.369,1813,3.369,1814,3.369,1815,3.369,1816,3.369,1817,3.369,1818,3.369,1819,3.369,1820,3.369,1821,3.369,1822,3.369,1823,4.978,1824,4.978,1825,3.369,1826,3.369,1827,3.369,1828,3.369,1829,3.369,1830,3.369,1831,3.369,1832,3.369,1833,3.369,1834,3.369,1835,3.369,1836,3.369,1837,3.369,1838,3.369,1839,3.369,1840,3.369,1841,3.369,1842,3.369,1843,3.369,1844,3.369,1845,3.369,1846,3.369,1847,3.369,1848,3.369,1849,3.369]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.217,1850,3.895]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.402,2,0.95,3,0.131,4,0.109,5,0.116,7,0.405,8,0.892,18,0.715,21,0.006,22,1.602,23,0.52,29,0.213,37,0.192,40,0.828,58,0.004,59,0.004,127,1.746,319,1.935,384,4.406,385,3.485,391,3.081,590,3.686,607,3.387,609,4.338,611,4.831,615,1.803,616,2.916,621,4.165,1850,6.981,1851,5.115,1852,7.45,1853,6.2,1854,6.2,1855,6.2,1856,6.644,1857,6.2,1858,6.2,1859,6.466,1860,3.129,1861,5.115,1862,5.115,1863,6.644,1864,4.322]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.217,1863,3.895]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.404,2,0.968,3,0.134,4,0.111,5,0.119,7,0.413,8,0.903,18,0.686,21,0.006,22,1.613,23,0.507,29,0.215,37,0.194,40,0.84,58,0.004,59,0.004,127,1.676,319,1.958,384,5.11,385,3.551,391,2.265,590,2.971,607,3.399,609,4.376,611,4.458,615,1.837,616,2.971,621,4.215,1850,6.702,1851,5.212,1852,7.501,1856,6.131,1859,7.152,1860,3.189,1861,5.212,1862,5.212,1863,7.029,1864,4.404,1865,6.318,1866,6.318,1867,6.318]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.217,1864,3.513]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.406,2,0.983,3,0.136,4,0.113,5,0.12,7,0.419,8,0.911,18,0.634,21,0.006,22,1.42,23,0.502,29,0.217,37,0.195,40,0.806,58,0.004,59,0.004,127,1.548,319,1.977,384,5.138,385,4.907,391,2.299,590,3.016,607,3.325,609,4.406,611,4.501,615,1.865,616,3.016,621,4.255,1850,7.068,1851,5.292,1852,6.606,1856,6.19,1859,6.606,1860,3.238,1861,5.292,1862,5.292,1863,7.068,1864,5.582,1868,6.606,1869,6.606,1870,6.415,1871,6.415]],["title/classes/ConsoleSession.html",[0,0.217,1058,4.157]],["body/classes/ConsoleSession.html",[0,0.286,2,1.016,3,0.14,4,0.117,5,0.124,7,0.433,8,0.93,15,2.616,18,0.732,21,0.006,23,0.463,37,0.148,40,0.829,55,1.188,58,0.004,59,0.004,74,2.393,122,2.537,388,3.122,415,4.587,452,4.075,704,5.932,709,5.932,710,7.311,711,5.932,1032,3.905,1058,6.743,1352,6.448,1872,9.5,1873,8.174]],["title/controllers/CoreController.html",[485,1.661,1874,4.157]],["body/controllers/CoreController.html",[0,0.32,3,0.157,4,0.131,5,0.139,21,0.006,29,0.231,32,1.634,36,1.261,37,0.166,55,0.874,58,0.005,59,0.005,74,1.781,485,2.449,487,2.449,489,3.493,527,3.845,556,3.493,557,4.057,1874,7.221,1875,7.428,1876,6.644,1877,6.404,1878,6.644,1879,7.428,1880,7.428]],["title/modules/CoreModule.html",[166,1.511,807,3.687]],["body/modules/CoreModule.html",[0,0.235,3,0.115,4,0.096,5,0.102,18,0.431,21,0.006,29,0.245,30,2.258,36,0.924,37,0.122,55,0.64,56,1.25,58,0.004,59,0.004,77,1.383,94,1.383,166,2.577,487,2.375,554,3.935,635,6.132,636,2.303,637,2.398,638,2.503,639,2.503,640,2.503,641,3.634,642,2.503,646,3.313,647,2.214,648,2.503,654,3.885,807,7.468,979,6.404,984,6.132,998,4.868,1055,2.817,1298,5.895,1304,6.404,1305,6.404,1309,4.868,1310,4.868,1874,6.662,1876,4.868,1877,6.721,1878,4.868,1881,4.868,1882,4.868,1883,4.868,1884,6.721,1885,6.721,1886,5.442,1887,6.662,1888,5.442,1889,6.662,1890,4.49,1891,5.442,1892,5.442,1893,5.442,1894,5.442,1895,5.442,1896,5.442,1897,4.49,1898,4.49,1899,4.49]],["title/injectables/CoreService.html",[136,1.226,1877,3.687]],["body/injectables/CoreService.html",[0,0.329,3,0.161,4,0.134,5,0.143,15,2.775,18,0.603,21,0.005,29,0.189,36,1.293,37,0.17,55,1.045,58,0.005,59,0.005,136,2.161,137,3.098,1877,6.497,1900,7.614,1901,7.614]],["title/classes/CustomFieldsDto.html",[0,0.217,584,2.678]],["body/classes/CustomFieldsDto.html",[0,0.368,2,1.092,3,0.151,4,0.125,5,0.134,7,0.465,8,0.972,11,1.021,18,0.564,21,0.006,23,0.447,29,0.212,37,0.159,39,2.428,40,0.61,55,1.076,58,0.005,59,0.005,127,1.378,396,4.016,397,3.429,398,3.429,451,5.297,457,2.693,584,4.538,603,4.41,609,4.31,614,3.475,615,2.072,1902,8.54,1903,7.127,1904,7.127,1905,4.108]],["title/classes/DataPart.html",[0,0.217,1906,4.157]],["body/classes/DataPart.html",[0,0.285,2,1.012,3,0.14,4,0.116,5,0.124,7,0.431,8,0.928,11,0.975,18,0.646,21,0.006,23,0.512,29,0.202,37,0.198,40,0.847,55,1.137,58,0.004,59,0.004,65,1.012,112,1.704,121,3.382,122,1.891,127,1.577,128,3.834,131,4.159,132,1.98,134,1.755,170,1.577,319,2.013,388,3.117,391,2.923,394,3.081,395,3.178,431,2.824,1906,6.727,1907,6.605,1908,6.605,1909,8.845,1910,6.605,1911,5.908,1912,6.605]],["title/injectables/DtoValidationPipe.html",[136,1.226,830,3.895]],["body/injectables/DtoValidationPipe.html",[0,0.211,3,0.103,4,0.086,5,0.092,7,0.319,9,1.42,10,1.664,11,0.914,15,1.442,18,0.605,20,1.915,21,0.006,22,1.356,23,0.4,29,0.19,30,2.026,36,0.83,37,0.109,38,1.337,39,1.664,40,0.704,53,1.611,55,1.092,56,1.889,58,0.004,59,0.004,65,1.026,74,1.171,77,1.703,78,1.943,94,1.703,123,4.257,136,1.63,137,1.988,139,4.6,152,1.914,170,1.59,181,2.297,196,1.977,238,1.465,253,3.776,319,1.654,372,1.465,386,4.805,388,1.721,431,2.138,442,3.052,489,3.867,522,2.153,562,2.153,576,3.014,736,4.006,830,5.909,843,3.405,941,1.914,1032,3.368,1061,3.135,1062,3.776,1415,3.023,1576,3.261,1913,7.357,1914,4.03,1915,6.837,1916,5.909,1917,7.343,1918,4.885,1919,4.885,1920,5.526,1921,6.785,1922,4.885,1923,5.991,1924,6.662,1925,4.885,1926,5.526,1927,4.37,1928,4.37,1929,4.37,1930,4.37,1931,4.37,1932,4.37,1933,4.901,1934,4.37,1935,4.298,1936,2.596,1937,4.37,1938,4.03,1939,4.37,1940,4.37,1941,4.37,1942,4.03,1943,4.37,1944,4.37,1945,4.37,1946,4.37,1947,4.37,1948,4.37,1949,5.991,1950,4.37,1951,4.37,1952,4.37,1953,4.37,1954,4.37,1955,4.37,1956,5.991,1957,4.37,1958,4.37,1959,4.37]],["title/classes/ErrorSchemaDto.html",[0,0.217,1960,4.507]],["body/classes/ErrorSchemaDto.html",[0,0.273,2,0.968,3,0.134,4,0.111,5,0.119,7,0.413,8,0.903,11,1.087,18,0.72,21,0.006,23,0.5,29,0.197,32,1.39,36,1.073,37,0.141,39,2.702,40,0.802,42,2.189,43,2.083,44,2.43,55,1.185,58,0.004,59,0.004,127,1.758,203,1.837,386,4.487,431,2.768,434,2.971,457,2.997,522,3.82,562,3.82,605,2.987,1415,3.909,1960,7.094,1961,9.366,1962,6.318,1963,8.669,1964,6.318,1965,6.318,1966,5.212,1967,6.318,1968,6.318,1969,2.727]],["title/classes/ExecuteJobDto.html",[0,0.217,1194,4.157]],["body/classes/ExecuteJobDto.html",[0,0.341,2,0.961,3,0.133,4,0.11,5,0.118,7,0.409,8,0.899,11,0.944,18,0.684,21,0.006,23,0.506,29,0.214,32,1.379,37,0.14,40,0.817,55,1.163,58,0.004,59,0.004,127,1.671,157,4.086,261,3.553,387,4.721,546,4.496,605,2.761,608,4.086,613,4.195,614,3.515,615,1.823,722,2.782,907,6.102,909,2.884,1031,4.856,1194,6.512,1239,5.767,1240,5.173,1241,3.632,1397,5.767,1860,3.165,1905,3.798,1970,9.067,1971,6.27,1972,6.27,1973,6.27,1974,6.27,1975,6.27,1976,5.173,1977,6.27,1978,6.27]],["title/interfaces/ExecuteJobOptions.html",[38,1.379,1318,4.157]],["body/interfaces/ExecuteJobOptions.html",[3,0.134,4,0.111,5,0.119,7,0.413,8,0.904,11,1.221,21,0.006,23,0.513,29,0.197,37,0.142,38,1.732,40,0.743,41,2.561,58,0.004,59,0.004,60,2.678,78,2.313,97,4.413,124,3.278,133,2.626,134,1.682,590,4.739,1199,8.138,1268,6.657,1270,6.657,1272,6.343,1274,6.014,1318,6.551,1398,6.343,1434,5.63,1979,6.33,1980,6.33,1981,9.098]],["title/classes/FileUploadDto.html",[0,0.217,1982,3.513]],["body/classes/FileUploadDto.html",[0,0.38,2,0.799,3,0.11,4,0.092,5,0.159,7,0.34,8,0.797,18,0.413,21,0.006,23,0.512,29,0.219,32,1.147,37,0.189,39,2.385,40,0.867,42,1.806,43,1.719,44,2.005,55,1.16,58,0.004,59,0.004,65,1.211,112,2.34,122,1.493,127,1.008,319,1.951,388,2.467,391,3.323,396,3.292,397,2.508,398,2.508,431,1.664,555,3.118,584,3.72,590,3.292,605,2.984,606,2.397,607,2.927,608,4.373,611,3.934,613,4.2,614,3.772,615,1.516,619,2.93,620,2.93,773,3.48,1055,4.091,1241,3.02,1860,2.631,1905,3.802,1969,2.25,1982,4.88,1983,4.03,1984,4.663,1985,4.88,1986,5.121,1987,5.213,1988,5.412,1989,3.814,1990,4.88,1991,5.121,1992,3.814,1993,4.88,1994,4.03,1995,4.03,1996,3.634,1997,4.03,1998,3.634,1999,4.03,2000,3.814,2001,3.48,2002,5.412,2003,3.814,2004,3.634,2005,3.634,2006,4.03]],["title/classes/Filestorage.html",[0,0.217,2007,3.687]],["body/classes/Filestorage.html",[0,0.197,2,0.699,3,0.097,4,0.08,5,0.12,7,0.298,8,0.727,11,1.124,18,0.735,21,0.006,23,0.534,29,0.183,37,0.143,39,2.512,40,0.86,42,2.555,43,2.431,44,2.837,55,1.194,56,1.048,58,0.003,59,0.003,65,0.699,112,2.45,119,3.49,127,1.794,128,3.005,131,4.419,132,1.368,164,2.426,170,0.883,261,3.415,285,2.816,319,2.209,388,2.252,391,3.207,394,2.414,395,2.196,434,2.146,451,4.271,457,2.786,460,3.182,472,2.824,476,2.824,555,4.41,590,3.756,773,4.922,1055,4.353,1159,3.34,1241,2.644,1969,2.759,1990,5.14,1991,5.395,1992,3.34,1996,5.569,2000,5.395,2001,4.922,2003,5.395,2007,5.844,2008,4.564,2009,8.003,2010,4.564,2011,4.564,2012,4.564,2013,4.564,2014,4.564,2015,4.564,2016,4.564,2017,4.564,2018,4.564,2019,3.766,2020,4.083,2021,4.564,2022,4.564,2023,4.564]],["title/controllers/FilestorageController.html",[485,1.661,2024,4.157]],["body/controllers/FilestorageController.html",[0,0.122,1,2.252,3,0.06,4,0.05,5,0.137,7,0.184,9,0.82,11,0.946,18,0.626,20,1.981,21,0.006,22,1.534,23,0.479,25,1.27,29,0.229,32,0.621,36,0.479,37,0.063,40,0.821,55,1.128,56,1.672,58,0.002,59,0.002,65,0.683,72,0.859,74,1.327,77,1.134,78,2.427,94,2.01,112,0.728,122,2.622,124,3.268,127,1.529,133,1.17,134,0.749,152,1.748,170,1.612,180,2.341,181,2.098,186,2.146,196,2.68,200,2.993,206,1.357,215,1.499,225,1.687,238,2.5,285,2.771,319,0.696,336,1.81,372,0.846,388,1.572,485,0.93,487,0.93,489,1.327,490,3.857,491,3.264,492,3.551,493,2.064,494,4.225,495,4.645,499,5.032,500,1.967,501,4.384,502,5.513,503,5.513,504,3.857,507,2.064,508,3.264,511,1.81,512,5.077,513,4.384,514,5.077,515,4.384,516,1.967,519,3.449,522,1.243,523,1.634,524,2.181,525,2.507,526,4.775,527,1.46,528,1.687,529,1.883,530,1.541,531,2.064,532,5.077,533,2.064,534,2.064,535,3.11,536,1.967,537,1.967,538,1.967,539,2.181,540,2.181,541,1.967,542,1.967,543,1.967,544,4.395,548,2.978,549,1.967,550,1.967,554,1.541,555,3.761,556,1.327,557,1.541,561,2.064,562,3.209,563,1.967,568,2.978,569,1.967,570,4.096,571,3.968,572,3.857,574,1.967,575,1.967,578,2.181,580,2.064,741,1.687,1032,1.966,1055,4.214,1365,1.883,1982,1.967,1993,5.077,1996,5.513,2001,4.862,2004,4.775,2005,4.384,2007,2.064,2024,3.68,2025,2.821,2026,4.461,2027,4.461,2028,4.461,2029,5.533,2030,2.821,2031,2.821,2032,4.461,2033,2.821,2034,2.821,2035,2.821,2036,2.821,2037,2.821,2038,2.821,2039,2.821,2040,2.821,2041,2.821,2042,2.821,2043,2.821,2044,2.821,2045,5.533,2046,2.821,2047,2.821,2048,2.821,2049,2.821,2050,4.461,2051,2.821,2052,2.821,2053,2.821,2054,2.524,2055,2.821,2056,2.821,2057,2.821,2058,2.821,2059,2.821,2060,3.264,2061,2.821,2062,3.99,2063,3.68,2064,2.821,2065,2.821,2066,2.821,2067,2.821,2068,2.821,2069,2.821,2070,2.821,2071,2.821,2072,2.821,2073,2.821,2074,2.821,2075,4.461,2076,2.821,2077,2.821,2078,4.461,2079,2.821,2080,6.288,2081,2.524,2082,2.821,2083,2.821,2084,4.461,2085,2.821,2086,2.821,2087,2.821,2088,4.461,2089,5.625,2090,5.625,2091,2.821,2092,4.461,2093,2.821,2094,2.821,2095,2.821,2096,2.821,2097,2.821,2098,2.821,2099,2.821,2100,2.524]],["title/classes/FilestorageCreateDto.html",[0,0.217,1993,3.513]],["body/classes/FilestorageCreateDto.html",[0,0.35,2,0.638,3,0.088,4,0.073,5,0.112,7,0.272,8,0.682,11,1.146,18,0.73,21,0.006,23,0.526,29,0.201,32,0.916,37,0.171,39,2.041,40,0.867,42,1.443,43,1.374,44,1.603,55,1.193,58,0.003,59,0.003,65,1.175,87,1.519,112,2.432,122,1.193,127,1.782,203,1.211,319,2.088,388,2.702,391,3.436,396,2.816,397,2.004,398,2.004,431,1.912,451,3.469,457,2.649,555,4.194,584,4.074,590,3.605,603,2.578,604,2.673,605,2.871,606,1.916,607,2.657,608,3.969,611,3.366,613,3.726,614,3.545,615,1.211,619,2.341,620,2.341,773,4.681,1055,4.51,1241,2.413,1860,2.103,1905,3.374,1969,1.798,1976,4.941,1982,2.904,1983,3.221,1985,2.904,1986,3.048,1988,4.63,1989,3.048,1990,4.889,1991,5.13,1992,3.048,1993,4.889,1994,3.221,1995,3.221,1996,4.889,1997,4.63,1998,4.175,1999,5.421,2000,5.13,2001,4.681,2002,5.927,2003,5.13,2004,2.904,2005,2.904,2006,3.221,2101,4.166,2102,3.726,2103,4.166,2104,3.726,2105,4.166,2106,3.726,2107,4.166,2108,3.726,2109,4.166,2110,5.357,2111,4.166,2112,4.166,2113,4.166,2114,3.726,2115,4.166]],["title/classes/FilestorageDto.html",[0,0.217,2004,3.513]],["body/classes/FilestorageDto.html",[0,0.345,2,0.614,3,0.085,4,0.07,5,0.109,7,0.262,8,0.663,11,1.139,18,0.733,21,0.006,23,0.525,29,0.198,32,0.882,37,0.168,39,1.986,40,0.867,42,1.39,43,1.322,44,1.543,55,1.193,58,0.003,59,0.003,65,1.154,87,3.333,112,2.414,122,1.965,127,1.79,203,1.166,319,2.061,388,2.655,391,3.414,396,2.74,397,1.93,398,1.93,431,1.86,451,3.376,457,2.593,555,4.105,584,3.647,590,3.542,603,2.482,604,2.574,605,2.85,606,1.844,607,2.61,608,3.899,611,3.275,613,3.647,614,3.505,615,1.166,619,2.254,620,2.254,624,3.101,773,4.582,1055,4.459,1241,2.323,1860,2.024,1905,3.302,1969,1.731,1976,4.807,1982,2.796,1983,3.101,1985,2.796,1986,2.934,1988,4.505,1989,2.934,1990,4.785,1991,5.022,1992,2.934,1993,6.525,1994,3.101,1995,3.101,1996,4.785,1997,4.505,1998,4.062,1999,5.306,2000,5.022,2001,4.582,2002,5.824,2003,5.022,2004,4.062,2005,2.796,2006,3.101,2102,3.588,2104,3.588,2106,3.588,2108,3.588,2110,5.212,2114,3.588,2116,4.011,2117,4.011,2118,4.011,2119,4.011,2120,4.011,2121,4.011,2122,4.011,2123,4.011,2124,4.011,2125,4.011]],["title/modules/FilestorageModule.html",[166,1.511,1884,3.687]],["body/modules/FilestorageModule.html",[0,0.277,3,0.136,4,0.113,5,0.121,21,0.006,22,1.14,29,0.238,36,1.091,37,0.144,58,0.004,59,0.004,132,1.927,166,2.619,487,2.643,636,2.719,637,2.832,638,2.956,639,2.956,640,2.956,641,3.932,642,4.018,646,3.687,647,2.615,648,2.956,650,3.723,654,3.092,655,3.977,657,3.612,1884,7.263,2007,4.702,2020,7.171,2024,7.208,2060,7.024,2062,7.171,2063,8.331,2126,5.749,2127,5.749,2128,5.749,2129,6.427,2130,6.427,2131,6.427,2132,6.427,2133,6.427]],["title/classes/FilestorageUpdateDto.html",[0,0.217,2005,3.513]],["body/classes/FilestorageUpdateDto.html",[0,0.383,2,0.819,3,0.113,4,0.094,5,0.134,21,0.006,23,0.511,29,0.22,32,1.176,37,0.191,39,2.426,40,0.865,42,1.852,43,1.763,44,2.057,55,1.149,58,0.004,59,0.004,65,1.307,112,2.358,122,1.531,319,1.976,388,2.509,391,3.344,396,3.348,397,2.572,398,2.572,431,1.707,555,3.198,584,3.783,590,3.348,605,2.996,606,2.459,607,2.957,608,4.418,611,4.002,613,4.253,614,3.796,615,1.554,619,3.005,620,3.005,773,3.569,1055,4.143,1241,3.097,1860,2.698,1905,3.851,1969,2.308,1982,3.727,1983,4.133,1985,3.727,1986,3.912,1988,5.504,1989,3.912,1990,4.963,1991,5.209,1992,3.912,1993,4.963,1994,4.133,1995,4.133,1996,3.727,1997,4.133,1998,3.727,1999,4.133,2000,3.912,2001,3.569,2002,5.504,2003,3.912,2004,3.727,2005,4.963,2006,5.504]],["title/classes/Form.html",[0,0.217,2134,3.513]],["body/classes/Form.html",[0,0.238,2,0.846,3,0.117,4,0.097,5,0.104,7,0.361,8,0.828,18,0.756,21,0.006,23,0.525,29,0.223,37,0.163,39,1.882,40,0.841,41,2.148,58,0.004,59,0.004,65,0.846,112,1.425,119,3.973,127,1.846,128,3.825,131,4.697,132,1.656,170,1.068,203,2.115,261,2.85,345,5.43,388,3.046,394,2.749,395,2.657,396,3.421,397,2.657,398,2.657,457,2.087,472,3.418,476,3.418,722,2.866,1159,4.041,1969,3.14,2134,5.071,2135,5.523,2136,5.671,2137,4.712,2138,5.22,2139,5.033,2140,4.105,2141,5.523,2142,5.523,2143,5.523,2144,7.733,2145,7.276,2146,5.523,2147,5.523,2148,5.523,2149,5.523,2150,5.204,2151,5.523,2152,3.418,2153,4.557,2154,5.523,2155,4.941,2156,4.941,2157,4.941,2158,5.523]],["title/controllers/FormController.html",[485,1.661,2159,4.157]],["body/controllers/FormController.html",[0,0.162,1,2.797,3,0.079,4,0.066,5,0.07,7,0.245,9,1.089,11,0.93,18,0.616,20,1.949,21,0.006,22,1.535,23,0.488,29,0.235,32,0.824,36,0.636,37,0.084,40,0.565,55,1.116,56,1.787,58,0.003,59,0.003,65,0.849,74,1.329,77,1.409,78,2.411,94,1.978,122,2.644,124,3.34,127,1.505,133,1.554,134,0.995,152,1.468,170,1.505,180,2.345,181,1.761,186,3.174,196,1.636,200,2.965,206,1.802,215,1.99,238,2.333,285,3.429,304,4.679,336,2.403,372,1.123,485,1.235,487,1.235,489,1.761,490,4.599,491,4.055,492,4.233,493,2.74,494,4.209,495,4.912,499,5.001,500,2.611,501,3.863,502,5.68,503,5.68,504,4.599,507,2.74,508,4.055,511,2.403,512,5.68,513,5.082,514,5.68,515,5.082,516,2.611,519,4.284,522,1.65,523,2.17,524,2.895,525,3.115,526,5.082,527,1.939,528,2.24,529,2.5,530,2.046,531,2.74,532,5.425,533,2.74,534,2.74,535,3.863,536,2.611,537,2.611,538,2.611,539,2.895,540,2.895,541,2.611,542,2.611,543,2.611,544,4.679,548,3.7,549,2.611,550,2.611,554,2.046,556,1.761,557,2.046,559,3.09,560,2.895,561,2.74,562,3.429,563,2.611,568,3.7,569,2.611,570,4.36,571,4.223,572,4.599,574,2.611,575,2.611,578,2.895,580,2.74,722,1.32,743,4.055,2081,3.35,2100,3.35,2134,2.611,2137,2.17,2139,2.317,2140,1.89,2159,4.572,2160,3.745,2161,6.468,2162,3.745,2163,3.745,2164,3.745,2165,3.745,2166,3.745,2167,3.745,2168,3.745,2169,3.745,2170,5.334,2171,3.745,2172,3.745,2173,3.745,2174,4.055,2175,3.35,2176,3.745,2177,3.745,2178,3.745,2179,3.745,2180,5.542,2181,3.745,2182,3.745,2183,3.745]],["title/classes/FormCreateDto.html",[0,0.217,2184,3.895]],["body/classes/FormCreateDto.html",[0,0.375,2,0.77,3,0.106,4,0.088,5,0.094,7,0.328,8,0.777,11,1.073,18,0.75,21,0.006,23,0.523,29,0.228,32,1.105,37,0.173,39,2.327,40,0.835,55,0.803,58,0.004,59,0.004,65,1.275,87,1.833,112,2.315,123,3.535,127,1.832,319,1.686,345,5.178,391,2.78,396,3.211,397,2.417,398,2.417,457,2.58,605,2.884,606,2.311,607,3.015,609,3.446,612,3.224,614,3.386,615,1.461,616,2.363,621,2.67,722,2.733,1860,2.536,1868,4.145,1869,4.145,1905,3.731,1969,2.169,2136,5.407,2137,4.493,2138,4.977,2139,4.799,2140,3.915,2150,4.493,2152,3.109,2161,3.676,2170,3.676,2184,5.996,2185,4.145,2186,5.149,2187,6.108,2188,5.025,2189,4.145,2190,5.025,2191,5.025,2192,5.025,2193,4.977,2194,5.025,2195,5.025,2196,5.025,2197,4.494,2198,6.399,2199,5.025,2200,4.558,2201,3.676,2202,3.884,2203,3.354,2204,6.088,2205,4.145,2206,4.145,2207,4.145]],["title/classes/FormDto.html",[0,0.217,2161,3.687]],["body/classes/FormDto.html",[0,0.372,2,0.752,3,0.104,4,0.086,5,0.092,7,0.32,8,0.765,11,1.066,18,0.746,21,0.006,23,0.521,29,0.226,32,1.079,37,0.171,39,2.289,40,0.831,55,0.79,58,0.004,59,0.004,65,1.262,87,3.438,112,2.299,123,3.478,127,1.823,319,1.659,345,5.115,391,2.746,396,3.159,397,2.36,398,2.36,457,2.538,605,2.87,606,2.256,607,2.99,609,3.391,612,3.149,614,3.352,615,1.426,616,2.307,621,2.607,722,2.7,1860,2.476,1868,4.048,1869,4.048,1905,3.686,1969,2.118,2136,5.341,2137,4.438,2138,4.916,2139,4.74,2140,3.867,2150,4.438,2152,3.036,2161,4.915,2170,3.59,2184,7.442,2185,4.048,2186,4.74,2187,6.009,2189,4.048,2193,4.916,2197,4.389,2198,6.321,2200,4.485,2201,3.59,2202,3.793,2203,3.275,2204,6.028,2205,4.048,2206,4.048,2207,4.048,2208,4.906,2209,4.906,2210,4.906,2211,4.906,2212,4.906,2213,4.906,2214,4.906,2215,4.906]],["title/classes/FormFieldDto.html",[0,0.217,2216,4.157]],["body/classes/FormFieldDto.html",[0,0.31,2,0.832,3,0.115,4,0.096,5,0.102,7,0.355,8,0.819,18,0.769,21,0.006,23,0.524,29,0.2,32,1.195,37,0.122,40,0.839,41,2.536,58,0.004,59,0.004,127,1.879,188,3.882,396,4.317,397,2.614,398,2.614,457,3.376,605,2.983,607,2.976,609,4.634,615,1.58,1032,3.556,2193,5.178,2216,5.937,2217,5.433,2218,5.625,2219,5.625,2220,5.625,2221,5.625,2222,5.625,2223,5.625,2224,5.625,2225,4.992,2226,5.625,2227,8.935,2228,5.433,2229,5.433,2230,5.433,2231,5.433,2232,5.433,2233,7.196,2234,5.433,2235,5.433,2236,5.433,2237,5.433,2238,5.433,2239,4.992,2240,6.537]],["title/classes/FormFieldPart.html",[0,0.217,2241,4.157]],["body/classes/FormFieldPart.html",[0,0.217,2,0.77,3,0.106,4,0.088,5,0.094,7,0.328,8,0.777,18,0.758,21,0.006,23,0.527,29,0.169,37,0.153,40,0.828,41,2.457,58,0.004,59,0.004,127,1.852,128,4.092,131,4.681,132,1.506,170,0.972,188,3.731,203,2.53,261,3.952,388,3.375,394,2.58,395,2.417,396,4.221,397,2.417,398,2.417,457,3.288,1032,3.418,2218,5.407,2219,5.407,2220,5.407,2221,5.407,2222,5.407,2223,5.407,2224,5.407,2225,4.799,2226,5.407,2240,6.367,2241,5.633,2242,5.025,2243,5.025,2244,5.025,2245,5.025,2246,5.025,2247,5.025,2248,5.025,2249,5.025,2250,5.025,2251,5.025,2252,5.025,2253,5.025,2254,5.025]],["title/modules/FormModule.html",[166,1.511,2255,3.895]],["body/modules/FormModule.html",[0,0.292,3,0.143,4,0.119,5,0.127,21,0.006,22,1.2,29,0.237,36,1.149,37,0.151,58,0.005,59,0.005,132,2.028,166,2.68,487,2.728,636,2.862,637,2.981,638,3.111,639,3.111,640,3.111,641,4.023,642,3.111,646,3.806,647,2.753,648,3.111,650,3.919,654,3.255,655,4.186,657,3.803,2134,4.717,2157,7.402,2159,7.375,2174,7.112,2175,6.052,2255,7.515,2256,6.052,2257,6.052,2258,6.766,2259,6.052,2260,6.766,2261,6.766]],["title/classes/FormSectionDto.html",[0,0.217,2204,3.687]],["body/classes/FormSectionDto.html",[0,0.352,2,0.85,3,0.117,4,0.098,5,0.104,7,0.362,8,0.831,11,1.104,18,0.731,21,0.006,23,0.527,29,0.223,32,1.221,37,0.124,40,0.818,58,0.004,59,0.004,112,2.383,127,1.786,319,1.802,391,3.105,457,2.758,605,2.867,607,3.001,609,4.116,614,3.524,615,1.614,616,2.61,621,3.878,722,2.873,1860,2.802,1905,3.923,2137,4.724,2150,4.724,2152,3.435,2189,6.021,2193,3.562,2204,6.758,2216,7.423,2225,5.045,2262,5.551,2263,5.233,2264,6.727,2265,5.551,2266,7.298,2267,5.551,2268,5.551,2269,5.551,2270,5.551,2271,5.551,2272,5.551,2273,5.551,2274,5.551,2275,5.551,2276,5.551,2277,4.291,2278,4.291]],["title/classes/FormSectionPart.html",[0,0.217,2153,4.157]],["body/classes/FormSectionPart.html",[0,0.253,2,0.898,3,0.124,4,0.103,5,0.11,7,0.383,8,0.861,11,1.121,18,0.742,21,0.006,23,0.528,29,0.208,37,0.169,40,0.854,41,2.233,58,0.004,59,0.004,112,1.512,122,1.679,127,1.813,128,4.408,131,4.485,132,1.758,170,1.134,203,1.704,388,2.665,394,2.857,395,2.821,722,2.95,1969,3.265,2137,4.85,2144,8.645,2145,5.244,2150,5.304,2152,3.628,2153,6.239,2156,5.244,2225,5.18,2241,4.837,2263,5.373,2264,6.907,2279,5.863,2280,5.863,2281,5.863,2282,5.863,2283,5.863,2284,5.863,2285,5.863,2286,5.863,2287,5.863]],["title/injectables/FormService.html",[136,1.226,2174,3.687]],["body/injectables/FormService.html",[0,0.152,3,0.075,4,0.062,5,0.066,7,0.231,8,0.604,9,2.577,10,2.171,11,1.113,12,3.401,15,1.566,18,0.743,20,2.412,21,0.006,22,1.572,23,0.512,25,4.311,29,0.198,30,1.465,36,0.6,37,0.079,49,2.746,55,1.127,58,0.003,59,0.003,65,0.813,66,3.121,72,1.615,74,1.528,75,2.494,76,2.494,77,1.348,78,2.435,87,3.396,88,1.739,89,1.661,90,1.739,91,1.739,92,1.739,94,2.212,122,1.824,124,3.012,132,1.059,134,0.938,136,1.291,137,1.437,162,3.791,176,5.515,178,4.382,179,2.819,180,2.244,181,2.494,182,3.172,183,3.073,184,3.073,185,2.897,186,3.835,187,3.073,188,3.652,190,2.112,191,5.135,192,3.555,194,4.753,195,4.266,196,2.569,197,2.112,198,3.172,200,1.164,201,2.112,202,5.394,203,2.785,205,2.112,206,4.093,207,4.928,209,2.112,211,2.185,213,2.112,215,1.877,216,4.235,218,2.185,348,2.357,350,2.266,357,2.266,358,2.462,359,2.266,360,2.266,361,2.266,362,2.266,363,2.266,364,2.357,365,2.266,366,2.357,367,2.266,372,1.059,2134,2.462,2174,3.881,2259,3.159,2288,3.531,2289,3.531,2290,3.531]],["title/classes/FormUpdateDto.html",[0,0.217,2170,3.687]],["body/classes/FormUpdateDto.html",[0,0.399,2,0.924,3,0.128,4,0.106,5,0.113,21,0.006,23,0.468,29,0.238,32,1.327,37,0.19,39,2.625,40,0.822,58,0.004,59,0.004,65,1.37,112,2.189,319,1.901,345,4.027,391,3.042,396,3.622,397,2.902,398,2.902,605,2.989,606,2.774,607,3.2,609,3.888,612,3.871,614,3.637,615,1.754,616,2.836,621,3.206,722,2.126,1860,3.045,1905,4.082,1969,2.604,2136,4.205,2137,3.494,2138,3.871,2139,3.732,2140,3.045,2150,4.462,2152,3.732,2161,4.413,2170,5.635,2184,5.955,2185,4.977,2186,4.766,2198,6.354,2203,4.027,2204,6.541,2205,4.977,2206,4.977,2207,6.354]],["title/interfaces/GithubUpdate.html",[38,1.379,746,4.157]],["body/interfaces/GithubUpdate.html",[0,0.193,1,3.183,3,0.095,4,0.079,5,0.084,7,0.292,8,0.718,11,1.119,21,0.006,22,1.481,23,0.465,29,0.221,32,0.985,36,0.761,37,0.1,38,1.226,40,0.84,43,1.477,53,2.406,55,0.932,56,1.676,58,0.003,59,0.003,60,1.895,65,0.686,74,1.074,78,1.138,100,2.155,106,3.106,112,1.155,152,1.755,170,1.757,186,3.034,196,1.322,200,2.856,225,2.679,238,1.891,261,2.471,372,1.343,391,1.605,453,2.99,457,2.383,485,2.406,494,3.491,499,4.101,523,2.594,530,2.446,556,2.106,576,2.016,695,2.594,714,3.462,715,4.006,719,3.771,721,4.006,722,1.578,723,5.202,726,7.469,727,5.574,730,4.006,731,4.006,732,4.006,733,4.006,734,4.006,736,2.679,737,5.088,738,3.695,739,3.462,740,5.641,741,3.771,742,5.641,743,4.614,744,6.528,745,5.641,746,6.536,747,7.086,748,4.006,749,2.679,750,7.086,751,7.086,752,7.086,753,3.462,754,3.277,755,5.202,756,4.006,757,3.462,758,4.006,759,4.006,760,4.006,761,3.277,762,2.99,763,4.006,764,5.641,765,5.641,766,4.006,767,4.006,768,4.006,769,5.641,770,6.528,771,4.006,772,5.641,773,4.21,774,4.006,775,4.006,776,4.006,777,4.006,778,4.006,779,4.006,780,4.006,781,3.695,782,3.695,783,5.641,784,4.006,785,4.006,786,5.641,787,4.006,788,4.006,789,5.641,790,4.006,791,3.277,792,3.277,793,4.006,794,5.641,795,5.641,796,5.641,797,4.006,798,5.641,799,5.641,800,5.641,801,4.006,802,5.641]],["title/classes/Identities.html",[0,0.217,1335,3.014]],["body/classes/Identities.html",[0,0.234,2,0.83,3,0.115,4,0.095,5,0.102,7,0.354,8,0.817,11,0.859,18,0.726,21,0.006,23,0.518,29,0.232,37,0.18,40,0.735,41,2.532,58,0.004,59,0.004,65,0.83,112,2.078,119,3.922,121,2.979,127,1.774,128,4.314,131,4.401,132,1.624,134,1.439,170,1.047,203,2.342,297,4.225,319,1.773,382,5.616,388,3.233,391,3.075,394,2.713,395,2.606,399,7.206,454,4.066,472,3.351,476,3.351,1333,4.875,1335,4.818,1643,4.875,1969,3.703,2291,4.844,2292,4.984,2293,8.056,2294,8.056,2295,5.378,2296,5.416,2297,5.416,2298,7.206,2299,5.416,2300,5.416,2301,5.959,2302,5.416,2303,5.416,2304,3.962,2305,5.416,2306,3.776,2307,5.416,2308,4.844,2309,5.416,2310,4.844,2311,4.468,2312,5.416]],["title/controllers/IdentitiesController.html",[485,1.661,2313,3.895]],["body/controllers/IdentitiesController.html",[0,0.094,1,1.827,3,0.046,4,0.038,5,0.041,7,0.142,9,1.349,11,0.89,15,0.644,18,0.589,20,1.864,21,0.006,22,1.455,23,0.47,29,0.223,32,0.48,36,0.37,37,0.049,39,1.233,40,0.725,41,0.644,53,1.781,55,1.095,56,1.915,58,0.002,59,0.002,65,0.554,74,1.113,77,0.92,78,2.367,94,1.891,106,2.286,112,0.934,121,0.904,122,2.454,124,3.098,127,1.439,133,0.904,134,0.579,152,0.854,162,0.854,164,1.159,170,1.556,179,2.466,180,1.963,181,1.025,186,2.233,187,3.968,195,2.034,196,2.586,200,2.941,203,0.634,206,1.049,215,1.159,225,1.304,238,2.3,285,2.045,300,2.097,304,1.399,319,0.894,336,1.399,372,0.654,373,1.665,377,1.562,386,3.711,388,0.768,390,1.455,396,2.541,397,1.049,398,1.049,431,2.449,442,1.853,454,3.025,457,2.041,485,0.719,487,0.719,489,1.025,490,3.767,491,3.395,492,2.978,493,1.595,494,4.122,495,5.007,499,4.917,500,1.52,501,2.523,502,4.998,503,4.998,504,3.235,507,1.595,508,2.648,511,1.399,512,5.348,513,4.775,514,5.487,515,4.775,516,1.52,519,4.177,522,0.961,523,1.263,524,1.685,525,2.034,526,4.178,527,1.129,528,1.304,529,1.455,530,1.191,531,1.595,532,4.178,533,1.595,534,1.595,535,2.523,536,1.52,537,1.52,538,1.52,539,1.685,540,1.685,541,1.52,542,1.52,543,1.52,544,3.846,545,1.685,546,1.049,547,1.595,548,2.416,549,1.52,550,1.52,554,1.191,557,1.191,560,1.685,562,3.674,563,1.52,568,4.001,569,1.52,570,4.097,571,4.153,572,3.235,574,3.767,575,2.523,576,0.981,578,1.685,580,1.595,695,2.097,736,2.165,741,2.776,762,3.098,829,1.799,927,1.702,938,3.037,941,0.854,943,3.274,1032,0.961,1226,1.159,1228,1.95,1255,1.95,1259,1.95,1312,2.323,1333,2.535,1335,2.165,1414,1.95,1415,2.24,1451,2.648,1500,4.001,1534,3.585,1540,1.263,1572,2.648,1611,2.951,1637,2.587,1643,1.159,1936,1.159,1998,1.52,2019,1.799,2263,2.323,2292,1.349,2306,1.52,2313,2.798,2314,2.18,2315,4.641,2316,4.641,2317,2.18,2318,2.18,2319,2.798,2320,3.238,2321,4.641,2322,4.151,2323,2.18,2324,3.767,2325,2.18,2326,4.966,2327,2.18,2328,2.18,2329,2.18,2330,2.18,2331,2.18,2332,2.18,2333,4.573,2334,3.619,2335,2.18,2336,2.18,2337,2.18,2338,2.18,2339,2.18,2340,2.18,2341,4.151,2342,4.177,2343,1.95,2344,1.52,2345,3.238,2346,3.619,2347,2.18,2348,2.18,2349,3.767,2350,4.641,2351,5.403,2352,2.18,2353,3.619,2354,2.18,2355,2.18,2356,1.95,2357,1.95,2358,1.95,2359,2.24,2360,1.95,2361,2.798,2362,1.95,2363,2.18,2364,2.18,2365,2.18,2366,2.18,2367,2.18,2368,3.238,2369,2.034,2370,3.238,2371,3.238,2372,3.238,2373,3.238,2374,3.619,2375,3.238,2376,3.619,2377,5.403,2378,4.151,2379,4.457,2380,3.238,2381,2.097,2382,2.648,2383,2.416,2384,3.238,2385,3.238,2386,2.18,2387,2.18,2388,2.18,2389,2.18,2390,1.685,2391,2.18,2392,2.18,2393,2.18,2394,5.403,2395,2.18,2396,2.18,2397,2.18,2398,2.18,2399,2.18,2400,2.18,2401,2.18,2402,2.18,2403,2.18,2404,2.18,2405,2.18,2406,1.799,2407,2.18,2408,3.619,2409,2.18,2410,3.238,2411,1.595,2412,2.18,2413,3.238,2414,2.18,2415,2.18,2416,3.619,2417,2.18,2418,2.18,2419,1.799,2420,1.95,2421,2.18,2422,1.799,2423,2.18,2424,2.18,2425,2.18,2426,2.18,2427,2.18,2428,2.18,2429,2.18,2430,2.18,2431,2.18,2432,2.18,2433,2.18,2434,2.18]],["title/classes/IdentitiesCreateDto.html",[0,0.217,2324,3.513]],["body/classes/IdentitiesCreateDto.html",[0,0.385,2,0.753,3,0.104,4,0.086,5,0.092,7,0.321,8,0.765,11,0.986,18,0.684,21,0.006,23,0.504,29,0.231,32,1.081,37,0.184,40,0.576,41,1.985,55,0.791,58,0.004,59,0.004,65,1.323,87,1.792,112,1.735,123,3.481,127,1.67,203,1.429,312,3.426,384,4.309,385,4.309,391,1.761,454,3.87,605,2.629,606,2.26,614,3.12,615,1.429,616,2.311,707,3.04,722,2.37,909,3.093,927,3.162,934,3.792,941,3.231,1211,3.162,1333,4.716,1637,2.903,1643,4.074,1670,3.481,1860,2.48,1905,3.235,1969,2.903,2186,5.101,2200,4.489,2201,3.595,2202,3.799,2203,3.28,2239,4.744,2292,4.744,2295,5.118,2301,5.118,2304,3.595,2306,3.426,2324,5.345,2326,3.28,2333,3.28,2349,3.426,2381,4.776,2435,3.799,2436,5.952,2437,4.395,2438,5.199,2439,4.688,2440,4.688,2441,4.688,2442,5.748,2443,5.291,2444,5.504,2445,4.688,2446,4.688,2447,5.199,2448,5.199,2449,4.688,2450,4.914,2451,5.517,2452,4.395,2453,4.914,2454,4.395,2455,4.914,2456,4.395,2457,4.914,2458,3.799,2459,3.799,2460,3.799,2461,3.799,2462,4.489,2463,3.799,2464,3.799,2465,3.799,2466,3.799,2467,3.799,2468,3.799]],["title/classes/IdentitiesDto.html",[0,0.217,2326,3.364]],["body/classes/IdentitiesDto.html",[0,0.383,2,0.744,3,0.103,4,0.085,5,0.091,7,0.317,8,0.759,11,0.981,18,0.681,21,0.006,23,0.503,29,0.23,32,1.068,37,0.183,40,0.571,41,1.969,55,0.785,58,0.004,59,0.004,65,1.317,87,3.136,112,1.721,123,3.453,127,1.663,203,1.412,312,3.386,384,4.283,385,4.283,391,1.741,454,3.846,605,2.618,606,2.233,614,3.101,615,1.412,616,2.284,707,3.005,722,2.351,909,3.068,927,3.137,934,3.773,941,3.215,1211,3.137,1333,4.697,1637,2.88,1643,4.05,1670,3.453,1860,2.451,1905,3.21,1969,2.88,2186,4.715,2200,4.454,2201,3.553,2202,3.755,2203,3.242,2239,4.715,2292,4.715,2295,5.087,2301,5.087,2304,3.553,2306,3.386,2324,6.344,2326,4.454,2333,3.242,2349,3.386,2381,4.753,2435,3.755,2436,5.931,2437,4.344,2438,5.157,2439,4.651,2440,4.651,2441,4.651,2442,5.719,2443,5.265,2444,5.477,2445,4.651,2446,4.651,2447,5.157,2448,5.157,2449,4.651,2451,5.497,2452,4.344,2454,4.344,2456,4.344,2458,3.755,2459,3.755,2460,3.755,2461,3.755,2462,4.454,2463,3.755,2464,3.755,2465,3.755,2466,3.755,2467,3.755,2468,3.755,2469,4.857,2470,4.857,2471,4.857,2472,4.857]],["title/controllers/IdentitiesJsonFormsController.html",[485,1.661,2473,4.157]],["body/controllers/IdentitiesJsonFormsController.html",[0,0.192,1,3.168,3,0.094,4,0.078,5,0.083,7,0.291,11,0.944,18,0.625,20,1.979,21,0.006,22,1.401,23,0.413,29,0.207,32,0.979,36,0.755,37,0.1,40,0.623,56,1.814,58,0.003,59,0.003,65,0.961,74,1.067,77,1.595,78,2.426,94,2.008,127,1.527,152,1.743,162,3.264,170,1.527,180,3.077,186,3.499,196,2.678,200,2.604,225,2.661,238,2.368,328,4.578,372,1.334,388,1.568,394,3.356,485,1.467,487,1.467,489,2.092,492,4.028,494,4.239,495,2.43,499,4.774,511,2.855,522,1.96,523,2.577,525,2.501,527,2.303,530,2.43,556,2.092,557,2.43,562,3.481,570,4.724,571,4.576,718,3.67,741,4.981,762,5.273,885,6.055,933,4.592,934,3.632,941,2.459,1032,1.96,1055,2.303,1064,6.106,1165,4.592,1209,4.197,1227,4.852,2155,8.114,2443,4.028,2473,5.178,2474,4.449,2475,4.449,2476,5.614,2477,5.614,2478,4.449,2479,4.449,2480,7.065,2481,4.852,2482,5.779,2483,6.516,2484,4.449,2485,4.449,2486,4.449,2487,6.276,2488,5.614,2489,6.106,2490,7.065,2491,4.449,2492,3.979,2493,4.449,2494,3.979,2495,4.449,2496,4.375,2497,3.979,2498,4.449,2499,4.449,2500,4.449,2501,4.449,2502,4.449,2503,4.449,2504,6.276,2505,4.449,2506,4.449,2507,4.449,2508,3.979,2509,3.979,2510,3.979,2511,3.979,2512,3.979,2513,3.979,2514,4.449,2515,3.979]],["title/modules/IdentitiesJsonformsModule.html",[166,1.511,2516,3.687]],["body/modules/IdentitiesJsonformsModule.html",[0,0.3,3,0.147,4,0.122,5,0.13,21,0.006,29,0.224,36,1.18,37,0.155,58,0.005,59,0.005,166,2.712,487,2.773,636,2.94,637,3.062,638,3.196,639,3.196,640,3.196,641,4.071,642,4.16,646,3.868,647,2.827,648,3.196,2473,7.462,2496,7.11,2497,6.216,2516,7.242,2517,6.216,2518,6.216,2519,6.216,2520,6.949,2521,6.949]],["title/injectables/IdentitiesJsonformsService.html",[136,1.226,2496,3.513]],["body/injectables/IdentitiesJsonformsService.html",[0,0.131,3,0.064,4,0.053,5,0.152,7,0.379,8,0.538,9,2.183,10,1.976,11,0.937,12,2.191,15,1.712,18,0.697,20,1.453,21,0.006,22,1.029,23,0.467,25,1.365,29,0.186,36,0.515,37,0.068,39,2.416,40,0.643,53,2.338,55,0.682,56,1.913,58,0.003,59,0.003,65,0.723,66,3.455,70,3.699,72,2.641,74,1.133,75,2.221,76,2.221,77,1.2,78,2.239,87,2.387,88,1.494,89,1.427,90,1.494,91,1.494,92,1.494,94,1.802,106,2.326,112,0.783,136,1.149,137,1.234,162,2.272,170,1.84,180,1.284,185,2.579,192,2.91,196,2.393,200,1.557,234,2.714,319,1.166,328,2.384,372,0.91,373,3.01,377,2.825,388,1.069,391,1.693,394,3.373,431,1.851,442,2.612,457,1.784,727,3.153,886,2.346,887,2.346,888,1.947,893,4.483,894,4.242,1032,1.337,1055,3.887,1056,2.503,1057,2.714,1064,3.651,1074,2.714,1165,4.242,1451,4.788,1626,2.025,1926,3.896,2225,3.588,2419,4.784,2476,5.854,2496,3.292,2508,2.714,2522,3.034,2523,6.438,2524,5.187,2525,5.854,2526,4.723,2527,4.723,2528,3.034,2529,4.224,2530,3.034,2531,3.034,2532,3.034,2533,3.034,2534,4.723,2535,3.034,2536,4.224,2537,3.034,2538,2.714,2539,3.034,2540,2.115,2541,2.714,2542,4.042,2543,2.503,2544,2.714,2545,2.714,2546,5.799,2547,4.224,2548,6.717,2549,3.034,2550,6.717,2551,3.034,2552,2.714,2553,2.714,2554,3.034,2555,4.723,2556,7.449,2557,3.034,2558,4.723,2559,2.714,2560,3.034,2561,5.187,2562,6.544,2563,3.034,2564,5.799,2565,3.034,2566,4.723,2567,4.723,2568,4.723,2569,4.723,2570,7.091,2571,3.034,2572,3.034,2573,3.034,2574,3.034,2575,2.503,2576,3.034,2577,3.034,2578,4.723,2579,4.723,2580,3.034,2581,3.034,2582,3.034,2583,3.034,2584,3.034,2585,2.714,2586,3.034,2587,3.034,2588,2.025,2589,3.034,2590,4.723,2591,3.034,2592,4.723,2593,3.034,2594,3.034,2595,3.034,2596,3.034,2597,3.034,2598,2.714,2599,2.714,2600,7.012,2601,4.224,2602,6.544,2603,5.854,2604,4.224,2605,7.024,2606,6.717,2607,4.224,2608,4.224,2609,3.034,2610,2.503,2611,3.034,2612,3.034,2613,3.034,2614,3.034,2615,3.034,2616,4.224,2617,3.034,2618,2.714,2619,2.714,2620,3.034,2621,2.714,2622,4.723,2623,3.034,2624,4.723,2625,3.034]],["title/modules/IdentitiesModule.html",[166,1.511,1303,3.234]],["body/modules/IdentitiesModule.html",[0,0.255,3,0.125,4,0.104,5,0.111,21,0.006,22,1.047,29,0.246,30,2.449,36,1.003,37,0.132,58,0.004,59,0.004,132,1.77,166,2.518,487,2.505,636,2.498,637,2.602,638,2.715,639,2.715,640,2.715,641,3.781,642,3.863,646,3.494,647,2.402,648,2.715,650,3.42,654,3.655,655,3.653,657,3.319,822,6.796,829,4.871,843,4.116,877,4.871,878,5.281,1303,6.37,1312,6.406,1335,3.531,2311,6.268,2313,6.494,2357,5.281,2358,5.281,2359,5.912,2360,5.281,2361,5.873,2362,5.281,2496,6.66,2516,5.558,2626,5.281,2627,5.281,2628,5.281,2629,5.904,2630,5.904,2631,5.296,2632,5.904,2633,5.904,2634,5.904,2635,5.904]],["title/classes/IdentitiesUpdateDto.html",[0,0.217,2333,3.364]],["body/classes/IdentitiesUpdateDto.html",[0,0.402,2,0.881,3,0.122,4,0.101,5,0.108,21,0.006,23,0.476,29,0.239,32,1.265,37,0.196,40,0.493,41,1.698,58,0.004,59,0.004,65,1.394,112,1.484,312,4.01,384,4.199,385,4.199,391,2.062,454,2.903,605,2.771,606,2.645,614,3.375,615,1.672,616,2.705,707,3.559,722,2.027,909,2.645,927,2.705,934,3.435,941,2.927,1211,2.705,1333,4.531,1637,2.483,1643,3.057,1670,2.977,1860,2.903,1905,3.594,1969,3.225,2186,4.622,2203,3.84,2239,5.133,2292,3.559,2295,3.84,2301,4.987,2304,4.208,2306,4.01,2324,5.207,2326,3.84,2333,4.987,2349,4.01,2381,4.327,2435,4.447,2436,5.862,2438,4.447,2439,4.01,2440,4.01,2441,4.01,2442,5.207,2443,4.794,2444,4.987,2445,4.01,2446,4.01,2447,4.447,2448,4.447,2449,4.01,2451,5.433,2458,4.447,2459,4.447,2460,4.447,2461,4.447,2462,4.987,2463,4.447,2464,4.447,2465,4.447,2466,4.447,2467,5.775,2468,4.447]],["title/classes/IdentitiesUpsertDto.html",[0,0.217,2349,3.513]],["body/classes/IdentitiesUpsertDto.html",[0,0.4,2,0.863,3,0.119,4,0.099,5,0.106,7,0.368,8,0.839,11,0.881,18,0.446,21,0.006,23,0.485,29,0.238,32,1.24,37,0.195,40,0.483,41,1.664,58,0.004,59,0.004,65,1.385,112,1.454,312,5.726,384,4.143,385,4.143,391,2.02,454,2.844,605,2.753,606,2.592,614,3.342,615,1.638,616,2.65,707,4.561,722,1.986,909,2.592,927,2.65,934,3.39,941,2.888,1211,2.65,1333,4.486,1637,2.433,1643,2.995,1670,2.917,1860,2.844,1905,3.546,1969,3.182,2186,4.561,2203,3.762,2239,5.083,2292,3.487,2295,3.762,2301,4.921,2304,4.123,2306,3.928,2324,5.138,2326,3.762,2333,3.762,2349,5.138,2381,4.27,2435,4.357,2436,5.816,2438,4.357,2439,3.928,2440,3.928,2441,3.928,2442,5.138,2443,4.73,2444,4.921,2445,3.928,2446,3.928,2447,4.357,2448,4.357,2449,3.928,2451,5.391,2458,4.357,2459,4.357,2460,4.357,2461,4.357,2462,4.921,2463,4.357,2464,4.357,2465,4.357,2466,4.357,2467,4.357,2468,5.698,2636,5.635]],["title/controllers/IdentitiesValidationController.html",[485,1.661,2637,4.157]],["body/controllers/IdentitiesValidationController.html",[0,0.212,1,3.391,3,0.104,4,0.086,5,0.092,7,0.32,11,0.916,18,0.607,20,1.919,21,0.006,22,1.359,23,0.401,29,0.226,32,1.079,36,0.833,37,0.11,55,0.901,56,1.892,58,0.004,59,0.004,65,1.029,74,1.177,77,1.708,78,2.396,94,1.947,127,1.481,152,1.923,170,1.481,196,2.631,200,2.717,238,2.297,328,4.159,372,1.471,373,2.256,377,2.118,382,5.744,386,2.54,394,2.895,396,2.307,397,2.36,398,2.36,431,1.566,442,1.959,448,2.842,485,1.618,487,1.618,489,2.307,492,4.311,494,4.202,495,4.714,499,4.81,511,3.149,522,2.162,523,2.842,525,3.776,527,2.54,530,2.68,557,2.68,561,3.59,562,3.631,563,3.42,570,4.018,571,3.892,718,4.048,741,4.928,762,5.115,933,4.915,934,3.09,942,3.478,1209,3.57,1227,5.194,1415,3.036,1451,3.59,1637,2.9,1936,3.57,2359,4.157,2410,4.389,2413,4.389,2477,6.009,2482,4.915,2483,5.543,2489,6.37,2490,7.37,2492,4.389,2494,4.389,2509,4.389,2510,4.389,2511,4.389,2512,4.389,2513,4.389,2515,4.389,2637,5.543,2638,4.906,2639,4.906,2640,5.605,2641,5.923,2642,4.906,2643,4.906,2644,4.906,2645,4.906,2646,6.718,2647,4.906,2648,4.389,2649,4.389,2650,4.906,2651,4.906,2652,7.661,2653,4.906]],["title/classes/IdentitiesValidationFilter.html",[0,0.217,2361,3.895]],["body/classes/IdentitiesValidationFilter.html",[0,0.288,2,1.022,3,0.141,4,0.117,5,0.125,7,0.436,10,2.273,11,0.798,18,0.528,20,1.671,21,0.006,22,1.183,23,0.349,29,0.22,36,1.133,37,0.149,56,1.532,58,0.004,59,0.004,67,5.477,77,2.085,94,1.696,152,2.614,170,1.718,377,3.835,386,3.453,431,2.13,494,3.615,562,2.94,685,7.33,686,6.768,687,5.701,688,7.647,690,4.453,691,5.504,692,5.504,693,5.504,694,5.504,695,4.752,697,5.967,2361,6.868,2543,5.504,2654,8.204,2655,5.967,2656,6.781,2657,6.671,2658,6.671,2659,6.671,2660,6.671,2661,6.671]],["title/modules/IdentitiesValidationModule.html",[166,1.511,2631,3.513]],["body/modules/IdentitiesValidationModule.html",[0,0.3,3,0.147,4,0.122,5,0.13,21,0.006,29,0.224,36,1.18,37,0.155,58,0.005,59,0.005,166,2.712,487,2.773,636,2.94,637,3.062,638,3.196,639,3.196,640,3.196,641,4.071,642,4.16,646,3.868,647,2.827,648,3.196,2359,6.31,2631,6.9,2637,7.462,2649,6.216,2662,6.216,2663,6.216,2664,6.949,2665,6.949,2666,6.949]],["title/injectables/IdentitiesValidationService.html",[136,1.226,2359,3.118]],["body/injectables/IdentitiesValidationService.html",[0,0.122,2,0.686,3,0.06,4,0.121,5,0.129,7,0.185,8,0.51,10,2.604,11,0.754,15,1.639,18,0.646,20,1.58,21,0.006,22,1.218,23,0.359,29,0.215,36,0.482,37,0.063,39,2.902,40,0.679,52,2.075,53,2.406,55,0.653,56,1.873,58,0.002,59,0.002,70,2.734,72,2.638,77,1.138,78,2.202,94,1.943,106,2.734,111,2.339,112,1.432,136,1.09,137,1.154,162,2.86,170,1.855,181,1.333,185,2.446,196,2.557,200,2.406,237,4.006,238,1.343,251,2.595,261,1.111,278,2.536,319,2.013,328,2.261,373,2.553,377,2.396,382,4.396,384,2.517,385,1.594,386,2.873,388,0.999,394,2.887,431,2.192,442,2.741,523,3.216,621,2.38,722,1.956,865,3.122,886,2.192,887,2.192,890,1.696,893,3.463,894,3.277,941,1.111,1032,2.446,1055,3.264,1056,2.339,1209,2.38,1226,1.507,1249,2.075,1335,3.772,1408,4.006,1451,3.277,1458,5.202,1514,2.192,1599,1.893,1666,3.463,1670,2.318,1864,3.87,1924,4.292,1933,4.061,1936,4.061,2019,5.202,2263,4.047,2359,2.771,2369,3.544,2370,4.006,2371,4.006,2381,1.643,2382,2.075,2383,1.893,2419,2.339,2436,4.21,2523,6.455,2524,4.965,2525,5.641,2529,4.006,2536,4.006,2538,2.536,2540,1.977,2541,2.536,2542,3.87,2543,2.339,2544,2.536,2545,2.536,2548,5.641,2550,5.641,2552,2.536,2553,2.536,2556,4.965,2559,2.536,2561,4.006,2585,2.536,2598,2.536,2599,2.536,2600,4.965,2601,2.536,2603,4.006,2604,2.536,2605,6.021,2606,4.965,2607,2.536,2608,2.536,2616,2.536,2618,2.536,2619,2.536,2621,2.536,2640,5.966,2648,2.536,2667,2.836,2668,4.479,2669,4.479,2670,4.479,2671,4.006,2672,4.479,2673,2.836,2674,2.836,2675,4.479,2676,2.836,2677,4.006,2678,2.836,2679,6.306,2680,6.306,2681,4.479,2682,4.479,2683,4.006,2684,7.861,2685,2.836,2686,4.479,2687,4.479,2688,2.836,2689,2.836,2690,2.836,2691,2.836,2692,2.836,2693,2.339,2694,2.836,2695,2.836,2696,2.836,2697,3.277,2698,2.836,2699,2.836,2700,2.836,2701,2.836,2702,5.551,2703,5.551,2704,2.836,2705,6.306,2706,2.836,2707,7.086,2708,2.836,2709,2.836,2710,2.339,2711,2.836,2712,2.836,2713,6.142,2714,2.836,2715,1.977,2716,2.536,2717,2.536,2718,1.977,2719,2.836,2720,2.536,2721,2.836,2722,2.836,2723,4.479,2724,2.836,2725,2.075,2726,4.479,2727,2.836,2728,4.479,2729,2.836,2730,2.536,2731,2.836,2732,2.836,2733,2.836,2734,2.536,2735,2.836,2736,2.836,2737,2.836,2738,2.836,2739,2.836,2740,2.836,2741,2.836,2742,2.836,2743,2.536,2744,2.836,2745,2.836,2746,2.192,2747,2.836,2748,2.836,2749,2.836,2750,2.836,2751,2.836,2752,2.836,2753,2.836,2754,2.836]],["title/classes/InitAccountDto.html",[0,0.217,1494,3.364]],["body/classes/InitAccountDto.html",[0,0.371,2,1.106,3,0.153,4,0.127,5,0.135,7,0.471,8,0.98,18,0.572,21,0.006,23,0.378,29,0.213,32,1.588,37,0.161,40,0.737,58,0.005,59,0.005,127,1.396,605,2.62,607,2.982,615,2.099,722,3.032,900,5.169,901,5.581,909,3.32,1494,5.745,2755,7.698,2756,7.219,2757,7.219,2758,7.219,2759,7.219]],["title/classes/InitResetDto.html",[0,0.217,1504,3.513]],["body/classes/InitResetDto.html",[0,0.354,2,1.022,3,0.141,4,0.117,5,0.125,7,0.436,8,0.934,18,0.65,21,0.006,23,0.498,29,0.203,32,1.467,37,0.149,40,0.703,41,2.422,58,0.004,59,0.004,127,1.586,157,4.247,285,3.615,546,3.947,576,4.171,605,2.705,607,2.842,615,1.939,722,3.266,899,4.481,900,4.721,906,4.651,907,6.342,909,3.773,1248,7.647,1504,5.719,1536,5.076,2239,5.076,2755,7.947,2760,6.671,2761,5.504,2762,6.671,2763,6.671]],["title/interfaces/InternalLogOptions.html",[38,1.379,2764,3.895]],["body/interfaces/InternalLogOptions.html",[0,0.16,3,0.079,4,0.065,5,0.07,7,0.242,8,0.627,9,1.079,11,0.868,21,0.006,23,0.343,24,4.467,29,0.18,36,0.63,37,0.162,38,1.507,40,0.827,53,1.224,55,0.648,56,1.865,58,0.003,59,0.003,60,1.57,65,0.569,72,1.13,78,0.944,108,3.925,116,4.341,123,2.85,132,1.113,134,1.743,136,1.339,139,4.451,152,1.454,157,1.921,162,3.182,164,2.926,170,1.831,192,3.616,200,1.815,238,1.113,260,6.278,261,3.294,285,3.579,293,5.405,296,2.588,297,1.828,372,1.113,373,2.532,377,2.377,378,4.658,431,2.756,442,1.482,556,1.745,817,3.675,862,2.382,1031,2.086,1352,4.575,1626,2.478,1791,4.575,1935,2.382,1969,1.602,2411,6.15,2588,2.478,2764,5.073,2765,2.87,2766,5.988,2767,5.612,2768,4.542,2769,4.256,2770,4.256,2771,4.256,2772,2.87,2773,3.062,2774,3.062,2775,3.062,2776,4.256,2777,5.414,2778,3.062,2779,3.062,2780,3.062,2781,3.062,2782,3.062,2783,3.062,2784,3.062,2785,3.062,2786,3.062,2787,8,2788,4.542,2789,3.062,2790,7.961,2791,6.7,2792,6.7,2793,6.7,2794,6.7,2795,6.675,2796,6.7,2797,3.062,2798,3.062,2799,3.062,2800,3.062,2801,3.062,2802,4.256,2803,3.062,2804,3.062,2805,3.062,2806,3.062,2807,3.062,2808,3.062,2809,3.062,2810,3.062,2811,3.062,2812,3.062,2813,2.478,2814,4.575,2815,4.542,2816,5.414,2817,3.062,2818,3.062,2819,3.062,2820,3.062,2821,3.062,2822,3.062,2823,3.062,2824,3.062,2825,3.062]],["title/injectables/InternalLogger.html",[136,1.226,2772,3.895]],["body/injectables/InternalLogger.html",[0,0.138,3,0.068,4,0.056,5,0.06,7,0.209,8,0.56,9,1.742,11,0.986,15,0.944,18,0.684,20,2.066,21,0.006,22,1.463,23,0.46,24,4.246,25,1.439,29,0.167,36,0.543,37,0.15,38,1.346,40,0.796,53,1.054,55,0.854,56,1.761,58,0.003,59,0.003,65,0.753,72,1.825,77,1.25,78,1.523,94,2.096,108,3.584,116,4.778,123,2.545,132,0.958,134,1.592,136,1.196,137,1.301,139,3.396,152,1.253,157,1.655,162,3.005,164,2.613,170,1.783,192,3.575,200,1.621,238,0.958,260,5.93,261,3.131,285,3.38,293,3.428,296,2.228,297,1.575,372,0.958,373,2.262,377,2.123,378,4.318,431,2.915,442,2.392,457,1.858,556,1.503,817,3.283,862,2.051,1031,2.764,1352,4.178,1626,4.492,1791,4.178,1935,3.846,1969,1.38,2411,5.846,2588,2.134,2764,5.202,2765,2.471,2766,2.637,2767,3.802,2768,4.944,2769,3.802,2770,5.202,2771,3.802,2772,3.802,2773,4.057,2774,2.637,2775,2.637,2776,3.802,2777,4.944,2778,2.637,2779,2.637,2780,2.637,2781,2.637,2782,2.637,2783,2.637,2784,2.637,2785,2.637,2786,4.057,2787,8.173,2788,4.057,2789,2.637,2790,7.779,2791,6.328,2792,6.328,2793,6.328,2794,6.328,2795,6.376,2796,6.328,2797,2.637,2798,4.057,2799,4.944,2800,2.637,2801,4.057,2802,5.202,2803,2.637,2804,4.057,2805,2.637,2806,4.057,2807,4.944,2808,2.637,2809,4.057,2810,4.944,2811,2.637,2812,4.944,2813,5.506,2814,4.178,2815,4.057,2816,4.944,2817,2.637,2818,2.637,2819,2.637,2820,2.637,2821,2.637,2822,2.637,2823,2.637,2824,2.637,2825,2.637,2826,3.197,2827,4.917,2828,3.197,2829,3.197,2830,3.197,2831,3.197,2832,3.197,2833,3.197,2834,3.197,2835,3.197,2836,3.197]],["title/interfaces/InternalLoggerOptions.html",[38,1.379,2770,3.895]],["body/interfaces/InternalLoggerOptions.html",[0,0.162,3,0.079,4,0.066,5,0.07,7,0.245,8,0.631,9,1.09,21,0.006,23,0.381,24,4.482,29,0.181,36,0.637,37,0.163,38,1.518,40,0.818,53,1.236,55,0.652,56,1.872,58,0.003,59,0.003,60,1.586,65,0.574,72,1.142,78,0.953,108,3.948,116,4.363,123,2.871,132,1.124,134,2.165,136,1.35,139,3.682,152,1.469,157,1.941,162,3.194,164,2.947,170,1.835,192,3.62,200,1.829,238,1.124,260,6.301,261,3.305,285,3.592,293,3.867,296,2.614,297,1.847,372,1.124,373,2.551,377,2.394,378,4.681,431,2.764,442,1.497,457,2.096,556,1.763,817,3.703,862,2.406,1031,2.107,1352,4.602,1626,2.503,1791,6.036,1935,2.406,1969,1.619,2411,6.17,2588,2.503,2764,4.288,2765,2.899,2766,3.093,2767,4.288,2768,4.576,2769,4.288,2770,5.103,2771,4.288,2772,2.899,2773,3.093,2774,3.093,2775,3.093,2776,4.288,2777,5.446,2778,3.093,2779,3.093,2780,3.093,2781,3.093,2782,3.093,2783,3.093,2784,3.093,2785,3.093,2786,3.093,2787,8.011,2788,4.576,2789,3.093,2790,7.972,2791,6.724,2792,6.724,2793,6.724,2794,6.724,2795,6.694,2796,6.724,2797,3.093,2798,3.093,2799,3.093,2800,3.093,2801,3.093,2802,4.288,2803,3.093,2804,3.093,2805,3.093,2806,3.093,2807,3.093,2808,3.093,2809,3.093,2810,3.093,2811,3.093,2812,3.093,2813,2.503,2814,4.602,2815,4.576,2816,5.446,2817,3.093,2818,3.093,2819,3.093,2820,3.093,2821,3.093,2822,3.093,2823,3.093,2824,3.093,2825,3.093]],["title/classes/Jobs.html",[0,0.217,1210,2.919]],["body/classes/Jobs.html",[0,0.203,2,0.72,3,0.099,4,0.083,5,0.088,7,0.307,8,0.742,11,1.168,18,0.749,21,0.006,23,0.525,29,0.211,37,0.168,40,0.825,41,1.925,55,1.197,58,0.004,59,0.004,65,0.72,112,1.212,119,3.562,121,2.705,124,2.83,127,1.828,128,4.445,131,4.491,132,1.409,133,1.949,134,1.248,170,0.909,203,2.352,261,3.603,297,4.529,319,1.997,328,3.78,388,3.099,391,2.9,394,2.464,395,2.261,454,3.78,472,2.908,476,2.908,1210,4.339,1317,5.221,1338,7.011,1363,4.806,1367,6.699,1382,6.699,1397,5,1398,5.221,1431,5,1434,4.634,1437,4.204,1764,6.179,1770,6.699,1969,2.815,2837,4.204,2838,4.699,2839,4.699,2840,4.699,2841,4.699,2842,4.699,2843,4.699,2844,4.699,2845,4.699,2846,4.699,2847,4.699,2848,4.699,2849,3.633,2850,4.699,2851,4.204,2852,4.204,2853,4.699]],["title/controllers/JobsController.html",[485,1.661,2854,4.157]],["body/controllers/JobsController.html",[0,0.206,1,3.324,3,0.101,4,0.084,5,0.089,7,0.311,9,1.386,11,0.787,18,0.521,20,1.65,21,0.006,22,1.338,23,0.426,29,0.241,32,1.048,36,0.809,37,0.107,40,0.408,55,1.065,56,1.512,58,0.004,59,0.004,65,1.009,74,1.579,77,1.674,78,2.245,94,1.674,122,2.33,123,2.467,124,2.851,127,1.274,133,1.977,134,1.266,139,4.108,152,1.868,156,7.047,164,2.533,170,1.274,196,2.403,200,2.684,206,2.293,238,1.974,285,3.893,319,1.177,328,2.406,372,1.429,412,2.017,485,1.572,487,1.572,489,2.241,490,5.674,492,5.223,494,3.99,499,4.776,500,3.323,501,4.591,502,4.591,503,4.591,504,3.323,511,3.059,512,6.158,513,5.674,514,6.158,515,5.674,516,3.323,522,2.1,523,2.761,526,4.591,527,2.467,528,2.851,529,3.182,530,2.603,532,4.591,535,3.323,536,3.323,537,3.323,538,3.323,541,3.323,542,3.323,543,3.323,544,4.226,545,3.685,546,2.293,547,3.487,548,4.397,549,3.323,550,3.323,554,2.603,556,2.241,557,2.603,562,2.902,566,3.932,567,3.932,568,4.397,569,3.323,570,3.939,571,3.815,572,3.323,574,3.323,575,3.323,576,2.145,1210,2.761,1313,4.591,1317,3.323,1363,3.059,1397,3.182,1431,3.182,2854,5.433,2855,4.766,2856,4.766,2857,4.766,2858,4.766,2859,3.487,2860,4.766,2861,4.264,2862,4.766,2863,4.766,2864,4.766,2865,6.586,2866,4.766,2867,4.766,2868,4.766,2869,4.766]],["title/classes/JobsCreateDto.html",[0,0.217,2870,3.895]],["body/classes/JobsCreateDto.html",[0,0.381,2,0.804,3,0.111,4,0.092,5,0.098,7,0.343,8,0.8,11,0.84,18,0.747,21,0.006,23,0.516,29,0.225,32,1.154,37,0.177,40,0.808,55,1.201,58,0.004,59,0.004,65,1.297,87,1.913,122,1.502,124,2.656,127,1.825,133,2.176,134,1.394,261,3.319,328,4.002,451,4.072,457,1.982,584,4.501,599,4.055,603,3.246,604,3.366,605,2.91,606,2.412,607,2.934,608,3.639,609,3.548,613,4.213,615,1.525,616,2.467,619,2.948,620,2.948,1317,5.527,1363,5.088,1397,5.293,1398,5.527,1431,5.293,1434,4.906,1772,6.651,1776,4.328,1905,3.814,2193,5.088,2849,4.055,2859,3.838,2870,6.129,2871,4.328,2872,5.246,2873,5.246,2874,5.246,2875,5.246,2876,6.288,2877,5.246,2878,5.246,2879,5.246,2880,4.328,2881,4.055,2882,4.328]],["title/classes/JobsDto.html",[0,0.217,2859,3.687]],["body/classes/JobsDto.html",[0,0.376,2,0.771,3,0.106,4,0.088,5,0.094,7,0.329,8,0.778,11,0.817,18,0.75,21,0.006,23,0.516,29,0.223,32,1.107,37,0.174,40,0.821,55,1.201,58,0.004,59,0.004,65,1.276,87,3.409,122,2.223,124,2.583,127,1.832,133,2.087,134,1.337,261,3.263,328,3.918,451,3.96,457,1.901,584,4.125,599,3.89,603,3.114,604,3.229,605,2.885,606,2.314,607,2.885,608,3.538,609,3.45,613,4.125,615,1.463,616,2.366,619,2.828,620,2.828,624,3.89,1317,5.411,1363,4.981,1397,5.182,1398,5.411,1431,5.182,1434,4.803,1772,6.57,1776,4.152,1905,3.734,2193,4.981,2849,3.89,2859,5.001,2870,7.407,2871,4.152,2876,6.114,2880,4.152,2881,3.89,2882,4.152,2883,5.032,2884,5.032,2885,5.032,2886,5.032,2887,5.032,2888,5.032,2889,5.032,2890,5.032]],["title/modules/JobsModule.html",[166,1.511,1304,3.513]],["body/modules/JobsModule.html",[0,0.285,3,0.14,4,0.116,5,0.124,21,0.006,22,1.172,29,0.235,36,1.122,37,0.148,58,0.004,59,0.004,132,1.98,166,2.652,487,2.688,636,2.794,637,2.911,638,3.038,639,3.038,640,3.038,641,3.981,642,4.068,646,3.75,647,2.687,648,3.038,650,3.826,654,3.178,655,4.087,657,3.712,1210,3.826,1304,6.828,1313,7.065,2852,7.294,2854,7.297,2861,5.908,2891,5.908,2892,5.908,2893,5.908,2894,6.605,2895,5.908,2896,6.605,2897,6.605]],["title/injectables/JobsService.html",[136,1.226,1313,3.513]],["body/injectables/JobsService.html",[0,0.155,3,0.076,4,0.063,5,0.067,7,0.234,8,0.611,9,2.541,10,2.191,11,1.117,12,2.43,15,1.059,18,0.746,20,2.418,21,0.006,22,1.579,23,0.513,25,4.321,29,0.19,36,0.609,37,0.08,49,2.779,55,1.141,58,0.003,59,0.003,65,0.822,66,3.146,72,1.635,74,1.287,75,2.524,76,2.524,77,1.364,78,2.441,87,3.406,88,1.767,89,1.687,90,1.767,91,1.767,92,1.767,94,2.222,122,1.842,124,3.03,132,1.076,134,0.953,136,1.306,137,1.46,162,3.8,176,5.533,178,4.417,179,2.853,180,2.271,181,2.524,182,3.211,183,3.11,184,3.11,185,2.932,186,3.859,187,3.11,188,3.677,190,2.146,191,5.155,192,3.564,194,4.774,195,4.296,196,2.58,197,2.146,198,3.211,200,1.183,201,2.146,202,5.41,203,2.791,205,2.146,206,4.112,207,4.952,209,2.146,211,2.22,213,2.146,215,1.907,216,4.269,218,2.22,348,2.395,350,2.303,357,2.303,358,2.502,359,2.303,360,2.303,361,2.303,362,2.303,363,2.303,364,2.395,365,2.303,366,2.395,367,2.303,372,1.076,1210,2.079,1313,3.742,2895,3.21,2898,3.588,2899,3.588,2900,3.588]],["title/classes/JobsUpdateDto.html",[0,0.217,2881,3.895]],["body/classes/JobsUpdateDto.html",[0,0.403,2,0.962,3,0.133,4,0.11,5,0.118,21,0.006,23,0.475,29,0.237,32,1.382,37,0.193,40,0.801,55,1.153,58,0.004,59,0.004,65,1.39,122,1.799,124,2.374,133,2.606,134,1.669,261,3.097,328,3.171,584,4.2,605,3.011,606,2.889,607,3.144,608,4.091,609,3.989,613,4.595,615,1.826,616,2.954,619,3.531,620,3.531,1317,4.379,1363,4.031,1397,4.194,1398,4.379,1431,4.194,1434,3.887,1772,6.639,1905,4.16,2849,4.856,2859,4.596,2870,6.11,2871,5.183,2880,5.183,2881,6.11,2882,6.52]],["title/injectables/JwtStrategy.html",[136,1.226,985,3.895]],["body/injectables/JwtStrategy.html",[0,0.246,3,0.12,4,0.1,5,0.107,7,0.372,10,1.94,11,0.887,15,2.191,18,0.587,20,1.859,21,0.006,22,1.316,23,0.388,29,0.238,36,0.967,37,0.127,55,0.971,56,1.896,58,0.004,59,0.004,65,1.137,70,4.066,72,1.733,74,1.365,77,1.886,78,2.098,83,5.067,94,1.447,103,3.2,112,2.129,136,1.805,137,2.316,139,4.415,152,2.231,157,3.841,170,1.101,196,2.191,238,1.707,253,4.401,319,1.405,372,1.707,912,6.121,917,5.429,924,5.511,938,3.2,948,5.231,950,3.8,954,4.401,985,5.736,989,5.092,1031,4.64,1045,6.121,1046,5.736,1052,6.637,1053,5.092,1129,5.092,1722,4.762,1785,4.165,2640,6.039,2901,5.693,2902,6.637,2903,5.092,2904,5.693,2905,5.092,2906,7.384,2907,8.747,2908,5.693,2909,5.092,2910,5.693,2911,5.092,2912,5.693,2913,5.693,2914,5.693,2915,5.693,2916,5.693,2917,5.092,2918,5.693,2919,5.693,2920,5.092,2921,5.693,2922,7.42,2923,6.637,2924,5.693,2925,5.092]],["title/classes/Keyrings.html",[0,0.217,2926,3.234]],["body/classes/Keyrings.html",[0,0.258,2,0.916,3,0.126,4,0.105,5,0.112,7,0.39,8,0.872,11,1.065,18,0.705,21,0.006,22,1.499,23,0.513,29,0.21,37,0.189,40,0.852,55,1.176,58,0.004,59,0.004,65,0.916,112,1.542,119,4.183,121,3.177,127,1.723,128,4.19,131,4.331,132,1.792,134,1.588,170,1.156,203,2.226,297,4.389,319,2.2,388,2.699,394,2.894,395,2.876,460,6.212,472,3.699,476,3.699,705,4.065,2926,5.422,2927,5.347,2928,5.891,2929,5.891,2930,5.978,2931,5.978,2932,5.978,2933,5.978,2934,5.347,2935,5.978,2936,5.347,2937,5.978]],["title/classes/KeyringsCommand.html",[0,0.217,1755,3.687]],["body/classes/KeyringsCommand.html",[0,0.331,2,0.752,3,0.104,4,0.086,5,0.092,7,0.32,9,1.426,11,0.803,12,3.511,15,1.983,18,0.532,20,1.683,21,0.006,22,1.648,23,0.351,29,0.226,30,2.035,37,0.171,39,1.672,40,0.739,42,2.328,43,2.215,44,2.585,45,3.309,46,3.478,53,1.618,55,0.901,56,1.127,58,0.004,59,0.004,65,1.029,72,2.333,74,1.837,77,1.708,78,2.094,94,1.247,112,1.266,122,1.405,170,1.593,180,3.241,192,3.308,196,2.262,203,1.426,238,2.297,284,3.036,287,3.036,300,3.892,372,2.014,373,2.256,377,2.118,410,3.42,415,2.54,417,4.311,418,4.916,419,4.684,420,4.684,421,4.684,422,4.311,423,3.036,424,3.036,430,4.684,431,1.566,433,3.42,434,3.159,435,4.157,436,4.157,437,4.916,441,4.485,442,2.682,443,3.42,444,3.42,446,3.149,448,2.842,452,2.256,480,4.485,481,3.036,484,3.42,702,4.915,705,2.36,719,2.934,948,4.582,949,3.59,1015,4.74,1035,5.194,1081,3.793,1755,4.915,1756,3.59,2926,5.288,2938,4.048,2939,4.906,2940,4.906,2941,4.048,2942,3.149,2943,3.793,2944,3.59,2945,3.793,2946,4.048,2947,5.194,2948,5.543,2949,4.048,2950,4.048,2951,5.543,2952,4.048,2953,4.048,2954,5.543,2955,4.048,2956,4.048,2957,4.048,2958,4.048,2959,4.048,2960,5.543,2961,4.048]],["title/controllers/KeyringsController.html",[485,1.661,2962,4.157]],["body/controllers/KeyringsController.html",[0,0.176,1,2.972,3,0.086,4,0.072,5,0.076,7,0.266,9,1.183,11,0.907,18,0.601,20,1.9,21,0.006,22,1.488,23,0.463,29,0.238,32,0.895,36,0.691,37,0.091,40,0.504,55,1.114,56,1.742,58,0.003,59,0.003,65,0.902,74,1.412,77,1.497,78,2.386,94,1.928,122,2.537,124,3.17,127,1.467,133,1.688,134,1.081,152,1.595,164,2.162,170,1.467,180,2.491,181,1.913,196,2.616,200,2.921,206,1.958,238,2.274,285,2.595,336,2.611,372,1.22,485,1.342,487,1.342,489,1.913,490,5.287,491,5.063,492,4.867,493,2.977,494,4.174,495,4.396,499,4.943,500,2.837,501,4.105,502,5.287,503,5.287,504,4.105,507,2.977,508,4.309,511,2.611,512,5.849,513,5.287,514,5.849,515,5.287,516,2.837,522,1.793,523,2.357,525,3.31,526,4.824,527,2.106,528,2.434,529,2.717,530,2.223,531,2.977,532,5.287,533,2.977,534,2.977,535,4.105,536,2.837,537,2.837,538,2.837,541,2.837,542,2.837,543,2.837,544,4.441,545,3.146,546,1.958,547,2.977,548,3.931,549,2.837,550,2.837,554,2.223,556,1.913,557,2.223,559,3.357,560,3.146,561,2.977,562,3.342,563,2.837,566,3.357,567,3.357,568,3.931,569,2.837,570,4.139,571,4.009,572,4.105,574,4.105,575,2.837,576,2.65,580,2.977,705,2.833,1015,3.644,2926,2.611,2928,2.837,2929,2.837,2942,4.867,2943,3.146,2945,3.146,2962,4.858,2963,4.069,2964,4.069,2965,5.35,2966,4.069,2967,4.069,2968,4.069,2969,4.069,2970,4.069,2971,4.069,2972,4.069,2973,4.069,2974,4.069,2975,4.069,2976,5.889,2977,4.069,2978,4.069]],["title/classes/KeyringsCreateCommand.html",[0,0.217,2947,3.895]],["body/classes/KeyringsCreateCommand.html",[0,0.328,2,0.739,3,0.102,4,0.085,5,0.09,7,0.315,9,1.402,11,0.794,12,3.496,15,1.96,18,0.526,20,1.663,21,0.006,22,1.641,23,0.347,29,0.225,30,2,37,0.17,39,1.643,40,0.735,42,2.3,43,2.189,44,2.554,45,3.27,46,3.436,53,1.59,55,0.893,56,1.107,58,0.004,59,0.004,65,1.017,72,2.312,74,1.821,77,1.687,78,2.079,94,1.226,112,1.244,122,1.381,170,1.582,180,3.212,192,3.29,196,2.241,203,1.402,238,2.276,284,2.983,287,2.983,300,3.845,372,1.99,373,2.217,377,2.081,410,3.361,415,2.496,417,4.26,418,4.872,419,5.702,420,4.628,421,4.628,422,4.26,423,2.983,424,2.983,430,4.628,431,1.539,433,5.292,434,3.121,435,4.107,436,4.107,437,4.872,441,4.431,442,2.65,443,3.361,444,3.361,446,3.094,448,2.793,452,2.217,480,4.431,481,2.983,484,3.361,702,4.857,705,2.32,719,2.884,948,5.432,949,3.528,1015,5.62,1035,5.132,1081,3.727,1755,3.528,1756,3.528,2926,5.249,2938,3.978,2941,3.978,2942,3.094,2943,3.727,2944,3.528,2945,3.727,2946,3.978,2947,5.869,2948,5.476,2949,3.978,2950,3.978,2951,5.476,2952,3.978,2953,3.978,2954,5.476,2955,3.978,2956,3.978,2957,3.978,2958,3.978,2959,3.978,2960,5.476,2961,3.978,2979,4.821,2980,4.821]],["title/classes/KeyringsCreateDto.html",[0,0.217,2942,3.234]],["body/classes/KeyringsCreateDto.html",[0,0.362,2,0.901,3,0.124,4,0.103,5,0.11,7,0.384,8,0.863,11,1.122,18,0.726,21,0.006,22,1.487,23,0.499,29,0.208,32,1.294,37,0.17,40,0.828,55,1.189,58,0.004,59,0.004,65,1.285,87,2.146,122,1.685,127,1.772,297,3.734,319,2.07,451,4.391,457,2.223,584,4.707,593,5.546,603,3.64,604,3.776,605,2.697,607,3.069,608,4.341,613,4.028,615,1.71,619,3.307,620,3.307,621,4.456,705,4.034,2928,5.846,2929,5.846,2942,5.382,2965,4.548,2981,5.263,2982,5.263,2983,5.263,2984,5.883,2985,5.883,2986,7.501,2987,5.883,2988,5.883,2989,5.263,2990,5.263]],["title/classes/KeyringsCreateQuestions.html",[0,0.217,1756,3.687]],["body/classes/KeyringsCreateQuestions.html",[0,0.333,2,0.763,3,0.105,4,0.088,5,0.093,7,0.325,9,1.448,11,0.595,12,3.278,15,1.47,18,0.394,20,1.247,21,0.006,22,1.696,23,0.26,29,0.227,30,2.066,37,0.173,39,1.697,40,0.767,42,2.351,43,2.238,44,2.611,45,3.343,46,3.513,53,1.642,55,0.798,56,1.144,58,0.004,59,0.004,65,1.04,72,2.351,74,1.851,77,1.725,78,1.725,94,1.266,112,1.284,122,1.426,127,0.963,170,1.603,180,3.266,192,3.077,196,2.004,203,1.448,238,2.315,284,3.081,287,3.081,300,3.931,372,2.035,373,2.29,377,2.15,407,4.454,410,4.731,415,2.578,417,4.355,418,4.954,419,4.731,420,4.731,421,4.731,422,4.355,423,3.081,424,3.081,430,4.731,431,1.59,433,3.472,434,3.191,435,4.199,436,4.199,437,4.355,441,4.531,442,2.709,443,3.472,444,3.472,446,3.196,448,2.885,452,2.29,702,4.965,705,2.396,719,2.978,948,4.617,949,3.643,1015,4.777,1035,5.247,1081,3.85,1755,3.643,1756,4.965,2926,5.32,2938,4.108,2941,4.108,2942,3.196,2943,3.85,2944,3.643,2945,3.85,2946,5.599,2947,5.247,2948,5.599,2949,4.108,2950,4.108,2951,5.599,2952,4.108,2953,4.108,2954,5.599,2955,4.108,2956,4.108,2957,4.108,2958,4.108,2959,4.108,2960,5.599,2961,4.108,2991,6.787,2992,4.98]],["title/classes/KeyringsDto.html",[0,0.217,2965,3.895]],["body/classes/KeyringsDto.html",[0,0.356,2,0.869,3,0.12,4,0.1,5,0.106,7,0.37,8,0.843,11,1.111,18,0.736,21,0.006,22,1.462,23,0.502,29,0.204,32,1.248,37,0.166,40,0.839,55,1.191,58,0.004,59,0.004,65,1.262,87,3.305,122,2.36,127,1.797,297,3.647,319,2.035,451,4.289,457,2.144,584,4.379,593,5.417,603,3.51,604,3.641,605,2.66,607,3.027,608,4.266,613,3.934,615,1.649,619,3.189,620,3.189,621,4.379,624,4.386,705,3.965,2928,5.745,2929,5.745,2942,6.074,2965,5.724,2981,5.075,2982,5.075,2983,5.075,2986,7.372,2989,5.075,2990,5.075,2993,5.674,2994,5.674,2995,5.674,2996,5.674,2997,5.674]],["title/modules/KeyringsModule.html",[166,1.511,984,3.364]],["body/modules/KeyringsModule.html",[0,0.286,3,0.14,4,0.116,5,0.124,21,0.006,22,1.174,29,0.235,36,1.124,37,0.148,58,0.004,59,0.004,132,1.984,166,2.654,487,2.692,636,2.8,637,2.916,638,3.044,639,3.044,640,3.044,641,3.984,642,4.071,646,3.754,647,2.693,648,3.044,650,3.834,654,3.184,655,4.095,657,3.72,984,6.541,1015,6.272,2926,4.247,2936,7.302,2944,4.842,2962,7.304,2998,5.92,2999,5.92,3000,5.92,3001,6.618,3002,6.618,3003,6.618,3004,6.618]],["title/injectables/KeyringsService.html",[136,1.226,1015,3.118]],["body/injectables/KeyringsService.html",[0,0.149,3,0.073,4,0.061,5,0.065,7,0.226,8,0.594,9,2.515,10,2.142,11,1.109,12,2.375,15,1.02,18,0.741,20,2.404,21,0.006,22,1.564,23,0.511,25,4.296,29,0.204,36,0.587,37,0.077,49,2.701,55,1.129,56,0.793,58,0.003,59,0.003,65,0.799,66,3.086,72,1.589,74,1.251,75,2.453,76,2.453,77,1.326,78,2.44,87,3.382,88,1.702,89,1.624,90,1.702,91,1.702,92,1.702,94,2.199,121,1.433,122,1.8,124,2.987,132,1.036,134,0.918,136,1.269,137,1.406,162,3.78,170,0.668,176,5.491,178,4.334,179,2.772,180,2.66,181,2.453,182,3.12,183,3.022,184,3.022,185,2.849,186,3.804,187,3.022,188,3.617,190,2.066,191,5.106,192,3.581,194,4.724,195,4.226,196,2.602,197,2.066,198,4.189,200,2.073,201,2.066,202,5.371,203,2.775,205,2.066,206,4.066,207,4.895,209,2.066,211,2.138,213,2.066,215,1.836,216,4.189,218,2.138,238,1.036,348,2.306,350,2.217,357,2.217,359,2.217,360,2.217,361,2.217,362,2.217,363,2.217,364,2.306,365,2.217,366,2.306,367,2.217,372,1.036,666,2.85,667,3.09,705,2.51,1015,3.228,2926,2.217,2942,4.495,2944,2.528,3005,3.455,3006,3.455,3007,3.455,3008,3.455,3009,3.455,3010,3.455,3011,3.455]],["title/injectables/LocalStrategy.html",[136,1.226,986,3.895]],["body/injectables/LocalStrategy.html",[0,0.242,3,0.119,4,0.099,5,0.105,7,0.367,10,1.914,11,0.879,15,1.658,18,0.582,20,1.842,21,0.006,22,1.305,23,0.385,29,0.234,36,0.954,37,0.126,40,0.794,42,1.946,43,1.852,44,2.161,55,1.062,58,0.004,59,0.004,65,1.127,74,1.347,77,1.869,78,2.084,94,1.428,112,2.115,136,1.789,137,2.285,139,4.392,152,2.201,157,4.504,158,6.067,164,2.985,165,3.749,170,1.086,192,2.73,196,2.171,238,1.684,319,1.386,372,1.684,412,3.681,415,4.504,434,2.641,442,2.936,475,4.109,556,2.641,890,3.359,912,6.067,917,5.381,948,5.204,949,4.109,950,3.749,954,4.342,986,5.686,1045,4.633,1046,5.686,1051,4.342,1164,3.475,1722,4.72,1785,4.109,2640,6,2813,4.91,2902,6.579,2903,5.024,2905,5.024,2906,7.335,2909,5.024,2911,5.024,2917,5.024,2920,5.024,2923,6.579,2925,5.024,3012,5.616,3013,5.616,3014,5.616,3015,8.201,3016,5.616,3017,7.355,3018,5.616,3019,5.616,3020,5.616,3021,5.616,3022,5.616,3023,5.616,3024,5.616]],["title/classes/Logger.html",[0,0.217,10,1.717]],["body/classes/Logger.html",[0,0.233,2,0.828,3,0.114,4,0.095,5,0.101,7,0.353,8,0.816,10,2.921,11,1.025,18,0.679,21,0.006,23,0.503,24,4.556,29,0.213,37,0.192,40,0.844,55,1.159,58,0.004,59,0.004,65,0.828,112,1.395,119,3.918,121,3.339,127,1.658,128,4.031,131,4.195,132,1.621,134,1.436,162,2.119,170,1.387,200,2.654,203,1.572,319,2.116,388,2.836,391,3.073,394,2.71,395,2.601,431,2.29,434,3.373,472,3.346,476,3.346,722,2.528,909,3.943,938,3.039,1159,3.956,1164,3.346,1906,6.64,1911,7.2,2795,6.223,2802,5.545,2813,4.788,3025,4.837,3026,8.573,3027,5.407,3028,5.407,3029,5.407,3030,5.407,3031,5.407,3032,7.173,3033,4.837,3034,5.407,3035,4.837,3036,5.407,3037,4.837,3038,5.407,3039,5.407,3040,5.407,3041,5.407]],["title/controllers/LoggerController.html",[485,1.661,3042,4.157]],["body/controllers/LoggerController.html",[0,0.318,1,4.4,3,0.156,4,0.13,5,0.138,10,2.514,21,0.006,29,0.23,36,1.253,37,0.165,58,0.005,59,0.005,65,1.336,74,1.769,372,2.212,485,2.433,487,2.433,489,3.47,530,4.03,556,3.47,557,4.03,3042,7.192,3043,7.379,3044,6.378,3045,6.6,3046,7.379]],["title/modules/LoggerModule.html",[166,1.511,1885,3.687]],["body/modules/LoggerModule.html",[0,0.292,3,0.143,4,0.119,5,0.127,10,2.305,21,0.006,22,1.2,29,0.237,36,1.149,37,0.151,58,0.005,59,0.005,132,2.028,166,2.68,487,2.728,636,2.862,637,2.981,638,3.111,639,3.111,640,3.111,641,4.023,642,3.111,646,3.806,647,2.753,648,3.111,650,3.919,654,3.255,655,4.186,657,3.803,1885,7.112,3035,7.402,3042,7.375,3044,7.112,3045,6.052,3047,6.052,3048,6.052,3049,6.766,3050,6.052,3051,6.766,3052,6.766]],["title/injectables/LoggerService.html",[136,1.226,3044,3.687]],["body/injectables/LoggerService.html",[0,0.155,3,0.076,4,0.063,5,0.067,7,0.235,8,0.612,9,2.542,10,2.435,11,1.117,12,2.433,15,1.062,18,0.746,20,2.418,21,0.006,22,1.579,23,0.513,25,4.323,29,0.19,36,0.611,37,0.08,49,2.783,55,1.13,58,0.003,59,0.003,65,0.824,66,3.149,72,1.637,74,1.289,75,2.528,76,2.528,77,1.367,78,2.441,87,3.407,88,1.771,89,1.691,90,1.771,91,1.771,92,1.771,94,2.223,122,1.844,124,3.033,132,1.078,134,0.955,136,1.308,137,1.463,162,3.801,176,5.535,178,4.422,179,2.857,180,2.275,181,2.528,182,3.216,183,3.115,184,3.115,185,2.937,186,3.862,187,3.115,188,3.68,190,2.151,191,5.158,192,3.565,194,4.776,195,4.3,196,2.582,197,2.151,198,3.216,200,1.186,201,2.151,202,5.412,203,2.792,205,2.151,206,4.115,207,4.955,209,2.151,211,2.225,213,2.151,215,1.911,216,4.274,218,2.225,348,2.401,350,2.308,357,2.308,358,2.507,359,2.308,360,2.308,361,2.308,362,2.308,363,2.308,364,2.401,365,2.308,366,2.401,367,2.308,372,1.078,3044,3.934,3050,3.217,3053,3.596,3054,3.596,3055,3.596]],["title/controllers/ManagementController.html",[485,1.661,3056,4.157]],["body/controllers/ManagementController.html",[0,0.32,3,0.157,4,0.131,5,0.139,21,0.006,29,0.231,32,1.634,36,1.261,37,0.166,55,0.874,58,0.005,59,0.005,74,1.781,485,2.449,487,2.449,489,3.493,527,3.845,556,3.493,557,4.057,3056,7.221,3057,7.428,3058,6.644,3059,6.404,3060,6.644,3061,7.428,3062,7.428]],["title/modules/ManagementModule.html",[166,1.511,808,3.687]],["body/modules/ManagementModule.html",[0,0.269,3,0.132,4,0.11,5,0.117,18,0.494,21,0.006,29,0.236,30,2.586,36,1.059,37,0.139,55,0.733,56,1.432,58,0.004,59,0.004,77,1.585,94,1.585,166,2.713,487,2.593,554,4.296,636,2.638,637,2.748,638,2.867,639,2.867,640,2.867,641,3.878,642,2.867,646,3.617,647,2.537,648,2.867,654,4.146,808,7.278,1055,3.227,1303,6.114,1887,7.109,1889,7.109,1890,5.144,1897,5.144,1898,5.144,1899,5.144,3056,7.109,3058,5.577,3059,6.97,3060,5.577,3063,5.577,3064,5.577,3065,5.577,3066,6.97,3067,6.235,3068,6.235,3069,6.235,3070,5.577,3071,6.235]],["title/injectables/ManagementService.html",[136,1.226,3059,3.687]],["body/injectables/ManagementService.html",[0,0.329,3,0.161,4,0.134,5,0.143,15,2.775,18,0.603,21,0.005,29,0.189,36,1.293,37,0.17,55,1.045,58,0.005,59,0.005,136,2.161,137,3.098,3059,6.497,3072,7.614,3073,7.614]],["title/classes/MetadataDto.html",[0,0.217,2186,3.118]],["body/classes/MetadataDto.html",[0,0.391,2,1.067,3,0.147,4,0.122,5,0.131,7,0.455,8,0.959,11,1.007,18,0.551,21,0.006,23,0.492,29,0.233,32,1.532,37,0.156,55,1.065,58,0.005,59,0.005,123,4.686,127,1.346,605,2.564,609,4.25,614,3.426,615,2.024,616,3.274,1905,4.051,2186,5.211,2200,6.534,2201,5.095,3074,6.963,3075,6.963,3076,6.963]],["title/classes/MetadataPart.html",[0,0.217,126,4.157]],["body/classes/MetadataPart.html",[0,0.272,2,0.964,3,0.133,4,0.111,5,0.118,7,0.411,8,0.901,18,0.719,21,0.006,23,0.513,29,0.196,37,0.177,40,0.84,55,1.185,58,0.004,59,0.004,65,0.964,112,1.623,121,3.282,122,1.802,126,6.528,127,1.756,128,4.27,129,5.63,131,4.399,132,1.887,134,1.672,170,1.217,293,6.033,296,6.033,297,4.829,298,7.14,299,7.14,394,2.99,395,3.028,3077,6.294,3078,6.294,3079,6.294,3080,6.294,3081,6.294,3082,6.294]],["title/classes/MetadataPartDto.html",[0,0.217,2200,3.364]],["body/classes/MetadataPartDto.html",[0,0.345,2,0.983,3,0.136,4,0.113,5,0.12,7,0.419,8,0.911,11,1.176,18,0.724,21,0.006,23,0.478,29,0.199,32,1.411,37,0.143,40,0.783,55,1.188,58,0.004,59,0.004,127,1.768,293,6.086,296,6.086,297,4.503,298,7.202,299,7.202,585,5.582,605,2.865,607,3.025,614,3.828,615,1.865,2200,5.345,3083,6.415,3084,7.162,3085,6.415,3086,6.415,3087,6.415,3088,6.415,3089,7.809]],["title/classes/MongoDbTestInstance.html",[0,0.217,3090,4.157]],["body/classes/MongoDbTestInstance.html",[0,0.253,2,0.898,3,0.124,4,0.103,5,0.11,7,0.383,8,0.861,11,0.701,18,0.742,20,1.894,21,0.006,22,1.341,23,0.463,29,0.188,37,0.131,39,1.998,40,0.717,56,1.346,58,0.004,59,0.004,77,1.922,78,2.535,94,2.248,116,5.007,134,1.558,170,1.619,194,3.202,220,6.239,232,4.289,238,2.86,304,3.762,394,3.342,701,4.532,792,4.289,862,3.762,1157,6.838,1986,4.289,2769,4.532,3090,6.239,3091,5.863,3092,7.489,3093,7.489,3094,7.912,3095,7.912,3096,5.863,3097,7.489,3098,5.863,3099,5.863,3100,7.563,3101,5.863,3102,5.863,3103,5.863,3104,5.244,3105,7.563,3106,5.863,3107,5.863,3108,5.863,3109,5.863,3110,5.863,3111,5.863,3112,5.863,3113,5.863,3114,7.563,3115,5.863,3116,5.863,3117,5.863]],["title/interfaces/MongoosePlugin.html",[38,1.379,816,3.687]],["body/interfaces/MongoosePlugin.html",[3,0.125,4,0.072,5,0.077,7,0.268,8,0.674,11,0.91,21,0.006,23,0.363,29,0.22,32,0.902,37,0.155,38,1.62,39,1.397,40,0.848,41,1.21,42,1.42,43,1.352,44,1.577,45,2.019,46,2.122,47,2.858,58,0.003,59,0.003,60,1.734,70,3.423,102,3.906,112,1.057,132,1.229,134,1.573,157,2.122,162,1.606,192,3.594,287,2.536,319,1.716,387,4.156,388,2.086,412,2.505,475,5.568,528,3.541,590,3.268,687,4.884,719,3.541,749,3.541,753,3.169,757,3.169,761,5.084,816,5.084,817,3.952,819,4.577,838,4.577,862,4.884,870,4.577,881,5.305,924,4.639,950,2.737,990,4.884,994,4.884,995,2.999,1055,3.065,1065,6.279,1103,2.999,1150,2.999,1528,4.331,1536,3.663,1625,4.331,1779,4.884,1780,3.667,1781,4.127,1782,5.296,1783,5.296,1784,5.733,1785,4.331,1786,5.296,1787,5.296,1788,5.296,1789,5.296,1790,4.884,1791,4.127,1792,4.884,1793,4.884,1794,4.577,1795,5.296,1796,5.296,1797,6.216,1798,5.296,1799,4.884,1800,4.884,1801,4.884,1802,5.296,1803,3.667,1804,3.667,1805,3.667,1806,3.667,1807,3.382,1808,3.667,1809,7.757,1810,3.667,1811,3.667,1812,3.667,1813,3.667,1814,3.667,1815,3.667,1816,3.667,1817,3.667,1818,3.667,1819,3.667,1820,3.667,1821,3.667,1822,3.667,1823,5.296,1824,5.296,1825,3.667,1826,3.667,1827,3.667,1828,3.667,1829,3.667,1830,3.667,1831,3.667,1832,3.667,1833,3.667,1834,3.667,1835,3.667,1836,3.667,1837,3.667,1838,3.667,1839,3.667,1840,3.667,1841,3.667,1842,3.667,1843,3.667,1844,3.667,1845,3.667,1846,3.667,1847,3.667,1848,3.667,1849,3.667]],["title/classes/MongooseValidationFilter.html",[0,0.217,827,4.157]],["body/classes/MongooseValidationFilter.html",[0,0.303,2,0.804,3,0.111,4,0.092,5,0.098,7,0.343,9,2.305,10,1.787,11,0.84,18,0.557,20,1.761,21,0.006,22,1.247,23,0.368,29,0.21,36,0.891,37,0.117,39,1.787,42,1.818,43,1.73,44,2.018,55,0.933,56,1.205,58,0.004,59,0.004,67,4.693,77,1.787,94,1.787,134,1.394,139,3.548,152,2.055,170,1.795,377,3.422,386,4.104,387,4.204,431,1.675,434,2.467,442,2.806,494,3.098,522,2.312,562,2.312,615,1.525,685,6.541,686,5.799,687,5.088,688,6.987,690,4.693,691,4.328,692,4.328,693,4.328,694,4.328,698,4.692,827,6.541,1061,3.366,1062,4.055,1150,3.838,1249,5.8,1267,6.288,1329,3.838,1458,4.328,1924,7.295,1935,4.511,1942,4.328,2411,5.143,2655,4.692,2713,4.692,2743,4.692,2813,3.502,3118,7.928,3119,7.029,3120,9.285,3121,9.436,3122,5.246,3123,7.029,3124,5.246,3125,5.246,3126,5.246,3127,5.246,3128,5.246,3129,5.246,3130,5.246,3131,5.246,3132,5.246,3133,5.246,3134,5.246,3135,5.246,3136,5.246,3137,5.246,3138,5.246,3139,5.246,3140,5.246,3141,5.246]],["title/classes/NotFoundDto.html",[0,0.217,3142,4.507]],["body/classes/NotFoundDto.html",[0,0.302,2,1.073,3,0.148,4,0.123,5,0.131,7,0.458,8,0.962,18,0.669,21,0.006,23,0.442,29,0.21,32,1.541,36,1.19,37,0.157,40,0.724,55,1.153,58,0.005,59,0.005,127,1.635,203,2.037,431,2.898,522,4,562,4,605,2.87,1966,5.781,1969,3.025,3142,7.561,3143,9.078,3144,7.007,3145,7.007,3146,7.007,3147,7.007]],["title/injectables/ObjectIdValidationPipe.html",[136,1.226,544,3.234]],["body/injectables/ObjectIdValidationPipe.html",[0,0.287,3,0.141,4,0.117,5,0.125,7,0.434,11,0.794,18,0.526,20,1.664,21,0.006,22,1.179,23,0.347,29,0.203,36,1.128,37,0.149,40,0.76,42,2.835,43,2.191,53,2.698,55,1.043,56,1.526,58,0.004,59,0.004,67,4.436,77,2.08,94,1.689,106,3.273,124,3.591,133,2.756,134,1.765,136,1.991,137,2.703,340,4.632,544,5.252,546,3.937,736,3.974,781,5.482,1032,2.928,1914,5.482,1916,6.327,1920,6.752,1921,7.636,3148,8.184,3149,8.869,3150,6.644,3151,8.184,3152,6.644,3153,6.644,3154,6.644]],["title/classes/PaginatedFilterDto.html",[0,0.217,3155,4.507]],["body/classes/PaginatedFilterDto.html",[0,0.329,2,1.166,3,0.161,4,0.134,5,0.143,18,0.603,21,0.005,37,0.17,39,3.026,40,0.761,42,2.638,43,2.511,44,2.929,58,0.005,59,0.005,61,5.571,434,3.58,3155,7.943,3156,7.943,3157,7.614,3158,7.614]],["title/classes/PaginatedResponseDto.html",[0,0.217,33,3.895]],["body/classes/PaginatedResponseDto.html",[0,0.292,2,1.036,3,0.143,4,0.119,5,0.127,7,0.442,8,0.942,18,0.708,21,0.006,23,0.468,29,0.205,32,1.488,33,6.397,36,1.149,37,0.151,41,2.443,55,1.178,58,0.005,59,0.005,127,1.729,200,2.948,203,1.967,522,3.94,562,3.94,568,5.968,571,3.919,605,2.96,1966,5.582,1969,2.921,3156,8.331,3159,6.766,3160,8.275,3161,6.766,3162,6.766,3163,6.766]],["title/controllers/PasswdController.html",[485,1.661,3164,4.157]],["body/controllers/PasswdController.html",[0,0.127,3,0.062,4,0.052,5,0.055,7,0.192,10,1.569,11,0.886,18,0.587,20,1.856,21,0.006,22,1.314,23,0.387,29,0.222,32,0.646,36,0.499,37,0.066,53,0.969,55,1.114,56,1.842,58,0.003,59,0.003,72,1.402,74,0.705,77,1.171,78,2.393,94,1.883,127,1.433,152,1.151,165,3.792,170,1.753,196,2.648,200,2.782,203,2.154,238,2.404,380,2.048,408,2.384,412,2.403,431,2.23,485,0.969,487,0.969,489,1.381,494,4.172,495,4.773,499,5.025,522,1.295,525,1.651,527,1.521,556,1.381,570,4.177,571,4.646,576,1.322,647,2.311,695,1.702,705,3.094,722,2.002,741,1.757,743,2.149,890,1.757,896,3.211,899,4.047,927,3.771,928,6.247,933,2.149,934,3.792,941,3.848,942,2.384,1047,3.37,1051,2.271,1061,3.645,1186,4.127,1201,5.752,1211,2.166,1274,4.127,1468,4.483,1484,2.271,1485,3.56,1486,2.271,1487,3.56,1488,4.483,1489,2.271,1494,4.293,1495,3.37,1496,2.149,1498,4.483,1499,2.271,1500,4.662,1501,2.271,1502,3.397,1503,2.149,1504,4.483,1505,2.271,1512,3.56,1515,3.792,1531,6.484,1532,5.916,1535,2.668,1544,4.971,1569,3.211,1572,3.37,1573,3.56,1574,2.589,1579,3.37,1611,2.515,1618,3.56,1619,2.271,1627,3.37,1636,3.56,1650,4.391,1659,2.271,1722,3.645,1735,4.971,1935,5.414,3164,3.799,3165,2.938,3166,4.12,3167,3.799,3168,4.605,3169,3.799,3170,4.12,3171,2.938,3172,2.938,3173,5.421,3174,7.409,3175,4.605,3176,4.605,3177,2.938,3178,2.628,3179,2.628,3180,4.686,3181,2.938,3182,2.938,3183,2.938,3184,2.938,3185,4.12,3186,2.938,3187,2.938,3188,2.938,3189,2.938,3190,2.938,3191,2.938,3192,2.938,3193,2.938,3194,2.938,3195,2.938,3196,2.938,3197,4.605,3198,2.938,3199,2.938,3200,2.628,3201,3.799,3202,2.938,3203,2.628,3204,2.938,3205,2.938,3206,2.938,3207,7.173,3208,7.173,3209,2.938,3210,2.938,3211,2.938,3212,2.938,3213,5.68,3214,5.68,3215,2.938,3216,2.938,3217,2.628,3218,2.938,3219,2.938,3220,2.938,3221,5.081,3222,2.938,3223,2.628,3224,2.938,3225,2.938,3226,2.938,3227,4.605,3228,2.938,3229,2.938,3230,2.938,3231,2.938,3232,2.938,3233,2.938,3234,2.938,3235,2.938,3236,2.938,3237,2.938,3238,2.628,3239,2.938,3240,2.628,3241,2.628,3242,2.628,3243,2.938,3244,2.938,3245,2.938,3246,2.938,3247,4.605,3248,4.605,3249,4.605,3250,4.605,3251,4.605,3252,2.938,3253,2.938,3254,2.938]],["title/modules/PasswdModule.html",[166,1.511,3066,3.687]],["body/modules/PasswdModule.html",[0,0.274,3,0.134,4,0.111,5,0.119,21,0.006,29,0.244,36,1.077,37,0.142,58,0.004,59,0.004,166,2.604,251,3.674,487,2.621,636,2.683,637,2.795,638,2.916,639,2.916,640,2.916,641,3.908,642,2.916,646,3.656,647,2.58,648,2.916,654,3.825,1298,6.14,1303,6.14,1502,3.793,1503,4.64,1506,6.26,1507,4.903,1515,6.26,1760,5.232,3066,7.432,3070,5.672,3164,7.164,3200,5.672,3255,5.672,3256,6.342,3257,5.672,3258,6.67,3259,6.342,3260,6.342,3261,5.672,3262,6.342]],["title/injectables/PasswdService.html",[136,1.226,1515,3.364]],["body/injectables/PasswdService.html",[0,0.068,3,0.033,4,0.028,5,0.03,7,0.103,8,0.313,9,1.968,10,1.246,11,0.884,12,1.382,15,0.813,18,0.655,20,1.63,21,0.006,22,1.154,23,0.417,24,1.463,29,0.213,36,0.269,37,0.035,38,0.754,39,0.539,40,0.6,41,1.998,53,2.491,55,1.057,56,1.769,58,0.001,59,0.001,65,0.422,66,2.58,70,1.802,72,1.889,73,3.838,74,1.985,75,1.295,76,1.295,77,0.7,78,2.273,83,2.535,87,1.596,88,0.779,89,0.744,90,0.779,91,0.779,92,0.779,94,1.654,100,1.325,101,0.978,102,0.889,103,0.889,106,3.722,112,1.859,136,0.67,137,0.643,139,2.504,165,1.838,170,1.777,196,2.275,200,0.908,203,1.804,222,1.222,238,2.577,251,0.916,319,1.531,328,1.39,372,0.474,373,2.853,377,2.351,378,4.344,380,1.102,388,1.748,408,0.819,412,2.864,431,1.584,442,2.597,452,1.266,494,1.928,522,0.697,554,4.208,562,2.186,576,2.635,647,2.018,705,4.198,736,3.257,754,4.283,791,2.015,833,1.222,834,1.157,849,2.015,888,1.015,890,0.946,896,2.55,899,4.282,900,3.83,921,1.056,927,3.183,934,2.853,938,2.788,941,3.464,942,2.265,943,0.864,1032,2.186,1047,2.676,1048,1.92,1061,1.015,1083,2.129,1110,2.129,1111,2.828,1114,1.222,1173,1.704,1179,2.617,1180,1.157,1186,1.767,1209,0.84,1210,0.916,1211,1.295,1226,2.326,1239,1.056,1241,0.916,1268,2.676,1270,2.676,1272,2.55,1274,2.347,1312,2.808,1333,0.864,1334,1.157,1335,3.891,1365,2.921,1415,0.978,1443,2.129,1468,3.051,1471,1.92,1479,1.222,1480,1.305,1481,1.305,1482,1.305,1483,1.305,1484,1.222,1485,1.222,1486,1.222,1487,2.129,1488,3.051,1489,1.222,1490,1.305,1491,1.305,1492,1.305,1493,3.61,1494,2.442,1495,2.015,1496,1.157,1497,1.305,1498,2.55,1499,1.222,1500,5.144,1501,1.222,1502,3.501,1503,1.157,1504,2.55,1505,1.222,1506,3.908,1507,1.222,1508,1.838,1509,1.157,1510,1.157,1511,3.835,1512,5.233,1513,3.61,1514,2.129,1515,1.838,1516,3.018,1517,2.272,1518,3.018,1519,2.129,1520,3.018,1521,2.272,1522,2.272,1523,2.272,1524,3.018,1525,2.272,1526,3.018,1527,2.272,1528,2.676,1529,3.018,1530,4.282,1531,4.76,1532,4.519,1533,2.272,1534,1.647,1535,2.119,1536,2.263,1537,1.222,1538,1.767,1539,1.305,1540,4.175,1541,1.305,1542,2.272,1543,1.305,1544,4.526,1545,4.493,1546,4.21,1547,5.118,1548,1.305,1549,1.305,1550,1.305,1551,1.305,1552,2.272,1553,2.272,1554,2.272,1555,3.018,1556,4.093,1557,3.018,1558,1.305,1559,1.305,1560,1.305,1561,2.272,1562,1.305,1563,3.018,1564,2.272,1565,1.305,1566,2.272,1567,2.272,1568,2.272,1569,1.92,1570,1.305,1571,1.305,1572,4.283,1573,2.129,1574,3.487,1575,2.272,1576,4.519,1577,2.015,1578,2.015,1579,3.629,1580,4.093,1581,3.458,1582,1.92,1583,1.222,1584,1.222,1585,1.305,1586,1.305,1587,1.305,1588,2.272,1589,1.305,1590,1.305,1591,2.272,1592,5.367,1593,3.61,1594,2.272,1595,1.305,1596,1.92,1597,1.305,1598,1.305,1599,3.312,1600,1.305,1601,1.015,1602,1.305,1603,1.305,1604,1.305,1605,1.305,1606,1.305,1607,1.305,1608,1.305,1609,1.305,1610,1.157,1611,0.864,1612,1.305,1613,2.272,1614,1.305,1615,1.305,1616,1.305,1617,1.305,1618,1.222,1619,1.222,1620,1.305,1621,1.305,1622,3.61,1623,1.305,1624,1.305,1625,1.157,1626,1.056,1627,1.157,1628,2.272,1629,1.305,1630,2.272,1631,1.222,1632,1.222,1633,1.305,1634,5.118,1635,2.272,1636,2.129,1637,1.189,1638,1.222,1639,1.102,1640,1.305,1641,2.272,1642,1.305,1643,1.944,1644,3.018,1645,1.305,1646,1.305,1647,1.305,1648,1.305,1649,1.305,1650,1.222,1651,1.305,1652,1.305,1653,1.305,1654,2.272,1655,1.102,1656,1.305,1657,2.272,1658,1.305,1659,2.129,1660,1.305,1661,1.305,1662,1.305,1663,3.018,1664,1.305,1665,1.305,1666,1.222,1667,4.093,1668,1.305,1669,1.222,1670,0.819,1671,1.305,1672,1.305,1673,1.305,1674,1.305,1675,1.305,1676,1.305,1677,1.157,1678,2.272,1679,1.305,1680,2.272,1681,1.305,1682,2.272,1683,2.272,1684,3.018,1685,2.272,1686,1.305,1687,2.272,1688,2.272,1689,2.272,1690,2.272,1691,1.305,1692,1.305,1693,1.305,1694,1.305,1695,2.272,1696,2.272,1697,2.272,1698,2.272,1699,2.272,1700,2.272,1701,2.272,1702,2.272,1703,2.272,1704,2.272,1705,1.305,1706,1.305,1707,2.272,1708,1.305,1709,1.305,1710,1.305,1711,1.305,1712,1.305,1713,1.305,1714,1.305,1715,1.305,1716,1.305,1717,1.305,1718,1.305,1719,1.305,1720,1.305,1721,3.018,1722,2.808,1723,2.272,1724,2.272,1725,2.272,1726,2.272,1727,1.305,1728,2.272,1729,2.272,1730,3.61,1731,2.272,1732,2.272,1733,2.272,1734,2.272,1735,2.129,1736,1.222,1737,2.272,1738,1.305,1739,1.305,1740,1.305,1741,1.305,1742,1.222,1743,1.305,1744,1.305,1745,3.61,1746,1.305,1747,1.305,1748,1.305,1749,1.305,3169,2.272,3170,2.463,3217,3.272,3263,2.754,3264,2.754,3265,1.581,3266,2.754,3267,1.581,3268,1.581,3269,1.581,3270,1.581,3271,1.581,3272,1.581,3273,2.754,3274,1.581,3275,1.581,3276,1.581,3277,1.581,3278,1.581,3279,1.581,3280,1.581,3281,1.581]],["title/controllers/PasswdadmController.html",[485,1.661,3282,4.157]],["body/controllers/PasswdadmController.html",[0,0.243,3,0.119,4,0.099,5,0.106,7,0.368,10,2.512,11,0.881,18,0.584,20,1.846,21,0.006,22,1.307,23,0.385,29,0.234,32,1.24,36,0.957,37,0.126,53,1.858,55,1.112,56,1.693,58,0.004,59,0.004,72,1.716,74,1.351,77,1.874,78,2.358,94,1.874,127,1.425,152,2.208,170,1.588,196,2.425,200,1.858,203,2.143,238,1.689,485,1.858,487,1.858,489,2.65,494,4.087,495,4.486,499,4.68,522,2.483,525,3.167,527,2.917,556,2.65,571,4.27,741,3.37,743,4.123,890,3.37,941,3.634,942,4.51,1051,4.357,1494,3.762,1495,4.123,1496,4.123,1502,4.913,1508,5.484,1509,4.123,1510,4.123,1531,5.393,1532,3.762,1631,6.736,1632,4.357,1669,5.698,3166,5.041,3167,6.081,3178,5.041,3179,5.041,3180,6.081,3203,5.041,3207,6.593,3208,6.593,3221,6.593,3238,5.041,3240,5.041,3241,5.041,3242,5.041,3282,6.081,3283,5.635,3284,6.593,3285,5.635,3286,5.635,3287,5.635,3288,5.635,3289,5.635,3290,5.635,3291,5.041,3292,5.635,3293,5.635,3294,5.635,3295,5.635,3296,5.635,3297,5.635,3298,5.635,3299,5.635]],["title/modules/PasswdadmModule.html",[166,1.511,3258,3.513]],["body/modules/PasswdadmModule.html",[0,0.279,3,0.137,4,0.114,5,0.122,21,0.006,22,1.149,29,0.239,36,1.1,37,0.145,58,0.004,59,0.004,132,1.942,166,2.629,369,5.343,370,5.794,487,2.656,636,2.74,637,2.854,638,2.979,639,2.979,640,2.979,641,3.946,642,4.032,646,3.705,647,2.635,648,2.979,650,3.752,654,3.875,655,4.008,657,3.64,1298,6.172,1502,6.046,1760,5.343,3258,6.929,3282,7.233,3291,5.794,3300,5.794,3301,6.477,3302,5.794,3303,5.794,3304,6.477,3305,6.477,3306,6.477,3307,6.477]],["title/injectables/PasswdadmService.html",[136,1.226,1502,3.014]],["body/injectables/PasswdadmService.html",[0,0.124,3,0.061,4,0.051,5,0.054,7,0.188,8,0.515,9,2.672,10,1.908,11,1.099,12,2.116,18,0.747,20,2.408,21,0.006,22,1.564,23,0.506,25,4.167,29,0.191,36,0.488,37,0.064,40,0.702,41,0.849,49,2.344,53,0.948,55,1.143,56,1.925,58,0.002,59,0.002,65,0.694,66,2.8,72,1.379,74,1.086,75,2.129,76,2.129,77,1.151,78,2.513,87,3.377,88,1.416,89,1.352,90,1.416,91,1.416,92,1.416,94,2.294,112,2.112,121,1.192,122,1.604,124,2.774,132,0.862,134,0.764,136,1.102,137,1.17,162,3.676,170,0.875,176,5.014,178,2.801,179,2.406,180,1.915,181,2.129,182,2.708,183,2.623,184,2.623,185,2.473,186,3.532,187,2.623,188,2.178,190,1.719,191,4.856,192,3.437,194,4.473,195,3.885,196,2.753,197,1.719,198,2.708,200,0.948,201,1.719,202,5.171,203,2.692,205,1.719,206,3.829,207,4.611,209,1.719,211,1.779,213,1.719,215,1.528,216,3.8,218,1.779,238,0.862,261,1.774,319,1.118,341,6.338,344,4.05,345,4.242,346,4.05,347,4.05,350,1.845,352,2.571,354,4.05,355,2.571,357,1.845,358,2.004,359,1.845,360,1.845,361,1.845,362,1.845,363,1.845,364,1.919,365,1.845,367,1.845,412,1.915,576,3.304,941,1.126,1502,2.708,1508,4.242,1509,2.103,1510,2.103,1583,3.5,1722,1.845,3167,5.242,3284,4.05,3308,2.875,3309,4.527,3310,5.601,3311,2.875,3312,2.875,3313,2.875,3314,4.527,3315,2.875,3316,4.527,3317,2.875,3318,2.875,3319,2.875,3320,2.875,3321,2.571,3322,2.372,3323,2.875,3324,2.571,3325,2.875,3326,2.875,3327,2.875,3328,2.875,3329,2.875,3330,2.875,3331,2.875,3332,2.875,3333,6.354,3334,2.571,3335,5.01,3336,2.875,3337,5.601,3338,2.875,3339,4.527,3340,2.875,3341,2.571,3342,2.875,3343,2.875,3344,2.875,3345,2.875,3346,2.875]],["title/classes/PasswordPoliciesDto.html",[0,0.217,1508,3.364]],["body/classes/PasswordPoliciesDto.html",[0,0.243,2,0.587,3,0.081,4,0.067,5,0.072,7,0.25,8,0.641,18,0.716,21,0.006,23,0.526,29,0.14,32,0.843,37,0.086,40,0.483,41,2.95,55,1.183,58,0.003,59,0.003,112,0.988,127,1.748,285,4.087,319,1.939,388,3.186,412,3.686,590,3.863,605,2.792,607,1.953,611,3.757,615,1.114,647,2.293,722,3.447,894,4.123,906,2.671,909,4.158,927,2.65,934,2.592,941,2.208,1032,3.984,1508,3.762,1532,3.762,1534,3.37,1535,3.265,1536,3.487,1627,4.123,2136,4.66,2239,5.391,2761,7.006,3322,6.081,3334,5.041,3335,5.041,3341,5.041,3347,9.168,3348,3.831,3349,6.685,3350,6.685,3351,6.685,3352,6.685,3353,6.685,3354,6.685,3355,6.685,3356,6.685,3357,6.685,3358,5.635,3359,5.635,3360,5.635,3361,5.635,3362,3.831,3363,6.685,3364,7.371,3365,7.371,3366,5.635,3367,3.831,3368,9.275,3369,8.713,3370,7.371,3371,5.041,3372,3.831,3373,5.635,3374,3.831,3375,3.831,3376,5.041,3377,3.831,3378,3.161,3379,5.635,3380,3.831,3381,6.685,3382,5.635,3383,5.635,3384,5.041,3385,3.831,3386,5.635,3387,5.041,3388,5.635,3389,5.635,3390,4.649,3391,5.635,3392,3.831,3393,5.635,3394,4.649,3395,5.635,3396,5.635,3397,3.831,3398,3.831,3399,7.371,3400,3.831,3401,3.831,3402,3.831,3403,3.831]],["title/interfaces/RawBodyBufferOptions.html",[38,1.379,3404,4.507]],["body/interfaces/RawBodyBufferOptions.html",[3,0.146,4,0.121,5,0.129,7,0.45,8,0.953,11,1.167,21,0.006,23,0.471,29,0.171,37,0.187,38,1.886,40,0.86,56,1.583,58,0.005,59,0.005,60,2.916,319,1.701,495,4.571,1164,4.264,1793,5.685,1794,7.548,3404,8.061,3405,6.891,3406,6.891,3407,9.373,3408,9.373,3409,6.164,3410,6.891,3411,6.891,3412,8.368,3413,6.891,3414,6.891]],["title/classes/ResetByCodeDto.html",[0,0.217,1498,3.513]],["body/classes/ResetByCodeDto.html",[0,0.344,2,0.977,3,0.135,4,0.112,5,0.12,7,0.416,8,0.908,18,0.689,21,0.006,23,0.455,29,0.198,32,1.403,37,0.143,40,0.781,41,2.355,53,2.631,58,0.004,59,0.004,127,1.684,408,4.13,412,3.376,605,2.778,607,3.017,615,1.854,705,4.519,722,3.376,906,5.562,909,4.004,1471,6.07,1498,5.562,1500,6.618,1536,4.937,2239,4.937,2761,5.262,3169,6.582,3415,8.161,3416,6.378,3417,7.137,3418,8.161,3419,6.378,3420,7.978,3421,6.378,3422,7.978,3423,6.378]],["title/classes/ResetPasswordDto.html",[0,0.217,1488,3.513]],["body/classes/ResetPasswordDto.html",[0,0.36,2,1.049,3,0.145,4,0.12,5,0.129,7,0.447,8,0.949,18,0.66,21,0.006,23,0.436,29,0.207,32,1.507,37,0.153,40,0.801,53,2.749,58,0.005,59,0.005,127,1.612,412,2.898,605,2.737,607,3.114,615,1.991,705,4.612,722,3.296,901,5.295,906,4.775,909,3.834,1470,6.126,1471,6.266,1473,7.457,1488,5.812,3415,8.04,3424,6.849,3425,6.849,3426,7.457,3427,6.849]],["title/classes/SecurityPart.html",[0,0.217,463,4.157]],["body/classes/SecurityPart.html",[0,0.246,2,0.872,3,0.12,4,0.1,5,0.107,7,0.372,8,0.845,11,1.148,18,0.736,21,0.006,23,0.519,29,0.184,37,0.166,40,0.868,55,1.195,58,0.004,59,0.004,65,0.872,112,2.129,121,3.078,122,1.63,127,1.799,128,4.374,131,4.454,132,1.707,134,1.512,170,1.101,203,2.543,388,3.082,394,2.804,395,2.739,463,6.121,464,5.092,590,4.113,2928,5.755,3428,5.693,3429,7.384,3430,7.384,3431,7.384,3432,7.384,3433,7.384,3434,5.693,3435,5.693,3436,5.693,3437,5.693,3438,5.693,3439,5.693,3440,5.693]],["title/classes/SecurityPartDTO.html",[0,0.217,595,3.513]],["body/classes/SecurityPartDTO.html",[0,0.321,2,0.874,3,0.121,4,0.1,5,0.107,7,0.372,8,0.846,11,1.172,18,0.737,21,0.006,23,0.508,29,0.184,32,1.254,37,0.128,40,0.855,55,1.195,58,0.004,59,0.004,127,1.799,203,2.402,319,2.04,585,5.178,590,3.493,591,4.705,595,5.178,605,2.886,607,3.224,611,4.175,612,5.617,614,3.786,615,1.658,621,4.39,2928,5.759,3429,7.39,3430,7.39,3431,7.39,3432,7.39,3433,7.39,3441,5.703,3442,8.262,3443,7.428,3444,5.703,3445,5.703,3446,5.703,3447,5.703,3448,5.703,3449,5.703,3450,5.703]],["title/interfaces/ServiceSchemaInterface.html",[38,1.379,229,4.157]],["body/interfaces/ServiceSchemaInterface.html",[3,0.079,4,0.066,5,0.07,7,0.243,11,1.034,18,0.684,20,2.391,21,0.006,22,1.533,23,0.499,25,4.322,29,0.137,37,0.083,38,1.02,41,1.101,42,1.914,43,1.229,58,0.003,59,0.003,60,1.577,77,1.404,94,2.197,119,2.036,121,1.547,122,1.884,124,3.336,133,1.547,134,0.991,162,3.969,179,2.935,180,2.337,181,2.597,182,3.935,183,3.811,184,3.811,185,3.593,186,3.913,190,3.304,191,5.399,192,3.67,194,4.907,195,4.732,196,2.818,197,3.304,198,4.351,200,1.229,201,3.304,202,5.69,203,2.945,205,2.23,206,4.438,207,5.399,209,2.23,213,2.23,215,1.981,216,4.351,223,2.882,225,2.23,229,4.557,231,3.335,340,2.599,546,2.657,3451,3.729,3452,3.729,3453,3.729,3454,3.729,3455,3.729,3456,3.729,3457,3.729,3458,3.729,3459,3.729,3460,3.729]],["title/classes/Settings.html",[0,0.217,368,3.687]],["body/classes/Settings.html",[0,0.287,2,1.02,3,0.141,4,0.117,5,0.125,7,0.435,8,0.933,18,0.649,20,2.224,21,0.006,22,1.574,23,0.484,29,0.203,37,0.199,40,0.793,58,0.004,59,0.004,65,1.02,112,1.717,119,4.475,121,2.762,127,1.584,128,4.174,131,3.853,132,1.996,170,1.287,203,1.936,261,3.629,319,2.287,368,5.995,369,5.493,388,3.264,391,2.937,394,3.096,395,3.203,460,5.712,472,4.119,476,4.119,3461,5.955,3462,6.658,3463,6.658,3464,5.955,3465,6.658]],["title/controllers/SettingsController.html",[485,1.661,3466,4.157]],["body/controllers/SettingsController.html",[0,0.322,3,0.158,4,0.131,5,0.14,21,0.006,29,0.231,32,1.641,36,1.267,37,0.167,55,0.878,58,0.005,59,0.005,74,1.789,368,5.459,485,2.46,487,2.46,489,3.508,527,3.862,556,3.508,557,4.075,3466,7.24,3467,7.461,3468,6.42,3469,6.674,3470,7.461,3471,7.461]],["title/injectables/SettingsService.html",[136,1.226,3468,3.687]],["body/injectables/SettingsService.html",[0,0.329,3,0.161,4,0.134,5,0.143,15,2.775,18,0.603,21,0.005,29,0.189,36,1.293,37,0.17,55,1.045,58,0.005,59,0.005,136,2.161,137,3.098,3468,6.497,3472,7.614,3473,7.614]],["title/modules/SettingstModule.html",[166,1.511,809,3.687]],["body/modules/SettingstModule.html",[0,0.278,3,0.137,4,0.113,5,0.121,18,0.511,21,0.006,29,0.234,30,2.676,36,1.096,37,0.144,55,0.759,56,1.482,58,0.004,59,0.004,77,1.64,94,1.64,166,2.746,368,4.72,487,2.65,554,4.389,636,2.73,637,2.843,638,2.967,639,2.967,640,2.967,641,3.939,642,2.967,646,3.696,647,2.625,648,2.967,654,4.211,809,7.207,1055,3.34,1887,7.221,1889,7.221,1890,5.323,1897,5.323,1898,5.323,1899,5.323,3258,6.699,3261,5.771,3466,7.221,3468,7.03,3469,5.771,3474,5.771,3475,6.452,3476,5.771,3477,6.452,3478,6.452,3479,6.452]],["title/injectables/SmsService.html",[136,1.226,1506,3.364]],["body/injectables/SmsService.html",[0,0.21,3,0.103,4,0.085,5,0.091,7,0.317,8,0.759,9,2.583,10,2.597,11,1.062,12,2.879,15,1.434,18,0.703,20,1.671,21,0.006,22,1.183,23,0.45,29,0.203,36,0.825,37,0.109,40,0.737,41,1.434,55,1.012,58,0.004,59,0.004,65,1.022,66,4.01,70,3.286,72,2.031,74,1.6,75,3.137,76,3.137,77,1.696,83,4.753,87,2.992,88,2.392,89,2.284,90,2.392,91,2.392,92,2.392,94,1.234,103,2.73,112,1.253,136,1.623,137,1.976,170,1.792,287,3.005,319,1.199,372,1.456,412,3.224,431,2.836,441,4.454,442,1.939,448,2.813,576,3.002,687,4.281,749,2.905,888,3.117,941,1.903,1033,4.007,1098,4.344,1164,3.005,1206,4.344,1248,5.504,1506,4.454,1530,2.653,1536,3.005,1576,3.242,1799,5.504,1800,4.007,1801,4.007,1935,3.117,2730,4.344,2813,3.242,3480,7.62,3481,4.857,3482,4.857,3483,4.857,3484,6.671,3485,4.857,3486,7.62,3487,4.857,3488,4.344,3489,4.344,3490,4.857,3491,4.857,3492,4.857,3493,4.857,3494,4.857,3495,4.857,3496,4.344,3497,4.857,3498,4.857,3499,4.857,3500,6.671,3501,4.857,3502,4.857,3503,4.857,3504,4.857,3505,4.857,3506,6.671,3507,4.857,3508,4.857,3509,4.857,3510,4.857,3511,6.671,3512,7.62,3513,4.857,3514,4.857,3515,4.857,3516,4.857,3517,4.857,3518,4.857,3519,4.857,3520,4.857,3521,4.857,3522,4.857,3523,4.857,3524,4.857,3525,4.857,3526,4.857,3527,4.857,3528,7.62,3529,7.62,3530,4.857,3531,4.857,3532,4.857,3533,4.857,3534,4.857]],["title/classes/StatePart.html",[0,0.217,466,4.157]],["body/classes/StatePart.html",[0,0.247,2,0.878,3,0.121,4,0.101,5,0.108,7,0.374,8,0.848,11,1.15,18,0.72,21,0.006,23,0.517,29,0.205,37,0.167,40,0.751,41,2.589,53,1.89,55,1.185,58,0.004,59,0.004,65,0.878,112,1.478,121,3.092,122,1.641,127,1.758,128,4.124,131,4.382,132,1.718,134,1.523,170,1.108,203,2.167,297,4.922,319,1.84,388,3.09,391,2.055,394,2.816,395,2.758,466,6.149,467,5.127,727,5.529,1969,3.217,2009,5.127,2929,5.774,3535,5.732,3536,7.408,3537,7.408,3538,7.408,3539,8.282,3540,5.732,3541,5.732,3542,5.732,3543,5.732,3544,5.732,3545,5.127,3546,5.732,3547,5.732,3548,5.732,3549,5.732]],["title/classes/StatePartDTO.html",[0,0.217,598,3.687]],["body/classes/StatePartDTO.html",[0,0.337,2,0.946,3,0.131,4,0.109,5,0.116,7,0.403,8,0.89,11,1.168,18,0.737,21,0.006,23,0.487,29,0.194,32,1.359,37,0.138,40,0.67,41,2.308,55,1.195,58,0.004,59,0.004,127,1.799,297,4.681,585,4.306,598,5.721,605,2.894,607,2.709,608,4.048,614,3.785,615,1.796,727,5.728,2239,4.838,2929,5.981,3084,7.675,3089,8.067,3536,7.675,3537,7.675,3538,7.675,3550,6.177,3551,6.177,3552,6.177,3553,6.177,3554,6.177,3555,6.177,3556,6.177]],["title/classes/SyncIdentitiesDto.html",[0,0.217,1224,4.157]],["body/classes/SyncIdentitiesDto.html",[0,0.372,2,1.108,3,0.153,4,0.127,5,0.136,7,0.472,8,0.981,18,0.573,21,0.006,23,0.451,29,0.214,32,1.591,37,0.162,40,0.738,55,1.083,58,0.005,59,0.005,127,1.399,390,5.752,605,2.624,612,5.53,615,2.103,1031,5.173,1224,7.109,3557,8.617,3558,7.235,3559,7.235,3560,7.235]],["title/classes/Tasks.html",[0,0.217,1343,3.513]],["body/classes/Tasks.html",[0,0.297,2,1.053,3,0.146,4,0.121,5,0.129,7,0.449,8,0.951,11,0.999,18,0.545,21,0.006,23,0.471,29,0.223,37,0.201,55,1.059,58,0.005,59,0.005,65,1.053,112,1.774,119,4.565,121,3.467,124,3.402,127,1.33,128,3.234,131,3.93,132,2.062,133,2.853,134,1.827,170,1.33,203,1.999,394,3.158,395,3.309,472,4.255,476,4.255,1210,5.216,1343,6.277,3561,6.152,3562,6.877,3563,6.152,3564,6.152,3565,6.877]],["title/controllers/TasksController.html",[485,1.661,3566,4.157]],["body/controllers/TasksController.html",[0,0.318,1,4.4,3,0.156,4,0.13,5,0.138,21,0.006,29,0.23,36,1.253,37,0.165,58,0.005,59,0.005,65,1.336,74,1.769,372,2.212,485,2.433,487,2.433,489,3.47,530,4.03,556,3.47,557,4.03,1314,6.078,1343,5.144,3566,7.192,3567,7.379,3568,6.6,3569,7.379]],["title/modules/TasksModule.html",[166,1.511,1305,3.513]],["body/modules/TasksModule.html",[0,0.286,3,0.14,4,0.116,5,0.124,21,0.006,22,1.174,29,0.235,36,1.124,37,0.148,58,0.004,59,0.004,132,1.984,166,2.654,487,2.692,636,2.8,637,2.916,638,3.044,639,3.044,640,3.044,641,3.984,642,4.071,646,3.754,647,2.693,648,3.044,650,3.834,654,3.184,655,4.095,657,3.72,1305,6.831,1314,7.067,1343,4.614,3564,7.302,3566,7.304,3568,5.92,3570,5.92,3571,5.92,3572,5.92,3573,6.618,3574,5.92,3575,6.618,3576,6.618]],["title/injectables/TasksService.html",[136,1.226,1314,3.513]],["body/injectables/TasksService.html",[0,0.155,3,0.076,4,0.063,5,0.067,7,0.234,8,0.611,9,2.541,10,2.191,11,1.117,12,2.43,15,1.059,18,0.746,20,2.418,21,0.006,22,1.579,23,0.513,25,4.321,29,0.19,36,0.609,37,0.08,49,2.779,55,1.141,58,0.003,59,0.003,65,0.822,66,3.146,72,1.635,74,1.287,75,2.524,76,2.524,77,1.364,78,2.441,87,3.406,88,1.767,89,1.687,90,1.767,91,1.767,92,1.767,94,2.222,122,1.842,124,3.03,132,1.076,134,0.953,136,1.306,137,1.46,162,3.8,176,5.533,178,4.417,179,2.853,180,2.271,181,2.524,182,3.211,183,3.11,184,3.11,185,2.932,186,3.859,187,3.11,188,3.677,190,2.146,191,5.155,192,3.564,194,4.774,195,4.296,196,2.58,197,2.146,198,3.211,200,1.183,201,2.146,202,5.41,203,2.791,205,2.146,206,4.112,207,4.952,209,2.146,211,2.22,213,2.146,215,1.907,216,4.269,218,2.22,348,2.395,350,2.303,357,2.303,358,2.502,359,2.303,360,2.303,361,2.303,362,2.303,363,2.303,364,2.395,365,2.303,366,2.395,367,2.303,372,1.076,1314,3.742,1343,2.502,3574,3.21,3577,3.588,3578,3.588,3579,3.588]],["title/interfaces/TicketForm.html",[38,1.379,3580,3.895]],["body/interfaces/TicketForm.html",[3,0.124,4,0.103,5,0.11,7,0.382,8,0.86,21,0.006,23,0.524,29,0.187,38,2.289,40,0.882,41,2.23,42,2.617,43,1.93,58,0.004,59,0.004,60,2.476,188,2.816,340,4.08,396,4.406,397,2.816,398,2.816,457,2.854,722,3.115,1032,2.579,2137,5.301,2138,5.672,2139,5.469,2140,4.461,2150,5.301,2152,3.621,2218,4.08,2219,4.08,2220,4.08,2221,4.08,2222,4.08,2223,4.08,2224,4.08,2225,4.674,2226,4.08,2240,6.695,2263,3.756,2277,5.84,2278,4.524,3580,5.84,3581,4.828,3582,5.527,3583,6.12]],["title/interfaces/TicketFormField.html",[38,1.379,3582,3.687]],["body/interfaces/TicketFormField.html",[3,0.116,4,0.096,5,0.103,7,0.358,8,0.824,21,0.006,23,0.534,29,0.179,38,2.217,40,0.875,41,2.717,42,2.507,43,1.806,58,0.004,59,0.004,60,2.318,188,4.146,340,3.819,396,4.327,397,2.635,398,2.635,457,3.677,722,1.93,1032,3.797,2137,4.191,2138,3.515,2139,3.39,2140,2.765,2150,4.693,2152,3.39,2218,6.007,2219,6.007,2220,6.007,2221,6.007,2222,6.007,2223,6.007,2224,6.007,2225,5.544,2226,6.007,2240,6.555,2263,3.515,2277,5.593,2278,4.235,3580,4.235,3581,4.519,3582,5.927,3583,5.927]],["title/interfaces/TicketFormSection.html",[38,1.379,3583,3.687]],["body/interfaces/TicketFormSection.html",[3,0.126,4,0.105,5,0.112,7,0.389,8,0.87,11,0.914,21,0.006,23,0.525,29,0.19,38,2.309,40,0.874,41,2.256,42,2.647,43,1.964,58,0.004,59,0.004,60,2.52,188,2.866,340,4.153,396,4.427,397,2.866,398,2.866,457,3.362,722,2.099,1032,2.625,2137,5.33,2138,3.823,2139,3.686,2140,3.007,2150,5.33,2152,3.686,2218,4.153,2219,4.153,2220,4.153,2221,4.153,2222,4.153,2223,4.153,2224,4.153,2225,5.693,2226,4.153,2240,6.732,2263,5.71,2277,5.907,2278,4.605,3580,4.605,3581,4.914,3582,5.59,3583,6.51]],["title/interfaces/TokenData.html",[38,1.379,1511,3.895]],["body/interfaces/TokenData.html",[0,0.081,3,0.04,4,0.033,5,0.035,7,0.122,8,0.362,9,1.424,15,0.552,18,0.148,21,0.006,23,0.217,24,1.691,29,0.221,36,0.318,37,0.042,38,0.871,39,0.637,40,0.656,41,0.939,53,2.63,55,0.938,56,1.863,58,0.002,59,0.002,60,0.791,65,0.286,66,1.402,70,0.921,72,1.492,73,3.032,74,1.61,78,1.946,83,1.843,100,1.531,101,1.157,102,1.051,103,1.051,106,3.929,112,1.975,136,0.774,139,2.772,170,1.822,196,1.764,203,1.951,222,1.446,238,2.671,251,1.083,319,1.657,328,1.606,372,0.561,373,3.087,377,2.579,378,4.651,380,1.304,408,0.968,412,3.066,431,1.754,442,2.794,452,1.463,494,2.159,522,0.824,554,3,562,2.42,576,2.869,647,1.689,705,4.286,736,3.574,754,4.019,791,2.328,833,1.446,834,1.368,849,2.328,888,1.2,890,1.118,896,1.304,899,4.498,900,4.068,921,1.248,927,3.408,934,3.087,938,3.087,941,3.574,942,2.536,943,1.021,1047,3.038,1048,2.218,1061,1.2,1083,2.46,1110,2.46,1111,3.21,1114,1.446,1173,1.969,1179,1.903,1180,1.368,1186,1.2,1209,0.994,1210,1.083,1211,1.496,1226,2.604,1239,1.248,1241,1.083,1268,3.038,1270,3.038,1272,2.895,1274,2.665,1312,2.042,1333,1.021,1334,1.368,1335,3.813,1365,3.271,1415,1.157,1443,2.46,1468,2.218,1471,2.218,1479,1.446,1480,1.543,1481,1.543,1482,1.543,1483,1.543,1484,1.446,1485,1.446,1486,1.446,1487,2.46,1488,2.218,1489,1.446,1490,1.543,1491,1.543,1492,1.543,1493,2.625,1494,1.248,1495,2.328,1496,1.368,1497,1.543,1498,1.304,1499,1.446,1500,5.224,1501,1.446,1502,2.483,1503,1.368,1504,1.304,1505,1.446,1506,2.772,1507,1.446,1508,2.124,1509,1.368,1510,1.368,1511,4.619,1512,5.771,1513,5.259,1514,4.246,1515,1.248,1516,1.543,1517,1.543,1518,1.543,1519,1.446,1520,1.543,1521,1.543,1522,1.543,1523,1.543,1524,1.543,1525,1.543,1526,1.543,1527,1.543,1528,1.368,1529,3.425,1530,4.498,1531,5.121,1532,4.839,1533,2.625,1534,1.903,1535,2.405,1536,2.569,1537,1.446,1538,2.042,1539,1.543,1540,4.435,1541,1.543,1542,1.543,1543,1.543,1544,4.928,1545,4.929,1546,4.619,1547,5.537,1548,1.543,1549,1.543,1550,1.543,1551,1.543,1552,2.625,1553,2.625,1554,2.625,1555,3.425,1556,4.531,1557,3.425,1558,1.543,1559,1.543,1560,1.543,1561,2.625,1562,1.543,1563,3.425,1564,2.625,1565,1.543,1566,2.625,1567,2.625,1568,2.625,1569,2.218,1570,1.543,1571,1.543,1572,4.664,1573,2.46,1574,3.772,1575,2.625,1576,4.839,1577,2.328,1578,2.328,1579,4.019,1580,4.531,1581,3.829,1582,2.218,1583,1.446,1584,1.446,1585,1.543,1586,1.543,1587,1.543,1588,2.625,1589,1.543,1590,1.543,1591,2.625,1592,5.774,1593,4.042,1594,2.625,1595,1.543,1596,2.218,1597,1.543,1598,1.543,1599,3.667,1600,1.543,1601,1.2,1602,1.543,1603,1.543,1604,1.543,1605,1.543,1606,1.543,1607,1.543,1608,1.543,1609,1.543,1610,1.368,1611,1.021,1612,1.543,1613,1.543,1614,1.543,1615,1.543,1616,1.543,1617,1.543,1618,1.446,1619,1.446,1620,1.543,1621,1.543,1622,2.625,1623,1.543,1624,1.543,1625,1.368,1626,1.248,1627,1.368,1628,1.543,1629,1.543,1630,2.625,1631,1.446,1632,1.446,1633,1.543,1634,5.537,1635,2.625,1636,2.46,1637,1.373,1638,1.446,1639,1.304,1640,1.543,1641,1.543,1642,1.543,1643,2.206,1644,3.425,1645,1.543,1646,1.543,1647,1.543,1648,1.543,1649,1.543,1650,1.446,1651,1.543,1652,1.543,1653,1.543,1654,2.625,1655,1.304,1656,1.543,1657,1.543,1658,1.543,1659,2.46,1660,1.543,1661,1.543,1662,1.543,1663,3.425,1664,1.543,1665,1.543,1666,1.446,1667,4.531,1668,1.543,1669,1.446,1670,0.968,1671,1.543,1672,1.543,1673,1.543,1674,1.543,1675,1.543,1676,1.543,1677,1.368,1678,2.625,1679,1.543,1680,1.543,1681,1.543,1682,2.625,1683,2.625,1684,3.425,1685,2.625,1686,1.543,1687,2.625,1688,2.625,1689,2.625,1690,2.625,1691,1.543,1692,1.543,1693,1.543,1694,1.543,1695,2.625,1696,2.625,1697,2.625,1698,2.625,1699,2.625,1700,2.625,1701,2.625,1702,2.625,1703,2.625,1704,2.625,1705,1.543,1706,1.543,1707,1.543,1708,1.543,1709,1.543,1710,1.543,1711,1.543,1712,1.543,1713,1.543,1714,1.543,1715,1.543,1716,1.543,1717,1.543,1718,1.543,1719,1.543,1720,1.543,1721,3.425,1722,3.144,1723,2.625,1724,2.625,1725,2.625,1726,2.625,1727,1.543,1728,2.625,1729,2.625,1730,4.042,1731,2.625,1732,2.625,1733,2.625,1734,2.625,1735,2.46,1736,1.446,1737,1.543,1738,1.543,1739,1.543,1740,1.543,1741,1.543,1742,1.446,1743,1.543,1744,1.543,1745,1.543,1746,1.543,1747,1.543,1748,1.543,1749,1.543]],["title/injectables/TransformersFilestorageService.html",[136,1.226,2060,3.687]],["body/injectables/TransformersFilestorageService.html",[0,0.148,3,0.073,4,0.06,5,0.064,7,0.224,8,0.591,9,2.292,10,2.133,11,1.052,12,2.365,15,1.848,18,0.717,20,1.975,21,0.006,22,1.399,23,0.488,25,1.544,29,0.173,36,0.582,37,0.077,40,0.8,42,2.597,43,2.471,44,2.884,53,1.131,55,1.035,56,1.811,58,0.003,59,0.003,65,0.795,66,3.608,72,2.282,74,1.797,75,2.44,76,2.44,77,1.319,78,2.424,87,2.545,88,1.689,89,1.613,90,1.689,91,1.689,92,1.689,94,2.004,136,1.262,137,1.395,152,1.344,170,1.21,196,2.675,200,3.144,238,1.876,261,1.344,372,1.028,388,1.209,434,3.524,494,4.148,499,4.906,554,5.208,888,2.201,1032,1.511,1249,2.509,1722,4.016,1916,4.011,2001,4.658,2007,7.016,2060,3.796,2089,8.577,2090,5.598,2707,3.068,3584,8.632,3585,3.43,3586,6.259,3587,5.189,3588,5.189,3589,5.189,3590,5.189,3591,5.189,3592,3.43,3593,5.189,3594,9.536,3595,3.43,3596,5.189,3597,3.43,3598,5.189,3599,3.43,3600,5.189,3601,3.43,3602,5.189,3603,3.43,3604,5.189,3605,3.43,3606,6.259,3607,5.189,3608,6.259,3609,5.189,3610,6.259,3611,5.189,3612,6.259,3613,5.189,3614,3.43,3615,3.43,3616,5.189,3617,3.43,3618,3.43,3619,6.259,3620,5.189,3621,5.189,3622,3.43,3623,8.799,3624,6.704,3625,3.43,3626,7.495,3627,7.495,3628,6.978,3629,3.43,3630,6.978,3631,3.43,3632,3.43,3633,3.43,3634,3.43,3635,3.43,3636,3.43,3637,3.43,3638,3.43,3639,3.43,3640,3.43,3641,3.43,3642,3.43,3643,3.43]],["title/classes/ValidationConfigException.html",[0,0.217,2542,3.513]],["body/classes/ValidationConfigException.html",[0,0.355,2,0.865,3,0.119,4,0.099,5,0.106,7,0.369,8,0.84,11,0.675,15,1.666,18,0.69,20,1.414,21,0.006,22,1.001,23,0.386,29,0.183,36,0.959,37,0.184,56,1.695,58,0.004,59,0.004,65,1.336,70,2.78,72,2.503,74,1.971,77,1.876,87,2.998,94,1.876,108,3.376,170,1.686,386,4.804,387,5.411,394,2.133,431,2.356,562,3.623,690,3.768,1031,4.147,1296,3.935,1329,5.399,1581,3.935,1936,4.369,2542,5.144,2656,6.917,2697,4.13,2814,6.078,3644,4.657,3645,7.192,3646,7.192,3647,7.192,3648,7.413,3649,5.645,3650,5.049,3651,5.049,3652,5.049,3653,4.657,3654,4.657,3655,6.088,3656,6.088,3657,6.088,3658,4.657,3659,4.657,3660,6.782,3661,4.657,3662,4.657,3663,6.088,3664,6.088]],["title/classes/ValidationException.html",[0,0.217,2656,3.687]],["body/classes/ValidationException.html",[0,0.356,2,0.874,3,0.121,4,0.1,5,0.107,7,0.372,8,0.846,11,0.682,15,1.683,18,0.693,20,1.428,21,0.006,22,1.011,23,0.388,29,0.184,36,0.968,37,0.185,56,1.706,58,0.004,59,0.004,65,1.341,70,2.809,72,2.516,74,1.981,77,1.888,94,1.888,108,3.411,170,1.692,386,4.817,387,5.428,394,2.155,431,2.372,562,3.641,690,3.807,1031,4.175,1296,3.975,1329,6.044,1581,3.975,1936,4.39,2542,3.975,2656,6.404,2697,4.172,2814,6.102,3644,4.705,3645,7.221,3646,7.221,3647,7.221,3648,7.429,3653,4.705,3654,4.705,3655,6.128,3656,6.128,3657,6.128,3658,4.705,3659,4.705,3660,6.816,3661,4.705,3662,4.705,3663,6.128,3664,6.128,3665,7.428,3666,5.703,3667,5.703]],["title/interfaces/ValidationRecursive.html",[38,1.379,1917,4.157]],["body/interfaces/ValidationRecursive.html",[0,0.231,3,0.113,4,0.094,5,0.101,9,1.559,10,1.828,18,0.425,21,0.006,29,0.199,30,2.225,36,0.911,37,0.12,38,1.468,39,2.431,40,0.732,53,1.769,55,0.943,56,1.962,58,0.004,59,0.004,60,2.269,61,3.924,65,0.822,74,1.286,78,1.363,123,3.693,136,1.736,139,4.313,152,2.102,170,1.652,181,2.522,196,1.583,238,1.608,253,4.147,319,1.761,372,1.608,386,4.909,431,2.278,442,2.848,489,3.355,522,2.364,562,2.364,576,3.211,736,4.267,830,5.516,843,3.739,941,2.102,1032,2.364,1061,3.442,1062,4.147,1415,3.319,1576,3.581,1913,6.382,1914,4.425,1915,6.382,1916,4.147,1917,7.05,1920,4.425,1921,5.886,1923,4.798,1924,6.198,1926,5.886,1927,4.798,1928,4.798,1929,4.798,1930,4.798,1931,4.798,1932,4.798,1933,5.22,1934,4.798,1935,4.578,1936,2.85,1937,4.798,1938,4.425,1939,4.798,1940,4.798,1941,4.798,1942,4.425,1943,4.798,1944,4.798,1945,4.798,1946,4.798,1947,4.798,1948,4.798,1949,6.382,1950,4.798,1951,4.798,1952,4.798,1953,4.798,1954,4.798,1955,4.798,1956,6.382,1957,4.798,1958,4.798,1959,4.798,3668,5.364]],["title/classes/ValidationSchemaException.html",[0,0.217,2697,3.687]],["body/classes/ValidationSchemaException.html",[0,0.355,2,0.865,3,0.119,4,0.099,5,0.106,7,0.369,8,0.84,11,0.675,15,1.666,18,0.69,20,1.414,21,0.006,22,1.001,23,0.386,29,0.183,36,0.959,37,0.184,56,1.695,58,0.004,59,0.004,65,1.336,70,2.78,72,2.503,74,1.971,77,1.876,87,2.998,94,1.876,108,3.376,170,1.686,386,4.804,387,5.411,394,2.133,431,2.356,562,3.623,690,3.768,1031,4.147,1296,3.935,1329,5.399,1581,3.935,1936,4.369,2542,3.935,2656,6.917,2697,5.399,2814,6.078,3644,4.657,3645,7.192,3646,7.192,3647,7.192,3648,7.413,3650,5.049,3651,5.049,3652,5.049,3653,4.657,3654,4.657,3655,6.088,3656,6.088,3657,6.088,3658,4.657,3659,4.657,3660,6.782,3661,4.657,3662,4.657,3663,6.088,3664,6.088,3669,5.645]],["title/classes/VerifyTokenDto.html",[0,0.217,3201,4.157]],["body/classes/VerifyTokenDto.html",[0,0.369,2,1.096,3,0.151,4,0.126,5,0.134,7,0.467,8,0.975,18,0.567,21,0.006,23,0.374,29,0.212,32,1.574,37,0.16,40,0.733,58,0.005,59,0.005,127,1.384,605,2.607,607,2.966,615,2.081,705,4.669,722,3.017,898,6.402,901,5.533,909,3.292,3201,7.063,3418,7.658,3426,7.658,3670,8.562,3671,7.157,3672,7.157,3673,7.157]],["title/interfaces/WorkerResultInfoInterface.html",[38,1.379,3674,4.157]],["body/interfaces/WorkerResultInfoInterface.html",[3,0.156,4,0.13,5,0.138,18,0.584,21,0.005,29,0.183,37,0.195,38,2.386,40,0.795,41,2.178,58,0.005,59,0.005,60,3.122,61,5.398,200,2.433,695,4.274,707,5.394,1171,5.704,1172,5.398,1173,4.566,1363,4.735,3674,7.656,3675,7.798,3676,7.798,3677,7.379,3678,6.6,3679,6.087]],["title/interfaces/WorkerResultInterface.html",[38,1.379,3679,4.157]],["body/interfaces/WorkerResultInterface.html",[3,0.15,4,0.125,5,0.133,7,0.464,8,0.971,21,0.006,23,0.478,29,0.176,37,0.191,38,2.334,40,0.811,41,2.697,58,0.005,59,0.005,60,3.009,200,3.123,695,5.487,707,4.4,1171,5.498,1172,5.203,1173,4.4,1363,6.079,3674,7.815,3675,6.361,3676,6.361,3678,6.361,3679,7.036]],["title/classes/additionalFieldsPartDto.html",[0,0.217,2436,3.364]],["body/classes/additionalFieldsPartDto.html",[0,0.345,2,0.983,3,0.136,4,0.113,5,0.12,7,0.419,8,0.911,11,0.957,18,0.691,21,0.006,22,1.622,23,0.519,29,0.199,32,1.411,37,0.143,39,2.975,40,0.834,58,0.004,59,0.004,127,1.688,203,1.865,261,3.582,384,5.138,385,4.907,386,4.87,390,5.345,457,3.025,605,2.784,614,3.258,615,1.865,1984,7.809,2436,5.345,2440,5.582,3680,6.415,3681,6.415,3682,6.415,3683,6.415,3684,6.415]],["title/dependencies.html",[637,2.666,881,2.946]],["body/dependencies.html",[0,0.315,21,0.006,24,2.95,30,2.303,32,1.221,36,0.943,58,0.004,59,0.004,97,3.87,100,3.923,101,3.435,102,3.12,103,3.12,123,2.873,132,1.664,133,2.303,134,1.475,139,3.684,152,2.175,153,4.579,154,4.291,232,4.061,394,2.097,412,2.348,423,4.516,424,3.435,475,4.061,528,4.877,529,3.706,615,1.614,616,2.61,637,2.446,665,4.579,761,4.061,812,4.579,834,4.061,838,5.642,844,4.965,881,3.87,885,3.706,890,3.32,924,3.706,950,3.706,995,4.061,1233,4.965,1784,4.579,1785,5.966,1790,4.579,1791,3.87,1933,4.061,2054,4.965,2523,5.642,2540,3.87,2693,6.021,3321,4.965,3322,4.579,3324,4.965,3409,4.965,3488,4.965,3489,4.965,3496,4.965,3685,5.551,3686,5.551,3687,5.551,3688,7.298,3689,5.551,3690,8.154,3691,5.551,3692,5.551,3693,5.551,3694,5.551,3695,5.551,3696,5.551,3697,5.551,3698,5.551,3699,5.551,3700,5.551,3701,7.298,3702,5.551,3703,5.551,3704,5.551,3705,5.551,3706,5.551,3707,5.551,3708,5.551,3709,5.551,3710,5.551,3711,5.551,3712,5.551,3713,5.551,3714,5.551,3715,5.551,3716,5.551,3717,5.551,3718,5.551,3719,7.298,3720,8.662,3721,5.551,3722,5.551,3723,5.551,3724,5.551,3725,5.551,3726,5.551,3727,5.551,3728,5.551,3729,4.965,3730,5.551,3731,5.551,3732,5.551,3733,5.551,3734,5.551,3735,5.551,3736,5.551,3737,5.551,3738,5.551,3739,5.551,3740,5.551,3741,5.551,3742,5.551]],["title/miscellaneous/enumerations.html",[3743,3.267,3744,5.412]],["body/miscellaneous/enumerations.html",[5,0.107,7,0.371,21,0.006,40,0.487,41,1.678,58,0.004,59,0.004,285,3.995,297,2.799,300,3.292,304,3.647,305,6.376,336,3.647,380,3.962,1032,4.535,1170,4.689,1239,4.948,1293,4.689,1296,3.962,1333,4.048,1338,6.115,1352,5.167,1380,6.115,1416,5.084,1579,4.158,1610,4.158,1856,5.73,1990,5.167,2150,4.294,2301,4.948,2368,5.084,2372,5.084,2575,4.689,2746,4.394,2765,4.394,2767,5.73,2771,5.73,3545,6.63,3743,4.394,3744,5.084,3745,5.683,3746,8.741,3747,5.683,3748,7.412,3749,8.248,3750,5.683,3751,7.412,3752,5.683,3753,5.683,3754,5.683,3755,5.683,3756,5.683,3757,5.683,3758,5.683,3759,5.683,3760,7.412,3761,7.412,3762,7.412,3763,7.412,3764,7.412,3765,7.412,3766,7.412,3767,7.412,3768,5.683,3769,5.683,3770,5.683,3771,5.683,3772,5.683,3773,5.683,3774,5.683,3775,5.683,3776,5.683,3777,5.683,3778,5.683,3779,3.794,3780,5.084,3781,5.084,3782,5.683,3783,5.683,3784,5.683,3785,5.683,3786,5.683,3787,5.683,3788,5.683,3789,5.683,3790,5.683,3791,5.683,3792,5.683,3793,5.683,3794,5.683,3795,5.683,3796,5.683,3797,5.683,3798,5.683,3799,5.683]],["title/index.html",[7,0.276,3800,3.78,3801,3.78]],["body/index.html",[4,0.121,21,0.005,58,0.005,59,0.005,636,2.904,719,4.105,722,2.418,927,3.925,941,3.525,942,4.321,1103,6.107,1211,3.925,1226,3.647,1380,5.662,1530,4.559,1534,4.105,1540,3.976,1574,3.857,1637,4.04,1781,4.784,2439,4.784,2641,6.453,2746,6.453,3802,7.467,3803,6.863,3804,6.887,3805,6.139,3806,6.887,3807,5.662,3808,5.662,3809,5.662,3810,5.662,3811,5.662,3812,5.819,3813,6.139,3814,6.139,3815,6.139,3816,6.139,3817,6.139,3818,5.306,3819,6.139,3820,6.863,3821,6.863,3822,6.139,3823,8.047,3824,5.021,3825,6.139,3826,6.139,3827,6.139,3828,6.863,3829,6.139,3830,6.863,3831,6.863,3832,5.165,3833,6.863]],["title/classes/inetOrgPerson.html",[0,0.217,1643,2.678]],["body/classes/inetOrgPerson.html",[0,0.163,2,0.577,3,0.08,4,0.066,5,0.071,7,0.246,8,0.633,11,1.19,18,0.769,21,0.006,23,0.531,29,0.138,37,0.124,40,0.891,58,0.003,59,0.003,65,0.577,112,0.971,121,2.308,122,1.078,127,1.879,128,4.569,131,4.589,132,1.129,134,1.001,162,3.659,170,0.728,203,2.715,285,2.452,319,2.305,388,3.507,391,3.313,394,2.103,395,1.812,452,3.044,460,2.626,899,3.615,900,3.517,1643,2.957,2140,3.341,2298,3.369,3834,3.766,3835,4.418,3836,5.117,3837,4.88,3838,4.88,3839,4.418,3840,4.418,3841,6.618,3842,4.418,3843,4.418,3844,4.418,3845,4.418,3846,4.418,3847,4.418,3848,4.418,3849,4.418,3850,3.766,3851,3.766,3852,3.766,3853,3.766,3854,3.766,3855,3.766,3856,3.766,3857,3.766,3858,3.766,3859,3.766,3860,3.766,3861,3.766,3862,3.766,3863,3.766,3864,3.766,3865,3.766,3866,3.766,3867,3.766,3868,3.766,3869,3.766]],["title/classes/inetOrgPersonCreateDto.html",[0,0.217,3870,3.895]],["body/classes/inetOrgPersonCreateDto.html",[0,0.332,2,0.643,3,0.089,4,0.074,5,0.079,7,0.274,8,0.685,11,1.202,18,0.777,21,0.006,23,0.513,29,0.149,32,0.923,37,0.158,40,0.875,58,0.003,59,0.003,65,0.922,112,2.457,127,1.898,391,3.384,452,3.239,605,3.001,606,1.93,607,3.4,610,4.198,614,3.931,615,1.22,899,3.846,900,3.742,2140,3.554,2193,4.937,2451,2.597,3835,4.701,3836,5.444,3837,4.701,3838,4.701,3839,4.701,3840,4.701,3842,4.701,3843,4.701,3844,4.701,3845,4.701,3846,4.701,3847,4.701,3848,4.701,3849,4.701,3870,5.444,3871,3.463,3872,4.197,3873,5.386,3874,4.197,3875,8.258,3876,8.359,3877,4.197,3878,4.197,3879,4.197,3880,4.197,3881,4.197,3882,4.197,3883,3.754,3884,4.197,3885,3.754,3886,4.197,3887,4.197,3888,4.197,3889,4.197,3890,4.197,3891,4.197,3892,4.197,3893,4.197,3894,4.197,3895,3.245,3896,3.463]],["title/classes/inetOrgPersonDto.html",[0,0.217,2451,3.118]],["body/classes/inetOrgPersonDto.html",[0,0.325,2,0.614,3,0.085,4,0.07,5,0.075,7,0.262,8,0.663,11,1.197,18,0.772,21,0.006,23,0.51,29,0.144,32,0.881,37,0.153,40,0.872,58,0.003,59,0.003,65,1.051,87,3.557,112,2.436,127,1.886,391,3.354,452,3.154,605,2.983,606,1.842,607,3.379,610,4.059,614,3.902,615,1.165,899,3.746,900,3.645,2140,3.462,2193,4.831,2451,3.602,3835,4.579,3836,5.302,3837,4.579,3838,4.579,3839,4.579,3840,4.579,3842,4.579,3843,4.579,3844,4.579,3845,4.579,3846,4.579,3847,4.579,3848,4.579,3849,4.579,3870,7.632,3871,3.305,3873,5.208,3875,8.172,3876,8.279,3883,3.583,3885,3.583,3895,3.097,3896,3.305,3897,4.006,3898,4.006,3899,4.006,3900,4.006,3901,4.006,3902,4.006,3903,4.006,3904,4.006,3905,4.006,3906,4.006,3907,4.006,3908,4.006,3909,4.006,3910,4.006,3911,4.006,3912,4.006,3913,4.006,3914,4.006]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.217,3895,3.895]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.38,2,0.887,3,0.123,4,0.102,5,0.109,21,0.006,29,0.186,32,1.274,37,0.186,40,0.872,58,0.004,59,0.004,65,1.275,112,2.568,391,3.569,452,2.664,605,3.106,606,2.664,607,3.526,610,5.231,614,4.104,615,1.684,899,3.163,900,3.078,2140,2.923,2451,3.584,3835,3.866,3836,4.477,3837,3.866,3838,3.866,3839,3.866,3840,3.866,3842,3.866,3843,3.866,3844,3.866,3845,3.866,3846,3.866,3847,3.866,3848,3.866,3849,3.866,3870,5.801,3871,4.778,3895,5.801,3896,6.19]],["title/license.html",[3800,3.78,3801,3.78,3915,3.78]],["body/license.html",[21,0.005,58,0.005,59,0.005]],["title/modules.html",[636,2.894]],["body/modules.html",[21,0.004,58,0.004,59,0.004,635,4.375,636,2.772,803,5.066,807,4.795,808,4.795,809,4.795,979,4.568,984,4.375,1298,4.205,1303,4.205,1304,4.568,1305,4.568,1750,5.066,1884,4.795,1885,4.795,2255,5.066,2516,4.795,2631,4.568,3066,4.795,3258,4.568,3916,10.312,3917,10.312,3918,10.312,3919,10.312]],["title/overview.html",[3920,6.119]],["body/overview.html",[2,0.609,21,0.006,58,0.003,59,0.003,60,1.683,137,1.618,166,1.192,427,5.316,487,1.311,635,5.878,636,1.683,637,1.753,638,1.829,639,1.829,640,1.829,641,1.79,642,1.829,643,3.558,644,3.558,645,3.558,646,2.664,647,1.618,648,1.829,737,4.762,803,7.051,804,3.558,805,3.558,806,3.558,807,7.216,808,6.568,809,6.286,948,5.139,979,6.678,980,3.558,981,3.558,982,3.558,983,3.558,984,5.878,985,5.281,986,5.281,1015,5.316,1179,5.139,1298,6.148,1299,3.558,1300,3.558,1301,3.558,1302,3.558,1303,5.997,1304,5.99,1305,5.99,1312,5.514,1313,5.99,1314,5.99,1502,5.139,1506,4.56,1515,4.56,1750,7.051,1751,3.558,1877,4.998,1881,3.558,1882,3.558,1883,3.558,1884,6.442,1885,5.835,2060,4.998,2063,7.088,2126,3.558,2127,3.558,2128,3.558,2174,4.998,2255,5.801,2256,3.558,2257,3.558,2359,5.448,2496,6.138,2516,5.835,2517,3.558,2518,3.558,2519,3.558,2626,3.558,2627,3.558,2628,3.558,2631,5.56,2662,3.558,2663,3.558,2891,3.558,2892,3.558,2893,3.558,2998,3.558,2999,3.558,3000,3.558,3044,4.998,3047,3.558,3048,3.558,3059,4.998,3063,3.558,3064,3.558,3065,3.558,3066,6.902,3255,3.558,3257,3.558,3258,6.259,3300,3.558,3302,3.558,3303,3.558,3468,4.998,3474,3.558,3476,3.558,3570,3.558,3571,3.558,3572,3.558,3920,3.558,3921,3.977,3922,3.977,3923,3.977,3924,3.977,3925,3.977]],["title/properties.html",[8,0.689,881,2.946]],["body/properties.html",[4,0.137,8,0.889,21,0.005,58,0.005,59,0.005,722,2.752,792,5.714,2641,6.038,3729,6.986,3804,6.443,3805,6.986,3806,6.443,3807,6.443,3915,6.986]],["title/miscellaneous/typealiases.html",[3743,3.267,3926,6.051]],["body/miscellaneous/typealiases.html",[7,0.43,21,0.005,22,1.167,23,0.462,40,0.564,41,1.942,58,0.004,59,0.004,121,2.729,124,2.486,162,2.578,194,3.593,261,2.578,297,3.241,390,4.392,396,3.825,457,3.073,548,5.43,590,3.094,690,5.43,707,4.071,917,5.951,1136,5.428,1137,6.71,1138,4.813,1144,5.428,1147,6.71,1149,5.428,1164,5.033,1165,4.813,1166,5.428,1167,5.428,2291,5.885,2308,7.276,2837,5.885,2851,7.276,2927,5.885,2934,7.276,3025,5.885,3033,7.276,3461,5.885,3464,7.276,3561,5.885,3563,7.276,3648,6.288,3743,5.086,3927,6.579,3928,6.579,3929,6.579,3930,6.579,3931,6.579,3932,6.579,3933,6.579,3934,8.134,3935,6.579,3936,6.579,3937,8.134,3938,6.579,3939,6.579,3940,6.579,3941,8.134,3942,8.134,3943,6.579,3944,6.579,3945,6.579,3946,6.579,3947,6.579,3948,6.579]],["title/additional-documentation/cahier-des-charges.html",[1637,1.379,2369,1.795,3949,1.91,3950,2.857,3951,2.857]],["body/additional-documentation/cahier-des-charges.html",[4,0.127,21,0.005,58,0.003,59,0.003,60,2.301,73,3.365,97,3.791,100,1.757,232,4.754,636,1.545,719,2.184,782,3.012,919,3.266,921,3.63,924,3.63,927,4.04,934,2.501,941,3.963,942,4.695,943,3.933,960,4.864,1173,2.259,1186,3.49,1209,4.933,1211,4.59,1219,3.012,1221,3.266,1226,3.826,1434,2.259,1500,4.807,1530,4.693,1532,2.437,1535,2.115,1574,5.266,1577,2.671,1584,2.823,1601,2.343,1611,4.205,1637,4.155,1638,2.823,1639,3.791,1670,4.178,1781,2.545,2319,2.823,2322,3.266,2344,2.545,2381,3.15,2382,3.979,2406,3.012,2439,2.545,2443,2.343,2462,2.437,2482,2.671,2489,6.24,2610,3.012,2641,5.024,2746,2.823,2776,2.823,3390,3.012,3779,3.63,3802,4.864,3804,6.659,3806,5.361,3807,3.012,3809,3.012,3810,3.012,3811,3.012,3812,5.829,3815,3.266,3816,3.266,3817,3.266,3818,2.823,3819,3.266,3822,3.266,3823,6.887,3824,2.671,3825,3.266,3826,3.266,3827,6.44,3829,5.813,3832,4.021,3950,3.266,3951,3.266,3952,3.651,3953,3.651,3954,3.651,3955,3.266,3956,4.204,3957,6.117,3958,5.361,3959,6.498,3960,3.651,3961,3.651,3962,5.438,3963,5.14,3964,5.438,3965,3.012,3966,3.651,3967,5.906,3968,5.361,3969,5.438,3970,3.651,3971,3.266,3972,3.651,3973,3.651,3974,2.823,3975,5.438,3976,3.012,3977,3.012,3978,3.651,3979,3.979,3980,4.864,3981,5.361,3982,3.651,3983,3.651,3984,3.012,3985,3.651,3986,3.651,3987,3.979,3988,3.651,3989,3.266,3990,3.651,3991,3.266,3992,3.651,3993,3.651,3994,3.266,3995,3.651,3996,3.266,3997,3.651,3998,3.651,3999,3.651,4000,3.266,4001,3.651,4002,3.651,4003,3.651,4004,3.651,4005,3.651,4006,3.651,4007,3.651,4008,3.651,4009,2.671,4010,3.651,4011,5.438,4012,3.651,4013,3.651,4014,4.864,4015,3.651,4016,3.651,4017,3.651,4018,3.651,4019,3.651,4020,3.266,4021,3.651,4022,3.651,4023,3.651,4024,3.651,4025,3.651,4026,3.651,4027,5.94,4028,6.91,4029,3.651,4030,3.651,4031,3.651,4032,3.651,4033,3.266,4034,3.651,4035,3.651,4036,3.651,4037,3.651,4038,3.651,4039,3.651,4040,6.659,4041,3.266,4042,3.266,4043,3.651,4044,5.438,4045,3.651,4046,3.651,4047,3.651,4048,3.651,4049,3.266,4050,5.438,4051,5.438,4052,4.864,4053,3.266,4054,3.012,4055,3.651,4056,5.94,4057,7.2,4058,3.651,4059,3.651,4060,3.651,4061,3.266,4062,3.651,4063,3.651,4064,3.651,4065,3.651,4066,3.651,4067,3.651,4068,3.651,4069,3.651,4070,3.651,4071,3.651,4072,3.651,4073,3.651,4074,3.651,4075,3.651,4076,3.012,4077,3.651,4078,3.651,4079,3.012,4080,3.651,4081,3.651,4082,2.823,4083,3.651,4084,3.651,4085,3.651,4086,3.266,4087,3.651,4088,3.651,4089,3.651,4090,3.651,4091,3.651,4092,3.651,4093,3.651,4094,3.651,4095,3.266,4096,3.651,4097,3.651,4098,3.651,4099,3.651,4100,3.651,4101,3.651,4102,3.651,4103,3.651]],["title/additional-documentation/documentation-technique.html",[2369,2.045,3832,2.251,3949,2.176,4082,2.813]],["body/additional-documentation/documentation-technique.html",[21,0.005,58,0.005,59,0.005,1637,3.411,3958,6.52,4056,6.52,4104,6.52,4105,6.52,4106,7.903,4107,7.069,4108,6.52,4109,7.069]],["title/additional-documentation/documentation-technique/demon.html",[2369,2.375,3949,2.527,4110,4.225]],["body/additional-documentation/documentation-technique/demon.html",[21,0.005,58,0.005,59,0.005,1103,6.647,1611,4.326,3958,7.496,3980,7.086,4111,7.921,4112,7.921]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[79,2.469,251,1.85,2369,1.795,3949,1.91,4113,3.194]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.199,2,0.708,5,0.168,9,2.335,15,1.903,21,0.006,29,0.21,36,0.785,37,0.103,53,2.125,55,0.544,56,1.061,58,0.004,59,0.004,63,4.983,65,0.708,70,3.175,71,6.969,73,6.063,74,1.926,78,1.175,79,6.53,83,5.068,97,5.175,100,3.101,102,3.623,103,3.623,113,5.766,116,3.855,117,4.134,136,1.568,170,0.894,238,1.933,251,4.3,722,1.628,909,2.964,927,3.031,934,2.125,941,3.95,942,4.647,943,4.054,1048,4.494,1209,4.489,1211,3.972,1226,4.489,1274,2.966,1332,4.134,1383,4.134,1431,3.085,1441,4.134,1530,2.524,1538,2.966,1540,3.734,1574,5.229,1577,4.716,1596,3.222,1599,3.085,1611,2.524,1637,3.204,1670,4.157,1781,3.222,1792,3.813,1933,3.381,2443,4.137,2488,4.134,2605,3.813,2715,5.175,3185,4.134,3779,3.085,3808,3.813,3824,3.381,3956,3.573,3963,5.639,3965,3.813,3967,3.381,3979,3.381,4009,4.716,4014,4.134,4027,3.813,4107,5.766,4114,3.573,4115,3.813,4116,6.446,4117,4.134,4118,5.318,4119,8.031,4120,9.158,4121,4.134,4122,4.134,4123,4.621,4124,6.446,4125,6.446,4126,6.446,4127,4.621,4128,5.766,4129,6.64,4130,4.134,4131,4.621,4132,4.134,4133,4.621,4134,3.813,4135,4.621,4136,4.621,4137,4.621,4138,4.134,4139,4.621,4140,4.621,4141,4.621,4142,4.134,4143,3.573,4144,4.134,4145,4.134,4146,4.983,4147,4.621,4148,4.621,4149,4.621,4150,4.621,4151,5.766,4152,3.573,4153,4.621,4154,3.222,4155,4.621,4156,4.621,4157,4.621,4158,4.134,4159,4.621,4160,4.621,4161,4.621,4162,4.621,4163,4.621,4164,4.621,4165,4.621]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[1211,1.009,1637,1.542,2369,1.206,3949,1.284,3979,1.57,4166,2.146,4167,1.92,4168,2.146]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.006,29,0.153,37,0.088,45,0.857,53,1.735,56,1.618,58,0.002,59,0.002,78,1.847,100,3.266,106,3.47,116,1.041,121,1.241,122,2.233,124,0.658,134,1.398,166,1.723,170,1.536,179,0.925,180,2.431,181,2.197,183,3.049,184,2.28,185,2.149,186,2.247,188,3.592,191,1.008,192,2.836,194,2.149,195,2.626,202,2.28,206,2.96,207,1.008,220,1.436,232,4.967,238,2.035,251,4.742,285,2.059,310,3.52,314,1.557,319,1.153,336,1.117,387,1.041,390,1.997,442,2.902,452,1.376,454,2.656,485,0.986,487,0.574,546,0.837,576,1.347,641,0.783,654,0.837,701,3.042,865,2.086,877,1.436,899,1.634,900,1.59,909,3.587,926,1.436,927,3.945,934,3.24,938,2.958,941,3.73,942,4.544,943,2.874,1032,1.318,1138,3.418,1157,1.345,1164,1.077,1209,4.972,1211,3.899,1219,1.436,1226,3.608,1227,1.345,1312,3.377,1333,0.951,1334,1.273,1335,1.789,1365,1.162,1434,1.077,1530,3.848,1534,1.789,1535,1.733,1538,1.92,1540,4.081,1574,5.002,1576,1.162,1596,2.743,1601,2.998,1611,3.139,1637,4.026,1643,2.483,1655,2.086,1670,4.177,1677,1.273,1736,1.345,1794,1.345,1807,1.436,2140,1.51,2292,2.435,2295,1.997,2301,1.162,2310,2.676,2311,2.468,2313,1.345,2319,1.345,2320,4.707,2326,1.997,2333,1.997,2342,1.345,2356,1.557,2359,1.077,2375,1.557,2379,1.436,2383,3.837,2390,4.756,2420,1.557,2451,1.851,2481,4.068,2482,1.273,2631,1.213,2715,3.257,2718,2.743,2734,3.52,3090,5.601,3092,1.557,3093,1.557,3094,1.557,3095,1.557,3097,1.557,3104,3.52,3173,2.879,3180,1.436,3223,2.676,3378,1.436,3390,1.436,3779,1.997,3808,1.436,3809,1.436,3812,4.289,3813,1.557,3814,1.557,3818,1.345,3824,1.273,3832,3.256,3835,2.627,3837,1.997,3838,1.997,3839,1.997,3840,1.997,3842,1.997,3843,1.997,3844,1.997,3845,1.997,3846,1.997,3847,1.997,3848,1.997,3849,1.997,3955,2.676,3956,1.345,3963,2.627,3967,1.273,3979,2.189,3984,3.246,4000,1.557,4009,3.418,4028,1.345,4042,1.557,4053,1.557,4054,2.468,4056,6.657,4079,1.436,4086,4.179,4095,2.676,4104,2.468,4105,2.468,4114,2.313,4115,2.468,4118,5.075,4121,1.557,4129,4.179,4132,2.676,4134,1.436,4138,2.676,4142,1.557,4144,3.52,4145,1.557,4146,5.249,4154,2.743,4167,6.835,4169,6.495,4170,2.676,4171,2.992,4172,5.747,4173,6.88,4174,5.262,4175,6.789,4176,3.042,4177,3.52,4178,2.992,4179,3.935,4180,7.799,4181,2.676,4182,3.246,4183,4.179,4184,5.262,4185,2.992,4186,2.992,4187,2.313,4188,2.992,4189,1.74,4190,1.74,4191,2.676,4192,1.74,4193,1.74,4194,4.179,4195,1.74,4196,2.992,4197,2.992,4198,1.74,4199,2.676,4200,6.152,4201,1.74,4202,3.52,4203,1.74,4204,1.74,4205,1.74,4206,1.74,4207,3.935,4208,1.74,4209,5.262,4210,1.74,4211,5.262,4212,2.992,4213,2.992,4214,1.74,4215,1.436,4216,1.74,4217,1.557,4218,1.74,4219,1.74,4220,1.345,4221,1.74,4222,1.557,4223,1.74,4224,1.436,4225,5.262,4226,1.74,4227,1.557,4228,1.74,4229,4.672,4230,7.045,4231,4.672,4232,1.74,4233,1.74,4234,1.74,4235,5.747,4236,1.74,4237,1.74,4238,1.557,4239,1.436,4240,2.992,4241,2.992,4242,2.992,4243,2.992,4244,2.992,4245,2.992,4246,2.992,4247,1.345,4248,1.74,4249,2.992,4250,1.74,4251,1.74,4252,2.992,4253,2.992,4254,2.992,4255,1.74,4256,1.74,4257,1.74,4258,1.74,4259,1.74,4260,1.74,4261,1.436,4262,1.74,4263,1.74,4264,1.74,4265,1.74,4266,3.246,4267,1.74,4268,1.74,4269,1.74,4270,4.741,4271,1.74,4272,7.268,4273,1.74,4274,1.74,4275,1.74,4276,1.74,4277,1.74,4278,1.74,4279,1.557,4280,1.74,4281,1.74,4282,1.557,4283,1.74,4284,1.74,4285,1.74,4286,1.74,4287,4.672,4288,1.74,4289,1.74,4290,1.74,4291,1.74,4292,1.74,4293,1.74,4294,1.74,4295,1.74,4296,4.672,4297,4.672,4298,4.672,4299,1.74,4300,1.74,4301,1.74,4302,1.74,4303,1.74,4304,1.74,4305,1.436,4306,1.74,4307,1.74,4308,1.74,4309,1.557,4310,1.74,4311,1.74,4312,2.313,4313,1.74,4314,1.74,4315,1.74,4316,1.74,4317,1.74,4318,1.74,4319,1.557,4320,1.557,4321,1.74,4322,1.74,4323,1.74,4324,2.468,4325,1.74,4326,1.74,4327,5.809,4328,1.74,4329,1.557,4330,1.74,4331,1.74,4332,1.74,4333,1.74,4334,2.992,4335,4.756,4336,1.74,4337,1.74,4338,1.436,4339,1.74,4340,1.557,4341,1.74,4342,2.676,4343,2.992,4344,1.436,4345,2.992,4346,1.74,4347,1.74,4348,2.992,4349,1.74,4350,1.74,4351,2.992,4352,1.74,4353,3.935,4354,2.992,4355,1.557,4356,1.74,4357,1.74,4358,1.74,4359,2.992,4360,1.345,4361,1.74,4362,1.436,4363,1.74,4364,1.436,4365,1.74,4366,1.74,4367,2.992,4368,1.74,4369,2.992,4370,1.74,4371,1.557,4372,1.74,4373,1.74,4374,1.74,4375,1.74,4376,1.74,4377,1.74,4378,1.74,4379,1.74,4380,1.74,4381,1.74,4382,1.74,4383,1.345,4384,1.74,4385,1.74,4386,1.557,4387,1.74,4388,2.992,4389,3.935,4390,2.992,4391,2.313,4392,1.74,4393,1.74,4394,1.74,4395,1.74,4396,1.74,4397,1.74,4398,1.74,4399,2.992,4400,1.74,4401,1.557,4402,1.557,4403,1.74,4404,1.74,4405,1.74,4406,1.74,4407,1.436,4408,1.74,4409,1.74,4410,1.74,4411,1.436,4412,1.74,4413,1.74]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1637,1.379,1936,1.697,2369,1.795,3949,1.91,3968,2.635]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.191,21,0.005,23,0.327,40,0.536,45,3.083,58,0.003,59,0.003,72,1.906,78,1.591,100,2.132,134,2.095,136,1.078,162,1.736,166,1.328,196,2.328,251,4.567,382,5.059,386,2.294,431,1.415,722,1.561,885,4.178,909,2.038,921,2.958,927,3.412,934,2.878,935,3.656,941,3.9,942,4.976,943,3.963,1209,5.02,1211,4.333,1226,4.19,1303,2.844,1530,2.42,1534,2.65,1535,2.567,1538,2.844,1540,3.626,1574,5.179,1582,3.089,1611,4.306,1637,4.179,1670,3.756,1677,3.242,1781,3.089,1864,3.089,1936,5.144,2342,4.838,2344,3.089,2359,4.49,2381,2.567,2383,5.263,2406,5.163,2442,3.089,2481,3.426,2482,3.242,2489,7.123,2523,5.61,2540,5.059,2547,5.598,2640,3.242,2671,3.964,2677,5.598,2683,5.598,2684,5.598,2693,6.861,2710,5.163,2715,4.363,2716,5.598,2717,5.598,2718,3.089,2725,3.242,3037,3.964,3812,5.059,3832,3.873,3956,3.426,3963,5.263,3967,4.579,3968,5.163,3974,3.426,3976,3.656,3977,3.656,3979,5.309,3984,3.656,3987,4.579,3994,5.598,4009,3.242,4082,3.426,4117,3.964,4118,3.656,4122,3.964,4146,3.426,4151,3.964,4152,3.426,4154,3.089,4177,3.964,4182,3.656,4187,3.426,4194,3.964,4199,3.964,4220,6.095,4239,3.656,4247,4.838,4261,3.656,4266,3.656,4270,3.656,4279,3.964,4324,3.656,4338,3.656,4342,6.491,4362,3.656,4383,4.838,4414,3.964,4415,6.259,4416,6.259,4417,3.656,4418,6.259,4419,4.431,4420,5.598,4421,4.431,4422,4.431,4423,3.964,4424,4.431,4425,4.431,4426,4.431,4427,4.431,4428,4.431,4429,4.431,4430,6.259,4431,4.431,4432,4.431,4433,4.431,4434,4.431,4435,4.431,4436,4.431,4437,5.598,4438,4.431,4439,4.431,4440,3.656,4441,4.431,4442,6.259,4443,4.431,4444,6.259,4445,4.431,4446,3.656,4447,4.431,4448,4.431,4449,3.964,4450,4.431,4451,4.431,4452,4.431,4453,4.431,4454,4.431,4455,4.431,4456,4.431,4457,6.259,4458,4.431]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[2369,2.045,3949,2.176,4108,3.001,4109,3.254]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.006,22,1.266,23,0.478,40,0.307,41,0.637,43,2.353,58,0.002,59,0.002,100,1.725,112,0.925,122,1.027,133,2.96,134,0.573,166,0.646,188,2.866,261,1.405,285,3.265,305,2.773,319,2.135,345,3.582,408,1.856,546,1.725,576,2.415,647,0.877,722,2.973,749,2.145,885,4.55,909,2.118,927,3.967,934,3.282,935,2.959,941,3.92,942,4.707,943,4.173,1032,2.833,1138,1.578,1154,3.799,1209,4.833,1211,3.967,1226,3.166,1530,4.818,1534,1.29,1535,3.451,1538,1.384,1540,4.134,1574,5.199,1578,1.578,1596,1.503,1601,1.384,1611,3.512,1637,3.808,1639,1.503,1655,4.751,1670,3.694,1742,3.56,2134,4.975,2136,1.503,2137,4.645,2138,1.384,2139,1.334,2140,2.708,2150,2.078,2218,3.741,2219,4.153,2220,3.741,2221,3.741,2222,3.741,2223,3.741,2224,4.153,2225,4.416,2226,4.153,2263,4.374,2264,3.799,2341,1.929,2342,2.773,2344,1.503,2345,1.929,2381,5.111,2383,1.439,2390,3.56,2444,4.55,2446,1.503,2449,6.092,2480,1.929,2481,2.773,2483,2.959,2575,1.779,2588,5.549,2715,1.503,2718,1.503,2725,1.578,3173,4.359,3387,1.929,3582,2.624,3583,2.624,3624,4.8,3779,4.946,3780,1.929,3781,4.8,3810,2.959,3811,2.959,3812,4.153,3818,1.667,3832,3.978,3957,1.578,3963,3.074,3965,6.304,3971,3.208,3974,1.667,3987,3.369,3989,1.929,4009,2.624,4033,3.208,4041,1.929,4049,1.929,4054,1.779,4079,2.959,4108,3.799,4114,1.667,4128,3.208,4130,1.929,4134,1.779,4143,1.667,4146,1.667,4154,1.503,4170,3.208,4173,6.199,4176,4.971,4181,3.208,4183,4.119,4215,1.779,4222,1.929,4227,1.929,4238,3.208,4239,1.779,4247,1.667,4261,2.959,4305,4.427,4309,6.835,4319,1.929,4324,4.915,4327,1.929,4329,5.751,4335,1.667,4340,1.929,4355,4.119,4360,1.667,4386,3.208,4391,1.667,4414,1.929,4417,3.799,4449,1.929,4459,7.842,4460,9.574,4461,3.208,4462,6.815,4463,3.586,4464,5.366,4465,6.43,4466,5.957,4467,3.586,4468,4.604,4469,3.586,4470,7.137,4471,3.586,4472,6.43,4473,3.586,4474,3.586,4475,4.604,4476,5.957,4477,2.156,4478,2.156,4479,2.156,4480,1.929,4481,2.156,4482,3.586,4483,1.929,4484,5.366,4485,5.366,4486,4.427,4487,2.156,4488,2.156,4489,5.366,4490,1.929,4491,2.156,4492,3.586,4493,2.156,4494,2.156,4495,2.156,4496,2.156,4497,2.156,4498,3.586,4499,5.366,4500,4.119,4501,3.586,4502,6.43,4503,2.156,4504,2.156,4505,2.156,4506,2.156,4507,4.604,4508,3.586,4509,4.8,4510,1.929,4511,2.156,4512,3.586,4513,2.156,4514,1.929,4515,2.156,4516,2.156,4517,2.156,4518,2.156,4519,3.586,4520,3.586,4521,3.586,4522,5.366,4523,5.366,4524,2.156,4525,2.156,4526,4.604,4527,2.156,4528,2.156,4529,2.156,4530,1.929,4531,1.929,4532,2.156,4533,1.929,4534,2.156,4535,4.604,4536,4.604,4537,4.604,4538,4.604,4539,4.604,4540,5.957,4541,3.586,4542,2.156,4543,2.156,4544,2.156,4545,2.156,4546,2.156,4547,2.156,4548,2.156,4549,2.156,4550,3.586,4551,3.586,4552,2.156,4553,5.366,4554,4.604,4555,2.156,4556,3.586,4557,2.156,4558,2.156,4559,2.156,4560,2.156,4561,2.156,4562,2.156,4563,2.156,4564,1.929,4565,2.156,4566,2.156,4567,3.586,4568,1.929,4569,2.156,4570,4.604,4571,2.156,4572,2.156,4573,2.156,4574,2.156,4575,2.156,4576,2.156,4577,3.586,4578,2.156,4579,2.156,4580,2.156,4581,3.586,4582,5.366,4583,2.156,4584,2.156,4585,5.957,4586,2.156,4587,2.156,4588,2.156,4589,2.156,4590,3.586,4591,2.156,4592,2.156,4593,2.156,4594,3.586,4595,2.156,4596,2.156,4597,2.156,4598,2.156,4599,2.156,4600,2.156,4601,2.156,4602,2.156,4603,2.156,4604,2.156,4605,2.156,4606,2.156,4607,2.156,4608,3.208]],["title/additional-documentation/documentation-utilisateur.html",[921,2.429,2369,2.045,3832,2.251,3949,2.176]],["body/additional-documentation/documentation-utilisateur.html",[21,0.005,58,0.005,59,0.005,941,3.104,1530,4.326,1637,3.419,1936,4.209,3832,4.901,3957,5.796,4104,6.535,4105,6.535]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1211,1.207,2344,1.79,2369,1.443,3949,1.536,4312,1.985,4446,2.118,4609,2.297]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.006,23,0.397,58,0.002,59,0.002,285,3.211,300,2.359,384,3.891,385,4.096,386,1.303,431,1.3,452,1.158,454,3.678,460,4.51,495,3.218,525,3.311,749,2.435,885,2.718,899,1.375,900,3.679,909,2.975,927,4.28,934,3.786,941,3.92,942,4.807,943,4.144,1209,4.599,1211,3.567,1214,2.077,1226,4.032,1333,2.224,1434,1.557,1519,4.555,1530,2.801,1534,3.067,1535,3.748,1538,3.291,1540,3.748,1546,1.946,1569,1.755,1574,5.031,1578,2.979,1582,4.107,1599,1.68,1601,5.166,1610,2.979,1611,3.98,1637,3.475,1639,2.839,1643,4.278,1670,3.772,1936,2.164,1985,2.839,1998,2.839,2140,1.27,2292,4.003,2295,3.423,2343,2.252,2344,3.575,2373,3.642,2378,3.642,2379,4.23,2380,2.252,2381,4.861,2382,5.065,2383,5.602,2384,3.642,2385,3.642,2390,1.946,2422,6.466,2441,2.839,2443,1.615,2444,2.718,2445,3.575,2446,3.575,2449,2.839,2462,5.695,2540,3.575,2588,1.68,2718,1.755,2725,2.979,3173,1.842,3384,3.642,3394,3.359,3417,5.27,3779,3.933,3812,1.755,3824,1.842,3832,1.557,3835,3.933,3837,4.621,3838,4.621,3839,1.68,3840,1.68,3842,1.68,3843,1.68,3844,1.68,3845,1.68,3846,3.933,3847,1.68,3848,1.68,3849,1.68,3957,5.551,3963,3.423,3967,2.979,3974,3.964,3976,2.077,3977,2.077,3981,6.792,3987,2.979,3996,2.252,4027,2.077,4028,4.555,4040,4.23,4052,2.252,4061,2.252,4076,2.077,4082,1.946,4143,5.634,4152,3.148,4154,1.755,4173,5.865,4176,3.964,4182,3.359,4187,3.148,4191,2.252,4215,2.077,4217,2.252,4220,3.964,4224,3.359,4247,3.148,4266,4.861,4270,3.359,4305,3.359,4312,6.851,4320,2.252,4335,3.148,4338,2.077,4344,4.23,4360,3.148,4364,2.077,4383,3.964,4391,3.148,4401,3.642,4402,2.252,4407,2.077,4411,6.012,4437,3.642,4440,3.359,4446,6.466,4461,3.642,4480,2.252,4483,3.642,4486,2.077,4500,3.642,4510,3.642,4531,3.642,4568,2.252,4609,5.787,4610,5.892,4611,7.364,4612,7.506,4613,7.01,4614,3.642,4615,3.642,4616,4.072,4617,5.892,4618,4.072,4619,5.892,4620,5.892,4621,2.517,4622,2.517,4623,2.517,4624,2.517,4625,2.517,4626,2.517,4627,2.517,4628,5.128,4629,2.517,4630,4.072,4631,4.072,4632,4.072,4633,4.072,4634,4.072,4635,5.892,4636,5.892,4637,4.072,4638,5.892,4639,4.072,4640,4.072,4641,5.27,4642,4.072,4643,4.587,4644,5.128,4645,3.642,4646,5.128,4647,5.128,4648,8.05,4649,3.642,4650,3.642,4651,4.072,4652,2.517,4653,2.517,4654,4.072,4655,4.072,4656,2.252,4657,2.517,4658,2.517,4659,4.587,4660,2.517,4661,2.517,4662,2.517,4663,2.517,4664,2.517,4665,2.252,4666,2.517,4667,5.128,4668,4.072,4669,4.072,4670,5.27,4671,5.27,4672,5.892,4673,5.27,4674,5.892,4675,5.27,4676,5.892,4677,5.892,4678,4.072,4679,2.517,4680,4.072,4681,2.517,4682,2.517,4683,2.517,4684,2.517,4685,2.517,4686,2.517,4687,5.892,4688,4.072,4689,4.072,4690,2.517,4691,2.517,4692,2.517,4693,2.517,4694,2.517,4695,2.517,4696,2.517,4697,5.892,4698,2.517]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[941,0.916,1637,1.009,1936,1.243,2369,1.314,2422,1.929,2610,1.929,3949,1.398,4699,2.338]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.719,21,0.005,22,0.505,23,0.52,40,0.763,41,2.468,58,0.002,59,0.002,133,1.864,192,2.066,261,2.865,285,2.785,297,3.771,305,3.474,319,2.172,384,2.526,385,2.526,390,4.881,391,2.266,394,2.388,408,2.881,452,1.31,454,2.268,546,1.37,590,2.113,722,2.577,749,3.329,849,2.083,885,3,899,1.555,900,1.513,909,3.649,926,3.707,927,4.01,934,3.363,941,3.893,942,4.927,943,3.994,1033,4.592,1209,4.675,1211,3.599,1213,2.547,1214,2.349,1226,3.656,1365,1.901,1530,3.452,1535,2.603,1537,2.202,1540,2.603,1569,3.133,1574,4.793,1582,1.985,1599,3,1601,5.24,1611,1.555,1637,3.525,1643,3.656,1655,1.985,1670,3.272,1936,3.886,1938,3.707,1985,4.797,1989,2.083,2140,2.268,2292,2.781,2319,4.303,2381,4.73,2382,2.083,2383,3.716,2440,3.133,2441,5.336,2442,1.985,2444,4.22,2445,4.407,2462,4.593,2540,5.531,2588,1.901,2710,2.349,2715,1.985,2718,1.985,2720,2.547,2725,5.805,3173,2.083,3371,4.02,3376,4.02,3378,2.349,3394,3.707,3779,1.901,3835,1.901,3837,1.901,3838,1.901,3839,1.901,3840,1.901,3842,1.901,3843,1.901,3844,1.901,3845,1.901,3846,1.901,3847,1.901,3848,1.901,3849,1.901,3957,2.083,3963,3.716,3981,4.592,3987,4.073,3991,4.02,4020,2.547,4028,6.133,4040,6.545,4076,2.349,4114,2.202,4115,2.349,4143,4.887,4152,2.202,4154,1.985,4158,2.547,4173,5.319,4176,2.202,4187,2.202,4202,2.547,4220,3.474,4224,2.349,4282,2.547,4312,2.202,4335,2.202,4344,2.349,4360,3.474,4362,5.676,4364,2.349,4371,4.02,4383,3.474,4391,2.202,4407,4.592,4411,5.215,4417,2.349,4420,4.02,4423,4.979,4440,4.592,4486,2.349,4490,2.547,4509,2.547,4514,2.547,4530,2.547,4533,2.547,4564,2.547,4608,8.428,4611,2.547,4612,2.547,4613,2.547,4614,4.02,4615,2.547,4641,4.979,4643,5.654,4645,2.547,4649,2.547,4650,2.547,4656,7.097,4659,4.979,4665,4.02,4670,4.02,4671,4.02,4673,2.547,4675,2.547,4700,2.848,4701,2.848,4702,2.848,4703,2.848,4704,2.848,4705,2.848,4706,2.848,4707,2.848,4708,2.848,4709,2.848,4710,2.848,4711,2.848,4712,4.494,4713,4.494,4714,4.494,4715,6.88,4716,2.848,4717,2.848,4718,2.848,4719,4.494,4720,2.848,4721,2.848,4722,2.848,4723,4.494,4724,2.848,4725,4.494,4726,2.848,4727,4.494,4728,6.88,4729,5.567,4730,4.494,4731,4.494,4732,6.88,4733,5.567,4734,2.848,4735,2.848,4736,4.494,4737,5.567,4738,2.848,4739,6.321,4740,4.494,4741,5.567,4742,2.848,4743,4.494,4744,2.848,4745,4.494,4746,2.848,4747,4.494,4748,2.848,4749,4.494,4750,4.494,4751,2.848,4752,4.494,4753,2.848,4754,2.848,4755,4.494,4756,2.848,4757,4.494,4758,4.494,4759,2.848,4760,4.494,4761,6.321,4762,2.848,4763,4.494,4764,2.848,4765,4.494,4766,2.848,4767,2.848,4768,2.848,4769,7.934,4770,6.88,4771,4.494,4772,4.494,4773,5.567,4774,4.494,4775,4.494,4776,2.848,4777,2.848,4778,2.848,4779,2.848,4780,2.848,4781,2.848,4782,2.848,4783,2.848,4784,2.848,4785,2.848,4786,2.848,4787,2.848,4788,2.848,4789,2.848,4790,2.848,4791,2.848,4792,2.848,4793,2.848,4794,2.848,4795,2.848]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":576,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.0.0/0",{"_index":2935,"title":{},"body":{"classes/Keyrings.html":{}}}],["0.0.5",{"_index":3699,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":3706,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":3729,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.40.3",{"_index":3702,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3705,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3734,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3724,"title":{},"body":{"dependencies.html":{}}}],["000000000000000000000000",{"_index":1873,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["01",{"_index":4739,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["03.38",{"_index":3523,"title":{},"body":{"injectables/SmsService.html":{}}}],["07/schema",{"_index":4714,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":285,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PasswordPoliciesDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1.0.0",{"_index":3726,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3698,"title":{},"body":{"dependencies.html":{}}}],["1.0.13",{"_index":3687,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3709,"title":{},"body":{"dependencies.html":{}}}],["1.1.5",{"_index":3697,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":3721,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":3733,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":3742,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":3737,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":3708,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":3715,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3378,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.3",{"_index":3695,"title":{},"body":{"dependencies.html":{}}}],["10.0.6",{"_index":3694,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":3689,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":3693,"title":{},"body":{"dependencies.html":{}}}],["10.3.9",{"_index":3690,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":4754,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1000",{"_index":756,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["10y",{"_index":2957,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["12",{"_index":1519,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["12.1.0",{"_index":3727,"title":{},"body":{"dependencies.html":{}}}],["123456",{"_index":3417,"title":{},"body":{"classes/ResetByCodeDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["14.1.2",{"_index":3713,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":4677,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["16",{"_index":1517,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["18",{"_index":3922,"title":{},"body":{"overview.html":{}}}],["19",{"_index":3921,"title":{},"body":{"overview.html":{}}}],["1900",{"_index":1527,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["1980",{"_index":4676,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1y",{"_index":1080,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":305,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.2",{"_index":3688,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":3738,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3692,"title":{},"body":{"dependencies.html":{}}}],["2.4.5",{"_index":3741,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4749,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["200",{"_index":721,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["201",{"_index":2373,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":4688,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":4742,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":4738,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["22",{"_index":3925,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1041,"title":{},"body":{"injectables/AuthService.html":{}}}],["25",{"_index":1838,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["256",{"_index":1522,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["27",{"_index":3923,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2575,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":3701,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":3719,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":3691,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":3731,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3381,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["30000",{"_index":4165,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["30_000",{"_index":1349,"title":{},"body":{"injectables/BackendsService.html":{}}}],["3600",{"_index":1040,"title":{},"body":{"injectables/AuthService.html":{}}}],["3f4ac",{"_index":3422,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["4",{"_index":1742,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":3725,"title":{},"body":{"dependencies.html":{}}}],["4.15.3",{"_index":3717,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3740,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":3711,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1581,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["5",{"_index":1033,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SmsService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":3107,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.1.1",{"_index":3739,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":3714,"title":{},"body":{"dependencies.html":{}}}],["5.8.2",{"_index":3704,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":3794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["500",{"_index":696,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["5000",{"_index":2785,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":1805,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["5f7b1b3b7f7b1b3b7f7b1b3b",{"_index":3034,"title":{},"body":{"classes/Logger.html":{}}}],["6.10.0",{"_index":3703,"title":{},"body":{"dependencies.html":{}}}],["6.9.14",{"_index":3723,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":755,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/GithubUpdate.html":{}}}],["604800",{"_index":1525,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["7",{"_index":1042,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.1.0",{"_index":3712,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":3696,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":3732,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":3363,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["8",{"_index":894,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["8.16.0",{"_index":3700,"title":{},"body":{"dependencies.html":{}}}],["8.4.3",{"_index":3718,"title":{},"body":{"dependencies.html":{}}}],["87",{"_index":3924,"title":{},"body":{"overview.html":{}}}],["9",{"_index":3798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["99",{"_index":3792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["999999",{"_index":1549,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["9]+/.test(current",{"_index":790,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["9]+\\.[0",{"_index":789,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["9a",{"_index":502,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":1722,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["__dirname",{"_index":851,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/abstracts/abstract",{"_index":3325,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["_common/abstracts/abstract.controller",{"_index":530,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":1332,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":888,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":366,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["_common/abstracts/dto/custom",{"_index":619,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":2203,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":472,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":135,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/constants/event",{"_index":227,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["_common/data/api",{"_index":2941,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["_common/data/console",{"_index":1059,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":532,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":952,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":739,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubUpdate.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["_common/errors/validationexception",{"_index":2543,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":2362,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["_common/filters/mongoose",{"_index":828,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/guards/auth.guard",{"_index":826,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/helpers/pick",{"_index":542,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/pipes/dto",{"_index":831,"title":{},"body":{"modules/AppModule.html":{}}}],["_common/pipes/object",{"_index":545,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/agent.type",{"_index":954,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":397,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":549,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":3653,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":2696,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_debug",{"_index":1644,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["_dto/_parts/additionalfields.dto",{"_index":2698,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/agents.dto",{"_index":663,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/ask",{"_index":1484,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["_dto/change",{"_index":1486,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["_dto/config.dto",{"_index":2690,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/execute",{"_index":1234,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/filestorage.dto",{"_index":2059,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_dto/form.dto",{"_index":2173,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":2356,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_dto/jobs.dto",{"_index":2860,"title":{},"body":{"controllers/JobsController.html":{}}}],["_dto/keyrings.dto",{"_index":3008,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["_dto/parts/security.part.dto",{"_index":668,"title":{},"body":{"injectables/AgentsService.html":{}}}],["_dto/reset",{"_index":1489,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["_dto/sync",{"_index":1237,"title":{},"body":{"controllers/BackendsController.html":{}}}],["_dto/verify",{"_index":3202,"title":{},"body":{"controllers/PasswdController.html":{}}}],["_enum/action",{"_index":1240,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{}}}],["_enum/types",{"_index":2152,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1861,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":2304,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_enums/state.enum",{"_index":2848,"title":{},"body":{"classes/Jobs.html":{}}}],["_enums/states.enum",{"_index":2306,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_exception",{"_index":1963,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_id",{"_index":122,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"injectables/TasksService.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_interfaces/execute",{"_index":1346,"title":{},"body":{"injectables/BackendsService.html":{}}}],["_metadata",{"_index":3149,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_model",{"_index":178,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["_options",{"_index":2773,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parts",{"_index":4223,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":2459,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":2307,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":4208,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/concerned",{"_index":2849,"title":{},"body":{"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["_parts/data.part.schema",{"_index":3031,"title":{},"body":{"classes/Logger.html":{}}}],["_parts/inetorgperson.dto",{"_index":2458,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":4210,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":2305,"title":{},"body":{"classes/Identities.html":{}}}],["_queue",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{}}}],["_req",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":2648,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/filestorage.schema",{"_index":2130,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["_schemas/form.schema",{"_index":2259,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":2357,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["_schemas/jobs.schema",{"_index":2895,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["_schemas/logger.schema",{"_index":3050,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["_schemas/tasks.schema",{"_index":3574,"title":{},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["_service",{"_index":557,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{}}}],["_services/transformers",{"_index":2061,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["_validation",{"_index":2366,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["abortearly",{"_index":2740,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["abortsignal.timeout(1000",{"_index":777,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstract.service",{"_index":98,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/TasksController.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractqueueprocessor:11",{"_index":1328,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:12",{"_index":1325,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:13",{"_index":1327,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:37",{"_index":1320,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:9",{"_index":1326,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractschema",{"_index":119,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["abstractservice",{"_index":66,"title":{"injectables/AbstractService.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:17",{"_index":91,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:18",{"_index":92,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:19",{"_index":88,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservice:20",{"_index":90,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["abstractservicecontext",{"_index":80,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["abstractserviceschema",{"_index":176,"title":{"injectables/AbstractServiceSchema.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:118",{"_index":363,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:15",{"_index":3007,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["abstractserviceschema:153",{"_index":358,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:17",{"_index":661,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:195",{"_index":364,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:23",{"_index":350,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:257",{"_index":365,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:27",{"_index":662,"title":{},"body":{"injectables/AgentsService.html":{}}}],["abstractserviceschema:318",{"_index":359,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:34",{"_index":360,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:44",{"_index":357,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:50",{"_index":361,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractserviceschema:84",{"_index":362,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["abstractsettingsservice",{"_index":341,"title":{"classes/AbstractSettingsService.html":{}},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["abstractsettingsservice:13",{"_index":3317,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["abstractsettingsservice:22",{"_index":3318,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["abstractsettingsservice:7",{"_index":3319,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["abstractsettingsservice:76",{"_index":3312,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["abstraite",{"_index":4116,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acc",{"_index":2585,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["acc[err.path",{"_index":2742,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["acc[groupindex",{"_index":2578,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["acc[groupindex].elements.push",{"_index":2581,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["accent",{"_index":4315,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accepted",{"_index":3384,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access_token",{"_index":1035,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["access_token_expires_in",{"_index":1004,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":1005,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":4078,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{}}}],["accompagnement",{"_index":4089,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":4059,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["account.dto",{"_index":1496,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["account.dto.ts",{"_index":2756,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["account.dto.ts:8",{"_index":2758,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["accéder",{"_index":4124,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acls",{"_index":2003,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["action",{"_index":1397,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["actions",{"_index":4568,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["actiontype",{"_index":1239,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["actiontype.identity_create",{"_index":1289,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_delete].includes(added.name",{"_index":1290,"title":{},"body":{"controllers/BackendsController.html":{}}}],["actiontype.identity_password_reset",{"_index":1724,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["actiontype.identity_update",{"_index":1288,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["activation",{"_index":1621,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["active",{"_index":1380,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["adapter",{"_index":853,"title":{},"body":{"modules/AppModule.html":{}}}],["add",{"_index":234,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["added",{"_index":1287,"title":{},"body":{"controllers/BackendsController.html":{}}}],["additional",{"_index":2369,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["additionalfields",{"_index":2292,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":382,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":2436,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{}}}],["additionalfieldspartdtostub",{"_index":4207,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":399,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{}}}],["additionalfilters",{"_index":4548,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionnel",{"_index":4639,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":2382,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["administrateurs",{"_index":4051,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adresse",{"_index":4630,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["aes",{"_index":1521,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["affichage",{"_index":4022,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":4560,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affiche",{"_index":1212,"title":{},"body":{"controllers/BackendsController.html":{}}}],["affirmer",{"_index":4263,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterall(async",{"_index":4245,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":4243,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterevent",{"_index":269,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.count",{"_index":273,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.created",{"_index":303,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.data",{"_index":271,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.deleted",{"_index":339,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.result",{"_index":333,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.updated",{"_index":324,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.count",{"_index":272,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.created",{"_index":302,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.data",{"_index":270,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.deleted",{"_index":338,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.result",{"_index":332,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.updated",{"_index":323,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevents",{"_index":267,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindandcount'].join(eventemitterseparator",{"_index":268,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindbyid'].join(eventemitterseparator",{"_index":277,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindone'].join(eventemitterseparator",{"_index":281,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterupsert'].join(eventemitterseparator",{"_index":331,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["agent",{"_index":429,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentcreatequestions",{"_index":401,"title":{"classes/AgentCreateQuestions.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/CliModule.html":{}}}],["agents",{"_index":445,"title":{"classes/Agents.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["agents.command",{"_index":1754,"title":{},"body":{"modules/CliModule.html":{}}}],["agents.controller",{"_index":652,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":656,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.service",{"_index":551,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":1891,"title":{},"body":{"modules/CoreModule.html":{}}}],["agentscommand",{"_index":447,"title":{"classes/AgentsCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscommand.registerwithsubcommands",{"_index":658,"title":{},"body":{"modules/AgentsModule.html":{},"modules/CliModule.html":{}}}],["agentscontroller",{"_index":486,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agentscontroller.projection",{"_index":565,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatecommand",{"_index":432,"title":{"classes/AgentsCreateCommand.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["agentscreatedto",{"_index":425,"title":{"classes/AgentsCreateDto.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentscreatedto:26",{"_index":634,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:31",{"_index":627,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:36",{"_index":628,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:41",{"_index":630,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:46",{"_index":633,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:52",{"_index":632,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:57",{"_index":626,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:67",{"_index":631,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:72",{"_index":629,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":497,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agentsmodule",{"_index":635,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":478,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{}}}],["agentsservice",{"_index":427,"title":{"injectables/AgentsService.html":{}},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"overview.html":{}}}],["agentstate",{"_index":3545,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":3548,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstatelist",{"_index":3539,"title":{},"body":{"classes/StatePart.html":{}}}],["agentsupdatedto",{"_index":518,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["agenttype",{"_index":917,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["aide",{"_index":1679,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["aident",{"_index":4262,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ainsi",{"_index":4401,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":4046,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":4447,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":4708,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":4532,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":4433,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":2523,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":2694,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":2699,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":2464,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["aliases",{"_index":3927,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aller",{"_index":3833,"title":{},"body":{"index.html":{}}}],["allerrors",{"_index":2536,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":682,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["allons",{"_index":4192,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allowednetworks",{"_index":2928,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["already",{"_index":1073,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendsService.html":{}}}],["alternative",{"_index":3249,"title":{},"body":{"controllers/PasswdController.html":{}}}],["amazonwebservicess3storageconfig",{"_index":1789,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["amount",{"_index":3369,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["améliorant",{"_index":4425,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":4453,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":4415,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":4323,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":4428,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annotations",{"_index":4432,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":3816,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["anonymous",{"_index":295,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["any).filename",{"_index":3627,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["any).response",{"_index":1464,"title":{},"body":{"injectables/BackendsService.html":{}}}],["any)?.id",{"_index":2821,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":3014,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["aperçu",{"_index":4309,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":719,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["apibearerauth",{"_index":740,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["apibody",{"_index":2055,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apiconsumes",{"_index":2056,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apicreatedecorator",{"_index":531,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":558,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":2178,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":2367,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedecorator(identitiesupsertdto",{"_index":2388,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":2974,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator",{"_index":534,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":579,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(filestoragedto",{"_index":2099,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":2183,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":2434,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":2978,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apifileuploaddecorator",{"_index":2064,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apifileuploaddecorator(fileuploaddto",{"_index":2070,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apioperation",{"_index":741,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["apioperation({summary",{"_index":3207,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["apipaginateddecorator",{"_index":536,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":564,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(filestoragedto",{"_index":2074,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":2179,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":2407,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(jobsdto",{"_index":2864,"title":{},"body":{"controllers/JobsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":2975,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiparam",{"_index":526,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apiproduces",{"_index":2057,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apiproperty",{"_index":605,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty({enum",{"_index":1966,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({example",{"_index":901,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/InitAccountDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["apiproperty({type",{"_index":1984,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":742,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["apiquery({name",{"_index":728,"title":{},"body":{"controllers/AppController.html":{}}}],["apireadresponsedecorator",{"_index":538,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":573,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(filestoragedto",{"_index":2080,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":2181,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":2409,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apireadresponsedecorator(jobsdto",{"_index":2869,"title":{},"body":{"controllers/JobsController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":2977,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":743,"title":{},"body":{"controllers/AppController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["apiresponse({status",{"_index":3208,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["apisession",{"_index":702,"title":{"classes/ApiSession.html":{}},"body":{"classes/ApiSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["apitags",{"_index":527,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{}}}],["apitags('core",{"_index":1879,"title":{},"body":{"controllers/CoreController.html":{}}}],["apitags('core/agents",{"_index":552,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apitags('core/auth",{"_index":955,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('core/backends",{"_index":1251,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apitags('core/filestorage",{"_index":2066,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apitags('core/jobs",{"_index":2862,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('core/keyrings",{"_index":2972,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":2176,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":3061,"title":{},"body":{"controllers/ManagementController.html":{}}}],["apitags('management/identities",{"_index":2364,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apitags('management/identities/jsonforms",{"_index":2498,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["apitags('management/identities/validation",{"_index":2650,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["apitags('management/passwd",{"_index":3204,"title":{},"body":{"controllers/PasswdController.html":{}}}],["apitags('settings",{"_index":3470,"title":{},"body":{"controllers/SettingsController.html":{}}}],["apitags('settings/passwd",{"_index":3292,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["apiupdatedecorator",{"_index":539,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":577,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(filestorageupdatedto",{"_index":2097,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":2182,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":2416,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiurl",{"_index":4535,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app",{"_index":733,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["app.controller",{"_index":820,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":738,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/GithubUpdate.html":{}}}],["app_filter",{"_index":822,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["app_guard",{"_index":823,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":824,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":714,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"interfaces/GithubUpdate.html":{}}}],["appel",{"_index":4400,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":4520,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":4527,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":4369,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["application",{"_index":1781,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":4636,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["application/octet",{"_index":3618,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["application/pdf",{"_index":3610,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["applications",{"_index":3818,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appliquer",{"_index":3239,"title":{},"body":{"controllers/PasswdController.html":{}}}],["appliquer'})@apiresponse({status",{"_index":3181,"title":{},"body":{"controllers/PasswdController.html":{}}}],["appmodule",{"_index":803,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":4416,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriés",{"_index":4037,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["appservice",{"_index":737,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/GithubUpdate.html":{},"overview.html":{}}}],["après",{"_index":3387,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":4326,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":3830,"title":{},"body":{"index.html":{}}}],["argon2",{"_index":665,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":1050,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":1086,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":4352,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["argumentmetadata",{"_index":1921,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["arguments",{"_index":284,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["arguments[1",{"_index":286,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[2",{"_index":306,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["argumentshost",{"_index":688,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["array",{"_index":390,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"controllers/IdentitiesController.html":{},"classes/SyncIdentitiesDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["array.isarray(data",{"_index":780,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["arraynotempty",{"_index":1859,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["arrays",{"_index":2750,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["arrondi",{"_index":4759,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":4237,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":4412,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":4234,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ascii",{"_index":1701,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["ask",{"_index":1674,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asked",{"_index":1564,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asking",{"_index":1550,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktoken",{"_index":3217,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["asktoken(asktoken",{"_index":1657,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktoken.mail",{"_index":1665,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktoken.uid",{"_index":1659,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktokendto",{"_index":896,"title":{"classes/AskTokenDto.html":{}},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["asktokendto,k",{"_index":1658,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["assertions",{"_index":4180,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assigned",{"_index":4545,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":4546,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assure",{"_index":4282,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assurez",{"_index":4650,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":4339,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asyncquery",{"_index":1195,"title":{},"body":{"controllers/BackendsController.html":{}}}],["attachment",{"_index":3625,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["attempts",{"_index":1422,"title":{},"body":{"injectables/BackendsService.html":{}}}],["attendez",{"_index":4654,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":4620,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":4652,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":4660,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":2240,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":2710,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":2684,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributes",{"_index":384,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes'})@isoptional",{"_index":3681,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["attributes[key",{"_index":2733,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":2705,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributs",{"_index":2444,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":2218,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":2219,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":2220,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":2221,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":2222,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":1538,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":4454,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":912,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":988,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":989,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1892,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":910,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":2920,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":913,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":959,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":916,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":1018,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":919,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["authguard('jwt",{"_index":879,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule",{"_index":979,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":948,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["auto",{"_index":1167,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":4502,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementpluginoptions",{"_index":1135,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["autoincrementplugintrackerspec",{"_index":1168,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["automatique",{"_index":4618,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":4531,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":4057,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autres",{"_index":1655,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":2443,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["avec",{"_index":1611,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoir",{"_index":4721,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":4217,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["await",{"_index":238,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/MongoDbTestInstance.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["awesome",{"_index":3488,"title":{},"body":{"injectables/SmsService.html":{},"dependencies.html":{}}}],["ayant",{"_index":4623,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["backend",{"_index":1173,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backendcodesenum",{"_index":3749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backendname",{"_index":3676,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backendresultinfointerface",{"_index":1169,"title":{"interfaces/BackendResultInfoInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["backendresultinterface",{"_index":1172,"title":{"interfaces/BackendResultInterface.html":{}},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["backends",{"_index":1186,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends'})@apiresponse({status",{"_index":3175,"title":{},"body":{"controllers/PasswdController.html":{}}}],["backends.command",{"_index":1759,"title":{},"body":{"modules/CliModule.html":{}}}],["backends.controller",{"_index":1307,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":1236,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1893,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscommand",{"_index":1175,"title":{"classes/BackendsCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{}}}],["backendscommand.registerwithsubcommands",{"_index":1763,"title":{},"body":{"modules/CliModule.html":{}}}],["backendscontroller",{"_index":1187,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backendsmodule",{"_index":1298,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":1179,"title":{"injectables/BackendsService.html":{}},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["backendssyncallcommand",{"_index":1182,"title":{"classes/BackendsSyncallCommand.html":{}},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["background",{"_index":1459,"title":{},"body":{"injectables/BackendsService.html":{}}}],["bad",{"_index":1580,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception",{"_index":736,"title":{},"body":{"controllers/AppController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(\"la",{"_index":2421,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('identity",{"_index":2418,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('impossible",{"_index":1676,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('invalid",{"_index":791,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception('missing",{"_index":2396,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["badrequestexception('no",{"_index":1411,"title":{},"body":{"injectables/BackendsService.html":{}}}],["badrequestexception('une",{"_index":1733,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["badrequestexception(`invalid",{"_index":781,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["barre",{"_index":4558,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":4581,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":3779,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["base64",{"_index":1667,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["based",{"_index":2577,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["baser",{"_index":4706,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":3815,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":450,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":4019,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["basée",{"_index":4593,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":4592,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":4340,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["beforeall(async",{"_index":4240,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforecreate'].join(eventemitterseparator",{"_index":290,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforedelete'].join(eventemitterseparator",{"_index":335,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeeach(async",{"_index":4253,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeevent",{"_index":255,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.data",{"_index":292,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.filter",{"_index":258,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.options",{"_index":264,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.projection",{"_index":262,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.update",{"_index":309,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.data",{"_index":291,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.filter",{"_index":257,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.options",{"_index":263,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.projection",{"_index":259,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.stop",{"_index":256,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.update",{"_index":327,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevents",{"_index":247,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindandcount'].join(eventemitterseparator",{"_index":252,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindbyid'].join(eventemitterseparator",{"_index":275,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindone'].join(eventemitterseparator",{"_index":279,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupdate'].join(eventemitterseparator",{"_index":308,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupsert'].join(eventemitterseparator",{"_index":326,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["below",{"_index":3382,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["besoin",{"_index":4685,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":4313,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["bien",{"_index":4072,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":1986,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":4719,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":3407,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["body",{"_index":495,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"interfaces/RawBodyBufferOptions.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body('schema",{"_index":2506,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["body.action",{"_index":1276,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.code",{"_index":3233,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.id",{"_index":1277,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.payload",{"_index":1279,"title":{},"body":{"controllers/BackendsController.html":{}}}],["body.state",{"_index":2426,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["body.token",{"_index":3227,"title":{},"body":{"controllers/PasswdController.html":{}}}],["body.uid",{"_index":3212,"title":{},"body":{"controllers/PasswdController.html":{}}}],["bodyparser",{"_index":1793,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":3414,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":3411,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["boite",{"_index":3248,"title":{},"body":{"controllers/PasswdController.html":{}}}],["bon",{"_index":4283,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":590,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["boolean=false",{"_index":3403,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["boolean=true",{"_index":3402,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["booléen",{"_index":4734,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":640,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["bound",{"_index":3513,"title":{},"body":{"injectables/SmsService.html":{}}}],["bouton",{"_index":4525,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":4565,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["browse",{"_index":3919,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":3916,"title":{},"body":{"modules.html":{}}}],["buffer.middleware.ts",{"_index":3406,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["builder.vue",{"_index":4468,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["buildyup",{"_index":2692,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["buildyup(schema",{"_index":2737,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["bullmodule",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmodule.forrootasync",{"_index":868,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["bullmq",{"_index":97,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["c",{"_index":1583,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"interfaces/TokenData.html":{}}}],["cache",{"_index":745,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["cahier",{"_index":3950,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calcul",{"_index":3343,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["calculer",{"_index":4374,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":4586,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["camelcase",{"_index":4760,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":4762,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["capacités",{"_index":4156,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":4395,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caractères",{"_index":4770,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":4773,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cart",{"_index":4099,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":4182,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["case",{"_index":3339,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["catch",{"_index":377,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["catch((e",{"_index":1575,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["catch(e",{"_index":1591,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["catch(error.validationerror",{"_index":3125,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":686,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":2658,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["ce",{"_index":2718,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ceci",{"_index":4147,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":4397,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":4320,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":4317,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["certaine",{"_index":4624,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":4491,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":4266,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cet",{"_index":4382,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":4154,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":4493,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":4657,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champ",{"_index":2449,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":2381,"title":{},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":165,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["change(@body",{"_index":3209,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(body",{"_index":3171,"title":{},"body":{"controllers/PasswdController.html":{}}}],["change(passwddto",{"_index":1628,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["changed",{"_index":3214,"title":{},"body":{"controllers/PasswdController.html":{}}}],["changement",{"_index":1627,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["changepassworddto",{"_index":1468,"title":{"classes/ChangePasswordDto.html":{}},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["changepwdatnextlogin",{"_index":3429,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["changing",{"_index":1645,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["channel",{"_index":1243,"title":{},"body":{"controllers/BackendsController.html":{}}}],["chaque",{"_index":3987,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["characters",{"_index":3335,"title":{},"body":{"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["charactères",{"_index":4658,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":4553,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":3951,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":4418,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":4769,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["check",{"_index":2019,"title":{},"body":{"classes/Filestorage.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":4517,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checked",{"_index":3360,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["checker",{"_index":1354,"title":{},"body":{"injectables/BackendsService.html":{}}}],["checking",{"_index":4436,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["checkpolicies",{"_index":3309,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["checkpolicies(password",{"_index":3310,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["checkpwned",{"_index":3349,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["chemin",{"_index":4504,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":4036,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["children",{"_index":1898,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{}}}],["chunk",{"_index":3638,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks",{"_index":3635,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["chunks.push(buffer.from(chunk",{"_index":3639,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["ci",{"_index":4305,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cipher",{"_index":1661,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipher.final('base64",{"_index":1668,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipher.getauthtag().tostring('base64",{"_index":1671,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipher.update",{"_index":1664,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cipherdata",{"_index":1479,"title":{"interfaces/CipherData.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["ciphertext",{"_index":1663,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cl",{"_index":1541,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["clarifier",{"_index":4216,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["classe",{"_index":2715,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"classes/AskTokenDto.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cleardatabase",{"_index":3094,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearsession",{"_index":1010,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":1020,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1356,"title":{},"body":{"injectables/BackendsService.html":{}}}],["cli/agents.command",{"_index":653,"title":{},"body":{"modules/AgentsModule.html":{}}}],["client",{"_index":4126,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["climodule",{"_index":1750,"title":{"modules/CliModule.html":{}},"body":{"modules/CliModule.html":{},"modules.html":{},"overview.html":{}}}],["close",{"_index":1284,"title":{},"body":{"controllers/BackendsController.html":{}}}],["cluster_agentsmodule",{"_index":643,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":645,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":644,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":804,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":806,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":805,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":980,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":983,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":981,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":982,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":1299,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_exports",{"_index":1301,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_imports",{"_index":1302,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":1300,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_climodule",{"_index":1751,"title":{},"body":{"modules/CliModule.html":{},"overview.html":{}}}],["cluster_climodule_imports",{"_index":1752,"title":{},"body":{"modules/CliModule.html":{}}}],["cluster_coremodule",{"_index":1881,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1882,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1883,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule",{"_index":2126,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_exports",{"_index":2127,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_filestoragemodule_providers",{"_index":2128,"title":{},"body":{"modules/FilestorageModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2256,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2257,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule",{"_index":2517,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_exports",{"_index":2518,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesjsonformsmodule_providers",{"_index":2519,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":2626,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_exports",{"_index":2627,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_providers",{"_index":2628,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":2662,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":2663,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":2664,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_jobsmodule",{"_index":2891,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_exports",{"_index":2892,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":2893,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule",{"_index":2998,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_exports",{"_index":2999,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":3000,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3047,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3048,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3063,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3064,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_providers",{"_index":3065,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_passwdadmmodule",{"_index":3300,"title":{},"body":{"modules/PasswdadmModule.html":{},"overview.html":{}}}],["cluster_passwdadmmodule_exports",{"_index":3302,"title":{},"body":{"modules/PasswdadmModule.html":{},"overview.html":{}}}],["cluster_passwdadmmodule_imports",{"_index":3301,"title":{},"body":{"modules/PasswdadmModule.html":{}}}],["cluster_passwdadmmodule_providers",{"_index":3303,"title":{},"body":{"modules/PasswdadmModule.html":{},"overview.html":{}}}],["cluster_passwdmodule",{"_index":3255,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_passwdmodule_imports",{"_index":3256,"title":{},"body":{"modules/PasswdModule.html":{}}}],["cluster_passwdmodule_providers",{"_index":3257,"title":{},"body":{"modules/PasswdModule.html":{},"overview.html":{}}}],["cluster_settingstmodule",{"_index":3474,"title":{},"body":{"modules/SettingstModule.html":{},"overview.html":{}}}],["cluster_settingstmodule_imports",{"_index":3475,"title":{},"body":{"modules/SettingstModule.html":{}}}],["cluster_settingstmodule_providers",{"_index":3476,"title":{},"body":{"modules/SettingstModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":3570,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":3571,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":3572,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":2448,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["clés",{"_index":4362,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":3835,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":4075,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1500,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["code.tostring(16",{"_index":1693,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["code_expiration",{"_index":1526,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["codes.enum.ts",{"_index":3751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["col",{"_index":2223,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collection",{"_index":1159,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Logger.html":{}}}],["collections",{"_index":3114,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":3116,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["combine",{"_index":2749,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["command",{"_index":417,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["commander",{"_index":424,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["commandrunner",{"_index":418,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["comme",{"_index":3984,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":1434,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":4431,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comments",{"_index":2000,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["commit",{"_index":747,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["commonlogdb",{"_index":2812,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":2828,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":4646,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":3980,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":4026,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["compact",{"_index":4725,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compagny/nestjs_module_factorydrive",{"_index":838,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["compagny/nestjs_module_restools",{"_index":529,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"dependencies.html":{}}}],["compile",{"_index":4259,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":4452,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":4181,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["completed",{"_index":1293,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{}}}],["completedjob",{"_index":1390,"title":{},"body":{"injectables/BackendsService.html":{}}}],["completer",{"_index":1741,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["completion",{"_index":4021,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexity",{"_index":3365,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["complémentaires",{"_index":4699,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["complétée",{"_index":2424,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["component",{"_index":2224,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":4367,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":4327,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":2438,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["composant",{"_index":4459,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":4466,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":3825,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":4575,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":4053,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":3814,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":4435,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["compte",{"_index":1572,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["comptes",{"_index":4005,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["concerned",{"_index":3026,"title":{},"body":{"classes/Logger.html":{}}}],["concernedto",{"_index":1317,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopart",{"_index":1764,"title":{"classes/ConcernedToPart.html":{}},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernedtopartdto",{"_index":1772,"title":{"classes/ConcernedToPartDTO.html":{}},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["concernedtopartschema",{"_index":1770,"title":{},"body":{"classes/ConcernedToPart.html":{},"classes/Jobs.html":{}}}],["concernées",{"_index":4653,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":4543,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conditions",{"_index":4265,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('factorydrive.options",{"_index":873,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('ioredis.options",{"_index":867,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('ioredis.uri",{"_index":866,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('jwt.options.secret",{"_index":2913,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mailer.host",{"_index":845,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mailer.sender",{"_index":848,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongoose.options",{"_index":861,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.plugins",{"_index":856,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["config.get('mongoose.uri",{"_index":863,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configinstance",{"_index":1779,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["configmodule",{"_index":813,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{}}}],["configmodule.forroot",{"_index":839,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configobjectattributedto",{"_index":1850,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectobjectclassdto",{"_index":1863,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["configobjectschemadto",{"_index":1864,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1856,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configs/identities/jsonforms",{"_index":2508,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/jsonforms/${schema",{"_index":2551,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["configs/identities/validations",{"_index":2599,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["configs/identities/validations/${key}.yml",{"_index":2701,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["configservice",{"_index":83,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":869,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('ioredis.port",{"_index":871,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["configservice.get('jwt.options",{"_index":1002,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":1000,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":4795,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":3963,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":4307,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":4458,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configurer",{"_index":4325,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":4651,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":4625,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":4511,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":2769,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":2778,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":3110,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":4139,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":116,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"controllers/BackendsController.html":{},"modules/CliModule.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connection_error",{"_index":3773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connexion",{"_index":4145,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["considered",{"_index":3366,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["console",{"_index":1352,"title":{},"body":{"injectables/BackendsService.html":{},"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('error",{"_index":443,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.error('fail",{"_index":3530,"title":{},"body":{"injectables/SmsService.html":{}}}],["console.log('agent",{"_index":440,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["console.log('dynamic",{"_index":2612,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('generating",{"_index":2609,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('hard",{"_index":2611,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log('keyring",{"_index":2951,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["console.log('req",{"_index":2867,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log('success",{"_index":3525,"title":{},"body":{"injectables/SmsService.html":{}}}],["console.log('this.storage",{"_index":769,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["console.log('validations",{"_index":1946,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["console.log(`error",{"_index":2602,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`file",{"_index":2558,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`generating",{"_index":2554,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(`writing",{"_index":2595,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["console.log(e",{"_index":1087,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":4164,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(identity",{"_index":1185,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["console.log(user",{"_index":3021,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":2768,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":1058,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{}}}],["const",{"_index":170,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":4764,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":4763,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":4174,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constructeur",{"_index":4134,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/PasswdService.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":1929,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":669,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(jobs.name",{"_index":2900,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":3009,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(@injectmodel(logger.name",{"_index":3055,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(@injectmodel(settings.name",{"_index":371,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["constructor(@injectmodel(tasks.name",{"_index":3579,"title":{},"body":{"injectables/TasksService.html":{}}}],["constructor(_model",{"_index":348,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/TasksService.html":{}}}],["constructor(_options",{"_index":2826,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":2903,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(backends",{"_index":3265,"title":{},"body":{"injectables/PasswdService.html":{}}}],["constructor(config",{"_index":3482,"title":{},"body":{"injectables/SmsService.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["constructor(data",{"_index":706,"title":{},"body":{"classes/ApiSession.html":{}}}],["constructor(moduleref",{"_index":481,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["constructor(payload",{"_index":3647,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":556,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{}}}],["constructor(protected",{"_index":448,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AppService.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"controllers/IdentitiesValidationController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/SmsService.html":{}}}],["constructor(request",{"_index":1918,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construire",{"_index":4479,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":4477,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":4513,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenant",{"_index":2446,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":4556,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":4767,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":4635,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contentsecuritypolicy",{"_index":1806,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":4600,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":160,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":2719,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contient",{"_index":4564,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":1458,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["control",{"_index":2566,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["controller",{"_index":485,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":553,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":956,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":1252,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1880,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('filestorage",{"_index":2067,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["controller('form",{"_index":2177,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":2365,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["controller('jobs",{"_index":2863,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('keyrings",{"_index":2973,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('logger",{"_index":3046,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":3062,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controller('management/identities/jsonforms",{"_index":2499,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["controller('management/identities/validation",{"_index":2651,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('passwd",{"_index":3203,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["controller('settings",{"_index":3471,"title":{},"body":{"controllers/SettingsController.html":{}}}],["controller('tasks",{"_index":3569,"title":{},"body":{"controllers/TasksController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":487,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"controllers/SettingsController.html":{},"modules/SettingstModule.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convertis",{"_index":4419,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":4761,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["conçu",{"_index":4041,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":3808,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":3707,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1876,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1894,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1878,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":426,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{}}}],["core/agents/_enum/agent",{"_index":3546,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/_parts/security.part.schema",{"_index":474,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/_parts/state.part.schema",{"_index":473,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":651,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["core/agents/agents.module",{"_index":992,"title":{},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{}}}],["core/agents/agents.service",{"_index":428,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":996,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":997,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.module",{"_index":1761,"title":{},"body":{"modules/CliModule.html":{}}}],["core/auth/auth.service",{"_index":949,"title":{},"body":{"controllers/AuthController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["core/backends/_enum/action",{"_index":1482,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["core/backends/backends.module",{"_index":1760,"title":{},"body":{"modules/CliModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{}}}],["core/backends/backends.service",{"_index":1180,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["core/core.module",{"_index":814,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":4536,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/filestorage/_enum/fs",{"_index":1992,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["core/filestorage/_schemas/filestorage.schema",{"_index":3615,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["core/filestorage/_services/transformers",{"_index":2132,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["core/jobs/_schemas/jobs.schema",{"_index":1483,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":2943,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":2944,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.module",{"_index":1758,"title":{},"body":{"modules/CliModule.html":{}}}],["core/keyrings/keyrings.service",{"_index":2945,"title":{},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["corecontroller",{"_index":1874,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["coremodule",{"_index":807,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":874,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1877,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"overview.html":{}}}],["corps",{"_index":4611,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correctement",{"_index":4794,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspond",{"_index":4700,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":2442,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["corresponding",{"_index":2583,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["correspondra",{"_index":4396,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["corrupted",{"_index":1076,"title":{},"body":{"injectables/AuthService.html":{}}}],["count",{"_index":179,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":190,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["count(res",{"_index":2317,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["counter",{"_index":1162,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["cours",{"_index":944,"title":{},"body":{"controllers/AuthController.html":{}}}],["couvre",{"_index":4405,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create",{"_index":180,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":559,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":197,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["create(res",{"_index":493,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":533,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["createassertions",{"_index":4289,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":4292,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["created",{"_index":300,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["createdat",{"_index":296,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":293,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions(service",{"_index":4293,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":4179,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":4254,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":4248,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":4184,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":4377,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createtokens",{"_index":1011,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":1022,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":444,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["creation",{"_index":4464,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crucial",{"_index":4392,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":4183,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crudmode",{"_index":4474,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crypto",{"_index":1047,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.createcipheriv(passwdservice.token_algorithm",{"_index":1662,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.createdecipheriv(passwdservice.token_algorithm",{"_index":1696,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(13).tostring('hex",{"_index":1748,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_iv).tostring('base64",{"_index":1660,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["crypto.randombytes(passwdservice.random_bytes_k).tostring('hex",{"_index":1619,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cryptographiques",{"_index":4031,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":4140,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":4312,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":4238,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":4176,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":2378,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":4201,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":692,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.getrequest",{"_index":3126,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":694,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["curl",{"_index":4617,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":727,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["currentmajor",{"_index":794,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentminor",{"_index":795,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentpatch",{"_index":796,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentversion",{"_index":786,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["currentversion.split('.').map(number",{"_index":801,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["customfields",{"_index":451,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":584,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto:8",{"_index":604,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":4109,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cycle",{"_index":3976,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cypherdata",{"_index":1684,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.iv",{"_index":1697,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata.k",{"_index":1708,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.iv",{"_index":1687,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.k",{"_index":1688,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["cypherdata?.tag",{"_index":1689,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["d",{"_index":1610,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":4197,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":4566,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":4328,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":4373,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'attente",{"_index":4120,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":4423,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":929,"title":{},"body":{"controllers/AuthController.html":{}}}],["d'autres",{"_index":4384,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":4115,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":3973,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'erreur",{"_index":4430,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":3981,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identitées",{"_index":1228,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{}}}],["d'identités",{"_index":2641,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":4408,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'initialisation",{"_index":1706,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["d'installation",{"_index":4084,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":4791,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":2716,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":2720,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":4605,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":4559,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":2481,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":2344,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'utilisation",{"_index":4086,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":4441,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":4730,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d\\'authentification",{"_index":970,"title":{},"body":{"controllers/AuthController.html":{}}}],["d\\'identitées",{"_index":1255,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{}}}],["d\\'identités",{"_index":2652,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["d\\'un",{"_index":2504,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["d\\'une",{"_index":2429,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["daemon",{"_index":3958,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["daemon|sesame",{"_index":732,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["dans",{"_index":1670,"title":{},"body":{"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":200,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["data.access_token",{"_index":1071,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.attributes",{"_index":2703,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.code",{"_index":1713,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["data.identity?.security?.secretkey",{"_index":1101,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.mime",{"_index":3617,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["data.newpassword",{"_index":1725,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["data.objectclasses",{"_index":2702,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.password",{"_index":670,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security",{"_index":672,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.security.secretkey",{"_index":673,"title":{},"body":{"injectables/AgentsService.html":{}}}],["data.token",{"_index":1712,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["data.validations",{"_index":2704,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data=await",{"_index":3299,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["data[0].name.replace(/^v",{"_index":784,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["data[key",{"_index":713,"title":{},"body":{"classes/ApiSession.html":{}}}],["data_coding",{"_index":3521,"title":{},"body":{"injectables/SmsService.html":{}}}],["database",{"_index":2777,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["datapart",{"_index":1906,"title":{"classes/DataPart.html":{}},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datapartschema",{"_index":1911,"title":{},"body":{"classes/DataPart.html":{},"classes/Logger.html":{}}}],["datatoken",{"_index":1720,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["datax=omit(data.toobject,['_id",{"_index":3242,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["date",{"_index":297,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/BackendsService.html":{},"classes/Identities.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["date.now",{"_index":2956,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["db",{"_index":2771,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["de",{"_index":941,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["debug",{"_index":1935,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/SmsService.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":2804,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_debug",{"_index":3213,"title":{},"body":{"controllers/PasswdController.html":{}}}],["debug['_errors",{"_index":1943,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":3127,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["decipher",{"_index":1695,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decipher.setauthtag(buffer.from(cypherdata.tag",{"_index":1698,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decipher.update(token",{"_index":1700,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["declarations",{"_index":639,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["decorators",{"_index":127,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["decrypte",{"_index":1678,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decrypting",{"_index":1703,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decrypttoken",{"_index":3263,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decrypttoken(token",{"_index":1707,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["decrypttokenwithcode",{"_index":3264,"title":{},"body":{"injectables/PasswdService.html":{}}}],["decrypttokenwithcode(token",{"_index":1680,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["default",{"_index":388,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"injectables/TransformersFilestorageService.html":{},"classes/inetOrgPerson.html":{}}}],["default_context",{"_index":3032,"title":{},"body":{"classes/Logger.html":{}}}],["default_data_type",{"_index":1909,"title":{},"body":{"classes/DataPart.html":{}}}],["default_message",{"_index":3656,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_status_code",{"_index":3655,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["default_sync_timeout",{"_index":1348,"title":{},"body":{"injectables/BackendsService.html":{}}}],["default_third_party_auth",{"_index":469,"title":{},"body":{"classes/Agents.html":{}}}],["default_validations",{"_index":3657,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["defaults",{"_index":847,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaultsrc",{"_index":1808,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1827,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":345,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"injectables/PasswdadmService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["delete",{"_index":181,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":508,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":201,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["deleteassertions",{"_index":4301,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":4303,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":336,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteerrorassertions(service",{"_index":4304,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["demande",{"_index":1618,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["demi",{"_index":1744,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["demon",{"_index":4110,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["dense",{"_index":4523,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["departmentnumber",{"_index":3836,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["dependencies",{"_index":637,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":1637,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1852,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["describe('create",{"_index":4291,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":4302,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":4271,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":4276,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":4285,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":4228,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":4295,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":722,"title":{},"body":{"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"controllers/PasswdController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/VerifyTokenDto.html":{},"index.html":{},"properties.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessous",{"_index":4486,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":4306,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dest_addr_npi:1",{"_index":3520,"title":{},"body":{"injectables/SmsService.html":{}}}],["dest_addr_ton:1",{"_index":3519,"title":{},"body":{"injectables/SmsService.html":{}}}],["destination_addr",{"_index":3518,"title":{},"body":{"injectables/SmsService.html":{}}}],["destinées",{"_index":4622,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["detected",{"_index":1357,"title":{},"body":{"injectables/BackendsService.html":{}}}],["determine",{"_index":2576,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["deux",{"_index":2439,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":1037,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":1006,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":1650,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["devez",{"_index":4655,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devtokenpath",{"_index":1066,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":2691,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":2708,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["différentes",{"_index":3811,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":4509,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dir",{"_index":850,"title":{},"body":{"modules/AppModule.html":{}}}],["directconnection",{"_index":1822,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["directives",{"_index":1807,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directory",{"_index":2746,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":3769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["disablelogs",{"_index":1270,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["disablelogsquery",{"_index":1197,"title":{},"body":{"controllers/BackendsController.html":{}}}],["discut",{"_index":4102,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["disks",{"_index":1796,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["displayname",{"_index":452,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["displayname=identity.inetorgperson.displayname",{"_index":1565,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["disponible",{"_index":4793,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":4512,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":3624,"title":{},"body":{"injectables/TransformersFilestorageService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":4554,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["divers",{"_index":4347,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":4264,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["divulguer",{"_index":1600,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["doc",{"_index":4112,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":121,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":1156,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["document.save(options",{"_index":301,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["documentation",{"_index":3832,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documents",{"_index":4279,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doesn't",{"_index":2580,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["doit",{"_index":4040,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":4027,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["done",{"_index":2906,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(new",{"_index":2923,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":2925,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":3812,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dossier",{"_index":4202,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["driver",{"_index":1797,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["dto",{"_index":1501,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["dto.ts",{"_index":3416,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["dto.ts:11",{"_index":3419,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["dto.ts:14",{"_index":3421,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["dto.ts:7",{"_index":3423,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["dtovalidationpipe",{"_index":830,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["du",{"_index":1530,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dump_package_config",{"_index":3761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicatedcode",{"_index":254,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["dupont",{"_index":4674,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":4644,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dynamic",{"_index":2608,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfig",{"_index":2748,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles",{"_index":2606,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicconfigfiles].filter((file",{"_index":2613,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["dynamicconfigpath",{"_index":2550,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["dynamicmodule",{"_index":1889,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{}}}],["dynamique",{"_index":4329,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":4324,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":4337,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["début",{"_index":4787,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenchement",{"_index":3978,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":4091,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":4414,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":4490,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":4668,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":4076,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":4768,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":4371,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":4338,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":4508,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":4664,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":4608,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":3989,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["déj",{"_index":2423,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["délais",{"_index":4096,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":4236,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":3828,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":4385,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":4123,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":4218,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":4149,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":4709,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":4310,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":4409,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":4440,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":4587,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":4058,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":3954,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":4050,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":378,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.error?.response",{"_index":1651,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.job?.status",{"_index":1649,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["e?.response?.status",{"_index":1647,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["each",{"_index":621,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["ecriture",{"_index":4166,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effectue",{"_index":2646,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["effectuées",{"_index":4683,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":4055,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["element",{"_index":2582,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elements",{"_index":2564,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["elle",{"_index":4121,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":408,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":4782,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emitter",{"_index":154,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"dependencies.html":{}}}],["emitter.constant",{"_index":228,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["emplacements",{"_index":4567,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":4716,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeenumber",{"_index":3837,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["employeetype",{"_index":3838,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["empty",{"_index":4278,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":943,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":340,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["enabled",{"_index":1065,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":1931,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["encodeuricomponent(ciphertext",{"_index":1673,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["endpoint",{"_index":4610,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enr",{"_index":374,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["enr.parameters",{"_index":376,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["enregistre",{"_index":1669,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["enregistrement",{"_index":3988,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":4723,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entier.example",{"_index":4744,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entite",{"_index":2466,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["entity",{"_index":1123,"title":{},"body":{"injectables/AuthService.html":{}}}],["entityid",{"_index":477,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["entre",{"_index":3810,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entropy",{"_index":3322,"title":{},"body":{"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"dependencies.html":{}}}],["entrée",{"_index":4530,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":1969,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{}}}],["enumerations",{"_index":3744,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":4498,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":4547,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":4544,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":4521,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":4499,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envoi",{"_index":1544,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["envoie",{"_index":1533,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["envoy",{"_index":1573,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["envoyées",{"_index":4661,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["equal",{"_index":2401,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["err",{"_index":1249,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/TransformersFilestorageService.html":{}}}],["err.errors",{"_index":3134,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":3140,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":3135,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":3139,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":3137,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":2743,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["err.response",{"_index":1409,"title":{},"body":{"injectables/BackendsService.html":{}}}],["erreur",{"_index":1576,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":4342,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["error",{"_index":442,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('erreur",{"_index":4379,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('moduleref",{"_index":107,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["error('request",{"_index":169,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error(message",{"_index":2786,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":3121,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":1954,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":1952,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":1948,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":2412,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["error.inner.reduce((acc",{"_index":2741,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["error.message",{"_index":1451,"title":{},"body":{"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["error.property",{"_index":1950,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":1956,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.validationerror",{"_index":3120,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":2410,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":1945,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":1953,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":1958,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":1955,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorhttpstatuscode",{"_index":1266,"title":{},"body":{"controllers/BackendsController.html":{}}}],["erroronnotfound",{"_index":2351,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["errors",{"_index":1933,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.map((error",{"_index":1944,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":1960,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{}}}],["espaces",{"_index":4786,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["est",{"_index":1540,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1211,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":3997,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":4020,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["etre",{"_index":3395,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["event",{"_index":235,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/BackendsController.html":{}}}],["eventemitter",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eventemitter2",{"_index":89,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["eventemitterseparator",{"_index":226,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["ex",{"_index":1122,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":909,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/Logger.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":4162,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["examplequeueservice",{"_index":4160,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["exception",{"_index":690,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":3133,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":684,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.filter.ts:5",{"_index":689,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":2659,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":2661,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":2660,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":698,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":699,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1932,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":685,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":4351,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":3017,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["exclusivemaximum",{"_index":4748,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":4746,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exec",{"_index":322,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["execute",{"_index":1201,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/PasswdController.html":{}}}],["executedjob",{"_index":1403,"title":{},"body":{"injectables/BackendsService.html":{}}}],["executejob",{"_index":1189,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["executejob(actiontype",{"_index":1316,"title":{},"body":{"injectables/BackendsService.html":{}}}],["executejob(res",{"_index":1193,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executejobdto",{"_index":1194,"title":{"classes/ExecuteJobDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/ExecuteJobDto.html":{}}}],["executejoboptions",{"_index":1318,"title":{"interfaces/ExecuteJobOptions.html":{}},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["executing",{"_index":1448,"title":{},"body":{"injectables/BackendsService.html":{}}}],["exemple",{"_index":4173,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":4189,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exhaustive",{"_index":4048,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":4023,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":1074,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["existe",{"_index":1603,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["existssync",{"_index":1056,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":1069,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(dynamicconfigpath",{"_index":2552,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(filepath",{"_index":2559,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(hardconfigpath",{"_index":2553,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(path",{"_index":2724,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":3130,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expiresin",{"_index":1079,"title":{},"body":{"injectables/AuthService.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":642,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["exposition",{"_index":3972,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":152,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":2029,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["express.user",{"_index":158,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expression",{"_index":4777,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["extended",{"_index":3413,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["extends",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":4039,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extraction",{"_index":4422,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":2910,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2915,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extrasearch",{"_index":2078,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["extrasearch['hidden",{"_index":2079,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f",{"_index":3783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["f]{24",{"_index":572,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":504,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})/raw",{"_index":2086,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/raw')@apiparam({name",{"_index":2041,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["f]{24})/state",{"_index":2417,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["f]{24})/state')@apiparam({name",{"_index":2337,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["fa",{"_index":503,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":3809,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facsimiletelephonenumber",{"_index":3839,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["factorydrive",{"_index":1782,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["factorydrivemodule",{"_index":837,"title":{},"body":{"modules/AppModule.html":{}}}],["factorydrivemodule.forrootasync",{"_index":872,"title":{},"body":{"modules/AppModule.html":{}}}],["facultatifs",{"_index":4615,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":1296,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/enumerations.html":{}}}],["failedjob",{"_index":1384,"title":{},"body":{"injectables/BackendsService.html":{}}}],["fails",{"_index":2686,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["falsetoken",{"_index":1609,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["falsetoken=await",{"_index":1605,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["false})@get('/get",{"_index":729,"title":{},"body":{"controllers/AppController.html":{}}}],["false})@isoptional",{"_index":3876,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["famille",{"_index":4647,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fast",{"_index":3321,"title":{},"body":{"injectables/PasswdadmService.html":{},"dependencies.html":{}}}],["fatal",{"_index":2810,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":2809,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fetch(`https://api.github.com/repos/libertech",{"_index":774,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["fiabilit",{"_index":4063,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":2725,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":4220,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":1138,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":2275,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":2286,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["fieldname",{"_index":2278,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":2263,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":620,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1903,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["fields.dto.ts:8",{"_index":1904,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":3831,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["file.schema.endswith('.yml",{"_index":2614,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileinterceptor",{"_index":2053,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["fileisrequired",{"_index":2072,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["filename=\"${(data",{"_index":3626,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["fileobj",{"_index":2618,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.file.replace('.ui.yml",{"_index":2620,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["fileobj.file.replace('.yml",{"_index":2752,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["fileobj.path}/${fileobj.file",{"_index":2619,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fileobj.source",{"_index":2753,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["filepath",{"_index":2556,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["files",{"_index":2605,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["files.length",{"_index":2616,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["filestorage",{"_index":2007,"title":{"classes/Filestorage.html":{}},"body":{"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"injectables/TransformersFilestorageService.html":{}}}],["filestorage.controller",{"_index":2131,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.name",{"_index":2133,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["filestorage.service",{"_index":2062,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{}}}],["filestorage.service.ts",{"_index":3585,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:13",{"_index":3592,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:19",{"_index":3597,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:39",{"_index":3605,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:47",{"_index":3603,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:55",{"_index":3599,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:65",{"_index":3601,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:73",{"_index":3595,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage.service.ts:8",{"_index":3614,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["filestorage/filestorage.module",{"_index":1896,"title":{},"body":{"modules/CoreModule.html":{}}}],["filestoragecontroller",{"_index":2024,"title":{"controllers/FilestorageController.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{}}}],["filestoragecontroller.projection",{"_index":2075,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["filestoragecreatedto",{"_index":1993,"title":{"classes/FilestorageCreateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["filestoragecreatedto:16",{"_index":2125,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:21",{"_index":2122,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:27",{"_index":2123,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:32",{"_index":2120,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:37",{"_index":2118,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:42",{"_index":2121,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:47",{"_index":2119,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:52",{"_index":2124,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragecreatedto:57",{"_index":2117,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["filestoragedto",{"_index":2004,"title":{"classes/FilestorageDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["filestoragemodule",{"_index":1884,"title":{"modules/FilestorageModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules.html":{},"overview.html":{}}}],["filestorageschema",{"_index":2020,"title":{},"body":{"classes/Filestorage.html":{},"modules/FilestorageModule.html":{}}}],["filestorageschema.virtual('filename').get(function",{"_index":2022,"title":{},"body":{"classes/Filestorage.html":{}}}],["filestorageservice",{"_index":2063,"title":{},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"overview.html":{}}}],["filestorageupdatedto",{"_index":2005,"title":{"classes/FilestorageUpdateDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fileuploaddto",{"_index":1982,"title":{"classes/FileUploadDto.html":{}},"body":{"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["filled",{"_index":4522,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":195,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter.dto.ts",{"_index":3157,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filter.dto.ts:1",{"_index":3158,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":515,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filterquery",{"_index":191,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":2394,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filters[key",{"_index":2398,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filterschema",{"_index":513,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["filtersquery",{"_index":2350,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filtersquery.length",{"_index":2395,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["filtres",{"_index":2321,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["fin",{"_index":4533,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":1134,"title":{},"body":{"injectables/AuthService.html":{}}}],["finaux",{"_index":4087,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":182,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["find(filter",{"_index":205,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findall",{"_index":2525,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findandcount",{"_index":183,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":209,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findandcountassertions",{"_index":4269,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":4273,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions(service",{"_index":4274,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":184,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":211,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["findbyid(id",{"_index":3457,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidandupdate",{"_index":311,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findbyidassertions",{"_index":4275,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":4277,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions(service",{"_index":4280,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":185,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":213,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["findone(schema",{"_index":2529,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["findoneandupdate",{"_index":329,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findoneassertions",{"_index":4281,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":4286,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions(service",{"_index":4288,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fingerprint",{"_index":2293,"title":{},"body":{"classes/Identities.html":{}}}],["finish",{"_index":1455,"title":{},"body":{"injectables/BackendsService.html":{}}}],["finishedat",{"_index":1367,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["firemessage(observer",{"_index":1242,"title":{},"body":{"controllers/BackendsController.html":{}}}],["fix",{"_index":2788,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixes",{"_index":4336,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flatten",{"_index":2587,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["flexible",{"_index":3971,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fois",{"_index":4334,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonction",{"_index":2390,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":4095,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":3965,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":4195,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":4284,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":2320,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fontsrc",{"_index":1813,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbiddenexception",{"_index":1045,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["form",{"_index":2134,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":2260,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":2261,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":2175,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":1985,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formcontroller",{"_index":2159,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["formcontroller.projection",{"_index":2180,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":2184,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formcreatedto:12",{"_index":2214,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":2209,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":2215,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":2208,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":2211,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":2213,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":2212,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":2210,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":2161,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formdto)@apiresponse({type",{"_index":2163,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":2216,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{}}}],["formfieldpart",{"_index":2241,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{}}}],["formfieldpartschema",{"_index":2253,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["formmodule",{"_index":2255,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":2155,"title":{},"body":{"classes/Form.html":{},"controllers/IdentitiesJsonFormsController.html":{}}}],["formschema",{"_index":2157,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{}}}],["formsectiondto",{"_index":2204,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{}}}],["formsectionpart",{"_index":2153,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formsectionpartschema",{"_index":2145,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formservice",{"_index":2174,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"overview.html":{}}}],["formtypelist",{"_index":2198,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["formtypes",{"_index":2150,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":2156,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formulaire",{"_index":4460,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":4108,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":2170,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["found",{"_index":2419,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["found.dto.ts",{"_index":3144,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:6",{"_index":3146,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":3145,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["fourni",{"_index":1537,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":4049,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":4261,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":4117,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":2322,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":4188,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fr",{"_index":1849,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["fr/${project}/tags",{"_index":775,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["framesrc",{"_index":1811,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":4475,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":4003,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["front",{"_index":1539,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["frontend",{"_index":3962,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontpwd",{"_index":1783,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["fs",{"_index":887,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["fstype",{"_index":1990,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"miscellaneous/enumerations.html":{}}}],["fstype.file",{"_index":1995,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["fstypelist",{"_index":1991,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["function",{"_index":1164,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"interfaces/RawBodyBufferOptions.html":{},"injectables/SmsService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["function(error",{"_index":3532,"title":{},"body":{"injectables/SmsService.html":{}}}],["function(pdu",{"_index":3511,"title":{},"body":{"injectables/SmsService.html":{}}}],["garantir",{"_index":4061,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gcm",{"_index":1523,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["generate",{"_index":1165,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"miscellaneous/typealiases.html":{}}}],["generate(@res",{"_index":2505,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(res",{"_index":2478,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generate(undefined",{"_index":2531,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["generateall",{"_index":2476,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["generateall(@res",{"_index":2501,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["generateall(res",{"_index":2485,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["genere",{"_index":1654,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["generic_error",{"_index":3771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generic_stopped",{"_index":3772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gestion",{"_index":3967,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get('/get",{"_index":766,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["get(':_id([0",{"_index":501,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(':schema",{"_index":2511,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get(':schema')@apioperation({summary",{"_index":2492,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get('count",{"_index":2414,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["get('count')@apioperation({summary",{"_index":2318,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["get('getpolicies",{"_index":3238,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('getpolicies')@apioperation({summary",{"_index":3179,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["get('path",{"_index":2082,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path')@apireadresponsedecorator(filestoragedto",{"_index":2035,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw",{"_index":2093,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('path/raw')@apireadresponsedecorator(filestoragedto",{"_index":2038,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["get('session",{"_index":962,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined)@apioperation({summary",{"_index":939,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apioperation({summary",{"_index":718,"title":{},"body":{"controllers/AppController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":516,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["get(identity.toobject",{"_index":1555,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getinfo",{"_index":716,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@res",{"_index":763,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["getinfo(res",{"_index":717,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":220,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":3100,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":4257,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpaddingforcode",{"_index":1745,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["getparameter",{"_index":346,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["getparameter(settingname",{"_index":352,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["getpayload",{"_index":3645,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getpolicies",{"_index":3167,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{}}}],["getpolicies(@res",{"_index":3240,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getpolicies(res",{"_index":3178,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["getqueue",{"_index":95,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getredisconnectiontoken",{"_index":99,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["getrequest",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath",{"_index":2058,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["getservicename",{"_index":150,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":1012,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":1024,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":3800,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":3673,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken'})@isstring",{"_index":3671,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["gettoken(@body",{"_index":3216,"title":{},"body":{"controllers/PasswdController.html":{}}}],["getvalidationerrors",{"_index":3119,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":3123,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":3646,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["github",{"_index":782,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["githubupdate",{"_index":746,"title":{"interfaces/GithubUpdate.html":{}},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["givenname",{"_index":3840,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["good",{"_index":3364,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["goodcomplexity",{"_index":3350,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["grand",{"_index":4066,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["grille",{"_index":4507,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["group",{"_index":2570,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["groupindex",{"_index":2573,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["gsm",{"_index":3522,"title":{},"body":{"injectables/SmsService.html":{}}}],["guides",{"_index":4085,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":4681,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":2480,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":4789,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":1677,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":4711,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":4591,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":4480,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":3956,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":4680,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["handlebars",{"_index":3710,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":835,"title":{},"body":{"modules/AppModule.html":{}}}],["hard",{"_index":2604,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfig",{"_index":2747,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["hardconfigfiles",{"_index":2600,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hardconfigpath",{"_index":2548,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["hash",{"_index":664,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(data.password",{"_index":671,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.$set.password",{"_index":680,"title":{},"body":{"injectables/AgentsService.html":{}}}],["hash(update.password",{"_index":677,"title":{},"body":{"injectables/AgentsService.html":{}}}],["haslowercase",{"_index":3351,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasnumbers",{"_index":3352,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hasspecialchars",{"_index":3353,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hastransformer",{"_index":3619,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["hasuppercase",{"_index":3354,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["hdfddyf18a",{"_index":3420,"title":{},"body":{"classes/ResetByCodeDto.html":{}}}],["header",{"_index":4634,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":947,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":976,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1784,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":1786,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["hibp",{"_index":3324,"title":{},"body":{"injectables/PasswdadmService.html":{},"dependencies.html":{}}}],["hidden",{"_index":555,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["hiddenquery",{"_index":2045,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["hooks",{"_index":4456,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["horizontallayout",{"_index":2579,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["host",{"_index":687,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/SmsService.html":{}}}],["host.switchtohttp",{"_index":693,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["html",{"_index":3632,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["http",{"_index":4628,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities",{"_index":4679,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities/upsert",{"_index":4698,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1832,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":4712,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["httpexception",{"_index":1329,"title":{},"body":{"injectables/BackendsService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception.createbody",{"_index":3131,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["https://monsite.com",{"_index":3386,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["https://randomkeygen.com",{"_index":1828,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["https://stackoverflow.com/questions/67314808/how",{"_index":758,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["httpstatus",{"_index":522,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":2376,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["httpstatus.bad_request",{"_index":1415,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":563,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["httpstatus.not_acceptable",{"_index":1267,"title":{},"body":{"controllers/BackendsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":3147,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":571,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["httpstatus.request_timeout",{"_index":1454,"title":{},"body":{"injectables/BackendsService.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1457,"title":{},"body":{"injectables/BackendsService.html":{}}}],["hzcdvqhscvdsdfdhodcjmufekfjvkas8",{"_index":967,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["héritent",{"_index":4196,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["iauthmoduleoptions",{"_index":990,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":4215,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["icon",{"_index":2264,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":4497,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":546,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AskTokenDto.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"controllers/IdentitiesController.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["identifiant",{"_index":4648,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identit",{"_index":4446,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identite",{"_index":4697,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identities",{"_index":1335,"title":{"classes/Identities.html":{}},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities).state",{"_index":2374,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identities.controller",{"_index":2630,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.dto",{"_index":1238,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identities.dto.ts",{"_index":3558,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["identities.dto.ts:7",{"_index":3560,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["identities.jsonforms.controller",{"_index":2521,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["identities.jsonforms.service",{"_index":2497,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identities.map((identity",{"_index":1400,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identities.name",{"_index":2635,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.push",{"_index":1417,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identities.service",{"_index":2358,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":2666,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":2649,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/_schemas/identities.schema",{"_index":1492,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identities/identities.module",{"_index":3070,"title":{},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{}}}],["identities/identities.service",{"_index":1490,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identitiescontroller",{"_index":2313,"title":{"controllers/IdentitiesController.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescontroller.projection",{"_index":2408,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identitiescreatedto",{"_index":2324,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiescreatedto:14",{"_index":2472,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:20",{"_index":2471,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:25",{"_index":2470,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:44",{"_index":2469,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiesdocument",{"_index":2308,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdto",{"_index":2326,"title":{"classes/IdentitiesDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":4211,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesjsonformscontroller",{"_index":2473,"title":{"controllers/IdentitiesJsonFormsController.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{}}}],["identitiesjsonformsmodule",{"_index":2516,"title":{"modules/IdentitiesJsonformsModule.html":{}},"body":{"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["identitiesjsonformsservice",{"_index":2496,"title":{"injectables/IdentitiesJsonformsService.html":{}},"body":{"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"overview.html":{}}}],["identitiesmodel",{"_index":4229,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1303,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesschema",{"_index":2311,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":1312,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":2333,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":4213,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupsertdto",{"_index":2349,"title":{"classes/IdentitiesUpsertDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["identitiesvalidation",{"_index":4106,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":2637,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identitiesvalidationfilter",{"_index":2361,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["identitiesvalidationmodule",{"_index":2631,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":2359,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":938,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity._id",{"_index":1111,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":1107,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.action",{"_index":1405,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.decorator",{"_index":953,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.entityid",{"_index":1124,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.identity",{"_index":1419,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.identity._id",{"_index":1401,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity.inetorgperson.uid",{"_index":1571,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identity.state",{"_index":1414,"title":{},"body":{"injectables/BackendsService.html":{},"controllers/IdentitiesController.html":{}}}],["identity.toobject",{"_index":1094,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity?.inetorgperson?.cn",{"_index":1432,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity?.inetorgperson?.givenname].join",{"_index":1433,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identity_create",{"_index":3763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_delete",{"_index":3765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_change",{"_index":3767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_password_reset",{"_index":3766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identity_update",{"_index":3764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["identitycounter",{"_index":1163,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":1158,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":1117,"title":{},"body":{"injectables/AuthService.html":{}}}],["identitylifecycle",{"_index":2301,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.inactive",{"_index":2310,"title":{},"body":{"classes/Identities.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitymailattribute",{"_index":1625,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["identitymobileattribute",{"_index":1802,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["identitystate",{"_index":1333,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":3023,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.on_error",{"_index":1388,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.processing",{"_index":1440,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.synced",{"_index":1370,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.to_complete",{"_index":2375,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":4212,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_sync",{"_index":1395,"title":{},"body":{"injectables/BackendsService.html":{}}}],["identitystate.to_validate",{"_index":2420,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.unknown",{"_index":2309,"title":{},"body":{"classes/Identities.html":{}}}],["identitée",{"_index":2377,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identitées",{"_index":1220,"title":{},"body":{"controllers/BackendsController.html":{}}}],["identités",{"_index":3968,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ids",{"_index":2432,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["ignored",{"_index":1355,"title":{},"body":{"injectables/BackendsService.html":{}}}],["ignoreexpiration",{"_index":2916,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":4391,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["image",{"_index":3612,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["imgsrc",{"_index":1814,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":4358,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implements",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["implémentation",{"_index":4444,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":4332,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":4150,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":4157,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(plugin.package).then((plugin",{"_index":857,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["importance",{"_index":4388,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":4463,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["importe",{"_index":2389,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["imported",{"_index":3786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imports",{"_index":654,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["impossible",{"_index":1730,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["in_progress",{"_index":3799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inactive",{"_index":3789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incluant",{"_index":4349,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["includeresultmetadata",{"_index":321,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["inclure",{"_index":4638,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inconnu",{"_index":1653,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["incorrect",{"_index":1652,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["increment",{"_index":1144,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface.ts",{"_index":1137,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["incrementby",{"_index":1139,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{}}}],["indiquant",{"_index":4689,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":4637,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":4669,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individuel",{"_index":4442,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["indépendant",{"_index":4012,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inetorgperson",{"_index":1643,"title":{"classes/inetOrgPerson.html":{}},"body":{"interfaces/CipherData.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":4214,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.employeenumber",{"_index":4694,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.employeetype",{"_index":4695,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgperson.uid",{"_index":1546,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["inetorgpersoncreatedto",{"_index":3870,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:11",{"_index":3897,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:15",{"_index":3900,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:19",{"_index":3901,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:24",{"_index":3898,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:29",{"_index":3909,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:34",{"_index":3899,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:39",{"_index":3902,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:44",{"_index":3903,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:49",{"_index":3904,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:53",{"_index":3905,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:59",{"_index":3906,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:64",{"_index":3907,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:69",{"_index":3908,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:7",{"_index":3912,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:74",{"_index":3910,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:79",{"_index":3911,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:84",{"_index":3913,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:89",{"_index":3914,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":2451,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":4209,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":2298,"title":{},"body":{"classes/Identities.html":{},"classes/inetOrgPerson.html":{}}}],["inetorgpersonupdatedto",{"_index":3895,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["informations",{"_index":4613,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":723,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"interfaces/GithubUpdate.html":{}}}],["infos'})@apiresponse({status",{"_index":720,"title":{},"body":{"controllers/AppController.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["init",{"_index":3168,"title":{},"body":{"controllers/PasswdController.html":{}}}],["init(@body",{"_index":3245,"title":{},"body":{"controllers/PasswdController.html":{}}}],["init(body",{"_index":3183,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initaccount",{"_index":1622,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initaccount(initdto",{"_index":1613,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initaccountdto",{"_index":1494,"title":{"classes/InitAccountDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["initaccountdto):promise",{"_index":1614,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initdto",{"_index":3273,"title":{},"body":{"injectables/PasswdService.html":{}}}],["initdto.type",{"_index":1562,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initdto.uid",{"_index":1547,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initdto.uid},k,passwdservice.token_expiration",{"_index":1620,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initialisation",{"_index":1529,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initialise",{"_index":3185,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialize",{"_index":1626,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initreset",{"_index":3169,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetByCodeDto.html":{}}}],["initreset(@body",{"_index":3253,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(body",{"_index":3188,"title":{},"body":{"controllers/PasswdController.html":{}}}],["initreset(initdto",{"_index":1542,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initresetdto",{"_index":1504,"title":{"classes/InitResetDto.html":{}},"body":{"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["initresetdto):promise",{"_index":1543,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["inject",{"_index":843,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":136,"title":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SettingsService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"overview.html":{}}}],["injectmodel",{"_index":367,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["injectmodel(form.name",{"_index":2290,"title":{},"body":{"injectables/FormService.html":{}}}],["injectredis",{"_index":1048,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["inline",{"_index":3630,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["input",{"_index":4516,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["inputs",{"_index":484,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["inquirer",{"_index":433,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["inquirerservice",{"_index":419,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["instance",{"_index":4129,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instanceof",{"_index":2411,"title":{},"body":{"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":4142,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instructions",{"_index":4483,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["int",{"_index":1560,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["integer",{"_index":4743,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["interactions",{"_index":4578,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interagir",{"_index":4127,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"interfaces/GithubUpdate.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["interfaces/service.schema.interface",{"_index":230,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["internal",{"_index":700,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":2772,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloggeroptions",{"_index":2770,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalloglevel",{"_index":2767,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":2764,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["internalservererrorexception",{"_index":1481,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["internalservererrorexception('une",{"_index":1729,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["interne",{"_index":920,"title":{},"body":{"controllers/AuthController.html":{}}}],["introduction",{"_index":4170,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":2727,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":4122,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":3994,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":4451,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":4455,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":2371,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["invalid_credentials",{"_index":3775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_json_response",{"_index":3776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_login",{"_index":3774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalide",{"_index":2730,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/SmsService.html":{}}}],["invalides",{"_index":2385,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ioredis",{"_index":102,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":3730,"title":{},"body":{"dependencies.html":{}}}],["isarray",{"_index":612,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/SecurityPartDTO.html":{},"classes/SyncIdentitiesDto.html":{}}}],["isarray()@apiproperty({type",{"_index":3559,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["isarray()@isstring({each",{"_index":3442,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["isboolean",{"_index":611,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@apiproperty({example",{"_index":3358,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":591,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":3089,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":3084,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":2986,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isemail",{"_index":610,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({required",{"_index":3883,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":588,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1860,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(actiontype",{"_index":1978,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isenum(configobjecttype",{"_index":1862,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(formtypelist",{"_index":2206,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":2197,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":2276,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":2273,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(fstypelist",{"_index":1994,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["isenum(fstypelist)@isnotempty()@apiproperty({enum",{"_index":2114,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isenum(identitylifecycle",{"_index":2461,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isenum(identitystate",{"_index":2460,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["isglobal",{"_index":840,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["isip",{"_index":2989,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":2990,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismimetype",{"_index":1988,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["ismongoid",{"_index":613,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@apiproperty",{"_index":1776,"title":{},"body":{"classes/ConcernedToPartDTO.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":624,"title":{},"body":{"classes/AgentsDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@isoptional()@apiproperty({example",{"_index":1974,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnotempty",{"_index":608,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePartDTO.html":{}}}],["isnotempty()@isenum(actiontype)@apiproperty({type",{"_index":1972,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["isnumber",{"_index":2239,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitResetDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":2233,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["isnumber()@apiproperty({example",{"_index":2761,"title":{},"body":{"classes/InitResetDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":2456,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":3551,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isnumber()@isoptional()@isenum(identitylifecycle)@apiproperty({enum",{"_index":2454,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject",{"_index":1905,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@apiproperty",{"_index":2876,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":2187,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":603,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":2201,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":2452,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":2266,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isoptional",{"_index":614,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isboolean()@apiproperty({type",{"_index":2104,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismimetype()@apiproperty({type",{"_index":2108,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@ismongoid()@apiproperty({type",{"_index":2106,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isobject()@apiproperty({type",{"_index":1976,"title":{},"body":{"classes/ExecuteJobDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":3885,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@isstring()@apiproperty({type",{"_index":2102,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":2437,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":607,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPartDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/VerifyTokenDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":2193,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty()@isoptional",{"_index":3873,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({example",{"_index":906,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/InitResetDto.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{}}}],["isstring()@apiproperty({required",{"_index":3875,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1857,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":593,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isnotempty()@apiproperty({type",{"_index":2110,"title":{},"body":{"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":585,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":2189,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring({each",{"_index":2982,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["issyncedjob",{"_index":1361,"title":{},"body":{"injectables/BackendsService.html":{}}}],["isvalidobjectid",{"_index":2355,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["isvalidobjectid(filter",{"_index":2399,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["it('should",{"_index":4272,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["items",{"_index":2440,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["iv",{"_index":1513,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["iverifyoptions",{"_index":3015,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":4093,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":4169,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":4308,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jeton",{"_index":928,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PasswdController.html":{}}}],["job",{"_index":1274,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.discard",{"_index":1453,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.dto",{"_index":1235,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job.dto.ts",{"_index":1971,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:14",{"_index":1975,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:19",{"_index":1977,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.dto.ts:9",{"_index":1973,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["job.getstate",{"_index":1449,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.id",{"_index":1364,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.id}::completed",{"_index":1373,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.returnvalue",{"_index":1368,"title":{},"body":{"injectables/BackendsService.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":1441,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job:added",{"_index":1291,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:completed",{"_index":1294,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job:failed",{"_index":1297,"title":{},"body":{"controllers/BackendsController.html":{}}}],["job['status",{"_index":1648,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["joberror",{"_index":1444,"title":{},"body":{"injectables/BackendsService.html":{}}}],["joberror.response",{"_index":1445,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobfailed",{"_index":1450,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobid",{"_index":1363,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["jobs",{"_index":1210,"title":{"classes/Jobs.html":{}},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/PasswdService.html":{},"classes/Tasks.html":{},"interfaces/TokenData.html":{}}}],["jobs.controller",{"_index":2896,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.name",{"_index":2897,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":2861,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/_enums/state.enum",{"_index":1339,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobs/_schemas/jobs.schema",{"_index":1341,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobs/jobs.module",{"_index":1309,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["jobs/jobs.service",{"_index":1342,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobscompleted",{"_index":1359,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobscontroller",{"_index":2854,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobscontroller.projection",{"_index":2865,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobscreatedto",{"_index":2870,"title":{"classes/JobsCreateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobscreatedto:11",{"_index":2887,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:15",{"_index":2884,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:21",{"_index":2886,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:25",{"_index":2890,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:29",{"_index":2885,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:33",{"_index":2888,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobscreatedto:37",{"_index":2889,"title":{},"body":{"classes/JobsDto.html":{}}}],["jobsdocument",{"_index":2851,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["jobsdto",{"_index":2859,"title":{"classes/JobsDto.html":{}},"body":{"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jobsmodule",{"_index":1304,"title":{"modules/JobsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsoptions",{"_index":1981,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["jobsschema",{"_index":2852,"title":{},"body":{"classes/Jobs.html":{},"modules/JobsModule.html":{}}}],["jobsservice",{"_index":1313,"title":{"injectables/JobsService.html":{}},"body":{"injectables/BackendsService.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"overview.html":{}}}],["jobstate",{"_index":1338,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"miscellaneous/enumerations.html":{}}}],["jobstate.completed",{"_index":1366,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstate.created",{"_index":1437,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["jobstate.failed",{"_index":1385,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstate.in_progress",{"_index":1381,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstore",{"_index":1427,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstore?.toobject",{"_index":1465,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobstoreupdated",{"_index":1446,"title":{},"body":{"injectables/BackendsService.html":{}}}],["jobsupdatedto",{"_index":2881,"title":{"classes/JobsUpdateDto.html":{}},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["jour",{"_index":2342,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["jpegphoto",{"_index":3841,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["json",{"_index":885,"title":{},"body":{"injectables/AppService.html":{},"controllers/IdentitiesJsonFormsController.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":1126,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":1097,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":1132,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(plaintext",{"_index":1702,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["json.parse(readfilesync('package.json",{"_index":892,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":1070,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(result",{"_index":1685,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["json.stringify",{"_index":1083,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["json.stringify(loginfos)].join",{"_index":289,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":237,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{}}}],["json.stringify(request.body",{"_index":1947,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["json.stringify(validations",{"_index":1940,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonform",{"_index":2562,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonformpath",{"_index":2592,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms",{"_index":2555,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms')}/${schema",{"_index":2594,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonforms/identities.jsonforms.module",{"_index":2634,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonforms/identities.jsonforms.service",{"_index":2633,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["jsonschema",{"_index":2560,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required",{"_index":2568,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonschema.required.includes(key",{"_index":2569,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["jsonwebtoken",{"_index":1053,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":1941,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":2918,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":1129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":1130,"title":{},"body":{"injectables/AuthService.html":{}}}],["justifi",{"_index":4101,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1831,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":924,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":2914,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":1106,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":1121,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":993,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":1001,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":994,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":1052,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":1016,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":985,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtstrategy.name",{"_index":2921,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["k",{"_index":1512,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["k,0",{"_index":1608,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(10",{"_index":1561,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["k.tostring(16),passwdservice.code_expiration",{"_index":1558,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["k=crypto.randombytes(passwdservice.random_bytes_k).tostring('hex",{"_index":1604,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["k=padd",{"_index":1692,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["keep",{"_index":1160,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"classes/ApiSession.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{}}}],["key._id.tostring",{"_index":2959,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.name",{"_index":2960,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat",{"_index":2953,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.suspendedat.gettime",{"_index":2955,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.tojson",{"_index":2952,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["key.token",{"_index":2961,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyring",{"_index":2948,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyrings",{"_index":2926,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["keyrings.command",{"_index":1757,"title":{},"body":{"modules/CliModule.html":{}}}],["keyrings.controller",{"_index":3003,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":3004,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":3002,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":998,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{}}}],["keyrings/keyrings.service",{"_index":1060,"title":{},"body":{"injectables/AuthService.html":{}}}],["keyringscommand",{"_index":1755,"title":{"classes/KeyringsCommand.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscommand.registerwithsubcommands",{"_index":1762,"title":{},"body":{"modules/CliModule.html":{}}}],["keyringscontroller",{"_index":2962,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{}}}],["keyringscontroller.projection",{"_index":2976,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatecommand",{"_index":2947,"title":{"classes/KeyringsCreateCommand.html":{}},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringscreatedto",{"_index":2942,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{}}}],["keyringscreatedto:14",{"_index":2997,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:18",{"_index":2994,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:21",{"_index":2996,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":2995,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatequestions",{"_index":1756,"title":{"classes/KeyringsCreateQuestions.html":{}},"body":{"modules/CliModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["keyringsdocument",{"_index":2934,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":2965,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["keyringsmodule",{"_index":984,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":2936,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{}}}],["keyringsservice",{"_index":1015,"title":{"injectables/KeyringsService.html":{}},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"overview.html":{}}}],["key}.yml",{"_index":2726,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["kradihsoy/lt",{"_index":3685,"title":{},"body":{"dependencies.html":{}}}],["l",{"_index":1579,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["l'aide",{"_index":4604,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":4045,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":4033,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":4014,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":4715,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":4631,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":4071,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entropie",{"_index":3344,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["l'entrée",{"_index":4788,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":4406,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":4393,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":4529,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":2422,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'identity",{"_index":1616,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["l'identité'})@apiresponse({status",{"_index":3186,"title":{},"body":{"controllers/PasswdController.html":{}}}],["l'init",{"_index":1612,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["l'initiation",{"_index":4318,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":4144,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":4322,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":4641,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":4643,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'orchestrateur",{"_index":3827,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":4389,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":4534,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'échec",{"_index":4350,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":4103,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":2343,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l\\'identit",{"_index":3244,"title":{},"body":{"controllers/PasswdController.html":{}}}],["l\\'état",{"_index":2428,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["la",{"_index":942,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":2225,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":3842,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":4380,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["langage",{"_index":4013,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":4001,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["lastchangedat",{"_index":3536,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastmajor",{"_index":798,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastminor",{"_index":799,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastparam",{"_index":2790,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["lastpatch",{"_index":800,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastsync",{"_index":2294,"title":{},"body":{"classes/Identities.html":{}}}],["lastupdatedat",{"_index":299,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":298,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastversion",{"_index":783,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["lastversion.split('.').map(number",{"_index":797,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["ldap",{"_index":3982,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":3817,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":927,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["le/les",{"_index":3174,"title":{},"body":{"controllers/PasswdController.html":{}}}],["legend",{"_index":638,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["len",{"_index":3355,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["length",{"_index":3379,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["les",{"_index":1209,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lessthan",{"_index":4747,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["letters",{"_index":3370,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["leurs",{"_index":1213,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":2795,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["levées",{"_index":4069,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liaison",{"_index":4505,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["license",{"_index":3915,"title":{"license.html":{}},"body":{"properties.html":{}}}],["lifecycle",{"_index":2295,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifestep",{"_index":4492,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":4607,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["limit",{"_index":1794,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{}}}],["linkedto",{"_index":1999,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["lire",{"_index":4550,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":4426,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list_backends",{"_index":3760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["liste",{"_index":1227,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listerez",{"_index":4710,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":457,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["livrables",{"_index":4070,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":4097,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":2488,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":841,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["local",{"_index":475,"title":{},"body":{"classes/Agents.html":{},"interfaces/ConfigInstance.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["localstrategy",{"_index":986,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"overview.html":{}}}],["localstrategy.name",{"_index":3019,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["log",{"_index":2802,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Logger.html":{}}}],["log(message",{"_index":2801,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger(backendscontroller.name",{"_index":1253,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(passwdadmcontroller.name",{"_index":3293,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["logger(passwdcontroller.name",{"_index":3205,"title":{},"body":{"controllers/PasswdController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":161,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":3051,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":1939,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`observer",{"_index":1247,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.debug(exception['message",{"_index":691,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error('sms",{"_index":3533,"title":{},"body":{"injectables/SmsService.html":{}}}],["logger.error(`observer",{"_index":1250,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger.log('sms",{"_index":3527,"title":{},"body":{"injectables/SmsService.html":{}}}],["logger.name",{"_index":3052,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":3045,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger.verbose(`atempt",{"_index":2919,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.verbose(`try",{"_index":3018,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger/logger.module",{"_index":1895,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger=this.logger",{"_index":3498,"title":{},"body":{"injectables/SmsService.html":{}}}],["loggercontroller",{"_index":3042,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggerdocument",{"_index":3033,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1885,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggername",{"_index":1244,"title":{},"body":{"controllers/BackendsController.html":{}}}],["loggerschema",{"_index":3035,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{}}}],["loggerservice",{"_index":3044,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"overview.html":{}}}],["loginfos",{"_index":282,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["logique",{"_index":4151,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":1791,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["logout",{"_index":914,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":975,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":923,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":2776,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["longueur",{"_index":4772,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":1578,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lower",{"_index":3338,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["lowercase",{"_index":3371,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lru",{"_index":744,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["léments",{"_index":4158,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":4672,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["mail",{"_index":899,"title":{},"body":{"classes/AskTokenDto.html":{},"interfaces/CipherData.html":{},"classes/InitResetDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mail'})@isstring",{"_index":904,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mailattribute",{"_index":1556,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["mailattribute=this.config.get('frontpwd.identitymailattribute",{"_index":1554,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["mailer",{"_index":1528,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["mailermodule",{"_index":833,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["mailermodule.forrootasync",{"_index":842,"title":{},"body":{"modules/AppModule.html":{}}}],["mailerservice",{"_index":1493,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["maintenabilit",{"_index":4427,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":3970,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":4067,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["mais",{"_index":2380,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["majuscule.example",{"_index":4785,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["management",{"_index":3058,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":3069,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":3060,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":4629,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":4226,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/identities.dto",{"_index":4205,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":4206,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":1334,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_schemas/identities.schema",{"_index":1336,"title":{},"body":{"injectables/BackendsService.html":{}}}],["management/identities/identities.module",{"_index":1308,"title":{},"body":{"modules/BackendsModule.html":{}}}],["management/identities/identities.service",{"_index":1337,"title":{},"body":{"injectables/BackendsService.html":{}}}],["management/identities/jsonforms",{"_index":2475,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["management/identities/upsert",{"_index":4692,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/validation",{"_index":2639,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["management/management.module",{"_index":815,"title":{},"body":{"modules/AppModule.html":{}}}],["management/passwd/_dto/init",{"_index":1495,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["management/passwd/_dto/reset",{"_index":1499,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["management/passwd/sms",{"_index":1507,"title":{},"body":{"interfaces/CipherData.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["managementcontroller",{"_index":3056,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["managementmodule",{"_index":808,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":875,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":3059,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"overview.html":{}}}],["manager",{"_index":734,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["manipulation",{"_index":3964,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":4042,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manquant",{"_index":2711,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":2384,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manuellement",{"_index":1202,"title":{},"body":{"controllers/BackendsController.html":{}}}],["manuels",{"_index":4083,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["map",{"_index":2144,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["map((group",{"_index":2586,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["masse",{"_index":2346,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["matches",{"_index":1989,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matches(/^\\/(\\.?[^\\/\\0",{"_index":1997,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["math.floor(index",{"_index":2574,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["matière",{"_index":4626,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":4105,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":4728,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":4736,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum",{"_index":4729,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":4737,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":4727,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":4774,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxretriesperrequest",{"_index":1819,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":4501,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mdp",{"_index":1632,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mdp'})@apiresponse({status",{"_index":3289,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["meilleure",{"_index":4434,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memory",{"_index":3104,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["message",{"_index":431,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/AllExceptionFilter.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["message:string",{"_index":3490,"title":{},"body":{"injectables/SmsService.html":{}}}],["messageevent",{"_index":1246,"title":{},"body":{"controllers/BackendsController.html":{}}}],["messages",{"_index":4429,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":2341,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["metadata",{"_index":123,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"classes/MetadataDto.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":314,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata.createdby",{"_index":313,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedat",{"_index":318,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedby",{"_index":317,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata['context",{"_index":2817,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":2819,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":2186,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/MetadataDto.html":{}}}],["metadatadto:12",{"_index":2202,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["metadatapart",{"_index":126,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["metadatapartdto",{"_index":2200,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{}}}],["metadatapartschema",{"_index":129,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{}}}],["method",{"_index":760,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["methode",{"_index":1736,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methodes",{"_index":1656,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["methods",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["methodstubs",{"_index":4359,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":4314,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":4551,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mime",{"_index":2001,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"injectables/TransformersFilestorageService.html":{}}}],["mime.split('/').pop",{"_index":3634,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["mimetype",{"_index":3616,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["min",{"_index":4732,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mincomplexity",{"_index":3356,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mindate",{"_index":4740,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimal",{"_index":3368,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["minimales",{"_index":4666,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimum",{"_index":4733,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":4741,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":4731,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":4771,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":4784,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["miscellaneous",{"_index":3743,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mise",{"_index":2406,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":4251,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["missing",{"_index":2370,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["mixedvalue",{"_index":396,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mjml",{"_index":3716,"title":{},"body":{"dependencies.html":{}}}],["mobile",{"_index":3843,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mock",{"_index":4175,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":4353,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":1064,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["model",{"_index":188,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":4538,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":4250,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":1149,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["models",{"_index":1155,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":4572,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modification",{"_index":4609,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":4421,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modifyresult",{"_index":223,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":4043,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":166,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":4260,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":172,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":173,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["modules",{"_index":636,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":101,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer",{"_index":834,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":836,"title":{},"body":{"modules/AppModule.html":{}}}],["modèle",{"_index":4194,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":4177,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["moins",{"_index":4693,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["monemail@mondomaine.com",{"_index":902,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["mongo",{"_index":4413,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":3092,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":3093,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":232,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb.countoptions",{"_index":242,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1821,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":3090,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":4244,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":4242,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":4241,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":4246,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":3097,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":3106,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":134,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":2781,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":858,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosebasequeryoptions",{"_index":224,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["mongoosemodule",{"_index":650,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/PasswdadmModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":655,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/PasswdadmModule.html":{},"modules/TasksModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":854,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["mongoosemoduleoptions",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":816,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongoosevalidationfilter",{"_index":827,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/MongooseValidationFilter.html":{}}}],["morethan",{"_index":4745,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mot",{"_index":1531,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["mote",{"_index":3393,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["mots",{"_index":1638,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":4717,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":4718,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["much",{"_index":1146,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":3805,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":1154,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mynewpassword",{"_index":1473,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["myoldpassword",{"_index":1475,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["mécanismes",{"_index":4035,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":4270,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":4146,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["même",{"_index":4690,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n",{"_index":1602,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["n'avez",{"_index":4684,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":2714,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":4148,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["namequeue",{"_index":1792,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["namespace",{"_index":1996,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["navigateur",{"_index":3389,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["navigation",{"_index":4590,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":4588,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":1365,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/FilestorageController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["negative",{"_index":4752,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":423,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"dependencies.html":{}}}],["nestjs",{"_index":100,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"interfaces/GithubUpdate.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/bullmq",{"_index":812,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":103,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/IdentitiesModule.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":153,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":995,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":132,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"modules/FilestorageModule.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":950,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2054,"title":{},"body":{"controllers/FilestorageController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newidentitydata",{"_index":4230,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newpassword",{"_index":1471,"title":{},"body":{"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["next",{"_index":434,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ErrorSchemaDto.html":{},"classes/Filestorage.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"injectables/TransformersFilestorageService.html":{}}}],["niveau",{"_index":4321,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":3983,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":4198,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["node:crypto",{"_index":667,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/KeyringsService.html":{}}}],["node_id",{"_index":752,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["nodejs",{"_index":4002,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nodejs.readablestream",{"_index":3594,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["nodemailer",{"_index":3722,"title":{},"body":{"dependencies.html":{}}}],["noinspection",{"_index":253,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/DtoValidationPipe.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":4143,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":2319,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":4701,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":4662,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":4364,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":4645,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["noreply@mydomain.com",{"_index":1840,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["normalisation",{"_index":3499,"title":{},"body":{"injectables/SmsService.html":{}}}],["normes",{"_index":4074,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosortedges",{"_index":2738,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["notamment",{"_index":3996,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notez",{"_index":4642,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":4287,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":3142,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{}}}],["notfoundexception",{"_index":222,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["notfoundexception('invalid",{"_index":1690,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["nounknown",{"_index":4765,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":4191,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouveau",{"_index":935,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":4047,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":4500,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":4141,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["now",{"_index":1376,"title":{},"body":{"injectables/BackendsService.html":{}}}],["null",{"_index":162,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["nullable",{"_index":2002,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitResetDto.html":{},"classes/Jobs.html":{},"interfaces/MongoosePlugin.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["number=1",{"_index":3399,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["number=10",{"_index":3398,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["number=30",{"_index":3400,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["number=70",{"_index":3401,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["numbers",{"_index":3373,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["numero",{"_index":3500,"title":{},"body":{"injectables/SmsService.html":{}}}],["numtel",{"_index":1589,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["numérations",{"_index":4473,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":4488,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":4004,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":4640,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitent",{"_index":4155,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":4753,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":4361,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["object",{"_index":261,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"interfaces/GithubUpdate.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/PasswdadmService.html":{},"classes/Settings.html":{},"injectables/TransformersFilestorageService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.entries(filtersquery",{"_index":2397,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["object.keys(attributes",{"_index":2706,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":3136,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(jsonschema.properties",{"_index":2571,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(jsonschema.properties).map((key",{"_index":2565,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["object.keys(validations).join",{"_index":1937,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values",{"_index":283,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["object.values(error.constraints)[0",{"_index":1951,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":1957,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(result",{"_index":1184,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["objectclass",{"_index":4659,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":385,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":2712,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":2722,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":3153,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":544,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["objectif",{"_index":3952,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objectsrc",{"_index":1810,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":4360,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":4449,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligatoires",{"_index":4614,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":1231,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observable((observer",{"_index":1285,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observer.next",{"_index":1245,"title":{},"body":{"controllers/BackendsController.html":{}}}],["observers",{"_index":4542,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ochestrator",{"_index":3803,"title":{},"body":{"index.html":{}}}],["octect",{"_index":1740,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["octets",{"_index":1743,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["official",{"_index":3787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["offline",{"_index":1082,"title":{},"body":{"injectables/AuthService.html":{}}}],["ok",{"_index":380,"title":{},"body":{"classes/AbstractSettingsService.html":{},"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"miscellaneous/enumerations.html":{}}}],["old",{"_index":1476,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldpassword",{"_index":1472,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldpasswords",{"_index":3430,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":1051,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["omit(options",{"_index":1112,"title":{},"body":{"injectables/AuthService.html":{}}}],["omit(user.toobject",{"_index":3024,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":3796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onglet",{"_index":4601,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":4585,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{}}}],["open",{"_index":3807,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":3822,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operationoptions",{"_index":2353,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["operator",{"_index":4549,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":4065,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":2787,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":2791,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionals",{"_index":1423,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionals['processedat",{"_index":1425,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionals['state",{"_index":1426,"title":{},"body":{"injectables/BackendsService.html":{}}}],["optionlabel",{"_index":4537,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":3995,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":192,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options).exec",{"_index":241,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["options.createdby",{"_index":2815,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.interface",{"_index":1347,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options.interface.ts",{"_index":1980,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["options.limit",{"_index":3412,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":2818,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":2820,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.synctimeout",{"_index":1442,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options.target",{"_index":2792,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":2796,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":2793,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options?.async",{"_index":1424,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.comment",{"_index":1435,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.disablelogs",{"_index":1428,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.job",{"_index":1421,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.mode",{"_index":2623,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["options?.scopes",{"_index":1104,"title":{},"body":{"injectables/AuthService.html":{}}}],["options?.task",{"_index":1436,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.timeoutdiscard",{"_index":1452,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options?.updatestatus",{"_index":1438,"title":{},"body":{"injectables/BackendsService.html":{}}}],["options['expiresin",{"_index":2954,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["opérations",{"_index":4386,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["orchestrateur",{"_index":3829,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["orchestrator|sesame",{"_index":731,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["organiser",{"_index":4594,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["originstate",{"_index":2430,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["otherwise",{"_index":2687,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["otpkey",{"_index":3431,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1534,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":648,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}],["output",{"_index":1174,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{}}}],["overview",{"_index":3920,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1148,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":1140,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":1147,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":1152,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["package",{"_index":881,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packagejson",{"_index":884,"title":{},"body":{"injectables/AppService.html":{}}}],["padd",{"_index":1552,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["padd=await",{"_index":1691,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["padding",{"_index":1551,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["page",{"_index":3949,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated.decorator",{"_index":537,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["paginatedfilterdto",{"_index":3155,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"classes/PaginatedFilterDto.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{}}}],["pair",{"_index":2447,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["panneaux",{"_index":4598,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["par",{"_index":1535,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["param",{"_index":523,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('_id",{"_index":574,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["param('project",{"_index":767,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["param('schema",{"_index":2513,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["parameter",{"_index":793,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["parameters=this.getparameter('passwordpolicies",{"_index":3327,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["params",{"_index":1431,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["paramètre",{"_index":4354,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":4138,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parent",{"_index":2090,"title":{},"body":{"controllers/FilestorageController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["parentid",{"_index":567,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":2538,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(filepath",{"_index":2561,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(path",{"_index":2728,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseboolpipe",{"_index":2049,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["parsed",{"_index":3505,"title":{},"body":{"injectables/SmsService.html":{}}}],["parseemail",{"_index":403,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseemail(val",{"_index":406,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parsefilepipe",{"_index":2050,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["parseint(process.env['sesame_smtp_port",{"_index":1837,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["parseintpipe",{"_index":1230,"title":{},"body":{"controllers/BackendsController.html":{}}}],["parsename",{"_index":2991,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["parsename(val",{"_index":2946,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["parsepassword",{"_index":404,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parsepassword(val",{"_index":411,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["parsephonenumber",{"_index":3487,"title":{},"body":{"injectables/SmsService.html":{}}}],["parser",{"_index":3409,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["parseusername",{"_index":405,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["parseusername(val",{"_index":414,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["partial",{"_index":707,"title":{},"body":{"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"miscellaneous/typealiases.html":{}}}],["partialprojectiontype",{"_index":548,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":606,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":623,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(filestoragecreatedto",{"_index":2006,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["partialtype(formdto",{"_index":2207,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":2467,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(identitiesupdatedto",{"_index":2468,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":3896,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(jobscreatedto",{"_index":2882,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["particulier",{"_index":4316,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":4219,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partir",{"_index":4239,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts/metadata.part.dto",{"_index":3076,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":2205,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":2154,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":618,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":617,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["pas",{"_index":1599,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["passe",{"_index":1532,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passe'})@apiresponse({status",{"_index":3285,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["passer",{"_index":4603,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":1785,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":991,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":999,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2909,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2902,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":2917,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passwd",{"_index":3166,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["passwd.controller",{"_index":3260,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwd.service",{"_index":3200,"title":{},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwd/passwd.module",{"_index":3071,"title":{},"body":{"modules/ManagementModule.html":{}}}],["passwdadm.controller",{"_index":3305,"title":{},"body":{"modules/PasswdadmModule.html":{}}}],["passwdadm.service",{"_index":3291,"title":{},"body":{"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{}}}],["passwdadmcontroller",{"_index":3282,"title":{"controllers/PasswdadmController.html":{}},"body":{"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{}}}],["passwdadmmodule",{"_index":3258,"title":{"modules/PasswdadmModule.html":{}},"body":{"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdadmservice",{"_index":1502,"title":{"injectables/PasswdadmService.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["passwdcontroller",{"_index":3164,"title":{"controllers/PasswdController.html":{}},"body":{"controllers/PasswdController.html":{},"modules/PasswdModule.html":{}}}],["passwddto",{"_index":1641,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["passwddto.uid,'state':identitystate.synced",{"_index":1629,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["passwdmodule",{"_index":3066,"title":{"modules/PasswdModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules.html":{},"overview.html":{}}}],["passwdservice",{"_index":1515,"title":{"injectables/PasswdService.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["passwdservice,smsservice",{"_index":3262,"title":{},"body":{"modules/PasswdModule.html":{}}}],["passwdservice.token_expiration",{"_index":3220,"title":{},"body":{"controllers/PasswdController.html":{}}}],["password",{"_index":412,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"controllers/JobsController.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["password'})@isstring",{"_index":3424,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto",{"_index":1487,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["password.dto.ts",{"_index":1470,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:10",{"_index":3427,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":1477,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:14",{"_index":3425,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:15",{"_index":1474,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.dto.ts:7",{"_index":1478,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["password.length",{"_index":3331,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["passwordpolicies",{"_index":1714,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["passwordpoliciesdto",{"_index":1508,"title":{"classes/PasswordPoliciesDto.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{}}}],["passwordpoliciesdto):promise",{"_index":3328,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["passwordpoliciesdto,@res",{"_index":3296,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["patch",{"_index":524,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["patch(':_id([0",{"_index":519,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["patch('state",{"_index":2427,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["patch('state')@apioperation({summary",{"_index":2340,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["path",{"_index":1055,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"interfaces/MongoosePlugin.html":{},"modules/SettingstModule.html":{}}}],["path.replace('validations",{"_index":2593,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["path}/${schema",{"_index":2557,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["pattern",{"_index":4775,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["paul.bismuth",{"_index":907,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ExecuteJobDto.html":{},"classes/InitResetDto.html":{}}}],["paul.smith",{"_index":2759,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["paul.smith'})@isstring",{"_index":2757,"title":{},"body":{"classes/InitAccountDto.html":{}}}],["payload",{"_index":1031,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ExecuteJobDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/SyncIdentitiesDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":2816,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.failedreason",{"_index":1386,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.identity",{"_index":1089,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity._id",{"_index":1092,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.identity.token",{"_index":1093,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jobid",{"_index":1378,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.jti].join",{"_index":1096,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.length",{"_index":1410,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.level",{"_index":2823,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":2814,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.returnvalue",{"_index":1391,"title":{},"body":{"injectables/BackendsService.html":{}}}],["payload.scopes.includes('api",{"_index":1090,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.scopes.includes('offline",{"_index":1088,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":3654,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":3941,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":2922,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdu.command_status",{"_index":3512,"title":{},"body":{"injectables/SmsService.html":{}}}],["pdu.message_id",{"_index":3526,"title":{},"body":{"injectables/SmsService.html":{}}}],["pending",{"_index":3770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":4064,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":4068,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["perl",{"_index":4018,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["permet",{"_index":4602,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":3955,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":4044,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["persistauthorization",{"_index":1835,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personnalis",{"_index":2483,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":4573,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":4569,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisés",{"_index":2490,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["personne",{"_index":4790,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peut",{"_index":3394,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":4365,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["phonenumber",{"_index":3489,"title":{},"body":{"injectables/SmsService.html":{},"dependencies.html":{}}}],["pick",{"_index":889,"title":{},"body":{"injectables/AppService.html":{}}}],["pick(identity",{"_index":1726,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["pick(identity.tojson",{"_index":1642,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["pick(this.package",{"_index":895,"title":{},"body":{"injectables/AppService.html":{}}}],["pick,get",{"_index":1491,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["pickprojectionhelper",{"_index":541,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["pictures",{"_index":1825,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ping_target",{"_index":3762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":3151,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["pkginfo",{"_index":785,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["pkginfo.name",{"_index":788,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["pkginfo.version",{"_index":787,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["plac",{"_index":4703,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":4034,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":4606,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["plaintext",{"_index":1699,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["planning",{"_index":4090,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":4080,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plugin",{"_index":855,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.default",{"_index":859,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugin.options",{"_index":860,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["plugins",{"_index":1795,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":4407,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":2345,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["police",{"_index":1631,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{}}}],["policies",{"_index":3316,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["policies.haslowercase",{"_index":3336,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["policies.hasnumbers",{"_index":3342,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["policies.hasuppercase",{"_index":3340,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["policies.mincomplexity",{"_index":3345,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["policies.resetbysms",{"_index":1586,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["policies=new",{"_index":1585,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["policy.dto",{"_index":1510,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/TokenData.html":{}}}],["policy.dto.ts",{"_index":3348,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:11",{"_index":3377,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:15",{"_index":3372,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:19",{"_index":3374,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:23",{"_index":3375,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:27",{"_index":3385,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:31",{"_index":3367,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:35",{"_index":3362,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:39",{"_index":3397,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:43",{"_index":3392,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["policy.dto.ts:7",{"_index":3380,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["politique",{"_index":1636,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["port",{"_index":870,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["positionnement",{"_index":4506,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":4750,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":4751,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["possibilit",{"_index":4006,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["possible",{"_index":1584,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":525,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post('change",{"_index":3206,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('change')@apioperation({summary",{"_index":3172,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('execute",{"_index":1262,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('execute')@apioperation({summary",{"_index":1200,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('generate",{"_index":2503,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generate')@apioperation({summary",{"_index":2479,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall",{"_index":2500,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('generateall')@apioperation({summary",{"_index":2486,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["post('gettoken",{"_index":3215,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('init",{"_index":3243,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('init')@apioperation({summary",{"_index":3184,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset",{"_index":3252,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('initreset')@apioperation({summary",{"_index":3189,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('local",{"_index":957,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined)@apioperation({summary",{"_index":918,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":974,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@apioperation({summary",{"_index":925,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":969,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh')@apioperation({summary",{"_index":932,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":3235,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('reset')@apioperation({summary",{"_index":3193,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode",{"_index":3229,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('resetbycode')@apioperation({summary",{"_index":3196,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post('setpolicies",{"_index":3294,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('setpolicies')@apioperation({summary",{"_index":3288,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["post('sync",{"_index":1254,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('sync')@apioperation({summary",{"_index":1225,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall",{"_index":1260,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('syncall')@apioperation({summary",{"_index":1217,"title":{},"body":{"controllers/BackendsController.html":{}}}],["post('upsert",{"_index":2387,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('upsert')@apicreatedecorator(identitiesupsertdto",{"_index":2352,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('verifytoken",{"_index":3222,"title":{},"body":{"controllers/PasswdController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":496,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":2162,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":2325,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":2964,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["post()@apioperation({summary",{"_index":2645,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["post()@useinterceptors(undefined)@apifileuploaddecorator(fileuploaddto",{"_index":2030,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["postaladdress",{"_index":3844,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":1574,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":4705,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["powershell",{"_index":4017,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":3993,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pre",{"_index":4457,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preferredlanguage",{"_index":3845,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":489,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"controllers/SettingsController.html":{},"controllers/TasksController.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":4399,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":4355,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":4193,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["principal",{"_index":4557,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":4015,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":3966,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":3826,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prise",{"_index":4571,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":4424,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["process.cwd",{"_index":1824,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env.node_env",{"_index":1061,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['npm_lifecycle_event",{"_index":1351,"title":{},"body":{"injectables/BackendsService.html":{}}}],["process.env['sesame_front_mdp",{"_index":1841,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_jwt_secret",{"_index":1830,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_log_level",{"_index":1803,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mdp_sender",{"_index":1839,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_mongo_uri",{"_index":1820,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_name_queue",{"_index":1804,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_redis_uri",{"_index":1816,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mail",{"_index":1842,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_reset_pwd_mobile",{"_index":1843,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_password",{"_index":1846,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_regioncode",{"_index":1848,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_server",{"_index":1844,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_sourceaddr",{"_index":1847,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smpp_systemid",{"_index":1845,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['sesame_smtp_server",{"_index":1836,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processedat",{"_index":1382,"title":{},"body":{"injectables/BackendsService.html":{},"classes/Jobs.html":{}}}],["processing",{"_index":3793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["processor",{"_index":4113,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":4331,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["procédure",{"_index":4691,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["production",{"_index":1062,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["profile.commonname",{"_index":4540,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["project",{"_index":726,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["projection",{"_index":206,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":543,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type",{"_index":550,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":3937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":207,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projet",{"_index":3823,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":3960,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":4438,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":4341,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise",{"_index":196,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise((resolve",{"_index":3636,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["promise.reject(new",{"_index":4378,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":2734,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":131,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":2009,"title":{},"body":{"classes/Filestorage.html":{},"classes/StatePart.html":{}}}],["prop({type",{"_index":128,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"injectables/BackendsService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["properties/${key",{"_index":2567,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["property",{"_index":1150,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{}}}],["propertynames",{"_index":4766,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propres",{"_index":4495,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriét",{"_index":4582,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":4128,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protocoles",{"_index":4030,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["provide",{"_index":877,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["providers",{"_index":641,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provisional",{"_index":3788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["précis",{"_index":4094,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":4404,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":4171,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":3992,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ptelnumber.number.e164",{"_index":3506,"title":{},"body":{"injectables/SmsService.html":{}}}],["ptelnumber.valid",{"_index":3507,"title":{},"body":{"injectables/SmsService.html":{}}}],["ptelnumber=parsephonenumber(telnumber",{"_index":3502,"title":{},"body":{"injectables/SmsService.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["public()@sse('sse')@apioperation({summary",{"_index":1205,"title":{},"body":{"controllers/BackendsController.html":{}}}],["pwned",{"_index":3361,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["pwnedpassword",{"_index":3323,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["python",{"_index":4016,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":4555,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":4563,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":4589,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":4597,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":4595,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":4702,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":4663,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["quasar",{"_index":4476,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":1601,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":225,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FilestorageController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["query('async",{"_index":1256,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('current",{"_index":768,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["query('disablelogs",{"_index":1264,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('erroronnotfound",{"_index":2392,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["query('filters",{"_index":2391,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["query('hidden",{"_index":2076,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('key",{"_index":1282,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('mime",{"_index":2088,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('mode",{"_index":2514,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["query('namespace",{"_index":2095,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('path",{"_index":2084,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["query('timeoutdiscard",{"_index":1263,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('updatestatus",{"_index":1265,"title":{},"body":{"controllers/BackendsController.html":{}}}],["query('upsert",{"_index":2393,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["queryoptions",{"_index":202,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["question",{"_index":420,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["question({message",{"_index":407,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questions",{"_index":430,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["questionset",{"_index":421,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["queue",{"_index":79,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('application.namequeue",{"_index":115,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queue(this.config.get('namequeue",{"_index":4136,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('application.namequeue",{"_index":118,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":4137,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":4107,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":1596,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["radash",{"_index":890,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/LocalStrategy.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"dependencies.html":{}}}],["radio",{"_index":4518,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["random_bytes_iv",{"_index":1518,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["random_bytes_k",{"_index":1516,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["randombytes",{"_index":666,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/KeyringsService.html":{}}}],["randombytes(32).tostring('hex",{"_index":674,"title":{},"body":{"injectables/AgentsService.html":{}}}],["randombytes(64).tostring('hex",{"_index":3010,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":1113,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomint",{"_index":1497,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["randomint(100000",{"_index":1548,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["rationalisant",{"_index":4346,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rawbodybuffer(options",{"_index":3410,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":3404,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawresult",{"_index":4298,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["rc.4",{"_index":3735,"title":{},"body":{"dependencies.html":{}}}],["reached",{"_index":1463,"title":{},"body":{"injectables/BackendsService.html":{}}}],["read",{"_index":490,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["read(@param('_id",{"_index":2081,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/FormController.html":{}}}],["read(_id",{"_index":500,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["readdirsync",{"_index":2541,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(dynamicconfigpath).map((file",{"_index":2607,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readdirsync(hardconfigpath).map((file",{"_index":2601,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readfilesync",{"_index":886,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["reading",{"_index":2603,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"controllers/SettingsController.html":{},"injectables/SmsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["readpath",{"_index":2026,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpath(@query('namespace",{"_index":2083,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpath(namespace",{"_index":2034,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata",{"_index":2027,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata(@res",{"_index":2094,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readpathrawdata(res",{"_index":2037,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readrawdata",{"_index":2028,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readrawdata(@res",{"_index":2087,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["readrawdata(res",{"_index":2040,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["real",{"_index":968,"title":{},"body":{"controllers/AuthController.html":{}}}],["received",{"_index":3418,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/VerifyTokenDto.html":{}}}],["recherche",{"_index":1615,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["record",{"_index":387,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["redirection",{"_index":4528,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":2136,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirig",{"_index":3391,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["redis",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1817,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redismodule",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redismodule.forrootasync",{"_index":864,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{}}}],["redisoptions",{"_index":819,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["reduce((acc",{"_index":2572,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ref",{"_index":167,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{}}}],["reflect",{"_index":3728,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1899,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{}}}],["refresh",{"_index":915,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":971,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":931,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":972,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":1116,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":1007,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":1008,"title":{},"body":{"injectables/AuthService.html":{}}}],["regenerating",{"_index":1077,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":4776,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["regioncode",{"_index":1801,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/SmsService.html":{}}}],["register",{"_index":1887,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{}}}],["reinitialis",{"_index":3396,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reinitialisation",{"_index":1568,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["reinitialise",{"_index":3197,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reject",{"_index":2707,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["reject(err",{"_index":3641,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["rejects",{"_index":2682,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":4439,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["remarques",{"_index":4792,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["remove",{"_index":491,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remove(@param('_id",{"_index":2100,"title":{},"body":{"controllers/FilestorageController.html":{},"controllers/FormController.html":{}}}],["remove(_id",{"_index":507,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":4485,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":3998,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":4562,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":4599,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendre",{"_index":4580,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":4570,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":1013,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":1027,"title":{},"body":{"injectables/AuthService.html":{}}}],["renvoie",{"_index":4437,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["représent",{"_index":4487,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":4130,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":4445,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":4363,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":4448,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":156,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/JobsController.html":{}}}],["req.query",{"_index":2868,"title":{},"body":{"controllers/JobsController.html":{}}}],["reqidentity",{"_index":951,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["request.query['debug",{"_index":1942,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["requestcontext",{"_index":155,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":163,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":821,"title":{},"body":{"modules/AppModule.html":{}}}],["requesttimeoutexception",{"_index":1330,"title":{},"body":{"injectables/BackendsService.html":{}}}],["requete",{"_index":4616,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["require('smpp",{"_index":3497,"title":{},"body":{"injectables/SmsService.html":{}}}],["required",{"_index":391,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AppController.html":{},"classes/ConcernedToPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requis",{"_index":2445,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":4667,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":4612,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requêtes",{"_index":4627,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":499,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["res.json",{"_index":764,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["res.render('core/filestorage/transformers/html",{"_index":3631,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.setheader('content",{"_index":3623,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["res.socket.on('close",{"_index":1283,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(code).json",{"_index":2405,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["res.status(httpstatus.accepted).json",{"_index":1259,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":2413,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["res.status(httpstatus.created).json",{"_index":561,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":570,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"controllers/PasswdController.html":{}}}],["res.status(httpstatus.ok).json({data",{"_index":3221,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":978,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":2386,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["res:response):promise",{"_index":3298,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["reset",{"_index":647,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"modules/PasswdadmModule.html":{},"classes/PasswordPoliciesDto.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"interfaces/TokenData.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["reset'})@apiresponse({status",{"_index":3190,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(@body",{"_index":3236,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(body",{"_index":3192,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reset(data",{"_index":1737,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["reset.dto",{"_index":1505,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["reset.dto.ts",{"_index":2760,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:11",{"_index":2762,"title":{},"body":{"classes/InitResetDto.html":{}}}],["reset.dto.ts:7",{"_index":2763,"title":{},"body":{"classes/InitResetDto.html":{}}}],["resetaccount",{"_index":1570,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["resetbycode",{"_index":3170,"title":{},"body":{"controllers/PasswdController.html":{},"injectables/PasswdService.html":{}}}],["resetbycode(@body",{"_index":3231,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(body",{"_index":3195,"title":{},"body":{"controllers/PasswdController.html":{}}}],["resetbycode(data",{"_index":3276,"title":{},"body":{"injectables/PasswdService.html":{}}}],["resetbycode(data:resetbycodedto):promise",{"_index":1710,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["resetbycodedto",{"_index":1498,"title":{"classes/ResetByCodeDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetByCodeDto.html":{},"interfaces/TokenData.html":{}}}],["resetbysms",{"_index":3357,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reseting",{"_index":1593,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["resetpassworddto",{"_index":1488,"title":{"classes/ResetPasswordDto.html":{}},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{}}}],["resetvalidation",{"_index":4576,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":1054,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(buffer.concat(chunks).tostring('utf8",{"_index":3643,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["resolve(process.cwd",{"_index":1067,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolveconfigpath",{"_index":2670,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolveconfigpath(key",{"_index":2675,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["resolvejsonformpath",{"_index":2526,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolvejsonformpath(schema",{"_index":2534,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["resolves",{"_index":2680,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["respecte",{"_index":1635,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["respecter",{"_index":4073,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":4779,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":4098,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":494,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["response.decorator",{"_index":535,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":3159,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:12",{"_index":3161,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":3162,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":3163,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":3128,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":697,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["response?.status",{"_index":1443,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["responsible",{"_index":2668,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ressource",{"_index":4633,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":3975,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["result",{"_index":328,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["result.interface",{"_index":3678,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts",{"_index":1171,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["result.interface.ts:9",{"_index":3677,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{}}}],["result.push",{"_index":2621,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["result[identity.identity._id",{"_index":1407,"title":{},"body":{"injectables/BackendsService.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["retoune",{"_index":1595,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["retour",{"_index":4375,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":3180,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":4390,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":4185,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retrieve",{"_index":2745,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/RawBodyBufferOptions.html":{},"modules/SettingstModule.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["reussi",{"_index":3388,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["reçu",{"_index":3230,"title":{},"body":{"controllers/PasswdController.html":{}}}],["reçu'})@apiresponse({status",{"_index":3198,"title":{},"body":{"controllers/PasswdController.html":{}}}],["rien",{"_index":1598,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["roles",{"_index":622,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["root",{"_index":1823,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["round",{"_index":4758,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1890,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{}}}],["routermodule.register",{"_index":1897,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{},"modules/SettingstModule.html":{}}}],["row",{"_index":2226,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["run",{"_index":480,"title":{},"body":{"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{}}}],["run(inputs",{"_index":437,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["runvalidators",{"_index":320,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["rxjs",{"_index":1233,"title":{},"body":{"controllers/BackendsController.html":{},"dependencies.html":{}}}],["règles",{"_index":3991,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupère",{"_index":933,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{}}}],["récupér",{"_index":4478,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["récupération",{"_index":940,"title":{},"body":{"controllers/AuthController.html":{}}}],["réel",{"_index":1208,"title":{},"body":{"controllers/BackendsController.html":{}}}],["référence",{"_index":4356,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":4186,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":4410,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":4778,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réinitialisation",{"_index":1735,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["réinitialiser",{"_index":1731,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["réinitilisation",{"_index":3224,"title":{},"body":{"controllers/PasswdController.html":{}}}],["réponse",{"_index":4619,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":4088,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":4387,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":4443,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["s3",{"_index":1790,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["s9nv9vjxdw7bs0haowumdj3xpbsj7dsdrj2nd1z9rvqlk/sf1lkzpfnwdvlx1dzug0wgeyab9a",{"_index":3426,"title":{},"body":{"classes/ResetPasswordDto.html":{},"classes/VerifyTokenDto.html":{}}}],["save",{"_index":3037,"title":{},"body":{"classes/Logger.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":198,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["schema",{"_index":394,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":1962,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:12",{"_index":1968,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":1964,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":1967,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":1965,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.endswith('.ui.yml",{"_index":2589,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.endswith('.yml",{"_index":2546,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schema.org/draft",{"_index":4713,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.replace('.yml",{"_index":2590,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schemafactory",{"_index":395,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConcernedToPart.html":{},"classes/DataPart.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":400,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["schemafactory.createforclass(agents",{"_index":479,"title":{},"body":{"classes/Agents.html":{}}}],["schemafactory.createforclass(concernedtopart",{"_index":1771,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["schemafactory.createforclass(datapart",{"_index":1912,"title":{},"body":{"classes/DataPart.html":{}}}],["schemafactory.createforclass(filestorage).index",{"_index":2021,"title":{},"body":{"classes/Filestorage.html":{}}}],["schemafactory.createforclass(form",{"_index":2158,"title":{},"body":{"classes/Form.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":2254,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":2287,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["schemafactory.createforclass(identities",{"_index":2312,"title":{},"body":{"classes/Identities.html":{}}}],["schemafactory.createforclass(inetorgperson).index",{"_index":3869,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(jobs",{"_index":2853,"title":{},"body":{"classes/Jobs.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":2937,"title":{},"body":{"classes/Keyrings.html":{}}}],["schemafactory.createforclass(logger).pre",{"_index":3036,"title":{},"body":{"classes/Logger.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":3082,"title":{},"body":{"classes/MetadataPart.html":{}}}],["schemafactory.createforclass(securitypart",{"_index":3440,"title":{},"body":{"classes/SecurityPart.html":{}}}],["schemafactory.createforclass(settings",{"_index":3465,"title":{},"body":{"classes/Settings.html":{}}}],["schemafactory.createforclass(statepart",{"_index":3549,"title":{},"body":{"classes/StatePart.html":{}}}],["schemafactory.createforclass(tasks",{"_index":3565,"title":{},"body":{"classes/Tasks.html":{}}}],["schemas",{"_index":2610,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":231,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["schematics",{"_index":3686,"title":{},"body":{"dependencies.html":{}}}],["schema}.ui.yml",{"_index":2625,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["schéma",{"_index":2482,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2489,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":1926,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesJsonformsService.html":{},"interfaces/ValidationRecursive.html":{}}}],["scope.request",{"_index":1927,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":1081,"title":{},"body":{"injectables/AuthService.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["scopes.push(...options.scopes",{"_index":1105,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":4469,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":3959,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1815,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":4348,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":3824,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":492,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["search(@res",{"_index":2512,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["search(res",{"_index":511,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["searchall",{"_index":2477,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(@res",{"_index":2509,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchall(res",{"_index":2494,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["searchfield",{"_index":4539,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":514,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["searchfilterschema",{"_index":512,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["secondary",{"_index":903,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["secret",{"_index":1829,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":3432,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":2912,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":4462,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":2277,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":2137,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["securit",{"_index":1716,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["security",{"_index":453,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["security.secretkey",{"_index":1100,"title":{},"body":{"injectables/AuthService.html":{}}}],["securitypart",{"_index":463,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["securitypartdto",{"_index":595,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["securitypartschema",{"_index":464,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{}}}],["see",{"_index":757,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{}}}],["sein",{"_index":4203,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":4515,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1809,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["selon",{"_index":4344,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["send",{"_index":1248,"title":{},"body":{"controllers/BackendsController.html":{},"classes/InitResetDto.html":{},"injectables/SmsService.html":{}}}],["send(telnumber",{"_index":3484,"title":{},"body":{"injectables/SmsService.html":{}}}],["sender",{"_index":1798,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["senders",{"_index":4519,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sensibles",{"_index":4038,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sent",{"_index":1206,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/SmsService.html":{}}}],["sera",{"_index":3390,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sert",{"_index":1597,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["server",{"_index":701,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["serveur",{"_index":1577,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":3821,"title":{},"body":{"index.html":{}}}],["service",{"_index":251,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["service.ts",{"_index":3481,"title":{},"body":{"injectables/SmsService.html":{}}}],["service.ts:11",{"_index":3485,"title":{},"body":{"injectables/SmsService.html":{}}}],["service.ts:7",{"_index":3483,"title":{},"body":{"injectables/SmsService.html":{}}}],["servicename",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":4118,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":229,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["ses",{"_index":4494,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":1103,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["session",{"_index":287,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"injectables/SmsService.html":{}}}],["session(@res",{"_index":964,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":937,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.bind_transmitter",{"_index":3509,"title":{},"body":{"injectables/SmsService.html":{}}}],["session.close",{"_index":3529,"title":{},"body":{"injectables/SmsService.html":{}}}],["session.on('error",{"_index":3531,"title":{},"body":{"injectables/SmsService.html":{}}}],["session.submit_sm",{"_index":3514,"title":{},"body":{"injectables/SmsService.html":{}}}],["session.ts",{"_index":704,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:2",{"_index":709,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:3",{"_index":711,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:4",{"_index":710,"title":{},"body":{"classes/ApiSession.html":{},"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":708,"title":{},"body":{"classes/ApiSession.html":{}}}],["session.unbind",{"_index":3528,"title":{},"body":{"injectables/SmsService.html":{}}}],["set",{"_index":315,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{}}}],["setoninsert",{"_index":312,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["setparameter",{"_index":347,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["setparameter(settingname",{"_index":355,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["setpolicies",{"_index":3284,"title":{},"body":{"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{}}}],["setpolicies(@body",{"_index":3295,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(body",{"_index":3287,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["setpolicies(policies",{"_index":3314,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["settimeout",{"_index":2783,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["settingname",{"_index":354,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["settings",{"_index":368,"title":{"classes/Settings.html":{}},"body":{"classes/AbstractSettingsService.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"modules/SettingstModule.html":{}}}],["settings,settingsschema",{"_index":3306,"title":{},"body":{"modules/PasswdadmModule.html":{}}}],["settings.name",{"_index":3307,"title":{},"body":{"modules/PasswdadmModule.html":{}}}],["settings.service",{"_index":3326,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["settings.service.ts",{"_index":343,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["settings.service.ts:13",{"_index":353,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["settings.service.ts:22",{"_index":356,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["settings.service.ts:40",{"_index":351,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["settings.service.ts:7",{"_index":349,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["settings/_schemas/settings.schema",{"_index":370,"title":{},"body":{"classes/AbstractSettingsService.html":{},"modules/PasswdadmModule.html":{}}}],["settings/passwdadm/_dto/password",{"_index":1509,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"interfaces/TokenData.html":{}}}],["settings/passwdadm/passwdadm.module",{"_index":3261,"title":{},"body":{"modules/PasswdModule.html":{},"modules/SettingstModule.html":{}}}],["settings/passwdadm/passwdadm.service",{"_index":1503,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["settings/settings.controller",{"_index":3479,"title":{},"body":{"modules/SettingstModule.html":{}}}],["settings/settings.module",{"_index":832,"title":{},"body":{"modules/AppModule.html":{}}}],["settings/settings.service",{"_index":3469,"title":{},"body":{"controllers/SettingsController.html":{},"modules/SettingstModule.html":{}}}],["settingscontroller",{"_index":3466,"title":{"controllers/SettingsController.html":{}},"body":{"controllers/SettingsController.html":{},"modules/SettingstModule.html":{}}}],["settingsdocument",{"_index":3464,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["settingsname",{"_index":344,"title":{},"body":{"classes/AbstractSettingsService.html":{},"injectables/PasswdadmService.html":{}}}],["settingsschema",{"_index":369,"title":{},"body":{"classes/AbstractSettingsService.html":{},"modules/PasswdadmModule.html":{},"classes/Settings.html":{}}}],["settingsservice",{"_index":3468,"title":{"injectables/SettingsService.html":{}},"body":{"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"overview.html":{}}}],["settingstmodule",{"_index":809,"title":{"modules/SettingstModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SettingstModule.html":{},"modules.html":{},"overview.html":{}}}],["settingstmodule.register",{"_index":876,"title":{},"body":{"modules/AppModule.html":{}}}],["sha",{"_index":748,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["short_message",{"_index":3524,"title":{},"body":{"injectables/SmsService.html":{}}}],["showfriendlyerrorstack",{"_index":1818,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["showunfocuseddescription",{"_index":2584,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["si",{"_index":1582,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["signal",{"_index":776,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["significatif",{"_index":4100,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":4394,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":4398,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":4319,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["simplifie",{"_index":4330,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":4252,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":4403,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":4381,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":4200,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulées",{"_index":4343,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":4178,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":865,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/CliModule.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["skip",{"_index":4232,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["slots",{"_index":4574,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["smpp",{"_index":3496,"title":{},"body":{"injectables/SmsService.html":{},"dependencies.html":{}}}],["smpp.connect",{"_index":3508,"title":{},"body":{"injectables/SmsService.html":{}}}],["sms",{"_index":1536,"title":{},"body":{"interfaces/CipherData.html":{},"interfaces/ConfigInstance.html":{},"classes/InitResetDto.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{}}}],["smsattribute",{"_index":1588,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["smsattribute=this.config.get('frontpwd.identitymobileattribute",{"_index":1587,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["smsservice",{"_index":1506,"title":{"injectables/SmsService.html":{}},"body":{"interfaces/CipherData.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"interfaces/TokenData.html":{},"overview.html":{}}}],["smtp://localhost:25",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["sn",{"_index":3846,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["software",{"_index":528,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["sommaire",{"_index":4461,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":4450,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":2383,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":4233,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sorties",{"_index":4010,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["soumission",{"_index":4526,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"modules/FilestorageModule.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"modules/IdentitiesJsonformsModule.html":{},"injectables/IdentitiesJsonformsService.html":{},"modules/IdentitiesModule.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"modules/PasswdModule.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"modules/PasswdadmModule.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"controllers/SettingsController.html":{},"injectables/SettingsService.html":{},"modules/SettingstModule.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["source_addr",{"_index":3517,"title":{},"body":{"injectables/SmsService.html":{}}}],["source_addr_npi:0",{"_index":3516,"title":{},"body":{"injectables/SmsService.html":{}}}],["source_addr_ton",{"_index":3515,"title":{},"body":{"injectables/SmsService.html":{}}}],["sourceaddr",{"_index":1800,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/SmsService.html":{}}}],["sourceaddr=this.config.get('sms.sourceaddr",{"_index":3495,"title":{},"body":{"injectables/SmsService.html":{}}}],["sources",{"_index":3806,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":4496,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["spam",{"_index":3251,"title":{},"body":{"controllers/PasswdController.html":{}}}],["special",{"_index":3334,"title":{},"body":{"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["specific",{"_index":759,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["specifier",{"_index":4696,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["sprints",{"_index":4092,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":4376,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":4686,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":4152,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":4383,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":4735,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":4345,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../action",{"_index":3745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent",{"_index":3747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../agent.type.ts",{"_index":3928,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../auto",{"_index":3935,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../backend",{"_index":3750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../config.object.ts",{"_index":3752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../fs",{"_index":3754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../identities.schema.ts",{"_index":3929,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../internal.logger.ts",{"_index":3757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jobs.schema.ts",{"_index":3930,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../keyrings.schema.ts",{"_index":3931,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":3755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.schema.ts",{"_index":3932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../mixed",{"_index":3933,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":3936,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.schema.ts",{"_index":3938,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../state.enum.ts",{"_index":3758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../states.enum.ts",{"_index":3756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.schema.ts",{"_index":3939,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../types.ts",{"_index":3753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validation",{"_index":3940,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrapper.type.ts",{"_index":3943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract",{"_index":342,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:11",{"_index":86,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:12",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:13",{"_index":85,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:15",{"_index":96,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:17",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:24",{"_index":93,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:9",{"_index":84,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts",{"_index":177,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:118",{"_index":214,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:153",{"_index":199,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:195",{"_index":217,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:23",{"_index":189,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:257",{"_index":219,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:29",{"_index":221,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:318",{"_index":204,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:34",{"_index":208,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:44",{"_index":193,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:50",{"_index":210,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:84",{"_index":212,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":138,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":149,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:43",{"_index":151,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":175,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1902,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":3074,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":3075,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":3083,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":3085,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":3088,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":3087,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":3086,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":3451,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:16",{"_index":3455,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:22",{"_index":3452,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":3456,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:30",{"_index":3458,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:36",{"_index":3459,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:42",{"_index":3453,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":3460,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:50",{"_index":3454,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":120,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":125,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":130,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":3077,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":3078,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":3081,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":3080,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":3079,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/data/api",{"_index":703,"title":{},"body":{"classes/ApiSession.html":{}}}],["src/_common/data/console",{"_index":1872,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["src/_common/dto/error",{"_index":1961,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["src/_common/dto/not",{"_index":3143,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["src/_common/dto/paginated",{"_index":3156,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":3644,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":3667,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":3666,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":3669,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":3649,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":3665,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":683,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/_common/filters/identities",{"_index":2654,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["src/_common/filters/mongoose",{"_index":3118,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["src/_common/middlewares/raw",{"_index":3405,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["src/_common/pipes/dto",{"_index":1913,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["src/_common/pipes/object",{"_index":3148,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":1136,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":3091,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":3103,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":3099,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":3101,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":3098,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":3096,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":3102,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/types/agent.type.ts",{"_index":3944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/mixed",{"_index":3945,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":3946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":3947,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":3948,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":715,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["src/app.controller.ts:34",{"_index":724,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:42",{"_index":735,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":810,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":880,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:10",{"_index":882,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":883,"title":{},"body":{"injectables/AppService.html":{}}}],["src/cli/agents.command.ts",{"_index":402,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:12",{"_index":416,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:20",{"_index":409,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:29",{"_index":413,"title":{},"body":{"classes/AgentCreateQuestions.html":{}}}],["src/cli/agents.command.ts:35",{"_index":581,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:45",{"_index":582,"title":{},"body":{"classes/AgentsCreateCommand.html":{}}}],["src/cli/agents.command.ts:57",{"_index":482,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/agents.command.ts:63",{"_index":483,"title":{},"body":{"classes/AgentsCommand.html":{}}}],["src/cli/backends.command.ts",{"_index":1176,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:15",{"_index":1467,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/backends.command.ts:26",{"_index":1177,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:32",{"_index":1178,"title":{},"body":{"classes/BackendsCommand.html":{}}}],["src/cli/backends.command.ts:6",{"_index":1466,"title":{},"body":{"classes/BackendsSyncallCommand.html":{}}}],["src/cli/cli.module.ts",{"_index":1753,"title":{},"body":{"modules/CliModule.html":{}}}],["src/cli/keyrings.command.ts",{"_index":2938,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:15",{"_index":2992,"title":{},"body":{"classes/KeyringsCreateQuestions.html":{}}}],["src/cli/keyrings.command.ts:21",{"_index":2979,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:32",{"_index":2980,"title":{},"body":{"classes/KeyringsCreateCommand.html":{}}}],["src/cli/keyrings.command.ts:63",{"_index":2939,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/cli/keyrings.command.ts:69",{"_index":2940,"title":{},"body":{"classes/KeyringsCommand.html":{}}}],["src/config.ts",{"_index":1780,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":583,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:26",{"_index":602,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:31",{"_index":587,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:36",{"_index":589,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:41",{"_index":594,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:46",{"_index":601,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:52",{"_index":600,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:57",{"_index":586,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:67",{"_index":597,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:72",{"_index":592,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:78",{"_index":625,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":3441,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":3448,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":3450,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":3444,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":3445,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":3449,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":3447,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":3550,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":3553,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":3554,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":3556,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":3555,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":3552,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":3768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts",{"_index":3428,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:10",{"_index":3436,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:15",{"_index":3437,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:20",{"_index":3439,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:25",{"_index":3434,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:31",{"_index":3435,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/security.part.schema.ts:36",{"_index":3438,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts",{"_index":3535,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:13",{"_index":3540,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:19",{"_index":3541,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:22",{"_index":3542,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:25",{"_index":3544,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/_parts/state.part.schema.ts:28",{"_index":3543,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":449,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":471,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":459,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":461,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":462,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":470,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":468,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":456,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":465,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":458,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":488,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:36",{"_index":498,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:46",{"_index":517,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:67",{"_index":506,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:84",{"_index":521,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:99",{"_index":510,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":649,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":659,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/agents/agents.service.ts:12",{"_index":660,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":2901,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:11",{"_index":2904,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:25",{"_index":2908,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":3012,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":3013,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":3016,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":911,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:26",{"_index":922,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:37",{"_index":945,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:50",{"_index":936,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:60",{"_index":930,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":987,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":1003,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:116",{"_index":1023,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:166",{"_index":1025,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:181",{"_index":1028,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:193",{"_index":1021,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:21",{"_index":1039,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:22",{"_index":1044,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:24",{"_index":1036,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:25",{"_index":1043,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:27",{"_index":1034,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:28",{"_index":1017,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:40",{"_index":1026,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:70",{"_index":1019,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:83",{"_index":1030,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/_dto/execute",{"_index":1970,"title":{},"body":{"classes/ExecuteJobDto.html":{}}}],["src/core/backends/_dto/sync",{"_index":3557,"title":{},"body":{"classes/SyncIdentitiesDto.html":{}}}],["src/core/backends/_enum/action",{"_index":3759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/backend",{"_index":1170,"title":{},"body":{"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/backends/_interfaces/execute",{"_index":1979,"title":{},"body":{"interfaces/ExecuteJobOptions.html":{}}}],["src/core/backends/_interfaces/worker",{"_index":3675,"title":{},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":1188,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:111",{"_index":1215,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:48",{"_index":1229,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:63",{"_index":1222,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:73",{"_index":1203,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":1306,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/backends/backends.service.ts",{"_index":1311,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:130",{"_index":1322,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:171",{"_index":1324,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:210",{"_index":1319,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:27",{"_index":1315,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/core.controller.ts",{"_index":1875,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":1886,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:20",{"_index":1888,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1900,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:4",{"_index":1901,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts",{"_index":1983,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:16",{"_index":2115,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:21",{"_index":2111,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:27",{"_index":2112,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:32",{"_index":2107,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:37",{"_index":2103,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:42",{"_index":2109,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:47",{"_index":2105,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:52",{"_index":2113,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:57",{"_index":2101,"title":{},"body":{"classes/FilestorageCreateDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:63",{"_index":2116,"title":{},"body":{"classes/FilestorageDto.html":{}}}],["src/core/filestorage/_dto/filestorage.dto.ts:9",{"_index":1987,"title":{},"body":{"classes/FileUploadDto.html":{}}}],["src/core/filestorage/_enum/fs",{"_index":3782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts",{"_index":2008,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:15",{"_index":2018,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:20",{"_index":2014,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:26",{"_index":2015,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:33",{"_index":2016,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:39",{"_index":2011,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:45",{"_index":2013,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:51",{"_index":2017,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:57",{"_index":2010,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_schemas/filestorage.schema.ts:64",{"_index":2012,"title":{},"body":{"classes/Filestorage.html":{}}}],["src/core/filestorage/_services/transformers",{"_index":3584,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["src/core/filestorage/filestorage.controller.ts",{"_index":2025,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:104",{"_index":2039,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:112",{"_index":2048,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:123",{"_index":2044,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:37",{"_index":2031,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:51",{"_index":2046,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:76",{"_index":2033,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:86",{"_index":2036,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.controller.ts:97",{"_index":2042,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["src/core/filestorage/filestorage.module.ts",{"_index":2129,"title":{},"body":{"modules/FilestorageModule.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":2185,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":2196,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":2190,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":2199,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":2188,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":2192,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":2195,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":2194,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":2191,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":2217,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":2236,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":2237,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":2238,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":2234,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":2229,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":2228,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":2231,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":2232,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":2230,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":2235,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":2262,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":2270,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":2274,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":2269,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":2265,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":2272,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":2268,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":3778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":3581,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":2135,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":2149,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":2142,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":2141,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":2151,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":2146,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":2148,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":2147,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":2143,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":2242,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":2251,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":2252,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":2248,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":2244,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":2243,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":2246,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":2247,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":2245,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":2249,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":2250,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":2279,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":2283,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":2285,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":2282,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":2280,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":2284,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":2281,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":2160,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":2164,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":2169,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":2166,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":2172,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":2168,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":2258,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":2288,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/form/form.service.ts:9",{"_index":2289,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/jobs/_dto/_parts/concerned",{"_index":1773,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts",{"_index":2871,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:11",{"_index":2875,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:15",{"_index":2872,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:21",{"_index":2874,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:25",{"_index":2879,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:29",{"_index":2873,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:33",{"_index":2877,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:37",{"_index":2878,"title":{},"body":{"classes/JobsCreateDto.html":{}}}],["src/core/jobs/_dto/jobs.dto.ts:43",{"_index":2883,"title":{},"body":{"classes/JobsDto.html":{}}}],["src/core/jobs/_enums/state.enum.ts",{"_index":3797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/jobs/_schemas/_parts/concerned",{"_index":1765,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts",{"_index":2837,"title":{},"body":{"classes/Jobs.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:15",{"_index":2842,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:21",{"_index":2838,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:26",{"_index":2840,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:29",{"_index":2847,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:32",{"_index":2839,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:35",{"_index":2843,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:38",{"_index":2845,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:41",{"_index":2844,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:44",{"_index":2841,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/_schemas/jobs.schema.ts:47",{"_index":2846,"title":{},"body":{"classes/Jobs.html":{}}}],["src/core/jobs/jobs.controller.ts",{"_index":2855,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:33",{"_index":2858,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.controller.ts:57",{"_index":2857,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/core/jobs/jobs.module.ts",{"_index":2894,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/core/jobs/jobs.service.ts",{"_index":2898,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/jobs/jobs.service.ts:8",{"_index":2899,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":2981,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:14",{"_index":2988,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:18",{"_index":2984,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:21",{"_index":2987,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:27",{"_index":2993,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":2985,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":2927,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":2931,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:19",{"_index":2933,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:25",{"_index":2930,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:28",{"_index":2932,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":2963,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:32",{"_index":2966,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:42",{"_index":2971,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:63",{"_index":2968,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:79",{"_index":2970,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":3001,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":3005,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/keyrings/keyrings.service.ts:10",{"_index":3006,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts",{"_index":1907,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:12",{"_index":1910,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/_parts/data.part.schema.ts:18",{"_index":1908,"title":{},"body":{"classes/DataPart.html":{}}}],["src/core/logger/_schemas/logger.schema.ts",{"_index":3025,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:15",{"_index":3030,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:22",{"_index":3029,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:29",{"_index":3028,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/_schemas/logger.schema.ts:36",{"_index":3027,"title":{},"body":{"classes/Logger.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":2765,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:107",{"_index":2835,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:123",{"_index":2832,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:139",{"_index":2829,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":2827,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":2833,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":2831,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:62",{"_index":2836,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:78",{"_index":2834,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:91",{"_index":2830,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":3043,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/core/logger/logger.module.ts",{"_index":3049,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":3053,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/logger.service.ts:8",{"_index":3054,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts",{"_index":3561,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/tasks/_schemas/tasks.schema.ts:10",{"_index":3562,"title":{},"body":{"classes/Tasks.html":{}}}],["src/core/tasks/tasks.controller.ts",{"_index":3567,"title":{},"body":{"controllers/TasksController.html":{}}}],["src/core/tasks/tasks.module.ts",{"_index":3573,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/core/tasks/tasks.service.ts",{"_index":3577,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/core/tasks/tasks.service.ts:8",{"_index":3578,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":3680,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:11",{"_index":3683,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:18",{"_index":3682,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:24",{"_index":3684,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":3871,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:11",{"_index":3872,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:15",{"_index":3878,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:19",{"_index":3879,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:24",{"_index":3874,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:29",{"_index":3889,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:34",{"_index":3877,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:39",{"_index":3880,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:44",{"_index":3881,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:49",{"_index":3882,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:53",{"_index":3884,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:59",{"_index":3886,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:64",{"_index":3887,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:69",{"_index":3888,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:7",{"_index":3892,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:74",{"_index":3890,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:79",{"_index":3891,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:84",{"_index":3893,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:89",{"_index":3894,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":2435,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:14",{"_index":2457,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:20",{"_index":2455,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:25",{"_index":2453,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:44",{"_index":2450,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:52",{"_index":2636,"title":{},"body":{"classes/IdentitiesUpsertDto.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":3785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":3790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":383,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:11",{"_index":389,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:14",{"_index":393,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:8",{"_index":392,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":3834,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:10",{"_index":3852,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:13",{"_index":3855,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:16",{"_index":3856,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:19",{"_index":3858,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:22",{"_index":3859,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:25",{"_index":3860,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:28",{"_index":3861,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:31",{"_index":3862,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:34",{"_index":3863,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:37",{"_index":3864,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:40",{"_index":3865,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:43",{"_index":3866,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:46",{"_index":3853,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:49",{"_index":3854,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:52",{"_index":3851,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:55",{"_index":3857,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:58",{"_index":3867,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:61",{"_index":3868,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:7",{"_index":3850,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":2291,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:14",{"_index":2303,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:17",{"_index":2302,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":2299,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":2296,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:26",{"_index":2297,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:29",{"_index":2300,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/identities.controller.ts",{"_index":2314,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:143",{"_index":2332,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:174",{"_index":2329,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:197",{"_index":2323,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:212",{"_index":2335,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:227",{"_index":2338,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:248",{"_index":2347,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:267",{"_index":2331,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:53",{"_index":2327,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:91",{"_index":2354,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":2629,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["src/management/identities/jsonforms/_config",{"_index":2617,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/_config/${schema",{"_index":2549,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts",{"_index":2474,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:16",{"_index":2491,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:26",{"_index":2484,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:36",{"_index":2495,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.controller.ts:46",{"_index":2493,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.module.ts",{"_index":2520,"title":{},"body":{"modules/IdentitiesJsonformsModule.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts",{"_index":2522,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:10",{"_index":2537,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:11",{"_index":2527,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:128",{"_index":2528,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:157",{"_index":2530,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:18",{"_index":2535,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:31",{"_index":2532,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/jsonforms/identities.jsonforms.service.ts:96",{"_index":2533,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["src/management/identities/validations/_config",{"_index":2598,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/${key}.yml",{"_index":2700,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1851,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1853,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1858,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1855,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:22",{"_index":1867,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:25",{"_index":1866,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:28",{"_index":1865,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:34",{"_index":1871,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1870,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1854,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":3777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":2638,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:18",{"_index":2647,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:50",{"_index":2643,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:60",{"_index":2642,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":2665,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":2667,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:122",{"_index":2685,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:138",{"_index":2673,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:180",{"_index":2674,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:19",{"_index":2688,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:20",{"_index":2689,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:21",{"_index":2672,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:29",{"_index":2676,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:46",{"_index":2678,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":3057,"title":{},"body":{"controllers/ManagementController.html":{}}}],["src/management/management.module.ts",{"_index":3067,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:14",{"_index":3068,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":3072,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/management.service.ts:4",{"_index":3073,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/management/passwd/_dto/ask",{"_index":897,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["src/management/passwd/_dto/change",{"_index":1469,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/management/passwd/_dto/init",{"_index":2755,"title":{},"body":{"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{}}}],["src/management/passwd/_dto/reset",{"_index":3415,"title":{},"body":{"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{}}}],["src/management/passwd/_dto/verify",{"_index":3670,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["src/management/passwd/passwd.controller.ts",{"_index":3165,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:102",{"_index":3182,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:111",{"_index":3187,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:123",{"_index":3191,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:27",{"_index":3177,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:68",{"_index":3199,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.controller.ts:85",{"_index":3194,"title":{},"body":{"controllers/PasswdController.html":{}}}],["src/management/passwd/passwd.module.ts",{"_index":3259,"title":{},"body":{"modules/PasswdModule.html":{}}}],["src/management/passwd/passwd.service.ts",{"_index":1480,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["src/management/passwd/passwd.service.ts:126",{"_index":3272,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:173",{"_index":3268,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:219",{"_index":3267,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:256",{"_index":3270,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:278",{"_index":3269,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:299",{"_index":3277,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:338",{"_index":3275,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:369",{"_index":3271,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:39",{"_index":3279,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:40",{"_index":3278,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:42",{"_index":3280,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:44",{"_index":3281,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:45",{"_index":3266,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/passwd.service.ts:59",{"_index":3274,"title":{},"body":{"injectables/PasswdService.html":{}}}],["src/management/passwd/sms",{"_index":3480,"title":{},"body":{"injectables/SmsService.html":{}}}],["src/settings/_schemas/settings.schema.ts",{"_index":3461,"title":{},"body":{"classes/Settings.html":{},"miscellaneous/typealiases.html":{}}}],["src/settings/_schemas/settings.schema.ts:11",{"_index":3463,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/_schemas/settings.schema.ts:9",{"_index":3462,"title":{},"body":{"classes/Settings.html":{}}}],["src/settings/passwdadm/_dto/password",{"_index":3347,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["src/settings/passwdadm/passwdadm.controller.ts",{"_index":3283,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm/passwdadm.controller.ts:20",{"_index":3290,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm/passwdadm.controller.ts:28",{"_index":3286,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["src/settings/passwdadm/passwdadm.module.ts",{"_index":3304,"title":{},"body":{"modules/PasswdadmModule.html":{}}}],["src/settings/passwdadm/passwdadm.service.ts",{"_index":3308,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["src/settings/passwdadm/passwdadm.service.ts:13",{"_index":3313,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["src/settings/passwdadm/passwdadm.service.ts:18",{"_index":3315,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["src/settings/passwdadm/passwdadm.service.ts:21",{"_index":3311,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["src/settings/settings.controller.ts",{"_index":3467,"title":{},"body":{"controllers/SettingsController.html":{}}}],["src/settings/settings.module.ts",{"_index":3477,"title":{},"body":{"modules/SettingstModule.html":{}}}],["src/settings/settings.module.ts:12",{"_index":3478,"title":{},"body":{"modules/SettingstModule.html":{}}}],["src/settings/settings.service.ts",{"_index":3472,"title":{},"body":{"injectables/SettingsService.html":{}}}],["src/settings/settings.service.ts:4",{"_index":3473,"title":{},"body":{"injectables/SettingsService.html":{}}}],["sse",{"_index":1190,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse('sse",{"_index":1280,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(@res",{"_index":1281,"title":{},"body":{"controllers/BackendsController.html":{}}}],["sse(res",{"_index":1204,"title":{},"body":{"controllers/BackendsController.html":{}}}],["ssetoken",{"_index":966,"title":{},"body":{"controllers/AuthController.html":{}}}],["stabilit",{"_index":4062,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["standards",{"_index":4011,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["start",{"_index":1157,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":1141,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["started",{"_index":3801,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":454,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/BackendsService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/Jobs.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":3547,"title":{},"body":{"classes/StatePart.html":{}}}],["state.enum.ts",{"_index":3748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stateofjob",{"_index":1340,"title":{},"body":{"injectables/BackendsService.html":{}}}],["statepart",{"_index":466,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["statepartdto",{"_index":598,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["statepartschema",{"_index":467,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{}}}],["static",{"_index":554,"title":{},"body":{"controllers/AgentsController.html":{},"interfaces/CipherData.html":{},"modules/CoreModule.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{},"injectables/PasswdService.html":{},"modules/SettingstModule.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{}}}],["status",{"_index":695,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"injectables/BackendsService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/PasswdController.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["statuscode",{"_index":562,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{}}}],["statut",{"_index":4687,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":4472,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":3780,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":4222,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":3985,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":4007,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":3969,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":3095,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["storage",{"_index":753,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{}}}],["storage.get(project",{"_index":770,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["storage.has(project",{"_index":771,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["storage.set(project",{"_index":779,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["storage/pictures",{"_index":1826,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["storagemanagerconfig",{"_index":1788,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["strategy",{"_index":2911,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["stream",{"_index":2089,"title":{},"body":{"controllers/FilestorageController.html":{},"injectables/TransformersFilestorageService.html":{}}}],["stream.on('data",{"_index":3637,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('end",{"_index":3642,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.on('error",{"_index":3640,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["stream.pipe(res",{"_index":3628,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring",{"_index":3587,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["streamtostring(stream",{"_index":3593,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["strict",{"_index":111,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/IdentitiesValidationService.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["string,code",{"_index":1681,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["stringentropy",{"_index":3320,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["stringentropy(password",{"_index":3346,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["stringify",{"_index":2539,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["stringify(jsonform",{"_index":2597,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":509,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(filestoragedto",{"_index":2043,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":2167,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(identitiesdto",{"_index":2330,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":2969,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":505,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(filestoragedto",{"_index":2032,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":2165,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":2328,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apireadresponsedecorator(jobsdto",{"_index":2856,"title":{},"body":{"controllers/JobsController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":2967,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":520,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(filestorageupdatedto",{"_index":2047,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":2171,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":2334,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["structure",{"_index":2588,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":4583,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":4225,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":4172,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stylesrc",{"_index":1812,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subcommand",{"_index":422,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subcommands",{"_index":446,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["subject",{"_index":1110,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["submit",{"_index":4577,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":2138,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":2139,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["subscriber",{"_index":1232,"title":{},"body":{"controllers/BackendsController.html":{}}}],["succeeded",{"_index":2735,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":2681,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["success",{"_index":1098,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SmsService.html":{}}}],["successfully",{"_index":441,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/SmsService.html":{}}}],["succès",{"_index":2379,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suite",{"_index":4402,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":4060,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":4227,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":4514,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":4621,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["summary",{"_index":762,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["supann",{"_index":2462,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":4665,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":2463,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["supannbirthdate",{"_index":4675,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":4673,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":4720,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":4671,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":4670,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":2465,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{}}}],["super",{"_index":372,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"injectables/PasswdService.html":{},"injectables/SmsService.html":{},"controllers/TasksController.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":4161,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":105,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractServiceSchema.html":{}}}],["super(message",{"_index":3658,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":3664,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.create",{"_index":3011,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["super.create(data",{"_index":675,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.debug(...[message",{"_index":2805,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error('failed",{"_index":2782,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":2797,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal('failed",{"_index":2824,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":2811,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":2775,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":2803,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.onmoduleinit",{"_index":1350,"title":{},"body":{"injectables/BackendsService.html":{}}}],["super.transform(value",{"_index":1928,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["super.update",{"_index":681,"title":{},"body":{"injectables/AgentsService.html":{}}}],["super.verbose(...[message",{"_index":2808,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":2800,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super[payload.level](payload.message",{"_index":2825,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplémentaires",{"_index":4187,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":3917,"title":{},"body":{"modules.html":{}}}],["supportant",{"_index":4333,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supprime",{"_index":926,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":4552,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sur",{"_index":3173,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["survenue",{"_index":1634,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["suspendedat",{"_index":2929,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":3537,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":3538,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["svg",{"_index":3918,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":761,"title":{},"body":{"controllers/AppController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["swagger/json",{"_index":1833,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":1787,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1834,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["symlink",{"_index":3784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sync",{"_index":1412,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncall",{"_index":1181,"title":{},"body":{"classes/BackendsCommand.html":{},"classes/BackendsSyncallCommand.html":{}}}],["syncallidentities",{"_index":1191,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["syncallidentities(@res",{"_index":1261,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities(options",{"_index":1321,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncallidentities(res",{"_index":1216,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncallidentities.map((identity",{"_index":1396,"title":{},"body":{"injectables/BackendsService.html":{}}}],["synced",{"_index":3791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronis",{"_index":3176,"title":{},"body":{"controllers/PasswdController.html":{}}}],["synchronisation",{"_index":3804,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchronise",{"_index":1218,"title":{},"body":{"controllers/BackendsController.html":{}}}],["synchroniser",{"_index":1221,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["syncidentities",{"_index":1192,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["syncidentities(payload",{"_index":1323,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncidentities(res",{"_index":1223,"title":{},"body":{"controllers/BackendsController.html":{}}}],["syncidentitiesdto",{"_index":1224,"title":{"classes/SyncIdentitiesDto.html":{}},"body":{"controllers/BackendsController.html":{},"classes/SyncIdentitiesDto.html":{}}}],["syncing",{"_index":1372,"title":{},"body":{"injectables/BackendsService.html":{}}}],["syncronisation",{"_index":4682,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["synctimeout",{"_index":1199,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ExecuteJobOptions.html":{}}}],["system",{"_index":2789,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["system_id",{"_index":3510,"title":{},"body":{"injectables/SmsService.html":{}}}],["systemid",{"_index":1799,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"injectables/SmsService.html":{}}}],["système",{"_index":3957,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":4032,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":4029,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":4025,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":4221,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":4372,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":3802,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":194,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongoDbTestInstance.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["t>>(filter",{"_index":240,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["table",{"_index":4104,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":2441,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":4370,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tabs",{"_index":3781,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tag",{"_index":1514,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tags",{"_index":773,"title":{},"body":{"controllers/AppController.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"interfaces/GithubUpdate.html":{}}}],["tant",{"_index":4722,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":4489,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tarball_url",{"_index":751,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["target",{"_index":2766,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["targetstate",{"_index":2431,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["task",{"_index":1398,"title":{},"body":{"injectables/BackendsService.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/Jobs.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["task._id",{"_index":1406,"title":{},"body":{"injectables/BackendsService.html":{}}}],["tasks",{"_index":1343,"title":{"classes/Tasks.html":{}},"body":{"injectables/BackendsService.html":{},"classes/Tasks.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{}}}],["tasks.controller",{"_index":3575,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.name",{"_index":3576,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":3568,"title":{},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/_schemas/tasks.schema",{"_index":1344,"title":{},"body":{"injectables/BackendsService.html":{}}}],["tasks/tasks.module",{"_index":1310,"title":{},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{}}}],["tasks/tasks.service",{"_index":1345,"title":{},"body":{"injectables/BackendsService.html":{}}}],["taskscontroller",{"_index":3566,"title":{"controllers/TasksController.html":{}},"body":{"controllers/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasksdocument",{"_index":3563,"title":{},"body":{"classes/Tasks.html":{},"miscellaneous/typealiases.html":{}}}],["tasksmodule",{"_index":1305,"title":{"modules/TasksModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksschema",{"_index":3564,"title":{},"body":{"classes/Tasks.html":{},"modules/TasksModule.html":{}}}],["tasksservice",{"_index":1314,"title":{"injectables/TasksService.html":{}},"body":{"injectables/BackendsService.html":{},"controllers/TasksController.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"overview.html":{}}}],["tat",{"_index":1214,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":4510,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":4704,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":3160,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["technique",{"_index":4082,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":4024,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technologies",{"_index":3999,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["teh",{"_index":3359,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["tel",{"_index":3961,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephone",{"_index":3501,"title":{},"body":{"injectables/SmsService.html":{}}}],["telephonenumber",{"_index":3847,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":4584,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["telnumber",{"_index":3486,"title":{},"body":{"injectables/SmsService.html":{}}}],["template",{"_index":849,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["templates",{"_index":852,"title":{},"body":{"modules/AppModule.html":{}}}],["temporaire",{"_index":4235,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["temps",{"_index":1207,"title":{},"body":{"controllers/BackendsController.html":{}}}],["tendez",{"_index":4153,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":4159,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tentative",{"_index":1734,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["test",{"_index":4167,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test(password",{"_index":3332,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["test.createtestingmodule",{"_index":4256,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["teste",{"_index":4290,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":4190,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":4255,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":4056,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["text/html",{"_index":3608,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["text/plain",{"_index":3606,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["texte",{"_index":4524,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["themes",{"_index":3736,"title":{},"body":{"dependencies.html":{}}}],["thirdpartyauth",{"_index":455,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._model",{"_index":233,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{}}}],["this._model.countdocuments(filter",{"_index":244,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter).exec",{"_index":265,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find",{"_index":239,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find>(filter",{"_index":266,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyid>(_id",{"_index":276,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyidanddelete",{"_index":337,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findone>(filter",{"_index":280,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._options.mongoose.options",{"_index":2779,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._queue",{"_index":104,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this._queue.getcompleted",{"_index":1360,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this._req",{"_index":159,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.count(searchfilterschema",{"_index":2415,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.create",{"_index":2073,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.create(body",{"_index":560,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":580,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findall",{"_index":2510,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findandcount",{"_index":569,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":575,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyidwithrawdata(_id",{"_index":2091,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone",{"_index":2085,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.findone(schema",{"_index":2515,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["this._service.findonewithrawdata",{"_index":2096,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this._service.generate",{"_index":2507,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.generateall",{"_index":2502,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["this._service.update(_id",{"_index":578,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["this._service.updatestate(_id",{"_index":2425,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.updatestatemany(body",{"_index":2433,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.upsertwithfingerprint(filters",{"_index":2402,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.validate(body",{"_index":2653,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this.access_token_expires_in",{"_index":1109,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":1120,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.create(agent",{"_index":439,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.agentsservice.findone",{"_index":1085,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.model.countdocuments",{"_index":1099,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.compile(validschema",{"_index":2545,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":2731,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":765,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["this.asktoken({mail",{"_index":1557,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":3020,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":2924,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.createtokens",{"_index":2958,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.backends.executejob",{"_index":1723,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.backends.executejob(actiontype.identity_password_change",{"_index":1640,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.backendsservice.executejob",{"_index":1275,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('added",{"_index":1286,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('completed",{"_index":1292,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.queueevents.on('failed",{"_index":1295,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.syncallidentities",{"_index":1183,"title":{},"body":{"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"classes/BackendsSyncallCommand.html":{}}}],["this.backendsservice.syncidentities(body.payload",{"_index":1258,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.commonlogdb",{"_index":2794,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.concerned",{"_index":3040,"title":{},"body":{"classes/Logger.html":{}}}],["this.concerned.tolocalelowercase",{"_index":3041,"title":{},"body":{"classes/Logger.html":{}}}],["this.config",{"_index":109,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.config.get('mailer.sender",{"_index":1567,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.config.get('sms.host",{"_index":3492,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.config.get('sms.password",{"_index":3494,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.config.get('sms.regioncode",{"_index":3503,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.config.get('sms.systemid",{"_index":3493,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.connection",{"_index":2780,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":2822,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.constructor.name",{"_index":108,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/BackendsController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":174,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.context",{"_index":3038,"title":{},"body":{"classes/Logger.html":{}}}],["this.context.tolocalelowercase",{"_index":3039,"title":{},"body":{"classes/Logger.html":{}}}],["this.createtokens(new",{"_index":1078,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":1127,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.decrypttoken(data.token",{"_index":1738,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.decrypttokenwithcode(data.token,data.code",{"_index":1718,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.defaultvalues",{"_index":379,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["this.dev_token_path",{"_index":1068,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.eventemitter",{"_index":246,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.eventemitter?.emitasync",{"_index":248,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.executejob",{"_index":1404,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.executejob(identity.action",{"_index":1418,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.findone({name",{"_index":375,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["this.generate(file",{"_index":2615,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.getpaddingforcode",{"_index":1553,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.getpolicies",{"_index":3330,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["this.getstatus",{"_index":3662,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":3132,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.identities.findone",{"_index":1545,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.identitiesservice.find",{"_index":1394,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.findbyid(concernedto",{"_index":1429,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.findbyid(key",{"_index":1413,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(completedjob?.concernedto?.id",{"_index":1392,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(concernedto",{"_index":1439,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(failedjob?.concernedto?.id",{"_index":1387,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.identitiesservice.model.findbyidandupdate(issyncedjob?.concernedto?.id",{"_index":1369,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.initialize",{"_index":2784,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.inquirer.ask('agent",{"_index":438,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{}}}],["this.inquirer.ask('keyrings",{"_index":2949,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.jobsservice.create",{"_index":1430,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jobsservice.model.findoneandupdate",{"_index":1362,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jobsservice.update(jobstore._id",{"_index":1447,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.jwtservice.decode(jwt",{"_index":1128,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":1108,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keyringsservice.create(keyring",{"_index":2950,"title":{},"body":{"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["this.keyringsservice.findone",{"_index":1091,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug('queue",{"_index":1353,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.debug(['count",{"_index":243,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['create",{"_index":288,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['delete",{"_index":334,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['find",{"_index":236,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findall",{"_index":2744,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['findandcount",{"_index":245,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findbyid",{"_index":274,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findone",{"_index":278,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['update",{"_index":307,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['upsert",{"_index":325,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(`job",{"_index":1375,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.debug(`syncing",{"_index":1402,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.error",{"_index":3534,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.logger.error(\"error",{"_index":1592,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.error('must",{"_index":3333,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["this.logger.error(`error",{"_index":1408,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.error(`token",{"_index":1075,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":1719,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(\"init",{"_index":1624,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(\"mailer.identitymailattribute",{"_index":1617,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(\"reset",{"_index":1563,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log(\"token",{"_index":1559,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('decrypt",{"_index":1686,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('delete",{"_index":1727,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('gettoken",{"_index":3218,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('k",{"_index":1694,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('reset",{"_index":3232,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log('resetbycode",{"_index":1711,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.log('verify",{"_index":3226,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`call",{"_index":3211,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.logger.log(`fetching",{"_index":772,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["this.logger.log(`job",{"_index":1393,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.log(`new",{"_index":1084,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":1072,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.verbose(\"error",{"_index":1709,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.logger.verbose('envoi",{"_index":3491,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.logger.verbose('phone",{"_index":3504,"title":{},"body":{"injectables/SmsService.html":{}}}],["this.logger.warn('dev",{"_index":1063,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('enable",{"_index":1358,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.logger.warn('invalid",{"_index":1102,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn(`job",{"_index":1371,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.mailer.sendmail",{"_index":1566,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.message",{"_index":3661,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.modulename.tolowercase",{"_index":249,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.moduleref.get(configservice",{"_index":110,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.moduleref.get(getredisconnectiontoken",{"_index":114,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["this.mongoconnection",{"_index":3109,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":3112,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":3115,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":3111,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":3117,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":3105,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":3108,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":3113,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":3659,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":891,"title":{},"body":{"injectables/AppService.html":{}}}],["this.passwdadmservice.checkpolicies(data.newpassword",{"_index":1715,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.checkpolicies(passwddto.newpassword",{"_index":1633,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.passwdadmservice.getpolicies",{"_index":3241,"title":{},"body":{"controllers/PasswdController.html":{},"controllers/PasswdadmController.html":{}}}],["this.passwdadmservice.setpolicies(body",{"_index":3297,"title":{},"body":{"controllers/PasswdadmController.html":{}}}],["this.passwdservice.asktoken(asktoken",{"_index":3219,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.change(body",{"_index":3210,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.decrypttoken(body.token",{"_index":3228,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initaccount(body",{"_index":3246,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.initreset(body",{"_index":3254,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.reset(body",{"_index":3237,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.passwdservice.resetbycode(body",{"_index":3234,"title":{},"body":{"controllers/PasswdController.html":{}}}],["this.path.split('/').pop",{"_index":2023,"title":{},"body":{"classes/Filestorage.html":{}}}],["this.queue",{"_index":4135,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add",{"_index":1420,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queue.add('exemple",{"_index":4163,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents",{"_index":117,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('active",{"_index":1379,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents.on('completed",{"_index":1389,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents.on('failed",{"_index":1383,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('waiting",{"_index":1374,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.redis",{"_index":113,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":1131,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":1133,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del(data.token",{"_index":1728,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.exists('codepadding",{"_index":1746,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.expire",{"_index":1118,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire(ciphertext",{"_index":1672,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get('codepadding",{"_index":1747,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":1095,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":1125,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get(token",{"_index":1683,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set",{"_index":1114,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.redis.set('codepadding',code",{"_index":1749,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.refresh_token_expires_in",{"_index":1119,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":1115,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":168,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":171,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request?.user?.username",{"_index":294,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.resolveconfigpath(key",{"_index":2723,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolveconfigpath(schema",{"_index":2754,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.resolvejsonformpath(schema",{"_index":2622,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":977,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":961,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":965,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":973,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.servicename.tolowercase",{"_index":250,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":2774,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.setparameter('passwordpolicies',policies",{"_index":3329,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["this.smsservice.send(numtel,\"votre",{"_index":1590,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["this.tasksservice.create",{"_index":1399,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.transformerservice.transform(mime",{"_index":2092,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["this.upsert",{"_index":381,"title":{},"body":{"classes/AbstractSettingsService.html":{}}}],["this.validateattribute(key",{"_index":2732,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":2544,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":2729,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":1934,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":1959,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":3660,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this[key",{"_index":712,"title":{},"body":{"classes/ApiSession.html":{}}}],["throw",{"_index":106,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ticket",{"_index":4465,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":3580,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["ticketformfield",{"_index":3582,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":3583,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":4481,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":3819,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":4008,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["time",{"_index":1456,"title":{},"body":{"injectables/BackendsService.html":{}}}],["timeout",{"_index":1460,"title":{},"body":{"injectables/BackendsService.html":{}}}],["timeoutdiscard",{"_index":1268,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["timeoutdiscardquery",{"_index":1196,"title":{},"body":{"controllers/BackendsController.html":{}}}],["tiquette",{"_index":4503,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":2140,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":4482,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":4470,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":4561,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["to.part.dto",{"_index":2880,"title":{},"body":{"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{}}}],["to.part.dto.ts",{"_index":1774,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:13",{"_index":1777,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:18",{"_index":1778,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.part.dto.ts:9",{"_index":1775,"title":{},"body":{"classes/ConcernedToPartDTO.html":{}}}],["to.parts.schema",{"_index":2850,"title":{},"body":{"classes/Jobs.html":{}}}],["to.parts.schema.ts",{"_index":1766,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:10",{"_index":1768,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:13",{"_index":1769,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to.parts.schema.ts:7",{"_index":1767,"title":{},"body":{"classes/ConcernedToPart.html":{}}}],["to_complete",{"_index":2368,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":3795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":1416,"title":{},"body":{"injectables/BackendsService.html":{},"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":2372,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":164,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Filestorage.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{}}}],["token",{"_index":705,"title":{},"body":{"classes/ApiSession.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/CipherData.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"interfaces/TokenData.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto",{"_index":1485,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token.dto.ts",{"_index":898,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:10",{"_index":3672,"title":{},"body":{"classes/VerifyTokenDto.html":{}}}],["token.dto.ts:11",{"_index":905,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.dto.ts:7",{"_index":908,"title":{},"body":{"classes/AskTokenDto.html":{}}}],["token.json",{"_index":1038,"title":{},"body":{"injectables/AuthService.html":{}}}],["token=${data?.token",{"_index":1732,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token=${token",{"_index":1704,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token=decodeuricomponent(token",{"_index":1682,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token_algorithm",{"_index":1520,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token_expiration",{"_index":1524,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["token_path_separator",{"_index":1009,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokendata",{"_index":1511,"title":{"interfaces/TokenData.html":{}},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tokendata.uid",{"_index":1721,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tokendata.uid,'state':identitystate.synced",{"_index":1739,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tokendata=await",{"_index":1717,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["tokens",{"_index":960,"title":{},"body":{"controllers/AuthController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["total",{"_index":568,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{}}}],["toujours",{"_index":4724,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tous",{"_index":2487,"title":{},"body":{"controllers/IdentitiesJsonFormsController.html":{}}}],["tout",{"_index":1639,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":1219,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["track",{"_index":1161,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":1151,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":1142,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":1143,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["traitement",{"_index":4119,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":4131,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transform",{"_index":1916,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(mime",{"_index":3596,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transform(value",{"_index":1920,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformer",{"_index":616,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["transformers",{"_index":3586,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformerservice",{"_index":2068,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["transformersfilestorageservice",{"_index":2060,"title":{"injectables/TransformersFilestorageService.html":{}},"body":{"controllers/FilestorageController.html":{},"modules/FilestorageModule.html":{},"injectables/TransformersFilestorageService.html":{},"overview.html":{}}}],["transformersfilestorageservice.streamtostring(stream",{"_index":3633,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype",{"_index":3620,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers.hasownproperty(mimetype.split('/')[0",{"_index":3621,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype.split('/')[0",{"_index":3622,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformers[mimetype](mime",{"_index":3629,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformhtml",{"_index":3609,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformimage",{"_index":3613,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformpdf",{"_index":3611,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformersfilestorageservice.transformplain",{"_index":3607,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml",{"_index":3588,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformhtml(_",{"_index":3598,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage",{"_index":3589,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformimage(mime",{"_index":3600,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformkeys",{"_index":4541,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformoptions",{"_index":1930,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transformpdf",{"_index":3590,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformpdf(_",{"_index":3602,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain",{"_index":3591,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transformplain(_",{"_index":3604,"title":{},"body":{"injectables/TransformersFilestorageService.html":{}}}],["transport",{"_index":844,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["travers",{"_index":4079,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":4028,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tree",{"_index":566,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["trim",{"_index":1938,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":4756,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":4204,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["true",{"_index":319,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"modules/AppModule.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"interfaces/MongoosePlugin.html":{},"injectables/PasswdService.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"interfaces/TokenData.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true|on|yes|1/i.test(asyncquery",{"_index":1257,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(disablelogsquery",{"_index":1271,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(erroronnotfound",{"_index":2403,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["true|on|yes|1/i.test(hiddenquery",{"_index":2077,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["true|on|yes|1/i.test(timeoutdiscardquery",{"_index":1269,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(updatestatusquery",{"_index":1273,"title":{},"body":{"controllers/BackendsController.html":{}}}],["true|on|yes|1/i.test(upsert",{"_index":2404,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["true})@apiproperty({type",{"_index":3446,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":2983,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":3443,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":2271,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1869,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":2267,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":4755,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":373,"title":{},"body":{"classes/AbstractSettingsService.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesJsonformsService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["ts",{"_index":3129,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ttl",{"_index":754,"title":{},"body":{"controllers/AppController.html":{},"interfaces/CipherData.html":{},"interfaces/GithubUpdate.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["typage",{"_index":3990,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ApiSession.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/BackendResultInfoInterface.html":{},"interfaces/BackendResultInterface.html":{},"classes/BackendsCommand.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"modules/CliModule.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/DataPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/ExecuteJobDto.html":{},"interfaces/ExecuteJobOptions.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"controllers/FilestorageController.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"interfaces/GithubUpdate.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsCreateQuestions.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"injectables/SmsService.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/TokenData.html":{},"injectables/TransformersFilestorageService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/VerifyTokenDto.html":{},"interfaces/WorkerResultInterface.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.enum",{"_index":1241,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/Filestorage.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["type.enum.ts",{"_index":3746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.vue",{"_index":4471,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":3926,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":260,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["types",{"_index":133,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":124,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"classes/ConcernedToPart.html":{},"classes/ConcernedToPartDTO.html":{},"interfaces/ExecuteJobOptions.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/Jobs.html":{},"controllers/JobsController.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"injectables/JobsService.html":{},"classes/JobsUpdateDto.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid(`${filter",{"_index":2400,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["types.objectid(body.id",{"_index":1278,"title":{},"body":{"controllers/BackendsController.html":{}}}],["types.objectid(value",{"_index":3154,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":3152,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"interfaces/ConfigInstance.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["têtes",{"_index":4596,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":3433,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ui",{"_index":2624,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["ui.yml",{"_index":2591,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["uid",{"_index":900,"title":{},"body":{"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"interfaces/CipherData.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uid=${asktoken?.uid",{"_index":1675,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["uid=${initdto?.uid",{"_index":1594,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["uid=${passwddto?.uid",{"_index":1646,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["un",{"_index":934,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesJsonFormsController.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unauthorizedexception",{"_index":1046,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":203,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"classes/AdditionalFieldsPart.html":{},"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"injectables/AgentsService.html":{},"interfaces/CipherData.html":{},"classes/ConcernedToPart.html":{},"classes/ErrorSchemaDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/Jobs.html":{},"injectables/JobsService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"controllers/PasswdadmController.html":{},"injectables/PasswdadmService.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/Settings.html":{},"classes/StatePart.html":{},"classes/Tasks.html":{},"injectables/TasksService.html":{},"interfaces/TokenData.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{}}}],["une",{"_index":1226,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/CipherData.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["uniforme",{"_index":4368,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":460,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Keyrings.html":{},"classes/Settings.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":4268,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniques",{"_index":4366,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unknown",{"_index":304,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{}}}],["unprocessableentityexception",{"_index":1331,"title":{},"body":{"injectables/BackendsService.html":{}}}],["unsafe",{"_index":2866,"title":{},"body":{"controllers/JobsController.html":{}}}],["until",{"_index":1462,"title":{},"body":{"injectables/BackendsService.html":{}}}],["unused",{"_index":435,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["update",{"_index":186,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"interfaces/GithubUpdate.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(@param('_id",{"_index":2098,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["update(_id",{"_index":215,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["update(res",{"_index":725,"title":{},"body":{"controllers/AppController.html":{}}}],["update.$set.password",{"_index":679,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.$set?.password",{"_index":678,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update.decorator",{"_index":540,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FilestorageController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["update.json",{"_index":778,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["update.password",{"_index":676,"title":{},"body":{"injectables/AgentsService.html":{}}}],["update/:project(sesame",{"_index":730,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["update?.$set",{"_index":316,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{}}}],["update?.$setoninsert",{"_index":330,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["updateassertions",{"_index":4294,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":4299,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateavailable",{"_index":802,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["updated",{"_index":310,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":4296,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":4231,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":4249,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions(service",{"_index":4300,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":4297,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":216,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{}}}],["updatestate",{"_index":2315,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestate(_id",{"_index":2336,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestatemany",{"_index":2316,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestatemany(res",{"_index":2339,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["updatestatus",{"_index":1272,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/CipherData.html":{},"interfaces/ExecuteJobOptions.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["updatestatusquery",{"_index":1198,"title":{},"body":{"controllers/BackendsController.html":{}}}],["upload.decorator",{"_index":2065,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["uploadedfile",{"_index":2051,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["uploadedfile(new",{"_index":2071,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["upper",{"_index":3341,"title":{},"body":{"injectables/PasswdadmService.html":{},"classes/PasswordPoliciesDto.html":{}}}],["uppercase",{"_index":3376,"title":{},"body":{"classes/PasswordPoliciesDto.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":187,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/BackendsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["upsert(filter",{"_index":218,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"injectables/TasksService.html":{}}}],["upsert(res",{"_index":2348,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["uri",{"_index":862,"title":{},"body":{"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":749,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/CliModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/GithubUpdate.html":{},"interfaces/MongoosePlugin.html":{},"injectables/SmsService.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":4783,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url:this.config.get('frontpwd.url')+'/initaccount",{"_index":1623,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["use",{"_index":1145,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["useclass",{"_index":878,"title":{},"body":{"modules/AppModule.html":{},"modules/IdentitiesModule.html":{}}}],["used",{"_index":1166,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":657,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CliModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/PasswdadmModule.html":{},"modules/TasksModule.html":{}}}],["usefilters(new",{"_index":2363,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["useguards",{"_index":946,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('jwt",{"_index":963,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":958,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":2052,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":2069,"title":{},"body":{"controllers/FilestorageController.html":{}}}],["user",{"_index":157,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AskTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"interfaces/ConfigInstance.html":{},"classes/ExecuteJobDto.html":{},"classes/InitResetDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{}}}],["user.state.current",{"_index":3022,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usercertificate",{"_index":3848,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["username",{"_index":415,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/Agents.html":{},"classes/AgentsCommand.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateCommand.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ApiSession.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{},"injectables/LocalStrategy.html":{}}}],["userpassword",{"_index":3849,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usevalue",{"_index":4258,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utf",{"_index":893,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["utf8",{"_index":1666,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["utilis",{"_index":4247,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":4267,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":4009,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":921,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":4052,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":3979,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":4417,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":4054,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":4132,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":4000,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":4199,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":4311,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":4168,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["va",{"_index":4357,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["val",{"_index":410,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["valeur",{"_index":4656,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":4757,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":4335,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":1998,"title":{},"body":{"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validate",{"_index":2640,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":2905,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":2677,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":2644,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validateattribute",{"_index":2671,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":2683,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validatenested",{"_index":609,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":2227,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":596,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":599,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{}}}],["validatenested({each",{"_index":1868,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validates",{"_index":2679,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validateschema",{"_index":2524,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":2669,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation",{"_index":1936,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":829,"title":{},"body":{"modules/AppModule.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["validation.filter.ts",{"_index":2655,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:34",{"_index":3124,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":2657,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":3122,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":547,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AppModule.html":{},"controllers/IdentitiesController.html":{},"controllers/JobsController.html":{},"controllers/KeyringsController.html":{}}}],["validation.pipe.ts",{"_index":1914,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:15",{"_index":3668,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:21",{"_index":1922,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:23",{"_index":1919,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:57",{"_index":1925,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":3150,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validationconfigexception",{"_index":2542,"title":{"classes/ValidationConfigException.html":{}},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationerror",{"_index":1924,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":2656,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:18",{"_index":3652,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":3651,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":3650,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":3648,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationpipe",{"_index":1915,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":1917,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive(error",{"_index":1923,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":386,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":2632,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":2360,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["validations[`${key}.${property",{"_index":3138,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":1949,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":2709,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":3141,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":2713,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":2697,"title":{"classes/ValidationSchemaException.html":{}},"body":{"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["validator",{"_index":615,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AskTokenDto.html":{},"classes/ChangePasswordDto.html":{},"classes/ConcernedToPartDTO.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ExecuteJobDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesUpsertDto.html":{},"classes/InitAccountDto.html":{},"classes/InitResetDto.html":{},"classes/JobsCreateDto.html":{},"classes/JobsDto.html":{},"classes/JobsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/PasswordPoliciesDto.html":{},"classes/ResetByCodeDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/SyncIdentitiesDto.html":{},"classes/VerifyTokenDto.html":{},"classes/additionalFieldsPartDto.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["valide",{"_index":2717,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":4420,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":2721,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":2695,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validés",{"_index":4649,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":1032,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FilestorageController.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesJsonFormsController.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"injectables/PasswdService.html":{},"classes/PasswordPoliciesDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"injectables/TransformersFilestorageService.html":{},"interfaces/ValidationRecursive.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":398,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/FileUploadDto.html":{},"classes/FilestorageCreateDto.html":{},"classes/FilestorageDto.html":{},"classes/FilestorageUpdateDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":3934,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variabilit",{"_index":3986,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variables",{"_index":4125,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vars",{"_index":436,"title":{},"body":{"classes/AgentCreateQuestions.html":{},"classes/AgentsCommand.html":{},"classes/AgentsCreateCommand.html":{},"classes/BackendsCommand.html":{},"injectables/BackendsService.html":{},"classes/BackendsSyncallCommand.html":{},"classes/KeyringsCommand.html":{},"classes/KeyringsCreateCommand.html":{},"classes/KeyringsCreateQuestions.html":{}}}],["verbe",{"_index":4632,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":2807,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":2806,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verification",{"_index":1630,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["verifiedcallback",{"_index":2907,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verifiez",{"_index":3247,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verify",{"_index":1049,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":1014,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":1029,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifytoken(@body",{"_index":3225,"title":{},"body":{"controllers/PasswdController.html":{}}}],["verifytokendto",{"_index":3201,"title":{"classes/VerifyTokenDto.html":{}},"body":{"controllers/PasswdController.html":{},"classes/VerifyTokenDto.html":{}}}],["vers",{"_index":3820,"title":{},"body":{"index.html":{}}}],["version",{"_index":792,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/GithubUpdate.html":{},"classes/MongoDbTestInstance.html":{},"properties.html":{}}}],["versionkey",{"_index":476,"title":{},"body":{"classes/Agents.html":{},"classes/Filestorage.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Jobs.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/Settings.html":{},"classes/Tasks.html":{}}}],["versionn",{"_index":4077,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":4081,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["verticallayout",{"_index":2563,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["veuillez",{"_index":4484,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":3974,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vides",{"_index":4726,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":3977,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vise",{"_index":3953,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["voici",{"_index":4224,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":2813,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MongooseValidationFilter.html":{},"injectables/SmsService.html":{}}}],["voir",{"_index":4111,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["vos",{"_index":3250,"title":{},"body":{"controllers/PasswdController.html":{}}}],["votre",{"_index":1569,"title":{},"body":{"interfaces/CipherData.html":{},"controllers/PasswdController.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":4411,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":4707,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":4114,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":4467,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":4579,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":4133,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":3223,"title":{},"body":{"controllers/PasswdController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["wait",{"_index":1461,"title":{},"body":{"injectables/BackendsService.html":{}}}],["waiting",{"_index":1377,"title":{},"body":{"injectables/BackendsService.html":{}}}],["wanting",{"_index":1153,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":2799,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":2798,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["whitelistedheaders",{"_index":3408,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["winston",{"_index":3720,"title":{},"body":{"dependencies.html":{}}}],["wont",{"_index":3383,"title":{},"body":{"classes/PasswordPoliciesDto.html":{}}}],["workerresultinfointerface",{"_index":3674,"title":{"interfaces/WorkerResultInfoInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["workerresultinterface",{"_index":3679,"title":{"interfaces/WorkerResultInterface.html":{}},"body":{"interfaces/WorkerResultInfoInterface.html":{},"interfaces/WorkerResultInterface.html":{}}}],["wrappertype",{"_index":3942,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefilesync",{"_index":1057,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesJsonformsService.html":{}}}],["writefilesync(`${jsonformpath",{"_index":2596,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{}}}],["wrong",{"_index":3663,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["x",{"_index":4678,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["xx",{"_index":1705,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["xxxxxx@xxxxxxxxxxx",{"_index":1606,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["xxxxxxxx@xxxxxxx",{"_index":1607,"title":{},"body":{"interfaces/CipherData.html":{},"injectables/PasswdService.html":{},"interfaces/TokenData.html":{}}}],["y",{"_index":3813,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":2540,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AbstractSettingsService.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FilestorageController.html":{},"injectables/FormService.html":{},"injectables/IdentitiesJsonformsService.html":{},"injectables/InternalLogger.html":{},"injectables/JobsService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"injectables/PasswdadmService.html":{},"interfaces/ServiceSchemaInterface.html":{},"injectables/TasksService.html":{},"injectables/TransformersFilestorageService.html":{}}}],["yml",{"_index":2547,"title":{},"body":{"injectables/IdentitiesJsonformsService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yml$/.test(fileobj.file",{"_index":2751,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yup",{"_index":2693,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yupschema",{"_index":2736,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema.validate(attribute",{"_index":2739,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["z",{"_index":4781,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["z]/.test(password",{"_index":3337,"title":{},"body":{"injectables/PasswdadmService.html":{}}}],["za",{"_index":4780,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zipball_url",{"_index":750,"title":{},"body":{"controllers/AppController.html":{},"interfaces/GithubUpdate.html":{}}}],["zoom",{"_index":646,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CliModule.html":{},"modules/CoreModule.html":{},"modules/FilestorageModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesJsonformsModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/JobsModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/PasswdModule.html":{},"modules/PasswdadmModule.html":{},"modules/SettingstModule.html":{},"modules/TasksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n            \n                Implements\n            \n            \n                        OnModuleInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    queue\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.queue.processor.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queue\n                    \n                \n\n                \n                    \n                        getqueue()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.queue.processor.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Queue, QueueEvents } from 'bullmq';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { getRedisConnectionToken } from '@nestjs-modules/ioredis';\nimport { Redis } from 'ioredis';\nimport { OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport abstract class AbstractQueueProcessor extends AbstractService implements OnModuleInit {\n  protected config: ConfigService;\n\n  private redis: Redis;\n  protected _queue: Queue;\n  public queueEvents: QueueEvents;\n\n  public get queue(): Queue {\n    return this._queue;\n  }\n\n  public constructor(context?: AbstractServiceContext) {\n    super(context);\n    if (!this.moduleRef) throw new Error('ModuleRef is not defined in ' + this.constructor.name);\n  }\n\n  public async onModuleInit() {\n    this.config = this.moduleRef.get(ConfigService, { strict: false });\n    this.redis = this.moduleRef.get(getRedisConnectionToken(), { strict: false });\n\n    this._queue = new Queue(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('application.nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id?: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata?: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractServiceSchema.html":{"url":"injectables/AbstractServiceSchema.html","title":"injectable - AbstractServiceSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractServiceSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:153\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:318\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:34\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:118\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:195\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:257\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.schema.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport {\n  Document,\n  FilterQuery,\n  Model,\n  ModifyResult,\n  MongooseBaseQueryOptions,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { EventEmitterSeparator } from '~/_common/constants/event-emitter.constant';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { ServiceSchemaInterface } from './interfaces/service.schema.interface';\nimport { AbstractSchema } from './schemas/abstract.schema';\nimport mongodb from 'mongodb';\n\n@Injectable()\nexport abstract class AbstractServiceSchema extends AbstractService implements ServiceSchemaInterface {\n  protected abstract _model: Model;\n\n  protected constructor(context?: AbstractServiceContext) {\n    super(context);\n  }\n\n  public get model(): Model {\n    return this._model;\n  }\n\n  /* eslint-disable */\n  public async find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]> {\n    //TODO: add event emitter\n    this.logger.debug(['find', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.find, T, any, T>>(filter, projection, options).exec()\n  }\n\n  public async count(filter?: FilterQuery, options?: (mongodb.CountOptions & MongooseBaseQueryOptions) | null): Promise {\n    //TODO: add event emitter\n    this.logger.debug(['count', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.countDocuments(filter, options).exec()\n  }\n\n  public async findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]> {\n    this.logger.debug(['findAndCount', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindAndCount'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      // noinspection DuplicatedCode\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let count = await this._model.countDocuments(filter).exec()\n    let data = await this._model.find>(filter, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { data, count },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n        if (afterEvent?.count) count += afterEvent.count\n      }\n    }\n    return [data, count]\n  }\n\n  public async findById(\n    _id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindById'].join(EventEmitterSeparator),\n        { _id, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findById>(_id, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindById'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    return data\n  }\n\n  public async findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindOne'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findOne>(filter, projection, options).exec()\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindOne'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    return data\n  }\n\n  public async create(data?: any, options?: SaveOptions): Promise> {\n    const logInfos = Object.values({\n      ...arguments,\n      1: {\n        ...arguments[1],\n        session: typeof arguments[1] === 'object' && 'session' in arguments[1] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['create', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeCreate'].join(EventEmitterSeparator),\n        { data, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) data = { ...data, ...beforeEvent.data }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    const document = new this._model({\n      metadata: {\n        createdBy: this.request?.user?.username || 'anonymous',\n        createdAt: new Date(),\n        lastUpdatedBy: this.request?.user?.username || 'anonymous',\n        lastUpdatedAt: new Date(),\n      },\n      ...data,\n    })\n    let created = document.save(options)\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { created },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.created) created = { ...created, ...afterEvent.created }\n      }\n    }\n    return created as unknown as Document\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions,\n  ): Promise>> {\n    const logInfos = Object.values({\n      ...arguments,\n      2: {\n        ...arguments[2],\n        session: typeof arguments[2] === 'object' && 'session' in arguments[2] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['update', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpdate'].join(EventEmitterSeparator),\n        { _id, update, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) update = { ...update, ...beforeEvent.update }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let updated = await this._model\n      .findByIdAndUpdate>(\n        { _id },\n        {\n          ...update,\n          $setOnInsert: {\n            'metadata.createdBy': this.request?.user?.username || 'anonymous',\n            'metadata.createdAt': new Date(),\n          },\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec()\n    if (!updated) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { updated },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.updated) updated = { ...updated, ...afterEvent.updated }\n      }\n    }\n    return updated\n  }\n\n  public async upsert(\n    filter: FilterQuery,\n    update: UpdateQuery,\n    options?: QueryOptions\n  ): Promise>> {\n    this.logger.debug(['upsert', JSON.stringify(Object.values(arguments))].join(' '));\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpsert'].join(EventEmitterSeparator),\n        { filter, update, options },\n      );\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop;\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter };\n        if (beforeEvent?.update) update = { ...update, ...beforeEvent.update };\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options };\n      }\n    }\n    let result = await this._model\n      .findOneAndUpdate>(\n        filter,\n        {\n          ...update,\n          $setOnInsert: {\n            ...(update?.$setOnInsert || {}),\n            'metadata.createdBy': this.request?.user?.username || 'anonymous',\n            'metadata.createdAt': new Date(),\n          },\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          upsert: true,\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec();\n\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterUpsert'].join(EventEmitterSeparator),\n        { result },\n      );\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.result) result = { ...result, ...afterEvent.result };\n      }\n    }\n\n    if (!result) {\n      throw new NotFoundException();\n    }\n\n    return result;\n  }\n\n\n  public async delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise> {\n    this.logger.debug(['delete', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeDelete'].join(EventEmitterSeparator),\n        { _id, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let deleted = await this._model.findByIdAndDelete>({ _id }, options).exec()\n    if (!deleted) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()\n    }\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { deleted },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.deleted) deleted = { ...deleted, ...afterEvent.deleted }\n      }\n    }\n    return deleted\n  }\n\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSettingsService.html":{"url":"classes/AbstractSettingsService.html","title":"class - AbstractSettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract-settings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract-settings.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract-settings.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractServiceSchema} from \"~/_common/abstracts/abstract.service.schema\";\nimport {InjectModel} from \"@nestjs/mongoose\";\nimport {Model} from \"mongoose\";\nimport {Settings, SettingsSchema} from \"~/settings/_schemas/settings.schema\";\n\nexport class AbstractSettingsService extends AbstractServiceSchema {\n  protected settingsName: string\n\n  constructor(@InjectModel(Settings.name) protected _model: Model) {\n    super();\n  }\n\n  protected async getParameter(settingName: string): Promise {\n    try {\n      const enr=  await this.findOne({name: settingName})\n      return enr.parameters\n    } catch (e) {\n      return this.defaultValues()\n    }\n  }\n\n  protected async setParameter(settingName: string, parameters: object): Promise {\n    const enr = new this._model({\n      name: settingName\n      , parameters: parameters\n    })\n    const ok= await this.upsert(\n      {name: settingName},\n      {\n        $setOnInsert: {\n          name: settingName\n        },\n        $set: {\n          \"parameters\": parameters\n        }\n      })\n    return ok\n  }\n\n  protected async defaultValues(): Promise {\n\n    return {}\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart extends Document {\n  @Prop({ type: Array, of: String, required: true, default: [] })\n  objectClasses: string[];\n\n  @Prop({ type: Object, default: {} })\n  attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentCreateQuestions.html":{"url":"classes/AgentCreateQuestions.html","title":"class - AgentCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseEmail\n                            \n                            \n                                    \n                                parsePassword\n                            \n                            \n                                    \n                                parseUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseEmail(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Email ?', name: 'email'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parsePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    parsePassword(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Password ?', name: 'password', type: 'password'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseUsername(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Username ?', name: 'username'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/_parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/_parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCommand.html":{"url":"classes/AgentsCommand.html","title":"class - AgentsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from './agents.service';\n\n@ApiTags('core/agents')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    email: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n      security: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateCommand.html":{"url":"classes/AgentsCreateCommand.html","title":"class - AgentsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/agents.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, agentsService: AgentsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/agents.command.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/agents.command.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { AgentsCreateDto } from '~/core/agents/_dto/agents.dto';\nimport { AgentsService } from '~/core/agents/agents.service';\n\n@QuestionSet({ name: 'agent-create-questions' })\nexport class AgentCreateQuestions {\n  @Question({\n    message: 'Username ?',\n    name: 'username',\n  })\n  parseUsername(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Email ?',\n    name: 'email',\n  })\n  parseEmail(val: string) {\n    return val;\n  }\n\n  @Question({\n    message: 'Password ?',\n    name: 'password',\n    type: 'password',\n  })\n  parsePassword(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class AgentsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly agentsService: AgentsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const agent = await this.inquirer.ask('agent-create-questions', undefined);\n    try {\n      await this.agentsService.create(agent);\n      console.log('Agent created successfully');\n    } catch (error) {\n      console.error('Error creating agent', error);\n    }\n  }\n}\n\n@Command({ name: 'agents', arguments: '', subCommands: [AgentsCreateCommand] })\nexport class AgentsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AgentsModule_exports\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n// import { AgentsCommand } from '~/cli/agents.command';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService /* ...AgentsCommand.registerWithSubCommands() */],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: AgentsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:17\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:27\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AgentsCreateDto } from './_dto/agents.dto';\nimport { hash } from 'argon2';\nimport { randomBytes } from 'node:crypto';\nimport { SecurityPartDTO } from './_dto/parts/security.part.dto';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: AgentsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    data.password = await hash(data.password);\n    data.security = (data.security || {}) as SecurityPartDTO;\n    data.security.secretKey = randomBytes(32).toString('hex');\n    return await super.create(data, options);\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery & any,\n    options?: QueryOptions,\n  ): Promise>> {\n    if (update.password) {\n      update.password = await hash(update.password);\n    }\n    if (update.$set?.password) {\n      update.$set.password = await hash(update.$set.password);\n    }\n    return await super.update(\n      _id,\n      {\n        ...update,\n        $set: {\n          ...(update?.$set || {}),\n        },\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  // @IsArray()\n  // @IsString({ each: true })\n  // @ApiProperty({ type: [String] })\n  // public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiSession.html":{"url":"classes/ApiSession.html","title":"class - ApiSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/api-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                token\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/api-session.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/api-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ApiSession {\n  public readonly _id: string;\n  public readonly username: string;\n  public readonly displayName: string;\n  public readonly token: string;\n\n  public constructor(data: Partial) {\n    for (const key in data) {\n      this[key] = data[key];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                getInfo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get API infos'})@ApiResponse({status: 200, description: 'Return API infos'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(res: Response, project?: string, current?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'current', required: false})@Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport LRU from 'lru-cache';\n\ninterface GithubUpdate {\n  name?: string;\n  commit?: {\n    sha?: string;\n    url?: string;\n  };\n  zipball_url?: string;\n  tarball_url?: string;\n  node_id?: string;\n}\n\nconst storage = new LRU({ ttl: 60 * 60 * 1000 })\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data: GithubUpdate[] | object = {}\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`)\n      data = storage.get(project) as GithubUpdate[] | object\n    } else {\n      this.logger.log(`Fetching ${project} tags`)\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/tags`, {\n        signal: AbortSignal.timeout(1000),\n      })\n      data = await update.json()\n      storage.set(project, data)\n      // console.log('this.storage', storage.get(project))\n    }\n    if (!Array.isArray(data)) {\n      throw new BadRequestException(`Invalid data from Github `)\n    }\n    const lastVersion = data[0].name.replace(/^v/, '')\n    const pkgInfo = this.appService.getInfo()\n    const currentVersion = current || pkgInfo.version\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter')\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number)\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number)\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nSettingstModule\n\nSettingstModule\n\nAppModule -->\n\nSettingstModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                        \n                            SettingstModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\nimport { APP_FILTER, APP_GUARD, APP_PIPE } from '@nestjs/core';\nimport { AuthGuard } from './_common/guards/auth.guard';\nimport { MongooseValidationFilter } from './_common/filters/mongoose-validation.filter';\nimport { DtoValidationPipe } from './_common/pipes/dto-validation.pipe';\nimport { SettingstModule } from \"~/settings/settings.module\";\nimport { MailerModule } from \"@nestjs-modules/mailer\";\nimport { HandlebarsAdapter } from \"@nestjs-modules/mailer/dist/adapters/handlebars.adapter\";\nimport { FactorydriveModule } from '@the-software-compagny/nestjs_module_factorydrive';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        transport: config.get('mailer.host') || 'smtp://localhost:25',\n        defaults: {\n          from: config.get('mailer.sender'),\n        },\n        template: {\n          dir: __dirname + '/../templates',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    FactorydriveModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        ...config.get('factorydrive.options'),\n      }),\n    }),\n    RequestContextModule,\n    CoreModule.register(),\n    ManagementModule.register(),\n    SettingstModule.register()\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard('jwt'),\n    },\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AllExceptionFilter,\n    // },\n    {\n      provide: APP_FILTER,\n      useClass: MongooseValidationFilter,\n    },\n    {\n      provide: APP_PIPE,\n      useClass: DtoValidationPipe,\n    },\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Partial\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\n\n@Injectable()\nexport class AppService extends AbstractService {\n  protected package: Partial;\n\n  public constructor(protected moduleRef: ModuleRef) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AskTokenDto.html":{"url":"classes/AskTokenDto.html","title":"class - AskTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AskTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/ask-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mail\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'monemail@mondomaine.com', description: 'secondary mail'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/ask-token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class AskTokenDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  uid: string;\n\n  @ApiProperty({ example: 'monemail@mondomaine.com', description: 'secondary mail' })\n  @IsString()\n  mail: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)@ApiOperation({summary: 'Authentification interne utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ApiOperation({summary: 'Supprime le jeton d'authentification utilisateur'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')@ApiOperation({summary: 'Récupère un nouveau jeton d'authentification'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)@ApiOperation({summary: 'Récupération de la session en cours'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\n\n@Public()\n@ApiTags('core/auth')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  @ApiOperation({ summary: 'Authentification interne utilisateur' })\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  @ApiOperation({ summary: 'Récupération de la session en cours' })\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    const user = await this.service.getSessionData(identity);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...user,\n        sseToken: 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8', //TODO: change to real token\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  @ApiOperation({ summary: 'Récupère un nouveau jeton d\\'authentification' })\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const tokens = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      sseToken: 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8', //TODO: change to real token\n    });\n  }\n\n  @Post('logout')\n  @ApiOperation({ summary: 'Supprime le jeton d\\'authentification utilisateur' })\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\nimport { KeyringsModule } from '../keyrings/keyrings.module';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, keyringsService: KeyringsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity: AgentType, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:181\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\nimport { KeyringsService } from '../keyrings/keyrings.service';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    protected readonly keyringsService: KeyringsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n        scopes: ['offline', 'api'],\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType & { token: string } }): Promise {\n    if (payload.scopes.includes('offline')) {\n      return payload.identity;\n    }\n    if (payload.scopes.includes('api')) {\n      try {\n        const identity = await this.keyringsService.findOne({\n          _id: payload.identity._id,\n          token: payload.identity.token,\n        });\n        if (identity) {\n          return identity.toObject();\n        }\n      } catch (e) { }\n      return null;\n    }\n    try {\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        const data = JSON.parse(identity);\n        const success = await this.agentsService.model.countDocuments({\n          _id: payload.identity._id,\n          'security.secretKey': data.identity?.security?.secretKey,\n        });\n\n        return success ? data : null;\n      }\n    } catch (e) {\n      this.logger.warn('Invalid jwt session', e);\n    }\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['sesame'];\n    if (options?.scopes) scopes.push(...options.scopes);\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity, scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...omit(options, ['scopes']),\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity,\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  //TODO: change any\n  public async getSessionData(identity: AgentType): Promise {\n    // const entity = await this.agentsService.findOne(\n    //   { _id: identity.entityId },\n    //   {\n    //     projection: {\n    //       metadata: 0,\n    //     },\n    //   },\n    // )\n    return {\n      ...identity,\n      // entity,\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return this.createTokens(omit(identity.toObject(), ['password']), refresh_token);\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInfoInterface.html":{"url":"interfaces/BackendResultInfoInterface.html","title":"interface - BackendResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendResultInterface.html":{"url":"interfaces/BackendResultInterface.html","title":"interface - BackendResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/backend-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            output\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        output:         BackendResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BackendResultInfoInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BackendResultInterface {\n  backend: string;\n  status: number;\n  output?: BackendResultInfoInterface;\n  error?: BackendResultInfoInterface;\n}\n\nexport interface BackendResultInfoInterface {\n  status: number;\n  message?: string;\n  data?: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsCommand.html":{"url":"classes/BackendsCommand.html","title":"class - BackendsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                sse\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(res: Response, body: ExecuteJobDto, asyncQuery: string, timeoutDiscardQuery: string, disableLogsQuery: string, updateStatusQuery: string, syncTimeout?: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('execute')@ApiOperation({summary: 'Execute un backend manuellement'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            ExecuteJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                timeoutDiscardQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                disableLogsQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStatusQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                syncTimeout\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        sse\n                        \n                    \n                \n            \n            \n                \n                        \n                    sse(res: Response, key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Sse('sse')@ApiOperation({summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(res: Response, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('syncall')@ApiOperation({summary: 'Synchronise toutes les identitées à synchroniser'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(res: Response, body: SyncIdentitiesDto, asyncQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sync')@ApiOperation({summary: 'Synchronise une liste d'identitées'})\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            SyncIdentitiesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                asyncQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport {\n  Body,\n  Controller,\n  HttpStatus,\n  Logger,\n  ParseIntPipe,\n  Post,\n  Query,\n  Res,\n  Sse,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport Redis from 'ioredis';\nimport { Observable, Subscriber } from 'rxjs';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ExecuteJobDto } from './_dto/execute-job.dto';\nimport { BackendsService } from './backends.service';\nimport { SyncIdentitiesDto } from './_dto/sync-identities.dto';\nimport { Types } from 'mongoose';\nimport { ActionType } from './_enum/action-type.enum';\n\nfunction fireMessage(observer: Subscriber, channel: string, message: any, loggername: string) {\n  try {\n    observer.next({\n      data: { channel, payload: message },\n    } as MessageEvent);\n    Logger.debug(`Observer send to  with data `, loggername);\n  } catch (err) {\n    Logger.error(`Observer error from  with data . Error: ${err}`, loggername);\n  }\n}\n\n@ApiTags('core/backends')\n@Controller('backends')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(\n    private backendsService: BackendsService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) { }\n\n  @Post('sync')\n  @ApiOperation({ summary: 'Synchronise une liste d\\'identitées' })\n  public async syncIdentities(\n    @Res() res: Response,\n    @Body() body: SyncIdentitiesDto,\n    @Query('async') asyncQuery: string,\n  ) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncIdentities(body.payload, {\n      async,\n    });\n\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('syncall')\n  @ApiOperation({ summary: 'Synchronise toutes les identitées à synchroniser' })\n  public async syncAllIdentities(@Res() res: Response, @Query('async') asyncQuery: string) {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const data = await this.backendsService.syncAllIdentities({\n      async,\n    });\n    return res.status(HttpStatus.ACCEPTED).json({ async, data });\n  }\n\n  @Post('execute')\n  @ApiOperation({ summary: 'Execute un backend manuellement' })\n  public async executeJob(\n    @Res() res: Response,\n    @Body() body: ExecuteJobDto,\n    @Query('async') asyncQuery: string,\n    @Query('timeoutDiscard') timeoutDiscardQuery: string,\n    @Query('disableLogs') disableLogsQuery: string,\n    @Query('updateStatus') updateStatusQuery: string,\n    @Query(\n      'syncTimeout',\n      new ParseIntPipe({\n        optional: true,\n        errorHttpStatusCode: HttpStatus.NOT_ACCEPTABLE,\n      }),\n    )\n    syncTimeout?: number,\n  ): Promise {\n    const async = /true|on|yes|1/i.test(asyncQuery);\n    const timeoutDiscard = /true|on|yes|1/i.test(timeoutDiscardQuery);\n    const disableLogs = /true|on|yes|1/i.test(disableLogsQuery);\n    const updateStatus = /true|on|yes|1/i.test(updateStatusQuery);\n    const [job, response] = await this.backendsService.executeJob(\n      body.action,\n      body.id ? new Types.ObjectId(body.id) : null,\n      body.payload,\n      {\n        async,\n        syncTimeout,\n        timeoutDiscard,\n        disableLogs,\n        updateStatus,\n      },\n    );\n    return res.status(HttpStatus.ACCEPTED).json({ async, job, response });\n  }\n\n  @Public()\n  @Sse('sse')\n  @ApiOperation({ summary: 'Server Sent Event - Récupère en temps réel les Jobs et affiche leurs état' })\n  public async sse(@Res() res: Response, @Query('key') key: string): Promise> {\n    if (key !== 'hZcdVqHScVDsDFdHOdcjmufEKFJVKaS8') throw new UnauthorizedException();\n\n    res.socket.on('close', () => {\n      Logger.debug(`Observer close connection`, this.constructor.name);\n    });\n\n    return new Observable((observer) => {\n      this.backendsService.queueEvents.on('added', (added) => {\n        if (![ActionType.IDENTITY_UPDATE, ActionType.IDENTITY_CREATE, ActionType.IDENTITY_DELETE].includes(added.name)) return;\n        return fireMessage(observer, 'job:added', added, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('completed', (completed) => {\n        return fireMessage(observer, 'job:completed', completed, this.constructor.name);\n      });\n\n      this.backendsService.queueEvents.on('failed', (failed) => {\n        return fireMessage(observer, 'job:failed', failed, this.constructor.name);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { IdentitiesModule } from '~/management/identities/identities.module';\nimport { JobsModule } from '../jobs/jobs.module';\nimport { TasksModule } from '../tasks/tasks.module';\n@Module({\n  imports: [ConfigModule, IdentitiesModule, JobsModule, TasksModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n  exports: [BackendsService],\n})\nexport class BackendsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendsService.html":{"url":"injectables/BackendsService.html","title":"injectable - BackendsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueProcessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _queue\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                queueEvents\n                            \n                            \n                                    Private\n                                redis\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                executeJob\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                syncAllIdentities\n                            \n                            \n                                    Public\n                                    Async\n                                syncIdentities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, identitiesService: IdentitiesService, jobsService: JobsService, tasksService: TasksService)\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/backends.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identitiesService\n                                                  \n                                                        \n                                                                        IdentitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsService\n                                                  \n                                                        \n                                                                        JobsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        executeJob\n                        \n                    \n                \n            \n            \n                \n                        \n                    executeJob(actionType: ActionType, concernedTo?: Types.ObjectId, payload?: Record, options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:210\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                actionType\n                                            \n                                                            ActionType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                concernedTo\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractQueueProcessor\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractQueueProcessor:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncAllIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncAllIdentities(options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        syncIdentities\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncIdentities(payload: string[], options?: ExecuteJobOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            ExecuteJobOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigService\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpException,\n  HttpStatus,\n  Injectable,\n  RequestTimeoutException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Document, ModifyResult, Query, Types } from 'mongoose';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { Identities } from '~/management/identities/_schemas/identities.schema';\nimport { IdentitiesService } from '~/management/identities/identities.service';\nimport { JobState } from '../jobs/_enums/state.enum';\nimport { JobState as StateOfJob } from 'bullmq';\nimport { Jobs } from '../jobs/_schemas/jobs.schema';\nimport { JobsService } from '../jobs/jobs.service';\nimport { Tasks } from '../tasks/_schemas/tasks.schema';\nimport { TasksService } from '../tasks/tasks.service';\nimport { ActionType } from './_enum/action-type.enum';\nimport { ExecuteJobOptions } from './_interfaces/execute-job-options.interface';\n\nconst DEFAULT_SYNC_TIMEOUT = 30_000;\n\n@Injectable()\nexport class BackendsService extends AbstractQueueProcessor {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected identitiesService: IdentitiesService,\n    protected jobsService: JobsService,\n    protected tasksService: TasksService,\n  ) {\n    super({ moduleRef });\n  }\n\n  public async onModuleInit() {\n    await super.onModuleInit();\n\n    if (process.env['npm_lifecycle_event'] === 'console') {\n      this.logger.debug('QUEUE CHECKER IGNORED, cli mode detected !');\n      return;\n    }\n    this.logger.warn('ENABLE QUEUE CHECKER !');\n\n    const jobsCompleted = await this._queue.getCompleted();\n    for (const job of jobsCompleted) {\n      const isSyncedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: job.id, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.COMPLETED,\n            finishedAt: new Date(),\n            result: job.returnvalue,\n          },\n        },\n        { new: true },\n      );\n      if (isSyncedJob) {\n        await this.identitiesService.model.findByIdAndUpdate(isSyncedJob?.concernedTo?.id, {\n          $set: {\n            state: IdentityState.SYNCED,\n          },\n        });\n        this.logger.warn(`Job already completed, syncing... [${job.id}::COMPLETED]`);\n      }\n    }\n\n    this.queueEvents.on('waiting', (payload) => this.logger.debug(`Job is now waiting... [${payload.jobId}]`));\n    this.queueEvents.on('active', async (payload) => {\n      this.logger.debug(`Job is now active... [${payload.jobId}]`);\n      await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.IN_PROGRESS,\n            processedAt: new Date(),\n          },\n        },\n        { new: true },\n      );\n    });\n\n    this.queueEvents.on('failed', async (payload) => {\n      this.logger.debug(`Job failed ! [${payload.jobId}]`);\n      const failedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.FAILED,\n            finishedAt: new Date(),\n            result: {\n              error: {\n                message: payload.failedReason,\n              },\n            },\n          },\n        },\n        { new: true },\n      );\n      await this.identitiesService.model.findByIdAndUpdate(failedJob?.concernedTo?.id, {\n        $set: {\n          state: IdentityState.ON_ERROR,\n        },\n      });\n    });\n\n    this.queueEvents.on('completed', async (payload) => {\n      const completedJob = await this.jobsService.model.findOneAndUpdate(\n        { jobId: payload.jobId, state: { $ne: JobState.COMPLETED } },\n        {\n          $set: {\n            state: JobState.COMPLETED,\n            finishedAt: new Date(),\n            result: payload.returnvalue,\n          },\n        },\n        { upsert: true, new: true },\n      );\n\n      await this.identitiesService.model.findByIdAndUpdate(completedJob?.concernedTo?.id, {\n        $set: {\n          state: IdentityState.SYNCED,\n        },\n      });\n      this.logger.log(`Job completed... Syncing [${payload.jobId}]`);\n    });\n  }\n\n  public async syncAllIdentities(options?: ExecuteJobOptions): Promise {\n    const syncAllIdentities = (await this.identitiesService.find({\n      state: IdentityState.TO_SYNC,\n    })) as unknown as Identities[];\n    const identities = syncAllIdentities.map((identity: Identities) => {\n      return {\n        action: ActionType.IDENTITY_UPDATE,\n        identity,\n      };\n    });\n\n    const task: Tasks = await this.tasksService.create({\n      jobs: identities.map((identity) => identity.identity._id),\n    });\n\n    const result = {};\n    for (const identity of identities) {\n      try {\n        this.logger.debug(`Syncing identity ${identity.identity._id}`);\n        const [executedJob] = await this.executeJob(\n          identity.action,\n          identity.identity._id,\n          { identity },\n          {\n            ...options,\n            updateStatus: true,\n            task: task._id,\n          },\n        );\n        result[identity.identity._id] = executedJob;\n      } catch (err: any & HttpException) {\n        this.logger.error(`Error while syncing identity ${identity.identity._id}`, err);\n        result[identity.identity._id] = {\n          ...err.response,\n        };\n      }\n    }\n\n    return result;\n  }\n\n  public async syncIdentities(payload: string[], options?: ExecuteJobOptions): Promise {\n    const identities: {\n      action: ActionType;\n      identity: Identities;\n    }[] = [];\n\n    if (!payload.length) throw new BadRequestException('No identities to sync');\n\n    for (const key of payload) {\n      const identity = await this.identitiesService.findById(key);\n      if (identity.state !== IdentityState.TO_SYNC) {\n        throw new BadRequestException({\n          status: HttpStatus.BAD_REQUEST,\n          message: `Identity ${key} is not in state TO_SYNC`,\n          identity,\n        });\n      }\n      identities.push({\n        action: ActionType.IDENTITY_UPDATE,\n        identity,\n      });\n    }\n\n    const task: Tasks = await this.tasksService.create({\n      jobs: identities.map((identity) => identity.identity._id),\n    });\n\n    const result = {};\n    for (const identity of identities) {\n      const [executedJob] = await this.executeJob(identity.action, identity.identity._id, identity.identity, {\n        ...options,\n        updateStatus: true,\n        task: task._id,\n      });\n      result[identity.identity._id] = executedJob;\n    }\n    return result;\n  }\n\n  public async executeJob(\n    actionType: ActionType,\n    concernedTo?: Types.ObjectId,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    payload?: Record,\n    options?: ExecuteJobOptions,\n  ): Promise {\n    const job = await this.queue.add(\n      actionType,\n      {\n        concernedTo,\n        payload,\n      },\n      {\n        ...options?.job,\n        attempts: 1,\n      },\n    );\n    const optionals = {};\n    if (!options?.async) {\n      optionals['processedAt'] = new Date();\n      optionals['state'] = JobState.IN_PROGRESS;\n    }\n\n    let jobStore: Document = null;\n    if (!options?.disableLogs) {\n      const identity = concernedTo ? await this.identitiesService.findById(concernedTo) : null;\n      jobStore = await this.jobsService.create({\n        jobId: job.id,\n        action: actionType,\n        params: payload,\n        concernedTo: identity ? {\n          $ref: 'identities',\n          id: concernedTo,\n          name: [identity?.inetOrgPerson?.cn, identity?.inetOrgPerson?.givenName].join(' '),\n        } : null,\n        comment: options?.comment,\n        task: options?.task,\n        state: JobState.CREATED,\n        ...optionals,\n      });\n    }\n\n    if (concernedTo && !!options?.updateStatus) {\n      await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n        $set: {\n          state: IdentityState.PROCESSING,\n        },\n      });\n    }\n\n    if (!options?.async) {\n      let error: Error;\n\n      try {\n        const response = await job.waitUntilFinished(this.queueEvents, options.syncTimeout || DEFAULT_SYNC_TIMEOUT);\n\n        if (response?.status > 0) {\n          const jobError: Error & { response: any } = new Error() as unknown as Error & { response: any };\n          jobError.response = response;\n\n          throw jobError;\n        }\n\n        let jobStoreUpdated: ModifyResult> = null;\n\n        if (!options?.disableLogs) {\n          jobStoreUpdated = await this.jobsService.update(jobStore._id, {\n            $set: {\n              state: JobState.COMPLETED,\n              processedAt: new Date(),\n              finishedAt: new Date(),\n              result: response,\n            },\n          });\n        }\n\n        if (concernedTo && !!options?.updateStatus) {\n          await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n            $set: {\n              state: IdentityState.SYNCED,\n            },\n          });\n        }\n\n        return [jobStoreUpdated as unknown as Jobs, response];\n      } catch (err) {\n        this.logger.error(`Error while executing job ${job.id}`, err);\n        error = err;\n      }\n\n      const stateOfJob = await job.getState();\n\n      let jobFailed: ModifyResult> = null;\n      if (!options?.disableLogs) {\n        jobFailed = await this.jobsService.update(jobStore._id, {\n          $set: {\n            state: JobState.FAILED,\n            finishedAt: new Date(),\n            result: {\n              error: {\n                message: error.message,\n              },\n            },\n          },\n        });\n      }\n\n      if (concernedTo && !!options?.updateStatus) {\n        await this.identitiesService.model.findByIdAndUpdate(concernedTo, {\n          $set: {\n            state: IdentityState.ON_ERROR,\n          },\n        });\n      }\n\n      if (options?.timeoutDiscard && stateOfJob !== 'completed' && stateOfJob !== 'failed') {\n        job.discard();\n\n        throw new RequestTimeoutException({\n          status: HttpStatus.REQUEST_TIMEOUT,\n          message: `Sync job ${job.id} failed to finish in time`,\n          error,\n          job: jobFailed as unknown as Jobs,\n        });\n      }\n\n      if (error && stateOfJob !== 'completed' && stateOfJob !== 'failed') {\n        throw new UnprocessableEntityException({\n          status: HttpStatus.UNPROCESSABLE_ENTITY,\n          message: `Job now continue to run in background ${job.id}, timeout wait until finish reached`,\n          error,\n          job: jobFailed as unknown as Jobs,\n        });\n      }\n\n      throw new BadRequestException({\n        status: HttpStatus.BAD_REQUEST,\n        error,\n        job: (error as any).response,\n      });\n    }\n\n    return [jobStore?.toObject() || null, null];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BackendsSyncallCommand.html":{"url":"classes/BackendsSyncallCommand.html","title":"class - BackendsSyncallCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BackendsSyncallCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/backends.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, backendsService: BackendsService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/backends.command.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        backendsService\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/backends.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, SubCommand } from 'nest-commander';\nimport { BackendsService } from '~/core/backends/backends.service';\n\n@SubCommand({ name: 'syncall' })\nexport class BackendsSyncallCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly backendsService: BackendsService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const result = await this.backendsService.syncAllIdentities({\n      async: true,\n    });\n    for (const identity of Object.values(result)) {\n      console.log(identity);\n    }\n  }\n}\n\n@Command({ name: 'backends', arguments: '', subCommands: [BackendsSyncallCommand] })\nexport class BackendsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/change-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                newPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                oldPassword\n                            \n                            \n                                    \n                                    \n                                    Public\n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyNewPassword', description: 'New password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        oldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'MyOldPassword', description: 'Old password', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/change-password.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ChangePasswordDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public uid: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyOldPassword', description: 'Old password', type: String })\n  public oldPassword: string;\n\n  @IsString()\n  @ApiProperty({ example: 'MyNewPassword', description: 'New password', type: String })\n  public newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CipherData.html":{"url":"interfaces/CipherData.html","title":"interface - CipherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CipherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { BadRequestException, HttpStatus, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './_dto/ask-token.dto';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { IdentitiesService } from '../identities/identities.service';\nimport { pick,get } from 'radash';\nimport { Identities } from '../identities/_schemas/identities.schema';\nimport {MailerModule, MailerService} from \"@nestjs-modules/mailer\";\nimport {InitAccountDto} from \"~/management/passwd/_dto/init-account.dto\";\nimport {ConfigService} from \"@nestjs/config\";\nimport {randomInt} from \"crypto\";\nimport {ResetByCodeDto} from \"~/management/passwd/_dto/reset-by-code-dto\";\nimport {PasswdadmService} from \"~/settings/passwdadm/passwdadm.service\";\nimport {IdentityState} from \"~/management/identities/_enums/states.enum\";\nimport {InitResetDto} from \"~/management/passwd/_dto/init-reset.dto\";\nimport {SmsService} from \"~/management/passwd/sms-service\";\nimport {PasswordPoliciesDto} from \"~/settings/passwdadm/_dto/password-policy.dto\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public static readonly TOKEN_EXPIRATION = 604800;\n  public static readonly CODE_EXPIRATION = 1900;\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsService: SmsService,\n    @InjectRedis() private readonly redis: Redis\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto):Promise{\n    //envoi du mail\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid }) as Identities;\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode()\n      const mailAttribute=this.config.get('frontPwd.identityMailAttribute')\n      const mail = get(identity.toObject(), mailAttribute)\n      const token = await this.askToken({mail: mail, uid: initDto.uid}, padd + k.toString(16),PasswdService.CODE_EXPIRATION)\n      this.logger.log(\"Token :\" + token + '  int : ' + k.toString(10))\n      if (initDto.type === 0){\n        this.logger.log(\"Reset password asked by mail for  : \" + initDto.uid )\n        if (mailAttribute !== '') {\n          const displayName=identity.inetOrgPerson.displayName\n          this.mailer.sendMail({\n            from: this.config.get('mailer.sender'),\n            to: mail,\n            subject: 'Reinitialisation de votre mot de passe',\n            template: \"resetaccount\",\n            context:{\n              uid: identity.inetOrgPerson.uid,\n              displayName: displayName,\n              code: k\n            }\n          })\n            .then(() => {\n              this.logger.log(\"reset compte envoyé  pour uid\" +initDto.uid +\" à \" + mail )\n            })\n            .catch((e) => {\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail',\n                error: \"Bad Request\",\n                statusCode: 400\n              });\n            })\n          return token\n        }else{\n          return false\n        }\n      }else{\n        //envoi par SMS si c est possible\n        const policies=new PasswordPoliciesDto()\n        if (policies.resetBySms === true){\n          this.logger.log(\"Reset password asked by SMS for  : \" + initDto.uid )\n          const smsAttribute=this.config.get('frontPwd.identityMobileAttribute')\n          if (smsAttribute !== ''){\n            const numTel = get(identity.toObject(), smsAttribute)\n            this.smsService.send(numTel,\"Votre code de reinitialisation : \" + k.toString(10))\n          }\n          return token\n        }else{\n          return false\n        }\n      }\n\n    }catch(e){\n      this.logger.error(\"Error while reseting password. \" + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k=crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken=await this.askToken({mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx'},  k,0)\n      return falseToken\n    }\n\n\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto):Promise{\n    //recherche de l'identity\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid }) as Identities;\n      //envoi du mail\n      const mailAttribute=this.config.get('frontPwd.identityMailAttribute')\n      this.logger.log(\"mailer.identityMailAttribute : \" +mailAttribute )\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute)\n        //demande du token\n        const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n        const token = await this.askToken({mail: mail, uid: initDto.uid},k,PasswdService.TOKEN_EXPIRATION)\n        //envoi du token\n        this.mailer.sendMail({\n          from: this.config.get('mailer.sender'),\n          to: mail,\n          subject: 'Activation de votre compte',\n          template: \"initaccount\",\n          context:{\n            uid: initDto.uid,\n            url:this.config.get('frontPwd.url')+'/initaccount/'+ token\n          }\n\n        })\n          .then(() => {\n            this.logger.log(\"Init compte envoyé  pour uid\" +initDto.uid +\" à \" + mail )\n          })\n          .catch((e) => {\n            throw new BadRequestException({\n              message: 'Erreur serveur lors de l envoi du mail',\n              error: \"Bad Request\",\n              statusCode: 400\n            });\n          })\n\n        return true\n      }else{\n        this.logger.error(\"Error while initAccount identityMailAttribute nor defined\");\n        return false\n      }\n    }catch(e){\n      this.logger.error(\"Error while initialize password. \" + e + ` (uid=${initDto?.uid})`);\n      return false\n    }\n\n  }\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': passwdDto.uid,'state':IdentityState.SYNCED }) as Identities;\n      //verification de la police de mdp\n      if (await this.passwdadmService.checkPolicies(passwdDto.newPassword) === false){\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: \"Bad Request\",\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, identity._id, {\n        ...passwdDto,\n        ...pick(identity.toJSON(), ['inetOrgPerson']),\n      }, {\n        async: false,\n        timeoutDiscard: true,\n        disableLogs: true,\n        updateStatus: false,\n      });\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error(\"Error while changing password. \" + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: \"Bad Request\",\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto,k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl >0){\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error(\"Error while ask token. \" + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string,code: number): Promise {\n    try {\n      token=decodeURIComponent(token)\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' +cypherData)\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd=await this.getPaddingForCode();\n      const k=padd + code.toString(16)\n      this.logger.log('k=' + k)\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error(\"Error while decrypting token. \" + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token=decodeURIComponent(token)\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose(\"Error while decrypting token. \" + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n  // reset du password\n  public async resetByCode(data:ResetByCodeDto):Promise{\n    this.logger.log('resetByCode : ' + data.token+ ' '+ data.code )\n    //verification du passwordPolicies\n    if (await this.passwdadmService.checkPolicies(data.newpassword) === false){\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: \"Bad Request\",\n        statusCode: 400,\n      });\n    }\n    const tokenData=await this.decryptTokenWithCode(data.token,data.code)\n    this.logger.log( 'dataToken :' + tokenData)\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid }) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newpassword, ...pick(identity, ['inetOrgPerson']) },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key')\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n      this.logger.error(\"Error from backend while reseting password by code\" );\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    }catch (e) {\n      this.logger.error(\"Error while reseting password by code. \" + e + ` (token=${data?.token})`);\n      throw new BadRequestException('Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible');\n    }\n  }\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid,'state':IdentityState.SYNCED }) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...pick(identity, ['inetOrgPerson']) },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n\n    } catch (e) {\n      this.logger.error(\"Error while reseting password. \" + e + ` (token=${data?.token})`);\n      throw new BadRequestException('Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible');\n    }\n  }\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise{\n     let code = \"\"\n     if ( await this.redis.exists('CODEPADDING')){\n       code = await this.redis.get('CODEPADDING')\n     }else{\n       code = crypto.randomBytes(13).toString('hex') +'0';\n       await this.redis.set('CODEPADDING',code)\n     }\n     return code\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CliModule.html":{"url":"modules/CliModule.html","title":"module - CliModule","body":"\n                   \n\n\n\n\n    Modules\n    CliModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CliModule\n\n\n\ncluster_CliModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cli/cli.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            KeyringsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AgentCreateQuestions, AgentsCommand } from './agents.command';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { BullModule } from '@nestjs/bullmq';\nimport { RedisOptions } from 'ioredis';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport config, { MongoosePlugin } from '~/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { KeyringsCommand, KeyringsCreateQuestions } from './keyrings.command';\nimport { KeyringsModule } from '~/core/keyrings/keyrings.module';\nimport { BackendsCommand } from './backends.command';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { AuthModule } from '~/core/auth/auth.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        type: 'single',\n        url: config.get('ioredis.uri'),\n        options: config.get('ioredis.options'),\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    AgentsModule,\n    KeyringsModule,\n    BackendsModule,\n    AuthModule,\n  ],\n  providers: [\n    ...AgentsCommand.registerWithSubCommands(),\n    ...KeyringsCommand.registerWithSubCommands(),\n    ...BackendsCommand.registerWithSubCommands(),\n    AgentCreateQuestions,\n    KeyringsCreateQuestions,\n  ],\n})\nexport class CliModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPart.html":{"url":"classes/ConcernedToPart.html","title":"class - ConcernedToPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/_parts/concerned-to.parts.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\n\n@Schema({ _id: false })\nexport class ConcernedToPart extends Document {\n  @Prop({ type: String, required: true })\n  public $ref: string;\n\n  @Prop({ type: Types.ObjectId, required: true })\n  public id: Types.ObjectId;\n\n  @Prop({ type: String })\n  public name?: string;\n}\n\nexport const ConcernedToPartSchema = SchemaFactory.createForClass(ConcernedToPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConcernedToPartDTO.html":{"url":"classes/ConcernedToPartDTO.html","title":"class - ConcernedToPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConcernedToPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/_parts/concerned-to.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                $ref\n                            \n                            \n                                    \n                                    \n                                    Public\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        $ref\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/_parts/concerned-to.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Types } from 'mongoose';\n\nexport class ConcernedToPartDTO {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public $ref: string;\n\n  @IsMongoId()\n  @ApiProperty()\n  public id: Types.ObjectId;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public name?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            factorydrive\n                                        \n                                \n                                \n                                        \n                                            frontPwd\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mailer\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            sms\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        factorydrive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        factorydrive:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frontPwd\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frontPwd:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mailer:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sms:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3'\n          config: AmazonWebServicesS3StorageConfig\n        }\n      }\n    }\n  }\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string,\n    systemId: string,\n    password: string,\n    sourceAddr: string,\n    regionCode: string\n  },\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        pictures: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/pictures',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com'\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || ''\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR'\n  }\n\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                required\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly displayName: string = 'Console';\n\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            FilestorageModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            TasksModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AgentsModule } from './agents/agents.module';\nimport { AuthModule } from './auth/auth.module';\nimport { BackendsModule } from './backends/backends.module';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { FilestorageModule } from './filestorage/filestorage.module';\n\n@Module({\n  imports: [AuthModule, BackendsModule, LoggerModule, KeyringsModule, AgentsModule, JobsModule, TasksModule, FilestorageModule],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPart.html":{"url":"classes/DataPart.html","title":"class - DataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/_parts/data.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_DATA_TYPE})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/_parts/data.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport const DEFAULT_DATA_TYPE = 'default';\n\n@Schema({ _id: false })\nexport class DataPart extends Document {\n  @Prop({\n    type: String,\n    default: DEFAULT_DATA_TYPE,\n  })\n  public type?: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public message: string;\n}\n\nexport const DataPartSchema = SchemaFactory.createForClass(DataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExecuteJobDto.html":{"url":"classes/ExecuteJobDto.html","title":"class - ExecuteJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExecuteJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/execute-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActionType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(ActionType)@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsOptional()@ApiProperty({example: 'paul.bismuth', description: 'User object id', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/execute-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional } from 'class-validator';\nimport { ActionType } from '../_enum/action-type.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ExecuteJobDto {\n  @IsNotEmpty()\n  @IsEnum(ActionType)\n  @ApiProperty({ type: String })\n  public action: ActionType;\n\n  @IsMongoId()\n  @IsOptional()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User object id', type: String })\n  public id?: string;\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: Object })\n  public payload: Record;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExecuteJobOptions.html":{"url":"interfaces/ExecuteJobOptions.html","title":"interface - ExecuteJobOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExecuteJobOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/execute-job-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            async\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disableLogs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            job\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            syncTimeout\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutDiscard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updateStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        async\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        async:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableLogs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableLogs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        job\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        job:         JobsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JobsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        syncTimeout\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        syncTimeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutDiscard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutDiscard:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JobsOptions } from 'bullmq';\nimport { Types } from 'mongoose';\n\nexport interface ExecuteJobOptions {\n  job?: JobsOptions;\n  async?: boolean;\n  disableLogs?: boolean;\n  syncTimeout?: number;\n  timeoutDiscard?: boolean;\n  updateStatus?: boolean;\n  comment?: string;\n  task?: Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileUploadDto.html":{"url":"classes/FileUploadDto.html","title":"class - FileUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        file\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'binary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger'\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto'\nimport { IsMongoId, IsString, IsEnum, IsOptional, IsObject, IsBoolean, IsNotEmpty, IsMimeType, Matches } from 'class-validator'\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum'\nimport { MixedValue } from '~/_common/types/mixed-value.type'\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE, })\n  public type: FsType\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue }\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filestorage.html":{"url":"classes/Filestorage.html","title":"class - Filestorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filestorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_schemas/filestorage.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String, enum: FsTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_schemas/filestorage.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum';\n\n@Schema({\n  collection: 'filestorage',\n  versionKey: false,\n})\nexport class Filestorage extends AbstractSchema {\n  @Prop({\n    required: true,\n    type: String,\n    enum: FsTypeList,\n  })\n  public type: FsType\n\n  @Prop({\n    type: String,\n  })\n  public mime?: string\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  public namespace: string\n\n  @Prop({\n    required: true,\n    type: String,\n    //TODO: check file path ..?\n  })\n  public path: string\n\n  @Prop({\n    required: false,\n    type: String,\n  })\n  public comments?: string\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public hidden: boolean\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public tags?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  public acls?: { [key: string]: any } // eslint-disable-line\n\n  @Prop({\n    required: false,\n    type: Object,\n  })\n  // eslint-disable-next-line\n  public customFields?: { [key: string]: any }\n}\n\nexport const FilestorageSchema = SchemaFactory.createForClass(Filestorage).index({ namespace: 1, path: 1 }, { unique: true })\n\nFilestorageSchema.virtual('filename').get(function (this: Filestorage): string {\n  return this.path.split('/').pop()\n})\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilestorageController.html":{"url":"controllers/FilestorageController.html","title":"controller - FilestorageController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilestorageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/filestorage.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                filestorage\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPath\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                readPathRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                readRawData\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FilestorageCreateDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseInterceptors(undefined)@ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        readPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPath(namespace: string, path: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path')@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        readPathRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readPathRawData(res: Response, namespace: string, path: string, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('path/raw')@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                namespace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        readRawData\n                        \n                    \n                \n            \n            \n                \n                        \n                    readRawData(res: Response, _id: Types.ObjectId, mime: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})/raw')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions, hiddenQuery: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hiddenQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FilestorageUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/filestorage/filestorage.controller.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FilestorageUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, ParseBoolPipe, ParseFilePipe, Patch, Post, Query, Res, UploadedFile, UseInterceptors } from '@nestjs/common'\nimport { FileInterceptor } from '@nestjs/platform-express'\nimport { ApiBody, ApiConsumes, ApiOperation, ApiParam, ApiProduces, ApiTags, getSchemaPath } from '@nestjs/swagger'\nimport { FilterOptions, FilterSchema, ObjectIdValidationPipe, SearchFilterOptions, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools'\nimport { Response } from 'express'\nimport { Types } from 'mongoose'\nimport { AbstractController } from '~/_common/abstracts/abstract.controller'\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator'\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator'\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator'\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator'\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator'\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper'\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type'\nimport { FilestorageCreateDto, FilestorageDto, FilestorageUpdateDto, FileUploadDto } from './_dto/filestorage.dto'\nimport { TransformersFilestorageService } from './_services/transformers-filestorage.service'\nimport { FilestorageService } from './filestorage.service'\nimport { ApiFileUploadDecorator } from '~/_common/decorators/api-file-upload.decorator'\n\n@ApiTags('core/filestorage')\n@Controller('filestorage')\nexport class FilestorageController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    type: 1,\n    namespace: 1,\n    path: 1,\n    hidden: 1,\n  }\n\n  public constructor(private readonly _service: FilestorageService, private readonly transformerService: TransformersFilestorageService) {\n    super()\n  }\n\n  @Post()\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiFileUploadDecorator(FileUploadDto, FilestorageCreateDto, FilestorageDto)\n  public async create(\n    @Res() res: Response,\n    @Body() body: FilestorageCreateDto,\n    @UploadedFile(new ParseFilePipe({ fileIsRequired: false })) file?: Express.Multer.File,\n  ): Promise {\n    const data = await this._service.create({ ...body, file })\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    })\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FilestorageDto, FilestorageController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n    @Query('hidden') hiddenQuery: string,\n  ): Promise {\n    const hidden = /true|on|yes|1/i.test(hiddenQuery);\n    const extraSearch = { hidden: { $ne: true } }\n    if (hidden) delete extraSearch['hidden']\n\n    const [data, total] = await this._service.findAndCount({\n      ...extraSearch,\n      ...searchFilterSchema,\n    }, FilestorageController.projection, searchFilterOptions)\n\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    })\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response): Promise {\n    const data = await this._service.findById(_id)\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    })\n  }\n\n  @Get('path')\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readPath(@Query('namespace') namespace: string, @Query('path') path: string, @Res() res: Response): Promise {\n    const data = await this._service.findOne({ namespace, path })\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    })\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})/raw')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readRawData(@Res() res: Response, @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Query('mime') mime: string = ''): Promise {\n    const [data, stream, parent] = await this._service.findByIdWithRawData(_id)\n    await this.transformerService.transform(mime, res, data, stream, parent)\n  }\n\n  @Get('path/raw')\n  @ApiReadResponseDecorator(FilestorageDto)\n  public async readPathRawData(@Res() res: Response, @Query('namespace') namespace: string, @Query('path') path: string, @Query('mime') mime: string = ''): Promise {\n    const [data, stream, parent] = await this._service.findOneWithRawData({ namespace, path })\n    await this.transformerService.transform(mime, res, data, stream, parent)\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FilestorageUpdateDto, FilestorageDto)\n  public async update(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Body() body: FilestorageUpdateDto, @Res() res: Response): Promise {\n    const data = await this._service.update(_id, body)\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    })\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FilestorageDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response): Promise {\n    const data = await this._service.delete(_id)\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageCreateDto.html":{"url":"classes/FilestorageCreateDto.html","title":"class - FilestorageCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger'\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto'\nimport { IsMongoId, IsString, IsEnum, IsOptional, IsObject, IsBoolean, IsNotEmpty, IsMimeType, Matches } from 'class-validator'\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum'\nimport { MixedValue } from '~/_common/types/mixed-value.type'\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE, })\n  public type: FsType\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue }\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageDto.html":{"url":"classes/FilestorageDto.html","title":"class - FilestorageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FilestorageCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                acls\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                comments\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                linkedTo\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                mime\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                namespace\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                path\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_dto/filestorage.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        acls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@ApiProperty({type: Boolean, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        linkedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:32\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        mime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMimeType()@ApiProperty({type: String, required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        namespace\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({type: String, default: '/'})@Matches(/^\\/(\\.?[^\\/\\0]+\\/?)+$/, {message: 'Path must be a valid path'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsObject()@ApiProperty({type: String, required: false, nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FsType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FsTypeList)@IsNotEmpty()@ApiProperty({enum: FsTypeList, default: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FilestorageCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FilestorageCreateDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger'\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto'\nimport { IsMongoId, IsString, IsEnum, IsOptional, IsObject, IsBoolean, IsNotEmpty, IsMimeType, Matches } from 'class-validator'\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum'\nimport { MixedValue } from '~/_common/types/mixed-value.type'\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE, })\n  public type: FsType\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue }\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilestorageModule.html":{"url":"modules/FilestorageModule.html","title":"module - FilestorageModule","body":"\n                   \n\n\n\n\n    Modules\n    FilestorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\n\nFilestorageService \n\nFilestorageService \n\n\n\nFilestorageModule\n\nFilestorageModule\n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/filestorage/filestorage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilestorageService\n                        \n                        \n                            TransformersFilestorageService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilestorageController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FilestorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Filestorage, FilestorageSchema } from './_schemas/filestorage.schema'\nimport { FilestorageService } from './filestorage.service'\nimport { FilestorageController } from './filestorage.controller'\nimport { TransformersFilestorageService } from '~/core/filestorage/_services/transformers-filestorage.service'\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Filestorage.name,\n        useFactory: () => FilestorageSchema,\n      },\n    ]),\n  ],\n  providers: [FilestorageService, TransformersFilestorageService],\n  controllers: [FilestorageController],\n  exports: [FilestorageService],\n})\nexport class FilestorageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FilestorageUpdateDto.html":{"url":"classes/FilestorageUpdateDto.html","title":"class - FilestorageUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FilestorageUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_dto/filestorage.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(FilestorageCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger'\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto'\nimport { IsMongoId, IsString, IsEnum, IsOptional, IsObject, IsBoolean, IsNotEmpty, IsMimeType, Matches } from 'class-validator'\nimport { FsType, FsTypeList } from '~/core/filestorage/_enum/fs-type.enum'\nimport { MixedValue } from '~/_common/types/mixed-value.type'\n\nexport class FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  public file: string\n}\n\nexport class FilestorageCreateDto extends CustomFieldsDto {\n  @IsEnum(FsTypeList)\n  @IsNotEmpty()\n  @ApiProperty({ enum: FsTypeList, default: FsType.FILE, })\n  public type: FsType\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, required: true })\n  public namespace: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ type: String, default: '/' })\n  @Matches(/^\\/(\\.?[^\\/\\0]+\\/?)+$/, { message: 'Path must be a valid path' })\n  public path: string\n\n  @IsOptional()\n  @IsMongoId()\n  @ApiProperty({ type: String, required: false })\n  public linkedTo?: string\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ type: String, required: false })\n  public comments?: string\n\n  @IsOptional()\n  @IsMimeType()\n  @ApiProperty({ type: String, required: false })\n  public mime?: string\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiProperty({ type: Boolean, required: false })\n  public hidden?: boolean\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public tags?: { [key: string]: MixedValue }\n\n  @IsOptional()\n  @IsObject()\n  @ApiProperty({ type: String, required: false, nullable: true })\n  public acls?: { [key: string]: any } // eslint-disable-line\n}\n\nexport class FilestorageDto extends FilestorageCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string\n}\n\nexport class FilestorageUpdateDto extends PartialType(FilestorageCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@the-software-compagny/nestjs_module_restools';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubUpdate.html":{"url":"interfaces/GithubUpdate.html","title":"interface - GithubUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            commit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            node_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tarball_url\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipball_url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commit:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tarball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tarball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipball_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipball_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BadRequestException, Controller, Get, Param, Query, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Public } from './_common/decorators/public.decorator';\nimport { ApiBearerAuth, ApiOperation, ApiQuery, ApiResponse } from '@nestjs/swagger';\nimport LRU from 'lru-cache';\n\ninterface GithubUpdate {\n  name?: string;\n  commit?: {\n    sha?: string;\n    url?: string;\n  };\n  zipball_url?: string;\n  tarball_url?: string;\n  node_id?: string;\n}\n\nconst storage = new LRU({ ttl: 60 * 60 * 1000 })\n\n@Public()\n@Controller()\n@ApiBearerAuth()\n// @see https://stackoverflow.com/questions/67314808/how-to-disable-security-for-a-specific-controller-method-in-nestjs-swagger\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Get API infos' })\n  @ApiResponse({ status: 200, description: 'Return API infos' })\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n\n  @ApiQuery({ name: 'current', required: false })\n  @Get('/get-update/:project(sesame-orchestrator|sesame-daemon|sesame-app-manager)')\n  public async update(\n    @Res() res: Response,\n    @Param('project') project?: string,\n    @Query('current') current?: string,\n  ): Promise {\n    let data: GithubUpdate[] | object = {}\n    // console.log('this.storage', storage.get(project))\n    if (storage.has(project)) {\n      this.logger.log(`Fetching ${project} tags from cache`)\n      data = storage.get(project) as GithubUpdate[] | object\n    } else {\n      this.logger.log(`Fetching ${project} tags`)\n      const update = await fetch(`https://api.github.com/repos/Libertech-FR/${project}/tags`, {\n        signal: AbortSignal.timeout(1000),\n      })\n      data = await update.json()\n      storage.set(project, data)\n      // console.log('this.storage', storage.get(project))\n    }\n    if (!Array.isArray(data)) {\n      throw new BadRequestException(`Invalid data from Github `)\n    }\n    const lastVersion = data[0].name.replace(/^v/, '')\n    const pkgInfo = this.appService.getInfo()\n    const currentVersion = current || pkgInfo.version\n\n    if (project !== pkgInfo.name || current) {\n      if (!/[0-9]+\\.[0-9]+\\.[0-9]+/.test(current)) {\n        throw new BadRequestException('Invalid version for current parameter')\n      }\n    }\n\n    const [currentMajor, currentMinor, currentPatch] = lastVersion.split('.').map(Number)\n    const [lastMajor, lastMinor, lastPatch] = currentVersion.split('.').map(Number)\n    const updateAvailable = currentMajor > lastMajor || currentMinor > lastMinor || currentPatch > lastPatch\n\n    return res.json({\n      data: {\n        project,\n        updateAvailable,\n        currentVersion,\n        lastVersion,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                additionalFields\n                            \n                            \n                                    \n                                fingerprint\n                            \n                            \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    Optional\n                                lastSync\n                            \n                            \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fingerprint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        lastSync\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  lifecycle: IdentityLifecycle;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  additionalFields: AdditionalFieldsPart;\n\n  @Prop({ type: String })\n  fingerprint: string;\n\n  @Prop({ type: Date })\n  lastSync?: Date;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesController.html":{"url":"controllers/IdentitiesController.html","title":"controller - IdentitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateState\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                updateStateMany\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('count')@ApiOperation({summary: 'Compte le nombre d'identitées en fonctions des filtres fournis'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:267\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:212\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})/state')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        updateStateMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStateMany(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('state')@ApiOperation({summary: 'Met à jour l'état d'une ou plusieurs  en masse'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:248\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesUpsertDto, filtersQuery: literal type[], errorOnNotFound: string, upsert: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {operationOptions: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpsertDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filtersQuery\n                                            \n                                                        literal type[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                        \n                                        \n                                                errorOnNotFound\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'false'\n                                            \n\n                                        \n                                        \n                                                upsert\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'true'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Query,\n  Res\n} from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiTags } from '@nestjs/swagger';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Response } from 'express';\nimport { Document, Types, isValidObjectId } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { IdentitiesCreateDto, IdentitiesDto, IdentitiesUpdateDto, IdentitiesUpsertDto } from './_dto/identities.dto';\nimport { IdentityState } from './_enums/states.enum';\nimport { Identities } from './_schemas/identities.schema';\nimport { IdentitiesService } from './identities.service';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\n// import { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n// @UseFilters(new IdentitiesValidationFilter())\n@ApiTags('management/identities')\n@Controller('identities')\nexport class IdentitiesController extends AbstractController {\n  constructor(\n    protected readonly _service: IdentitiesService,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as Identities).state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesUpsertDto, IdentitiesDto, {\n    operationOptions: {\n      summary: 'Importe ou met à jour une  en fonction des filtres fournis',\n    },\n  })\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesUpsertDto,\n    @Query('filters')\n    filtersQuery: {\n      [key: string]: string;\n    }[] = [],\n    @Query('errorOnNotFound') errorOnNotFound: string = 'false',\n    @Query('upsert') upsert: string = 'true',\n  ): Promise;\n      message?: string;\n      validations?: MixedValue;\n    }>\n  > {\n    const filters = {};\n    if (filtersQuery.length === 0) {\n      throw new BadRequestException('Missing filters array');\n    }\n    for (const [key, filter] of Object.entries(filtersQuery)) {\n      filters[key] = isValidObjectId(filter) ? new Types.ObjectId(`${filter}`) : filter;\n    }\n\n    //TODO: check if the filters are valid and if the body is equal to filters\n\n    const [code, data] = await this._service.upsertWithFingerprint(filters, body, {\n      errorOnNotFound: /true|on|yes|1/i.test(errorOnNotFound),\n      upsert: /true|on|yes|1/i.test(upsert),\n    });\n\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      return res.status(HttpStatus.ACCEPTED).json({\n        statusCode: HttpStatus.ACCEPTED,\n        message: 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.',\n        data,\n      });\n    }\n\n    return res.status(code).json({\n      statusCode: code,\n      message: code === HttpStatus.OK ? 'Identitée mise à jour avec succès.' : 'Identitée créée avec succès.',\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise;\n        total?: number;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      IdentitiesController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.findById(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Get('count')\n  @ApiOperation({ summary: 'Compte le nombre d\\'identitées en fonctions des filtres fournis' })\n  public async count(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise> {\n    const total = await this._service.count(searchFilterSchema, searchFilterOptions);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: total,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})/state')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async updateState(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const identity = await this._service.findById(_id);\n    if (!identity) {\n      throw new BadRequestException('Identity not found');\n    }\n    if (identity.state !== IdentityState.TO_VALIDATE) {\n      throw new BadRequestException(\"La validation de l'identité est déjà complétée.\");\n    }\n    const data = await this._service.updateState(_id, body.state);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch('state')\n  @ApiOperation({ summary: 'Met à jour l\\'état d\\'une ou plusieurs  en masse' })\n  public async updateStateMany(\n    @Res() res: Response,\n    @Body()\n    body: {\n      originState: IdentityState;\n      targetState: IdentityState;\n      ids: Types.ObjectId[];\n    },\n  ): Promise {\n    const data = await this._service.updateStateMany(body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesJsonFormsController.html":{"url":"controllers/IdentitiesJsonFormsController.html","title":"controller - IdentitiesJsonFormsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesJsonFormsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/jsonforms\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                generate\n                            \n                            \n                                    \n                                    \n                                    Async\n                                generateAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Async\n                                searchAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(res: Response, schema: string | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate')@ApiOperation({summary: 'Génère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                schema\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generateAll')@ApiOperation({summary: 'Génère tous les JSON Forms liés aux schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema, mode: \"create\" | \"update\")\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')@ApiOperation({summary: 'Récupère un JSON Forms d'un schéma personnalisé'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mode\n                                            \n                                                        \"create\" | \"update\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les JSON Forms de schémas personnalisés'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Query, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { Response } from 'express';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger'\n\n@ApiTags('management/identities/jsonforms')\n@Controller('management/identities/jsonforms')\nexport class IdentitiesJsonFormsController extends AbstractController {\n  constructor(private readonly _service: IdentitiesJsonformsService) {\n    super();\n  }\n\n  @Post('generateAll')\n  @ApiOperation({ summary: 'Génère tous les JSON Forms liés aux schémas personnalisés' })\n  async generateAll(@Res() res: Response): Promise {\n    const result = await this._service.generateAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Post('generate')\n  @ApiOperation({ summary: 'Génère un JSON Forms d\\'un schéma personnalisé' })\n  async generate(@Res() res: Response, @Body('schema') schema: string | null = null): Promise {\n    const result = await this._service.generate({ schema, path: './configs/identities/jsonforms' });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Liste les JSON Forms de schémas personnalisés' })\n  async searchAll(@Res() res: Response): Promise {\n    const result = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  @ApiOperation({ summary: 'Récupère un JSON Forms d\\'un schéma personnalisé' })\n  async search(@Res() res: Response, @Param('schema') schema, @Query('mode') mode: 'create' | 'update'): Promise {\n    const result = await this._service.findOne(schema, { mode });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesJsonformsModule.html":{"url":"modules/IdentitiesJsonformsModule.html","title":"module - IdentitiesJsonformsModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesJsonformsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesJsonFormsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesJsonformsService } from './identities.jsonforms.service';\nimport { IdentitiesJsonFormsController } from './identities.jsonforms.controller';\n\n@Module({\n  controllers: [IdentitiesJsonFormsController],\n  providers: [IdentitiesJsonformsService],\n  exports: [IdentitiesJsonformsService],\n})\nexport class IdentitiesJsonformsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesJsonformsService.html":{"url":"injectables/IdentitiesJsonformsService.html","title":"injectable - IdentitiesJsonformsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesJsonformsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/jsonforms/identities.jsonforms.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                generate\n                            \n                            \n                                    Async\n                                generateAll\n                            \n                            \n                                    Private\n                                resolveJsonFormPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema, options?: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generate\n                        \n                    \n                \n            \n            \n                \n                        \n                    generate(undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveJsonFormPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveJsonFormPath(schema: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/jsonforms/identities.jsonforms.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { parse, stringify } from 'yaml';\nimport { existsSync, readFileSync, writeFileSync, readdirSync } from 'fs';\nimport Ajv from 'ajv';\nimport { ValidationConfigException } from '~/_common/errors/ValidationException';\n\n@Injectable()\nexport class IdentitiesJsonformsService extends AbstractService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n\n  constructor() {\n    super();\n    //this.validateSchema = this.ajv.compile(validSchema);\n  }\n\n  private resolveJsonFormPath(schema: string): string | null {\n    if (!schema.endsWith('.yml')) schema += '.yml';\n    const hardConfigPath = `./src/management/identities/jsonforms/_config/${schema}`;\n    const dynamicConfigPath = `./configs/identities/jsonforms/${schema}`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  async generate({ schema, path }): Promise {\n    if (schema) {\n      console.log(`Generating jsonforms for schema: ${schema}`);\n      if (!schema.endsWith('.yml')) schema += '.yml';\n      const filePath = `${path}/${schema}`;\n      console.log(`File path: ${filePath}`);\n      if (!existsSync(filePath)) {\n        console.log(`File not found: ${filePath}`);\n        const message = `File not found: ${filePath}`;\n        throw new ValidationConfigException({ message });\n      }\n\n      const jsonSchema = parse(readFileSync(filePath, 'utf-8'));\n\n      // const jsonForm = {\n      //   type: 'VerticalLayout',\n      //   elements: Object.keys(jsonSchema.properties).map((key) => {\n      //     return {\n      //       type: 'Control',\n      //       label: key,\n      //       scope: `#/properties/${key}`,\n      //       options: {\n      //         required: jsonSchema.required && jsonSchema.required.includes(key),\n      //       },\n      //     };\n      //   }),\n      // };\n\n      const jsonForm = {\n        type: 'Group',\n        label: schema,\n        elements: Object.keys(jsonSchema.properties)\n          .reduce((acc, key, index) => {\n            const groupIndex = Math.floor(index / 3); // Determine the current group based on the index\n            if (!acc[groupIndex]) {\n              acc[groupIndex] = {\n                // Initialize a new HorizontalLayout group if it doesn't exist\n                type: 'HorizontalLayout',\n                elements: [],\n              };\n            }\n\n            acc[groupIndex].elements.push({\n              // Add the current element to its corresponding group\n              type: 'Control',\n              label: key,\n              scope: `#/properties/${key}`,\n              options: {\n                required: jsonSchema.required && jsonSchema.required.includes(key),\n                showUnfocusedDescription: false,\n              },\n            });\n\n            return acc;\n          }, [])\n          .map((group) => group), // Flatten the structure\n      };\n      if (!schema.endsWith('.ui.yml')) schema = schema.replace('.yml', '.ui.yml');\n      const jsonFormPath = `${path.replace('validations', 'jsonforms')}/${schema}`;\n      console.log(`Writing jsonform to: ${jsonFormPath}`);\n      writeFileSync(`${jsonFormPath}`, stringify(jsonForm));\n      return jsonForm;\n    }\n  }\n\n  async generateAll(): Promise {\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ schema: file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        schema: file,\n        path: dynamicConfigPath,\n      }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    console.log('Generating jsonforms for all schemas');\n    console.log('Hard config files:', hardConfigFiles);\n    console.log('Dynamic config files:', dynamicConfigFiles);\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles].filter((file) => file.schema.endsWith('.yml'));\n    for (const file of files) {\n      this.generate(file);\n    }\n    return files.length;\n  }\n\n  async findAll(): Promise {\n    const hardConfigPath = './src/management/identities/jsonforms/_config';\n    const dynamicConfigPath = './configs/identities/jsonforms';\n\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({ file, path: hardConfigPath }));\n    } catch (error) {\n      console.log(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({ file, path: dynamicConfigPath }));\n    } catch (error) {\n      console.log(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n    const result = [];\n    for (const fileObj of files) {\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.ui.yml', '');\n      result.push({ [key]: data });\n    }\n    return [result, files.length];\n  }\n\n  public async findOne(schema, options?: { mode: string }): Promise {\n    options = {\n      mode: 'create',\n      ...options,\n    };\n\n    if (schema.endsWith('.yml')) schema = schema.replace('.yml', '');\n\n    let filePath = this.resolveJsonFormPath(schema + '.' + options?.mode + '.ui')\n\n    if (!filePath) {\n      filePath = this.resolveJsonFormPath(schema + '.ui');\n    }\n\n    if (!filePath) {\n      throw new ValidationConfigException({ message: `File not found: ${schema}.ui.yml` });\n    }\n\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\n\nIdentitiesService \n\nIdentitiesService \n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesService  -->\n\nIdentitiesModule->IdentitiesService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesJsonformsService\n                        \n                        \n                            IdentitiesService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Identities, IdentitiesSchema } from './_schemas/identities.schema';\nimport { IdentitiesService } from './identities.service';\nimport { IdentitiesController } from './identities.controller';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentitiesJsonformsService } from './jsonforms/identities.jsonforms.service';\nimport { IdentitiesJsonformsModule } from './jsonforms/identities.jsonforms.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule, IdentitiesJsonformsModule],\n        inject: [IdentitiesValidationService, IdentitiesJsonformsService],\n        useFactory: () => IdentitiesSchema,\n      },\n    ]),\n  ],\n  providers: [\n    IdentitiesService,\n    IdentitiesValidationService,\n    {\n      provide: APP_FILTER,\n      useClass: IdentitiesValidationFilter,\n    },\n    IdentitiesJsonformsService,\n  ],\n  controllers: [IdentitiesController],\n  exports: [IdentitiesService],\n})\nexport class IdentitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpsertDto.html":{"url":"classes/IdentitiesUpsertDto.html","title":"class - IdentitiesUpsertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpsertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesUpdateDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                $setOnInsert\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        $setOnInsert\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\n\nexport class IdentitiesCreateDto extends MetadataDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsOptional()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto { }\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) { }\n\nexport class IdentitiesUpsertDto extends PartialType(IdentitiesUpdateDto) {\n  $setOnInsert?: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    Async\n                                searchAll\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, schema)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':schema')@ApiOperation({summary: 'Récupère un schéma personnalisé d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        searchAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Liste les schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Effectue la validation des schémas personnalisés d'identités'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management/identities/validation')\n@Controller('management/identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Effectue la validation des schémas personnalisés d\\'identités' })\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get()\n  @ApiOperation({ summary: 'Liste les schémas personnalisés d\\'identités' })\n  async searchAll(@Res() res: Response): Promise {\n    const [result] = await this._service.findAll();\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n\n  @Get(':schema')\n  @ApiOperation({ summary: 'Récupère un schéma personnalisé d\\'identités' })\n  async search(@Res() res: Response, @Param('schema') schema): Promise {\n    const result = await this._service.findOne(schema);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data: result,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                resolveConfigPath\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                schema\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolveConfigPath\n                        \n                    \n                \n            \n            \n                \n                        \n                    resolveConfigPath(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart | additionalFieldsPartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        AdditionalFieldsPart | additionalFieldsPartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync, readdirSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport { buildYup } from 'schema-to-yup';\nimport ajvErrors from 'ajv-errors';\nimport validSchema from './_config/validSchema';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { additionalFieldsPartDto } from '../_dto/_parts/additionalFields.dto';\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  constructor() {\n    ajvErrors(this.ajv);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger();\n  }\n\n  private resolveConfigPath(key: string): string | null {\n    const hardConfigPath = `./src/management/identities/validations/_config/${key}.yml`;\n    const dynamicConfigPath = `./configs/identities/validations/${key}.yml`;\n    if (existsSync(dynamicConfigPath)) {\n      return dynamicConfigPath;\n    }\n    if (existsSync(hardConfigPath)) {\n      return hardConfigPath;\n    }\n    return null;\n  }\n\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  async validate(data: AdditionalFieldsPart | additionalFieldsPartDto): Promise {\n    if (!data.objectClasses) {\n      data.objectClasses = [];\n    }\n    if (!data.attributes) {\n      data.attributes = {};\n    }\n    data.validations = {};\n\n    const objectClasses = data.objectClasses || [];\n    const attributes = data.attributes || {};\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = this.resolveConfigPath(key);\n      if (!existsSync(path)) {\n        validations[key] = `Fichier de config '${key}.yml' introuvable`;\n        reject = true;\n        continue;\n      }\n\n      // Check for invalid schema\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations[key] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        reject = true;\n        continue;\n      }\n    }\n\n    if (reject) {\n      throw new ValidationConfigException({ validations });\n    }\n\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key]);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any): Promise {\n    const path = this.resolveConfigPath(key);\n    const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n\n    const yupSchema = buildYup(schema, { noSortEdges: true });\n    try {\n      await yupSchema.validate(attribute, { strict: true, abortEarly: false });\n      return null;\n    } catch (error) {\n      return error.inner.reduce((acc, err) => {\n        acc[err.path] = err.message;\n        return acc;\n      }, {});\n    }\n  }\n\n  async findAll(): Promise {\n    this.logger.debug(['findAll', JSON.stringify(Object.values(arguments))].join(' '));\n    const hardConfigPath = './src/management/identities/validations/_config';\n    const dynamicConfigPath = './configs/identities/validations';\n    // Retrieve files from each directory and tag them with their source\n    let hardConfigFiles = [];\n    try {\n      hardConfigFiles = readdirSync(hardConfigPath).map((file) => ({\n        file,\n        path: hardConfigPath,\n        source: 'hardConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading hard config files: ${error.message}`);\n    }\n\n    let dynamicConfigFiles = [];\n    try {\n      dynamicConfigFiles = readdirSync(dynamicConfigPath).map((file) => ({\n        file,\n        path: dynamicConfigPath,\n        source: 'dynamicConfig',\n      }));\n    } catch (error) {\n      this.logger.error(`Error reading dynamic config files: ${error.message}`);\n    }\n\n    // Combine the file arrays\n    const files = [...hardConfigFiles, ...dynamicConfigFiles];\n\n    const result = [];\n    for (const fileObj of files) {\n      if (/.yml$/.test(fileObj.file) === false) continue;\n\n      const filePath = `${fileObj.path}/${fileObj.file}`;\n      const data = parse(readFileSync(filePath, 'utf-8'));\n      const key = fileObj.file.replace('.yml', '');\n      result.push({ [key]: data, source: fileObj.source, name: key });\n    }\n    return [result, files.length];\n  }\n\n  async findOne(schema): Promise {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '));\n    const filePath = this.resolveConfigPath(schema);\n    if (!existsSync(filePath)) {\n      const message = `File not found: ${filePath}`;\n      throw new ValidationConfigException({ message });\n    }\n\n    return parse(readFileSync(filePath, 'utf-8'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitAccountDto.html":{"url":"classes/InitAccountDto.html","title":"class - InitAccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitAccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-account.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'uid', description: 'paul.smith'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-account.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class InitAccountDto {\n\n  @ApiProperty({ example: 'uid', description: 'paul.smith' })\n  @IsString()\n  uid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitResetDto.html":{"url":"classes/InitResetDto.html","title":"class - InitResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/init-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: 0, description: '0 = send by mail, 1 = send by SMS'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'paul.bismuth', description: 'User id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/init-reset.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {IsNumber, IsString} from 'class-validator';\n\nexport class InitResetDto {\n  @IsString()\n  @ApiProperty({ example: 'paul.bismuth', description: 'User id' })\n  uid: string\n\n  @IsNumber()\n  @ApiProperty({ example: 0, description: '0 = send by mail, 1 = send by SMS' })\n  type: number\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'error', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.error(...[message, ...optionalParams]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'warn', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.warn(...[message, ...optionalParams]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'log', message, context: typeof lastParam === 'string' ? lastParam : null }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.log(...[message, ...optionalParams]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'debug', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.debug(...[message, ...optionalParams]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'verbose', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.verbose(...[message, ...optionalParams]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const lastParam = optionalParams[optionalParams.length - 1];\n\n    if (options instanceof Object && options.target) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb(\n          { level: 'fatal', message, context: typeof lastParam === 'string' ? lastParam : null },\n          options,\n        );\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n\n    super.fatal(...[message, ...optionalParams]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.fatal('Failed to log to the database', e, this.constructor.name);\n      super[payload.level](payload.message, ...payload.context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Jobs.html":{"url":"classes/Jobs.html","title":"class - Jobs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Jobs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_schemas/jobs.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                concernedTo\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                finishedAt\n                            \n                            \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                params\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                processedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                result\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: ConcernedToPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        processedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: JobState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_schemas/jobs.schema.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { JobState } from '../_enums/state.enum';\nimport { ConcernedToPart, ConcernedToPartSchema } from './_parts/concerned-to.parts.schema';\n\nexport type JobsDocument = Jobs & Document;\n\n@Schema({ versionKey: false })\nexport class Jobs extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public jobId: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public action: string;\n\n  @Prop({\n    type: ConcernedToPartSchema,\n  })\n  public concernedTo?: ConcernedToPart;\n\n  @Prop({ type: Types.ObjectId })\n  public task?: Types.ObjectId;\n\n  @Prop({ type: String })\n  public comment?: string;\n\n  @Prop({ type: Object, default: {} })\n  public params?: object;\n\n  @Prop({ type: Object, default: {} })\n  public result?: object;\n\n  @Prop({ type: Date })\n  public processedAt?: Date;\n\n  @Prop({ type: Date })\n  public finishedAt?: Date;\n\n  @Prop({ type: Number, enum: JobState, default: JobState.CREATED })\n  state: JobState;\n}\n\nexport const JobsSchema = SchemaFactory.createForClass(Jobs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(JobsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, req: Request, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/jobs/jobs.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpStatus, Param, Req, Res } from '@nestjs/common';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { JobsDto } from './_dto/jobs.dto';\nimport { JobsService } from './jobs.service';\n\n@ApiTags('core/jobs')\n@Controller('jobs')\nexport class JobsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    jobId: 1,\n    action: 1,\n    concernedTo: 1,\n    metadata: 1,\n    params: 1,\n    result: 1,\n  };\n\n  public constructor(private readonly _service: JobsService) {\n    super();\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(JobsDto, JobsController.projection))\n  public async search(\n    @Res() res: Response,\n    @Req() req: Request,\n    @SearchFilterSchema({ unsafe: true }) searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    // console.log('req', req.query)\n\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      JobsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(JobsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsCreateDto.html":{"url":"classes/JobsCreateDto.html","title":"class - JobsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsDto.html":{"url":"classes/JobsDto.html","title":"class - JobsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            JobsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                action\n                            \n                            \n                                    \n                                    \n                                    Public\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                concernedTo\n                            \n                            \n                                    \n                                    \n                                    Public\n                                jobId\n                            \n                            \n                                    \n                                    \n                                    Public\n                                params\n                            \n                            \n                                    \n                                    \n                                    Public\n                                result\n                            \n                            \n                                    \n                                    \n                                    Public\n                                task\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/jobs/_dto/jobs.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        concernedTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConcernedToPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: ConcernedToPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         JobsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         JobsCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService \n\nJobsService \n\n\n\nJobsModule\n\nJobsModule\n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Jobs, JobsSchema } from './_schemas/jobs.schema';\nimport { JobsController } from './jobs.controller';\nimport { JobsService } from './jobs.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Jobs.name,\n        useFactory: () => JobsSchema,\n      },\n    ]),\n  ],\n  providers: [JobsService],\n  controllers: [JobsController],\n  exports: [JobsService],\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/jobs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Jobs } from './_schemas/jobs.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JobsService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Jobs.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobsUpdateDto.html":{"url":"classes/JobsUpdateDto.html","title":"class - JobsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/jobs/_dto/jobs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(JobsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsMongoId, IsNotEmpty, IsObject, IsString, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\nimport { ConcernedToPartDTO } from './_parts/concerned-to.part.dto';\n\nexport class JobsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @ApiProperty()\n  public jobId: string;\n\n  @IsString()\n  @ApiProperty()\n  public action: string;\n\n  @ValidateNested()\n  @Type(() => ConcernedToPartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: ConcernedToPartDTO })\n  public concernedTo: ConcernedToPartDTO;\n\n  @IsMongoId()\n  @ApiProperty()\n  public task: Types.ObjectId;\n\n  @IsString()\n  @ApiProperty()\n  public comment: string;\n\n  @IsObject()\n  @ApiProperty()\n  public params: object;\n\n  @IsObject()\n  @ApiProperty()\n  public result: object;\n}\n\nexport class JobsDto extends JobsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class JobsUpdateDto extends PartialType(JobsCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    Logger.verbose(`Atempt to authenticate with JTI: `, JwtStrategy.name);\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public name: string;\n\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n    default: ['0.0.0.0/0'],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCommand.html":{"url":"classes/KeyringsCommand.html","title":"class - KeyringsCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@the-software-compagny/nestjs_module_restools';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core/keyrings')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    token: 0,\n    // allowedNetworks: 1,\n    // suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      token: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateCommand.html":{"url":"classes/KeyringsCreateCommand.html","title":"class - KeyringsCreateCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, inquirer: InquirerService, keyringsService: KeyringsService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/cli/keyrings.command.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        inquirer\n                                                  \n                                                        \n                                                                    InquirerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyringsService\n                                                  \n                                                        \n                                                                        KeyringsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run(inputs: string[], options: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputs\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateQuestions.html":{"url":"classes/KeyringsCreateQuestions.html","title":"class - KeyringsCreateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cli/keyrings.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                parseName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parseName\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseName(val: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Question({message: 'Name ?', name: 'name'})\n                \n            \n\n                    \n                        \n                            Defined in src/cli/keyrings.command.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                val\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Command, CommandRunner, InquirerService, Question, QuestionSet, SubCommand } from 'nest-commander';\nimport { ApiSession } from '~/_common/data/api-session';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { KeyringsCreateDto } from '~/core/keyrings/_dto/keyrings.dto';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\n\n@QuestionSet({ name: 'keyrings-create-questions' })\nexport class KeyringsCreateQuestions {\n  @Question({\n    message: 'Name ?',\n    name: 'name',\n  })\n  parseName(val: string) {\n    return val;\n  }\n}\n\n@SubCommand({ name: 'create' })\nexport class KeyringsCreateCommand extends CommandRunner {\n  public constructor(\n    protected moduleRef: ModuleRef,\n    private readonly inquirer: InquirerService,\n    private readonly keyringsService: KeyringsService,\n    private readonly authService: AuthService,\n  ) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {\n    const keyring = await this.inquirer.ask('keyrings-create-questions', undefined);\n    try {\n      const key = (await this.keyringsService.create(keyring)) as Keyrings;\n      // console.log('Keyring created successfully', key.toJSON());\n      const options = {\n        scopes: ['api'],\n      };\n      if (key.suspendedAt) {\n        options['expiresIn'] = key.suspendedAt.getTime() - Date.now();\n      } else {\n        options['expiresIn'] = '10y';\n      }\n      const { access_token } = await this.authService.createTokens(\n        new ApiSession({\n          _id: key._id.toString(),\n          username: key.name,\n          displayName: key.name,\n          token: key.token,\n        }),\n        false,\n        options,\n      );\n      console.log('Keyring created successfully', access_token);\n    } catch (error) {\n      console.error('Error creating keyring', error);\n    }\n  }\n}\n\n@Command({ name: 'keyrings', arguments: '', subCommands: [KeyringsCreateCommand] })\nexport class KeyringsCommand extends CommandRunner {\n  public constructor(protected moduleRef: ModuleRef) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async run(inputs: string[], options: any): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                name\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\n\nKeyringsService \n\nKeyringsService \n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n  exports: [KeyringsService],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: KeyringsCreateDto, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:15\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model, SaveOptions, Document } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { KeyringsCreateDto } from './_dto/keyrings.dto';\nimport { randomBytes } from 'node:crypto';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n\n  public async create(\n    data?: KeyringsCreateDto,\n    options?: SaveOptions,\n  ): Promise> {\n    const token = randomBytes(64).toString('hex');\n    return await super.create(\n      {\n        ...data,\n        token,\n      },\n      options,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.verbose(`Try to authenticate user : ${username}`, LocalStrategy.name);\n    const user = await this.auth.authenticateWithLocal(username, password);\n    // console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/_schemas/logger.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                concerned\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                context\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        concerned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:36\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:29\n                        \n                    \n\n            \n                \n                    Example :\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DataPartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/logger/_schemas/logger.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { DataPart, DataPartSchema } from './_parts/data.part.schema';\n\nexport const DEFAULT_CONTEXT = 'default';\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public level: string;\n\n  @Prop({\n    type: DataPartSchema,\n    required: true,\n    default: {},\n  })\n  public data: DataPart;\n\n  /**\n   * @description The context of the log message.\n   * @example 'identity'\n   */\n  @Prop({ type: String })\n  public context?: string;\n\n  /**\n   * @description The concerned document in collection of the log message.\n   * @example '5f7b1b3b7f7b1b3b7f7b1b3b'\n   */\n  @Prop({ type: String })\n  public concerned?: string;\n}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger).pre(\n  'save',\n  function (this: Logger, next: () => void): void {\n    this.context = this.context.toLocaleLowerCase() || DEFAULT_CONTEXT;\n    this.concerned = this.concerned.toLocaleLowerCase() || null;\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './_schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Logger } from './_schemas/logger.schema';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoggerService extends AbstractServiceSchema {\n  constructor(@InjectModel(Logger.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                        \n                            PasswdModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\nimport { PasswdModule } from './passwd/passwd.module';\n\n@Module({\n  imports: [IdentitiesModule, PasswdModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\nimport { StorageManagerConfig } from '@the-software-compagny/nestjs_module_factorydrive';\nimport { AmazonWebServicesS3StorageConfig } from '@the-software-compagny/nestjs_module_factorydrive-s3';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    nameQueue: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  factorydrive: {\n    options:\n    | StorageManagerConfig\n    | {\n      disks: {\n        [key: string]: {\n          driver: 's3'\n          config: AmazonWebServicesS3StorageConfig\n        }\n      }\n    }\n  }\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  mailer: {\n    host: string;\n    port: number;\n    sender: string;\n  };\n  sms: {\n    host: string,\n    systemId: string,\n    password: string,\n    sourceAddr: string,\n    regionCode: string\n  },\n  frontPwd: {\n    url: string;\n    identityMailAttribute: string;\n    identityMobileAttribute: string;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['SESAME_LOG_LEVEL'] || 'info',\n    nameQueue: process.env['SESAME_NAME_QUEUE'] || 'sesame',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['SESAME_REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['SESAME_MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  factorydrive: {\n    options: {\n      default: 'local',\n      disks: {\n        local: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage',\n          },\n        },\n        pictures: {\n          driver: 'local',\n          config: {\n            root: process.cwd() + '/storage/pictures',\n          },\n        },\n      },\n    },\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['SESAME_JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  swagger: {\n    path: '/swagger',\n    api: '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n  mailer: {\n    host: process.env['SESAME_SMTP_SERVER'],\n    port: parseInt(process.env['SESAME_SMTP_PORT']) || 25,\n    sender: process.env['SESAME_MDP_SENDER'] || 'noreply@mydomain.com'\n  },\n  frontPwd: {\n    url: process.env['SESAME_FRONT_MDP'],\n    identityMailAttribute: process.env['SESAME_RESET_PWD_MAIL'] || '',\n    identityMobileAttribute: process.env['SESAME_RESET_PWD_MOBILE'] || ''\n  },\n  sms: {\n    host: process.env['SESAME_SMPP_SERVER'] || '',\n    systemId: process.env['SESAME_SMPP_SYSTEMID'] || '',\n    password: process.env['SESAME_SMPP_PASSWORD'] || '',\n    sourceAddr: process.env['SESAME_SMPP_SOURCEADDR'] || '',\n    regionCode: process.env['SESAME_SMPP_REGIONCODE'] || 'FR'\n  }\n\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdController.html":{"url":"controllers/PasswdController.html","title":"controller - PasswdController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                init\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                initreset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                resetbycode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(body: ChangePasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')@ApiOperation({summary: 'Execute un job de changement de mot de passe sur le/les backends'})@ApiResponse({status: undefined, description: 'Mot de passe synchronisé sur le/les backends'})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la politique de mot de passe à appliquer'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init(body: InitAccountDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('init')@ApiOperation({summary: 'Initialise le compte envoi un jeton par mail à l'identité'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        initreset\n                        \n                    \n                \n            \n            \n                \n                        \n                    initreset(body: InitResetDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('initreset')@ApiOperation({summary: 'Demande l envoi de mail pour le reset'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            InitResetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(body: ResetPasswordDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset')@ApiOperation({summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        resetbycode\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetbycode(body: ResetByCodeDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('resetbycode')@ApiOperation({summary: 'reinitialise le mot de passe avec le code reçu'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/management/passwd/passwd.controller.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            ResetByCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Post, Body, Res, Logger, HttpStatus, Get} from '@nestjs/common';\nimport {PasswdService} from './passwd.service';\nimport {ApiTags, ApiOperation, ApiResponse} from '@nestjs/swagger';\nimport {Response} from 'express';\nimport {ChangePasswordDto} from './_dto/change-password.dto';\nimport {AskTokenDto} from './_dto/ask-token.dto';\nimport {VerifyTokenDto} from './_dto/verify-token.dto';\nimport {ResetPasswordDto} from './_dto/reset-password.dto';\nimport {omit} from \"radash\";\nimport {PasswdadmService} from \"~/settings/passwdadm/passwdadm.service\";\nimport {InitAccountDto} from \"~/management/passwd/_dto/init-account.dto\";\nimport {InitResetDto} from \"~/management/passwd/_dto/init-reset.dto\";\nimport crypto from \"crypto\";\nimport {ResetByCodeDto} from \"~/management/passwd/_dto/reset-by-code-dto\";\n\n@Controller('passwd')\n@ApiTags('management/passwd')\nexport class PasswdController {\n  private readonly logger = new Logger(PasswdController.name);\n\n  public constructor(private passwdService: PasswdService, private passwdadmService: PasswdadmService) {\n  }\n\n  @Post('change')\n  @ApiOperation({summary: 'Execute un job de changement de mot de passe sur le/les backends'})\n  @ApiResponse({status: HttpStatus.OK, description: 'Mot de passe synchronisé sur le/les backends'})\n  public async change(@Body() body: ChangePasswordDto, @Res() res: Response): Promise {\n    const debug = {}\n\n    const [_, data] = await this.passwdService.change(body);\n    this.logger.log(`Call passwd change for : ${body.uid}`);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed', status: 0,\n      ...debug,\n    });\n  }\n\n  /*\n  @Post('gettoken')\n  @ApiOperation({summary: 'Récupère un jeton de réinitialisation de mot de passe'})\n  @ApiResponse({status: HttpStatus.OK, description: 'Retourne un jeton de réinitialisation de mot de passe'})\n  public async gettoken(@Body() asktoken: AskTokenDto, @Res() res: Response): Promise {\n    this.logger.log('GetToken for : ' + asktoken.uid);\n    const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n    const token = await this.passwdService.askToken(asktoken, k, PasswdService.TOKEN_EXPIRATION);\n\n    return res.status(HttpStatus.OK).json({data: {token}});\n  }\n\n  @Post('verifytoken')\n  @ApiOperation({summary: 'Vérifie un jeton de réinitilisation de mot de passe'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async verifyToken(@Body() body: VerifyTokenDto, @Res() res: Response): Promise {\n    this.logger.log('Verify token : ' + body.token);\n    const data = await this.passwdService.decryptToken(body.token);\n\n    return res.status(HttpStatus.OK).json({data});\n  }\n*/\n  @Post('resetbycode')\n  @ApiOperation({summary: 'reinitialise le mot de passe avec le code reçu'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async resetbycode(@Body() body: ResetByCodeDto, @Res() res: Response): Promise {\n    const debug = {}\n    this.logger.log('Reset by code : ' + body.token + \" code : \" + body.code);\n    const [_, data] = await this.passwdService.resetByCode(body);\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      ...debug,\n    });\n  }\n\n  @Post('reset')\n  @ApiOperation({summary: 'Execute un job de réinitialisation de mot de passe sur le/les backends'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async reset(@Body() body: ResetPasswordDto, @Res() res: Response): Promise {\n    const debug = {}\n    const [_, data] = await this.passwdService.reset(body);\n\n    if (process.env.NODE_ENV === 'development') {\n      debug['_debug'] = data;\n    }\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Password changed',\n      ...debug,\n    });\n  }\n\n  @Get('getpolicies')\n  @ApiOperation({summary: 'Retourne la politique de mot de passe à appliquer'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async getPolicies(@Res() res: Response): Promise {\n    const data = await this.passwdadmService.getPolicies()\n    //const datax=omit(data.toObject,['_id'])\n    return res.status(HttpStatus.OK).json({data})\n  }\n\n  @Post('init')\n  @ApiOperation({summary: 'Initialise le compte envoi un jeton par mail à l\\'identité'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async init(@Body() body: InitAccountDto, @Res() res: Response): Promise {\n    const debug = {}\n    const ok = await this.passwdService.initAccount(body)\n    return res.status(HttpStatus.OK).json({\n      message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n      ...debug,\n    });\n  }\n\n  @Post('initreset')\n  @ApiOperation({summary: 'Demande l envoi de mail pour le reset'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async initreset(@Body() body: InitResetDto, @Res() res: Response): Promise {\n    const debug = {}\n    const data = await this.passwdService.initReset(body)\n\n    return res.status(HttpStatus.OK).json({\n      message: 'Email envoyé verifiez votre boite mail alternative et vos spam',\n      token: data,\n      ...debug,\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdModule.html":{"url":"modules/PasswdModule.html","title":"module - PasswdModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_imports\n\n\n\ncluster_PasswdModule_providers\n\n\n\n\nBackendsModule\n\nBackendsModule\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nPasswdadmModule\n\nPasswdadmModule\n\nPasswdModule -->\n\nPasswdadmModule->PasswdModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nSmsService\n\nSmsService\n\nPasswdModule -->\n\nSmsService->PasswdModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/passwd/passwd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdService\n                        \n                        \n                            SmsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendsModule\n                        \n                        \n                            IdentitiesModule\n                        \n                        \n                            PasswdadmModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdService } from './passwd.service';\nimport { PasswdController } from './passwd.controller';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport { IdentitiesModule } from '../identities/identities.module';\nimport { PasswdadmModule} from \"~/settings/passwdadm/passwdadm.module\";\nimport {PasswdadmService} from \"~/settings/passwdadm/passwdadm.service\";\nimport {SmsService} from \"~/management/passwd/sms-service\";\n\n\n@Module({\n  imports: [BackendsModule,\n    IdentitiesModule, PasswdadmModule ],\n  controllers: [PasswdController],\n  providers: [PasswdService,SmsService],\n})\nexport class PasswdModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswdService.html":{"url":"injectables/PasswdService.html","title":"injectable - PasswdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                CODE_EXPIRATION\n                            \n                            \n                                    Static\n                                    Readonly\n                                RANDOM_BYTES_IV\n                            \n                            \n                                    Static\n                                    Readonly\n                                RANDOM_BYTES_K\n                            \n                            \n                                    Static\n                                    Readonly\n                                TOKEN_ALGORITHM\n                            \n                            \n                                    Static\n                                    Readonly\n                                TOKEN_EXPIRATION\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                askToken\n                            \n                            \n                                    Public\n                                    Async\n                                change\n                            \n                            \n                                    Public\n                                    Async\n                                decryptToken\n                            \n                            \n                                    Public\n                                    Async\n                                decryptTokenWithCode\n                            \n                            \n                                    Private\n                                    Async\n                                getPaddingForCode\n                            \n                            \n                                    Public\n                                    Async\n                                initAccount\n                            \n                            \n                                    Public\n                                    Async\n                                initReset\n                            \n                            \n                                    Public\n                                    Async\n                                reset\n                            \n                            \n                                    Public\n                                    Async\n                                resetByCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(backends: BackendsService, identities: IdentitiesService, mailer: MailerService, config: ConfigService, passwdadmService: PasswdadmService, smsService: SmsService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/management/passwd/passwd.service.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backends\n                                                  \n                                                        \n                                                                        BackendsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identities\n                                                  \n                                                        \n                                                                        IdentitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        passwdadmService\n                                                  \n                                                        \n                                                                        PasswdadmService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        smsService\n                                                  \n                                                        \n                                                                        SmsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        askToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    askToken(askToken: AskTokenDto, k, ttl: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:219\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                askToken\n                                            \n                                                            AskTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                k\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                        \n                    change(passwdDto: ChangePasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:173\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwdDto\n                                            \n                                                            ChangePasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decryptToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    decryptToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:278\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        decryptTokenWithCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    decryptTokenWithCode(token: string, code: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:256\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getPaddingForCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPaddingForCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:369\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    initAccount(initDto: InitAccountDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initDto\n                                            \n                                                            InitAccountDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initReset\n                        \n                    \n                \n            \n            \n                \n                        \n                    initReset(initDto: InitResetDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                initDto\n                                            \n                                                            InitResetDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        reset\n                        \n                    \n                \n            \n            \n                \n                        \n                    reset(data: ResetPasswordDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:338\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        resetByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetByCode(data: ResetByCodeDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/passwd.service.ts:299\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ResetByCodeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        CODE_EXPIRATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1900\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RANDOM_BYTES_IV\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        RANDOM_BYTES_K\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 16\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TOKEN_ALGORITHM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'aes-256-gcm'\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TOKEN_EXPIRATION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 604800\n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/passwd.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { BadRequestException, HttpStatus, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './_dto/ask-token.dto';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { IdentitiesService } from '../identities/identities.service';\nimport { pick,get } from 'radash';\nimport { Identities } from '../identities/_schemas/identities.schema';\nimport {MailerModule, MailerService} from \"@nestjs-modules/mailer\";\nimport {InitAccountDto} from \"~/management/passwd/_dto/init-account.dto\";\nimport {ConfigService} from \"@nestjs/config\";\nimport {randomInt} from \"crypto\";\nimport {ResetByCodeDto} from \"~/management/passwd/_dto/reset-by-code-dto\";\nimport {PasswdadmService} from \"~/settings/passwdadm/passwdadm.service\";\nimport {IdentityState} from \"~/management/identities/_enums/states.enum\";\nimport {InitResetDto} from \"~/management/passwd/_dto/init-reset.dto\";\nimport {SmsService} from \"~/management/passwd/sms-service\";\nimport {PasswordPoliciesDto} from \"~/settings/passwdadm/_dto/password-policy.dto\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public static readonly TOKEN_EXPIRATION = 604800;\n  public static readonly CODE_EXPIRATION = 1900;\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsService: SmsService,\n    @InjectRedis() private readonly redis: Redis\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto):Promise{\n    //envoi du mail\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid }) as Identities;\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode()\n      const mailAttribute=this.config.get('frontPwd.identityMailAttribute')\n      const mail = get(identity.toObject(), mailAttribute)\n      const token = await this.askToken({mail: mail, uid: initDto.uid}, padd + k.toString(16),PasswdService.CODE_EXPIRATION)\n      this.logger.log(\"Token :\" + token + '  int : ' + k.toString(10))\n      if (initDto.type === 0){\n        this.logger.log(\"Reset password asked by mail for  : \" + initDto.uid )\n        if (mailAttribute !== '') {\n          const displayName=identity.inetOrgPerson.displayName\n          this.mailer.sendMail({\n            from: this.config.get('mailer.sender'),\n            to: mail,\n            subject: 'Reinitialisation de votre mot de passe',\n            template: \"resetaccount\",\n            context:{\n              uid: identity.inetOrgPerson.uid,\n              displayName: displayName,\n              code: k\n            }\n          })\n            .then(() => {\n              this.logger.log(\"reset compte envoyé  pour uid\" +initDto.uid +\" à \" + mail )\n            })\n            .catch((e) => {\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail',\n                error: \"Bad Request\",\n                statusCode: 400\n              });\n            })\n          return token\n        }else{\n          return false\n        }\n      }else{\n        //envoi par SMS si c est possible\n        const policies=new PasswordPoliciesDto()\n        if (policies.resetBySms === true){\n          this.logger.log(\"Reset password asked by SMS for  : \" + initDto.uid )\n          const smsAttribute=this.config.get('frontPwd.identityMobileAttribute')\n          if (smsAttribute !== ''){\n            const numTel = get(identity.toObject(), smsAttribute)\n            this.smsService.send(numTel,\"Votre code de reinitialisation : \" + k.toString(10))\n          }\n          return token\n        }else{\n          return false\n        }\n      }\n\n    }catch(e){\n      this.logger.error(\"Error while reseting password. \" + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k=crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken=await this.askToken({mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx'},  k,0)\n      return falseToken\n    }\n\n\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto):Promise{\n    //recherche de l'identity\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid }) as Identities;\n      //envoi du mail\n      const mailAttribute=this.config.get('frontPwd.identityMailAttribute')\n      this.logger.log(\"mailer.identityMailAttribute : \" +mailAttribute )\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute)\n        //demande du token\n        const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n        const token = await this.askToken({mail: mail, uid: initDto.uid},k,PasswdService.TOKEN_EXPIRATION)\n        //envoi du token\n        this.mailer.sendMail({\n          from: this.config.get('mailer.sender'),\n          to: mail,\n          subject: 'Activation de votre compte',\n          template: \"initaccount\",\n          context:{\n            uid: initDto.uid,\n            url:this.config.get('frontPwd.url')+'/initaccount/'+ token\n          }\n\n        })\n          .then(() => {\n            this.logger.log(\"Init compte envoyé  pour uid\" +initDto.uid +\" à \" + mail )\n          })\n          .catch((e) => {\n            throw new BadRequestException({\n              message: 'Erreur serveur lors de l envoi du mail',\n              error: \"Bad Request\",\n              statusCode: 400\n            });\n          })\n\n        return true\n      }else{\n        this.logger.error(\"Error while initAccount identityMailAttribute nor defined\");\n        return false\n      }\n    }catch(e){\n      this.logger.error(\"Error while initialize password. \" + e + ` (uid=${initDto?.uid})`);\n      return false\n    }\n\n  }\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': passwdDto.uid,'state':IdentityState.SYNCED }) as Identities;\n      //verification de la police de mdp\n      if (await this.passwdadmService.checkPolicies(passwdDto.newPassword) === false){\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: \"Bad Request\",\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, identity._id, {\n        ...passwdDto,\n        ...pick(identity.toJSON(), ['inetOrgPerson']),\n      }, {\n        async: false,\n        timeoutDiscard: true,\n        disableLogs: true,\n        updateStatus: false,\n      });\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error(\"Error while changing password. \" + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: \"Bad Request\",\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto,k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl >0){\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error(\"Error while ask token. \" + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string,code: number): Promise {\n    try {\n      token=decodeURIComponent(token)\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' +cypherData)\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd=await this.getPaddingForCode();\n      const k=padd + code.toString(16)\n      this.logger.log('k=' + k)\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error(\"Error while decrypting token. \" + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token=decodeURIComponent(token)\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose(\"Error while decrypting token. \" + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n  // reset du password\n  public async resetByCode(data:ResetByCodeDto):Promise{\n    this.logger.log('resetByCode : ' + data.token+ ' '+ data.code )\n    //verification du passwordPolicies\n    if (await this.passwdadmService.checkPolicies(data.newpassword) === false){\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: \"Bad Request\",\n        statusCode: 400,\n      });\n    }\n    const tokenData=await this.decryptTokenWithCode(data.token,data.code)\n    this.logger.log( 'dataToken :' + tokenData)\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid }) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newpassword, ...pick(identity, ['inetOrgPerson']) },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key')\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n      this.logger.error(\"Error from backend while reseting password by code\" );\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    }catch (e) {\n      this.logger.error(\"Error while reseting password by code. \" + e + ` (token=${data?.token})`);\n      throw new BadRequestException('Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible');\n    }\n  }\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid,'state':IdentityState.SYNCED }) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...pick(identity, ['inetOrgPerson']) },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n\n    } catch (e) {\n      this.logger.error(\"Error while reseting password. \" + e + ` (token=${data?.token})`);\n      throw new BadRequestException('Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible');\n    }\n  }\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise{\n     let code = \"\"\n     if ( await this.redis.exists('CODEPADDING')){\n       code = await this.redis.get('CODEPADDING')\n     }else{\n       code = crypto.randomBytes(13).toString('hex') +'0';\n       await this.redis.set('CODEPADDING',code)\n     }\n     return code\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswdadmController.html":{"url":"controllers/PasswdadmController.html","title":"controller - PasswdadmController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswdadmController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/passwdadm/passwdadm.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                passwd\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                setPolicies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('getpolicies')@ApiOperation({summary: 'Retourne la police de mot de passe'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm/passwdadm.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        setPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPolicies(body: PasswordPoliciesDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('setpolicies')@ApiOperation({summary: 'enregistre la police de mdp'})@ApiResponse({status: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/settings/passwdadm/passwdadm.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            PasswordPoliciesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Post, Body, Res, Logger, HttpStatus, Get} from '@nestjs/common';\nimport { PasswdadmService } from './passwdadm.service';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport {omit} from \"radash\";\nimport {InitAccountDto} from \"~/management/passwd/_dto/init-account.dto\";\nimport {PasswordPoliciesDto} from \"~/settings/passwdadm/_dto/password-policy.dto\";\n\n\n@Controller('passwd')\n@ApiTags('settings/passwd')\nexport class PasswdadmController {\n  private readonly logger = new Logger(PasswdadmController.name);\n\n  public constructor(private passwdadmService: PasswdadmService) { }\n\n  @Post('setpolicies')\n  @ApiOperation({summary: 'enregistre la police de mdp'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async setPolicies(@Body() body: PasswordPoliciesDto,@Res() res: Response): Promise {\n    const data = await this.passwdadmService.setPolicies(body)\n    //const datax=omit(data.toObject,['_id'])\n    return res.status(HttpStatus.OK).json({data})\n  }\n  @Get('getpolicies')\n  @ApiOperation({summary: 'Retourne la police de mot de passe'})\n  @ApiResponse({status: HttpStatus.OK})\n  public async getPolicies(@Res() res:Response):Promise{\n    const data=await this.passwdadmService.getPolicies()\n    return res.status(HttpStatus.OK).json({data})\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PasswdadmModule.html":{"url":"modules/PasswdadmModule.html","title":"module - PasswdadmModule","body":"\n                   \n\n\n\n\n    Modules\n    PasswdadmModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PasswdadmModule\n\n\n\ncluster_PasswdadmModule_imports\n\n\n\ncluster_PasswdadmModule_exports\n\n\n\ncluster_PasswdadmModule_providers\n\n\n\n\nBackendsModule\n\nBackendsModule\n\n\n\nPasswdadmModule\n\nPasswdadmModule\n\nPasswdadmModule -->\n\nBackendsModule->PasswdadmModule\n\n\n\n\n\nPasswdadmService \n\nPasswdadmService \n\nPasswdadmService  -->\n\nPasswdadmModule->PasswdadmService \n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nPasswdadmModule -->\n\nPasswdadmService->PasswdadmModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/passwdadm/passwdadm.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PasswdadmService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PasswdadmController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BackendsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PasswdadmService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PasswdadmService } from './passwdadm.service';\nimport { PasswdadmController } from './passwdadm.controller';\nimport { BackendsModule } from '~/core/backends/backends.module';\nimport {MongooseModule} from \"@nestjs/mongoose\";\nimport {Settings,SettingsSchema} from \"~/settings/_schemas/settings.schema\";\n@Module({\n  imports: [BackendsModule,\n    MongooseModule.forFeatureAsync([\n      {\n        name: Settings.name,\n        useFactory: () => SettingsSchema,\n      },\n    ]),\n  ],\n  controllers: [PasswdadmController],\n  providers: [PasswdadmService],\n  exports:[\n    PasswdadmService\n  ]\n})\nexport class PasswdadmModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswdadmService.html":{"url":"injectables/PasswdadmService.html","title":"injectable - PasswdadmService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswdadmService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/passwdadm/passwdadm.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractSettingsService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                settingsName\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkPolicies\n                            \n                            \n                                    Protected\n                                    Async\n                                defaultValues\n                            \n                            \n                                    Public\n                                    Async\n                                getPolicies\n                            \n                            \n                                    Public\n                                    Async\n                                setPolicies\n                            \n                            \n                                    Protected\n                                    Async\n                                getParameter\n                            \n                            \n                                    Protected\n                                    Async\n                                setParameter\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        checkPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkPolicies(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/passwdadm/passwdadm.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        defaultValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    defaultValues()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:76\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPolicies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/passwdadm/passwdadm.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        setPolicies\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPolicies(policies: PasswordPoliciesDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/passwdadm/passwdadm.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                policies\n                                            \n                                                            PasswordPoliciesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        getParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    getParameter(settingName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:13\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Async\n                        setParameter\n                        \n                    \n                \n            \n            \n                \n                        \n                    setParameter(settingName: string, parameters: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractSettingsService\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractSettingsService:22\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                settingName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parameters\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        settingsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractSettingsService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractSettingsService:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Document, Model} from \"mongoose\";\nimport {InjectModel} from \"@nestjs/mongoose\";\nimport stringEntropy from 'fast-password-entropy'\nimport {pwnedPassword} from \"hibp\";\nimport {PasswordPoliciesDto} from \"~/settings/passwdadm/_dto/password-policy.dto\";\nimport {AbstractSettingsService} from \"~/_common/abstracts/abstract-settings.service\";\nimport {Injectable} from \"@nestjs/common\";\n\n@Injectable()\nexport class PasswdadmService extends AbstractSettingsService {\n\n\n  public async getPolicies(): Promise {\n    const parameters=this.getParameter('passwordpolicies')\n    return parameters\n  }\n\n  public async  setPolicies(policies: PasswordPoliciesDto):Promise{\n    return this.setParameter('passwordpolicies',policies)\n  }\n  public async checkPolicies(password: string): Promise {\n     return true\n  }\n/*\n  public async checkPolicies(password: string): Promise {\n    const policies = await this.getPolicies()\n    if (password.length  0) {\n      if (/[!@#\\$%\\^\\&*\\)\\(+=._-]/.test(password) === false) {\n        this.logger.error('must have special characters')\n        return false\n      }\n    }\n    if (policies.hasLowerCase > 0) {\n      if (/[a-z]/.test(password) === false) {\n        this.logger.error('must have lower case characters')\n        return false\n      }\n    }\n    if (policies.hasUpperCase > 0) {\n      if (/[A-Z]/.test(password) === false) {\n        this.logger.error('must have upper case characters')\n        return false\n      }\n    }\n    if (policies.hasNumbers > 0) {\n      if (/[A-Z]/.test(password) === false) {\n        this.logger.error('must have number')\n        return false\n      }\n    }\n    //calcul de l'entropie\n    if (policies.minComplexity >0){\n      let c = stringEntropy(password)\n      if (c  0){\n        return false\n      }\n    }\n    return true\n  }\n\n */\n  protected async defaultValues(): Promise {\n    return new PasswordPoliciesDto()\n  }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordPoliciesDto.html":{"url":"classes/PasswordPoliciesDto.html","title":"class - PasswordPoliciesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordPoliciesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/passwdadm/_dto/password-policy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                checkPwned\n                            \n                            \n                                    \n                                    \n                                    Public\n                                goodComplexity\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasLowerCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasNumbers\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasSpecialChars\n                            \n                            \n                                    \n                                    \n                                    Public\n                                hasUpperCase\n                            \n                            \n                                    \n                                    \n                                    Public\n                                len\n                            \n                            \n                                    \n                                    \n                                    Public\n                                minComplexity\n                            \n                            \n                                    \n                                    \n                                    Public\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                    Public\n                                resetBySms\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        checkPwned\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Teh password will be checked on Pwned', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        goodComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 70\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '70', description: 'Good complexity (entropy), Upper this number the password is considered  good', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasLowerCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in lowercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasNumbers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of numbers', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of special characters', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        hasUpperCase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '1', description: 'Minimal amount of letters in uppercase', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        len\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '8', description: 'Password minimal Length', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        minComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '30', description: 'Minimal complexity (entropy), Below this number the password wont be accepted', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'https://monsite.com', description: 'Après un changement ou reset reussi le navigateur sera redirigé', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        resetBySms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/passwdadm/_dto/password-policy.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {IsNumber, IsBoolean, IsString} from 'class-validator';\n\nexport class PasswordPoliciesDto {\n  @IsNumber()\n  @ApiProperty({ example: '8', description: 'Password minimal Length', type: Number })\n  public len: number=10;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in uppercase', type: Number })\n  public hasUpperCase: number=1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of letters in lowercase', type: Number })\n  public hasLowerCase: number=1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of numbers', type: Number })\n  public hasNumbers: number=1;\n\n  @IsNumber()\n  @ApiProperty({ example: '1', description: 'Minimal amount of special characters', type: Number })\n  public hasSpecialChars: number=1;\n\n  @IsNumber()\n  @ApiProperty({ example: '30', description: 'Minimal complexity (entropy), Below this number the password wont be accepted', type: Number })\n  public minComplexity: number=30;\n\n  @IsNumber()\n  @ApiProperty({ example: '70', description: 'Good complexity (entropy), Upper this number the password is considered  good', type: Number })\n  public goodComplexity: number=70;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Teh password will be checked on Pwned', type: Boolean })\n  public checkPwned: boolean=true;\n\n  @IsBoolean()\n  @ApiProperty({ example: true, description: 'Mote de passe peut etre reinitialisé par sms', type: Boolean })\n  public resetBySms: boolean=false;\n\n  @IsString()\n  @ApiProperty({ example: 'https://monsite.com', description: 'Après un changement ou reset reussi le navigateur sera redirigé', type: Number })\n  public redirectUrl: String=\"\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetByCodeDto.html":{"url":"classes/ResetByCodeDto.html","title":"class - ResetByCodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetByCodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-by-code-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                code\n                            \n                            \n                                    \n                                    \n                                newpassword\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '123456', description: 'Code received by email or Sms'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code-dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newpassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'hdfddyf18A', description: 'new password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: '3F4AC...', description: 'Token received by initreset'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-by-code-dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {IsNumber, IsString} from 'class-validator';\n\nexport class ResetByCodeDto {\n  @IsString()\n  @ApiProperty({ example: '3F4AC...', description: 'Token received by initreset' })\n  token: string;\n\n  @IsNumber()\n  @ApiProperty({ example: '123456', description: 'Code received by email or Sms' })\n  code: number;\n  @IsString()\n  @ApiProperty({ example: 'hdfddyf18A', description: 'new password' })\n  newpassword: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/reset-password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                newPassword\n                            \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MyNewPassword', description: 'New Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'Token'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/reset-password.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class ResetPasswordDto {\n  @IsString()\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'Token',\n  })\n  token: string;\n\n  @ApiProperty({ example: 'MyNewPassword', description: 'New Password' })\n  @IsString()\n  newPassword: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: String,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:22\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:16\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: QueryOptions | null | undefined): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Settings.html":{"url":"classes/Settings.html","title":"class - Settings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Settings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/_schemas/settings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                parameters\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '', required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        parameters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/settings/_schemas/settings.schema.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\nexport type SettingsDocument =  Document;\n\n@Schema({ versionKey: false })\nexport class Settings extends AbstractSchema {\n  @Prop({ type: String, default: \"\" ,required: true, unique: true,})\n  name: string\n  @Prop({type: Object, default:{}})\n  parameters: object\n\n}\n\nexport const SettingsSchema = SchemaFactory.createForClass(Settings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SettingsController.html":{"url":"controllers/SettingsController.html","title":"controller - SettingsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SettingsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                settings\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport {SettingsService} from \"~/settings/settings.service\";\n\n@ApiTags('settings')\n@Controller('settings')\nexport class SettingsController {\n  public constructor(private readonly _service: SettingsService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsService.html":{"url":"injectables/SettingsService.html","title":"injectable - SettingsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/settings/settings.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/settings/settings.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SettingsService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingstModule.html":{"url":"modules/SettingstModule.html","title":"module - SettingstModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingstModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingstModule\n\n\n\ncluster_SettingstModule_imports\n\n\n\ncluster_SettingstModule_providers\n\n\n\n\nPasswdadmModule\n\nPasswdadmModule\n\n\n\nSettingstModule\n\nSettingstModule\n\nSettingstModule -->\n\nPasswdadmModule->SettingstModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingstModule -->\n\nSettingsService->SettingstModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SettingsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SettingsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PasswdadmModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/settings/settings.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport {PasswdadmModule} from \"~/settings/passwdadm/passwdadm.module\";\nimport {SettingsController} from \"~/settings/settings.controller\";\nimport {SettingsService} from \"~/settings/settings.service\";\n@Module({\n  imports: [ PasswdadmModule],\n  providers: [SettingsService],\n  controllers: [SettingsController],\n})\nexport class SettingstModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'settings',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SmsService.html":{"url":"injectables/SmsService.html","title":"injectable - SmsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SmsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/sms-service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/management/passwd/sms-service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(telNumber: string, message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/passwd/sms-service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                telNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from \"@nestjs/common\";\nimport {AbstractService} from \"~/_common/abstracts/abstract.service\";\nimport {ConfigService} from \"@nestjs/config\";\nimport { parsePhoneNumber } from 'awesome-phonenumber'\n\n@Injectable()\nexport class SmsService extends AbstractService {\n  public constructor(protected config: ConfigService){\n    super()\n  }\n  public send(telNumber: string , message:string){\n    this.logger.verbose('Envoi SMS : ' +telNumber + ' message :' + message)\n    const host = this.config.get('sms.host')\n    const systemId = this.config.get('sms.systemId')\n    const password = this.config.get('sms.password')\n    const sourceAddr=this.config.get('sms.sourceAddr')\n    const smpp = require('smpp');\n    const logger=this.logger\n    //normalisation du numero de telephone\n    const pTelNumber=parsePhoneNumber(telNumber,{ regionCode: this.config.get('sms.regionCode') })\n    this.logger.verbose('phone number parsed :' +pTelNumber.number.e164)\n    if (pTelNumber.valid === true){\n      const session = smpp.connect({\n        url: host,\n        debug: false\n      }, function() {\n        session.bind_transmitter({\n          system_id: systemId,\n          password: password,\n        }, function(pdu) {\n          if (pdu.command_status === 0) {\n            // Successfully bound\n            session.submit_sm({\n              source_addr_ton: 5,\n              source_addr_npi:0,\n              source_addr : sourceAddr,\n              destination_addr: pTelNumber.number.e164,\n              dest_addr_ton:1,\n              dest_addr_npi:1,\n              data_coding: 'GSM 03.38',\n              short_message: message\n            }, function(pdu) {\n              if (pdu.command_status === 0) {\n                // Message successfully sent\n                console.log('SUCCESS : ' + pdu.message_id);\n                logger.log('SMS SUCCESS ')\n                session.unbind()\n                session.close()\n              }else{\n                console.error('FAIL : ' + pdu.command_status)\n                session.unbind()\n                session.close()\n              }\n            });\n          }\n          session.on('error', function(error){\n            logger.error('SMS ERREUR ' + error)\n            session.unbind()\n            session.close()\n          })\n        });\n      });\n    }else{\n      this.logger.error( 'Numero invalide :' + telNumber)\n    }\n\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/_parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/_parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SyncIdentitiesDto.html":{"url":"classes/SyncIdentitiesDto.html","title":"class - SyncIdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SyncIdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_dto/sync-identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                payload\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ApiProperty({type: Array})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/backends/_dto/sync-identities.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\n\nexport class SyncIdentitiesDto {\n  @IsArray()\n  @ApiProperty({ type: Array })\n  public payload: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tasks.html":{"url":"classes/Tasks.html","title":"class - Tasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/_schemas/tasks.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/tasks/_schemas/tasks.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, Types } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type TasksDocument = Tasks & Document;\n\n@Schema({ versionKey: false })\nexport class Tasks extends AbstractSchema {\n  @Prop({ type: [Types.ObjectId] })\n  public jobs?: Types.ObjectId[];\n}\n\nexport const TasksSchema = SchemaFactory.createForClass(Tasks);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TasksController.html":{"url":"controllers/TasksController.html","title":"controller - TasksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('tasks')\nexport class TasksController extends AbstractController {\n  constructor(private readonly _service: TasksService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService \n\nTasksService \n\n\n\nTasksModule\n\nTasksModule\n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TasksController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TasksSchema, Tasks } from './_schemas/tasks.schema';\nimport { TasksService } from './tasks.service';\nimport { TasksController } from './tasks.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Tasks.name,\n        useFactory: () => TasksSchema,\n      },\n    ]),\n  ],\n  providers: [TasksService],\n  controllers: [TasksController],\n  exports: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/tasks/tasks.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/tasks/tasks.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?:  | null)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:44\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                         | null\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:153\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:318\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:34\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:50\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:84\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:118\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:195\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:257\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { Tasks } from './_schemas/tasks.schema';\n\n@Injectable()\nexport class TasksService extends AbstractServiceSchema {\n  public constructor(@InjectModel(Tasks.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenData.html":{"url":"interfaces/TokenData.html","title":"interface - TokenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/passwd.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            iv\n                                        \n                                \n                                \n                                        \n                                            k\n                                        \n                                \n                                \n                                        \n                                            tag\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        iv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        k\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        k:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectRedis } from '@nestjs-modules/ioredis';\nimport { BadRequestException, HttpStatus, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport * as crypto from 'crypto';\nimport Redis from 'ioredis';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ActionType } from '~/core/backends/_enum/action-type.enum';\nimport { BackendsService } from '~/core/backends/backends.service';\nimport { Jobs } from '~/core/jobs/_schemas/jobs.schema';\nimport { AskTokenDto } from './_dto/ask-token.dto';\nimport { ChangePasswordDto } from './_dto/change-password.dto';\nimport { ResetPasswordDto } from './_dto/reset-password.dto';\nimport { IdentitiesService } from '../identities/identities.service';\nimport { pick,get } from 'radash';\nimport { Identities } from '../identities/_schemas/identities.schema';\nimport {MailerModule, MailerService} from \"@nestjs-modules/mailer\";\nimport {InitAccountDto} from \"~/management/passwd/_dto/init-account.dto\";\nimport {ConfigService} from \"@nestjs/config\";\nimport {randomInt} from \"crypto\";\nimport {ResetByCodeDto} from \"~/management/passwd/_dto/reset-by-code-dto\";\nimport {PasswdadmService} from \"~/settings/passwdadm/passwdadm.service\";\nimport {IdentityState} from \"~/management/identities/_enums/states.enum\";\nimport {InitResetDto} from \"~/management/passwd/_dto/init-reset.dto\";\nimport {SmsService} from \"~/management/passwd/sms-service\";\nimport {PasswordPoliciesDto} from \"~/settings/passwdadm/_dto/password-policy.dto\";\n\ninterface TokenData {\n  k: string;\n  iv: string;\n  tag: string;\n}\n\ninterface CipherData {\n  uid: string;\n  mail: string;\n}\n\n@Injectable()\nexport class PasswdService extends AbstractService {\n  public static readonly RANDOM_BYTES_K = 16;\n  public static readonly RANDOM_BYTES_IV = 12;\n\n  public static readonly TOKEN_ALGORITHM = 'aes-256-gcm';\n\n  public static readonly TOKEN_EXPIRATION = 604800;\n  public static readonly CODE_EXPIRATION = 1900;\n  public constructor(\n    protected readonly backends: BackendsService,\n    protected readonly identities: IdentitiesService,\n    protected mailer: MailerService,\n    protected config: ConfigService,\n    private passwdadmService: PasswdadmService,\n    private smsService: SmsService,\n    @InjectRedis() private readonly redis: Redis\n  ) {\n    super();\n  }\n  //Initialisation du reset de mot de passe envoie un email ou par sms  un code et fourni un token au front.\n  // Le code est la clé du token\n  public async initReset(initDto: InitResetDto):Promise{\n    //envoi du mail\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid }) as Identities;\n      const k = randomInt(100000, 999999);\n      //asking for padding\n      const padd = await this.getPaddingForCode()\n      const mailAttribute=this.config.get('frontPwd.identityMailAttribute')\n      const mail = get(identity.toObject(), mailAttribute)\n      const token = await this.askToken({mail: mail, uid: initDto.uid}, padd + k.toString(16),PasswdService.CODE_EXPIRATION)\n      this.logger.log(\"Token :\" + token + '  int : ' + k.toString(10))\n      if (initDto.type === 0){\n        this.logger.log(\"Reset password asked by mail for  : \" + initDto.uid )\n        if (mailAttribute !== '') {\n          const displayName=identity.inetOrgPerson.displayName\n          this.mailer.sendMail({\n            from: this.config.get('mailer.sender'),\n            to: mail,\n            subject: 'Reinitialisation de votre mot de passe',\n            template: \"resetaccount\",\n            context:{\n              uid: identity.inetOrgPerson.uid,\n              displayName: displayName,\n              code: k\n            }\n          })\n            .then(() => {\n              this.logger.log(\"reset compte envoyé  pour uid\" +initDto.uid +\" à \" + mail )\n            })\n            .catch((e) => {\n              throw new BadRequestException({\n                message: 'Erreur serveur lors de l envoi du mail',\n                error: \"Bad Request\",\n                statusCode: 400\n              });\n            })\n          return token\n        }else{\n          return false\n        }\n      }else{\n        //envoi par SMS si c est possible\n        const policies=new PasswordPoliciesDto()\n        if (policies.resetBySms === true){\n          this.logger.log(\"Reset password asked by SMS for  : \" + initDto.uid )\n          const smsAttribute=this.config.get('frontPwd.identityMobileAttribute')\n          if (smsAttribute !== ''){\n            const numTel = get(identity.toObject(), smsAttribute)\n            this.smsService.send(numTel,\"Votre code de reinitialisation : \" + k.toString(10))\n          }\n          return token\n        }else{\n          return false\n        }\n      }\n\n    }catch(e){\n      this.logger.error(\"Error while reseting password. \" + e + ` (uid=${initDto?.uid})`);\n      //on retoune un token qui ne sert à rien pour ne pas divulguer que l uid n existe pas\n      const k=crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n      const falseToken=await this.askToken({mail: 'xxxxxx@xxxxxxxxxxx', uid: 'xxxxxxxx@xxxxxxx'},  k,0)\n      return falseToken\n    }\n\n\n  }\n  //Initialisation du compte. Envoi d' un mail avec un token pour l'init du compte\n  public async initAccount(initDto: InitAccountDto):Promise{\n    //recherche de l'identity\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': initDto.uid }) as Identities;\n      //envoi du mail\n      const mailAttribute=this.config.get('frontPwd.identityMailAttribute')\n      this.logger.log(\"mailer.identityMailAttribute : \" +mailAttribute )\n      if (mailAttribute !== '') {\n        const mail = get(identity.toObject(), mailAttribute)\n        //demande du token\n        const k = crypto.randomBytes(PasswdService.RANDOM_BYTES_K).toString('hex');\n        const token = await this.askToken({mail: mail, uid: initDto.uid},k,PasswdService.TOKEN_EXPIRATION)\n        //envoi du token\n        this.mailer.sendMail({\n          from: this.config.get('mailer.sender'),\n          to: mail,\n          subject: 'Activation de votre compte',\n          template: \"initaccount\",\n          context:{\n            uid: initDto.uid,\n            url:this.config.get('frontPwd.url')+'/initaccount/'+ token\n          }\n\n        })\n          .then(() => {\n            this.logger.log(\"Init compte envoyé  pour uid\" +initDto.uid +\" à \" + mail )\n          })\n          .catch((e) => {\n            throw new BadRequestException({\n              message: 'Erreur serveur lors de l envoi du mail',\n              error: \"Bad Request\",\n              statusCode: 400\n            });\n          })\n\n        return true\n      }else{\n        this.logger.error(\"Error while initAccount identityMailAttribute nor defined\");\n        return false\n      }\n    }catch(e){\n      this.logger.error(\"Error while initialize password. \" + e + ` (uid=${initDto?.uid})`);\n      return false\n    }\n\n  }\n  //Changement du password\n  public async change(passwdDto: ChangePasswordDto): Promise {\n    try {\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': passwdDto.uid,'state':IdentityState.SYNCED }) as Identities;\n      //verification de la police de mdp\n      if (await this.passwdadmService.checkPolicies(passwdDto.newPassword) === false){\n        throw new BadRequestException({\n          message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique des mots de passe',\n          error: \"Bad Request\",\n          statusCode: 400,\n        });\n      }\n      //tout est ok en envoie au backend\n      return await this.backends.executeJob(ActionType.IDENTITY_PASSWORD_CHANGE, identity._id, {\n        ...passwdDto,\n        ...pick(identity.toJSON(), ['inetOrgPerson']),\n      }, {\n        async: false,\n        timeoutDiscard: true,\n        disableLogs: true,\n        updateStatus: false,\n      });\n    } catch (e) {\n      let job = undefined;\n      let _debug = undefined;\n      this.logger.error(\"Error while changing password. \" + e + ` (uid=${passwdDto?.uid})`);\n\n      if (e?.response?.status === HttpStatus.BAD_REQUEST) {\n        job = {};\n        job['status'] = e?.response?.job?.status;\n      }\n\n      if (process.env.NODE_ENV === 'development') {\n        _debug = e?.response?.error?.response;\n      }\n\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Mot de passe incorrect ou utilisateur inconnu',\n        error: \"Bad Request\",\n        statusCode: 400,\n        job,\n        _debug,\n      });\n    }\n  }\n\n  // Genere un token pour les autres methodes\n  public async askToken(askToken: AskTokenDto,k, ttl: number): Promise {\n    try {\n      /*\n      if (ttl >0){\n\n        await this.identities.findOne({ 'inetOrgPerson.uid': askToken.uid });\n      }\n      */\n\n      const iv = crypto.randomBytes(PasswdService.RANDOM_BYTES_IV).toString('base64');\n      const cipher = crypto.createCipheriv(PasswdService.TOKEN_ALGORITHM, k, iv);\n\n      let ciphertext = cipher.update(\n        JSON.stringify({ uid: askToken.uid, mail: askToken.mail }),\n        'utf8',\n        'base64',\n      );\n      ciphertext += cipher.final('base64');\n      //on enregistre pas dans redis si le ttl =0\n      if (ttl >0){\n        await this.redis.set(\n          ciphertext,\n          JSON.stringify({\n            k,\n            iv,\n            tag: cipher.getAuthTag().toString('base64'),\n          }),\n        );\n        await this.redis.expire(ciphertext, ttl);\n      }\n      return encodeURIComponent(ciphertext);\n    } catch (e) {\n      this.logger.error(\"Error while ask token. \" + e + ` (uid=${askToken?.uid})`);\n      throw new BadRequestException('Impossible de générer un token, une erreur est survenue');\n    }\n  }\n  // decrypte le token à l aide du code\n  public async decryptTokenWithCode(token: string,code: number): Promise {\n    try {\n      token=decodeURIComponent(token)\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n      this.logger.log('decrypt ' +cypherData)\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n      const padd=await this.getPaddingForCode();\n      const k=padd + code.toString(16)\n      this.logger.log('k=' + k)\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.error(\"Error while decrypting token. \" + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token xx');\n    }\n  }\n  // decrypte le token d'initialisation du compte\n  public async decryptToken(token: string): Promise {\n    try {\n      token=decodeURIComponent(token)\n      const result = await this.redis.get(token);\n      const cypherData: TokenData = JSON.parse(result);\n\n      if (cypherData?.iv === undefined || cypherData?.k === undefined || cypherData?.tag === undefined) {\n        throw new NotFoundException('Invalid token');\n      }\n\n      const decipher = crypto.createDecipheriv(PasswdService.TOKEN_ALGORITHM, cypherData.k, cypherData.iv);\n      decipher.setAuthTag(Buffer.from(cypherData.tag, 'base64'));\n      const plaintext = decipher.update(token, 'base64', 'ascii');\n\n      return JSON.parse(plaintext);\n    } catch (error) {\n      this.logger.verbose(\"Error while decrypting token. \" + error + ` (token=${token})`);\n      throw new BadRequestException('Invalid token');\n    }\n  }\n  // reset du password\n  public async resetByCode(data:ResetByCodeDto):Promise{\n    this.logger.log('resetByCode : ' + data.token+ ' '+ data.code )\n    //verification du passwordPolicies\n    if (await this.passwdadmService.checkPolicies(data.newpassword) === false){\n      throw new BadRequestException({\n        message: 'Une erreur est survenue : Le mot de passe ne respecte pas la politique de securité',\n        error: \"Bad Request\",\n        statusCode: 400,\n      });\n    }\n    const tokenData=await this.decryptTokenWithCode(data.token,data.code)\n    this.logger.log( 'dataToken :' + tokenData)\n    try{\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid }) as Identities;\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newpassword, ...pick(identity, ['inetOrgPerson']) },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        this.logger.log('delete key')\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n      this.logger.error(\"Error from backend while reseting password by code\" );\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n    }catch (e) {\n      this.logger.error(\"Error while reseting password by code. \" + e + ` (token=${data?.token})`);\n      throw new BadRequestException('Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible');\n    }\n  }\n  // methode pour le reset par token (pour l initialisation du compte)\n  public async reset(data: ResetPasswordDto): Promise {\n    const tokenData = await this.decryptToken(data.token);\n\n    try {\n      const identity = await this.identities.findOne({ 'inetOrgPerson.uid': tokenData.uid,'state':IdentityState.SYNCED }) as Identities;\n\n      const [_, response] = await this.backends.executeJob(\n        ActionType.IDENTITY_PASSWORD_RESET,\n        identity._id,\n        { uid: tokenData.uid, newPassword: data.newPassword, ...pick(identity, ['inetOrgPerson']) },\n        {\n          async: false,\n          timeoutDiscard: true,\n          disableLogs: true,\n          updateStatus: false,\n        },\n      );\n\n      if (response?.status === 0) {\n        await this.redis.del(data.token);\n        return [_, response];\n      }\n\n      throw new InternalServerErrorException('Une erreur est survenue : Impossible de réinitialiser le mot de passe');\n\n    } catch (e) {\n      this.logger.error(\"Error while reseting password. \" + e + ` (token=${data?.token})`);\n      throw new BadRequestException('Une erreur est survenue : Tentative de réinitialisation de mot de passe impossible');\n    }\n  }\n  // genere des octect pour completer le code qui est de 4 octets et demi\n  private async getPaddingForCode(): Promise{\n     let code = \"\"\n     if ( await this.redis.exists('CODEPADDING')){\n       code = await this.redis.get('CODEPADDING')\n     }else{\n       code = crypto.randomBytes(13).toString('hex') +'0';\n       await this.redis.set('CODEPADDING',code)\n     }\n     return code\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformersFilestorageService.html":{"url":"injectables/TransformersFilestorageService.html","title":"injectable - TransformersFilestorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformersFilestorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/filestorage/_services/transformers-filestorage.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                TRANSFORMERS\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Async\n                                streamToString\n                            \n                            \n                                    Public\n                                    Async\n                                transform\n                            \n                            \n                                    Static\n                                    Async\n                                transformHtml\n                            \n                            \n                                    Static\n                                    Async\n                                transformImage\n                            \n                            \n                                    Static\n                                    Async\n                                transformPdf\n                            \n                            \n                                    Static\n                                    Async\n                                transformPlain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Async\n                        streamToString\n                        \n                    \n                \n            \n            \n                \n                        \n                    streamToString(stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream, parent?: Filestorage)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parent\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformHtml\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformHtml(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformImage(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mime\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPdf\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPdf(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Async\n                        transformPlain\n                        \n                    \n                \n            \n            \n                \n                        \n                    transformPlain(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            Filestorage\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stream\n                                            \n                                                        NodeJS.ReadableStream\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        TRANSFORMERS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/core/filestorage/_services/transformers-filestorage.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AbstractService } from '~/_common/abstracts/abstract.service'\nimport { Injectable } from '@nestjs/common'\nimport { Response } from 'express'\nimport { Filestorage } from '~/core/filestorage/_schemas/filestorage.schema'\n\n@Injectable()\nexport class TransformersFilestorageService extends AbstractService {\n  public static readonly TRANSFORMERS = {\n    'text/plain': TransformersFilestorageService.transformPlain,\n    'text/html': TransformersFilestorageService.transformHtml,\n    'application/pdf': TransformersFilestorageService.transformPdf,\n    'image/*': TransformersFilestorageService.transformImage,\n  }\n\n  public constructor() {\n    super()\n  }\n\n  public async transform(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream, parent?: Filestorage): Promise {\n    const mimeType = mime || data.mime || 'application/octet-stream'\n    const hasTransformer = TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType)\n    // TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType) || TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')\n    if (!hasTransformer) {\n      if (TransformersFilestorageService.TRANSFORMERS.hasOwnProperty(mimeType.split('/')[0] + '/*')) {\n        await TransformersFilestorageService.TRANSFORMERS[mimeType.split('/')[0] + '/*'](mime, res, data, stream)\n        return\n      }\n    }\n    if (!hasTransformer) {\n      res.setHeader('Content-Type', mimeType)\n      // eslint-disable-next-line\n      res.setHeader('Content-Disposition', `attachment; filename=\"${(data as any).filename}\"`)\n      stream.pipe(res)\n      return\n    }\n    await TransformersFilestorageService.TRANSFORMERS[mimeType](mime, res, data, stream)\n  }\n\n  public static async transformPlain(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream): Promise {\n    res.setHeader('Content-Type', 'text/plain')\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res)\n    return\n  }\n\n  public static async transformPdf(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream): Promise {\n    res.setHeader('Content-Type', 'application/pdf')\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res)\n    return\n  }\n\n  public static async transformHtml(_: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream): Promise {\n    res.setHeader('Content-Type', 'text/html')\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    res.render('core/filestorage/transformers/html', {\n      data,\n      html: await TransformersFilestorageService.streamToString(stream),\n    })\n  }\n\n  public static async transformImage(mime: string, res: Response, data: Filestorage, stream: NodeJS.ReadableStream): Promise {\n    res.setHeader('Content-Type', 'image/' + mime.split('/').pop())\n    // eslint-disable-next-line\n    res.setHeader('Content-Disposition', `inline; filename=\"${(data as any).filename}\"`)\n    stream.pipe(res)\n    return\n  }\n\n  private static async streamToString(stream: NodeJS.ReadableStream): Promise {\n    const chunks = []\n    return new Promise((resolve, reject) => {\n      stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)))\n      stream.on('error', (err) => reject(err))\n      stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')))\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:15\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n  ArgumentMetadata,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public async transform(value: any, metadata: ArgumentMetadata): Promise {\n    return (await super.transform(value, metadata)) || value;\n  }\n\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        // console.log('validations', JSON.stringify(request.body));\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyTokenDto.html":{"url":"classes/VerifyTokenDto.html","title":"class - VerifyTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/passwd/_dto/verify-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==', description: 'token received by getToken'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/passwd/_dto/verify-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class VerifyTokenDto {\n  @ApiProperty({\n    example: 'S9nv9vjxdW7bS0haoWUmdJ3XPbSJ7dSdRj2ND1z9RvqLK/sF1LKZpfnWDvLX1dZuG0WGEyAb9A==',\n    description: 'token received by getToken',\n  })\n  @IsString()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInfoInterface.html":{"url":"interfaces/WorkerResultInfoInterface.html","title":"interface - WorkerResultInfoInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInfoInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [backendName: string]:        Partial\n\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/_interfaces/worker-result.interface.ts:9\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WorkerResultInterface.html":{"url":"interfaces/WorkerResultInterface.html","title":"interface - WorkerResultInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WorkerResultInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/_interfaces/worker-result.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            jobId\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         WorkerResultInfoInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WorkerResultInfoInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BackendResultInterface } from './backend-result.interface';\n\nexport interface WorkerResultInterface {\n  jobId: string;\n  status: number;\n  data: WorkerResultInfoInterface;\n}\n\nexport interface WorkerResultInfoInterface {\n  [backendName: string]: Partial;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'attributes'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'validations'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional } from 'class-validator';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  objectClasses: string[];\n\n  @ApiProperty({\n    type: 'object',\n    name: 'attributes',\n  })\n  @IsOptional()\n  attributes: { [key: string]: any };\n\n  @ApiProperty({\n    type: 'object',\n    name: 'validations',\n  })\n  validations?: { [key: string]: { [key: string]: string } };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @kradihsoy/lt-schematics : ^1.0.13\n        \n            @nestjs-modules/ioredis : ^2.0.2\n        \n            @nestjs-modules/mailer : ^2.0.2\n        \n            @nestjs/bullmq : ^10.1.1\n        \n            @nestjs/common : ^10.3.9\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.3.9\n        \n            @nestjs/event-emitter : ^2.0.4\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.6\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.9\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @the-software-compagny/nestjs_module_factorydrive : ^1.1.5\n        \n            @the-software-compagny/nestjs_module_factorydrive-s3 : ^1.0.1\n        \n            @the-software-compagny/nestjs_module_restools : ^0.0.5\n        \n            ajv : ^8.16.0\n        \n            ajv-errors : ^3.0.0\n        \n            argon2 : ^0.40.3\n        \n            awesome-phonenumber : ^6.10.0\n        \n            bullmq : ^5.8.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.6\n        \n            fast-password-entropy : ^1.1.1\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            hibp : ^14.1.2\n        \n            ioredis : ^5.4.1\n        \n            loglevel : ^1.9.1\n        \n            mjml : ^4.15.3\n        \n            mongoose : ^8.4.3\n        \n            nest-commander : ^3.13.0\n        \n            nest-winston : ^1.10.0\n        \n            nestjs-request-context : ^3.0.0\n        \n            nodemailer : ^6.9.14\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^12.1.0\n        \n            reflect-metadata : ^0.2.2\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            smpp : ^0.6.0-rc.4\n        \n            swagger-themes : ^1.4.3\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.13.0\n        \n            winston-mongodb : ^5.1.1\n        \n            winston-transport : ^4.7.0\n        \n            yaml : ^2.4.5\n        \n            yup : ^1.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../action-type.enum.ts)\n                        \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            BackendCodesEnum   (src/.../backend-codes.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            FsType   (src/.../fs-type.enum.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                        \n                            JobState   (src/.../state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/backends/_enum/action-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionType\n                    \n                \n                        \n                            \n                                 LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                Value : LIST_BACKENDS\n                            \n                        \n                        \n                            \n                                 DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                Value : DUMP_PACKAGE_CONFIG\n                            \n                        \n                        \n                            \n                                 PING_TARGET\n                            \n                        \n                        \n                            \n                                Value : PING_TARGET\n                            \n                        \n                        \n                            \n                                 IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_CREATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_UPDATE\n                            \n                        \n                        \n                            \n                                 IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_DELETE\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_RESET\n                            \n                        \n                        \n                            \n                                 IDENTITY_PASSWORD_CHANGE\n                            \n                        \n                        \n                            \n                                Value : IDENTITY_PASSWORD_CHANGE\n                            \n                        \n            \n        \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/core/backends/_interfaces/backend-codes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        BackendCodesEnum\n                    \n                \n                    \n                        \n                            BackendCodesEnum\n\n                        \n                    \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                 GENERIC_ERROR\n                            \n                        \n                        \n                            \n                                 GENERIC_STOPPED\n                            \n                        \n                        \n                            \n                                 CONNECTION_ERROR\n                            \n                        \n                        \n                            \n                                 INVALID_LOGIN\n                            \n                        \n                        \n                            \n                                 INVALID_CREDENTIALS\n                            \n                        \n                        \n                            \n                                 INVALID_JSON_RESPONSE\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/core/filestorage/_enum/fs-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FsType\n                    \n                \n                        \n                            \n                                 DIRECTORY\n                            \n                        \n                        \n                            \n                                Value : d\n                            \n                        \n                        \n                            \n                                 FILE\n                            \n                        \n                        \n                            \n                                Value : f\n                            \n                        \n                        \n                            \n                                 SYMLINK\n                            \n                        \n                        \n                            \n                                Value : l\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 99\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n    src/core/jobs/_enums/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        JobState\n                    \n                \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                 FAILED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nSesame Orchestrateur\nAPI du projet SESAME\nArchitecture du projet\nFigma\nDocumentation\n Aller à la documentation\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cn\n                            \n                            \n                                    \n                                departmentNumber\n                            \n                            \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                employeeNumber\n                            \n                            \n                                    \n                                employeeType\n                            \n                            \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Optional\n                                jpegPhoto\n                            \n                            \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                sn\n                            \n                            \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                uid\n                            \n                            \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        jpegPhoto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class inetOrgPerson extends Document {\n  @Prop({ type: String, required: true })\n  cn: string;\n\n  @Prop({ type: String, default: null })\n  displayName?: string;\n\n  @Prop({ type: String, default: null })\n  facsimileTelephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  givenName?: string;\n\n  @Prop({ type: String, default: null })\n  labeledURI?: string;\n\n  @Prop({ type: String, default: null })\n  mail?: string;\n\n  @Prop({ type: String, default: null })\n  mobile?: string;\n\n  @Prop({ type: String, default: null })\n  postalAddress?: string;\n\n  @Prop({ type: String, default: null })\n  preferredLanguage?: string;\n\n  @Prop({ type: String, required: true })\n  sn: string;\n\n  @Prop({ type: String, default: null })\n  telephoneNumber?: string;\n\n  @Prop({ type: String, default: null })\n  title?: string;\n\n  @Prop({ type: String, required: true })\n  uid: string;\n\n  @Prop({ type: String, required: true })\n  employeeNumber: string;\n\n  @Prop({ type: String, required: true })\n  employeeType: string;\n\n  @Prop({ type: String, required: true })\n  departmentNumber: string;\n\n  @Prop({ type: String, default: null })\n  jpegPhoto?: string;\n\n  @Prop({ type: String, default: null })\n  userCertificate?: string;\n\n  @Prop({ type: String, default: null })\n  userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson).index(\n  { employeeNumber: 1, employeeType: 1 },\n  { unique: true },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:89\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeType: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  departmentNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                departmentNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                employeeNumber\n                            \n                            \n                                    \n                                    \n                                employeeType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        departmentNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employeeType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:49\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:53\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:69\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:74\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:79\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:84\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:89\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeType: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  departmentNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  employeeType: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  departmentNumber: string;\n\n  @IsString()\n  @ApiProperty()\n  @IsOptional()\n  sn?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto { }\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) { }\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CliModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilestorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesJsonformsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdadmModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PasswdModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingstModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_imports\n\n\n\ncluster_BackendsModule_exports\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CliModule\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FilestorageModule\n\n\n\ncluster_FilestorageModule_exports\n\n\n\ncluster_FilestorageModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesJsonformsModule\n\n\n\ncluster_IdentitiesJsonformsModule_exports\n\n\n\ncluster_IdentitiesJsonformsModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_exports\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_exports\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_exports\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_PasswdadmModule\n\n\n\ncluster_PasswdadmModule_exports\n\n\n\ncluster_PasswdadmModule_providers\n\n\n\ncluster_PasswdModule\n\n\n\ncluster_PasswdModule_providers\n\n\n\ncluster_SettingstModule\n\n\n\ncluster_SettingstModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nCliModule\n\nCliModule\n\nCliModule -->\n\nAgentsModule->CliModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nSettingstModule\n\nSettingstModule\n\nAppModule -->\n\nSettingstModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\nAuthModule -->\n\nKeyringsModule->AuthModule\n\n\n\nCliModule -->\n\nKeyringsModule->CliModule\n\n\n\n\n\nKeyringsService \n\nKeyringsService \n\nKeyringsService  -->\n\nKeyringsModule->KeyringsService \n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nCliModule -->\n\nAuthModule->CliModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nIdentitiesModule->BackendsModule\n\n\n\n\n\nIdentitiesService \n\nIdentitiesService \n\nIdentitiesService  -->\n\nIdentitiesModule->IdentitiesService \n\n\n\n\n\nPasswdModule\n\nPasswdModule\n\nPasswdModule -->\n\nIdentitiesModule->PasswdModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nCoreModule -->\n\nJobsModule->CoreModule\n\n\n\nBackendsModule -->\n\nJobsModule->BackendsModule\n\n\n\n\n\nJobsService \n\nJobsService \n\nJobsService  -->\n\nJobsModule->JobsService \n\n\n\n\n\nTasksModule\n\nTasksModule\n\nCoreModule -->\n\nTasksModule->CoreModule\n\n\n\nBackendsModule -->\n\nTasksModule->BackendsModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nBackendsService \n\nBackendsService \n\nBackendsService  -->\n\nBackendsModule->BackendsService \n\n\n\nCliModule -->\n\nBackendsModule->CliModule\n\n\n\nPasswdModule -->\n\nBackendsModule->PasswdModule\n\n\n\n\n\nPasswdadmModule\n\nPasswdadmModule\n\nPasswdadmModule -->\n\nBackendsModule->PasswdadmModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\nFilestorageModule\n\nFilestorageModule\n\nCoreModule -->\n\nFilestorageModule->CoreModule\n\n\n\n\n\nFilestorageService \n\nFilestorageService \n\nFilestorageService  -->\n\nFilestorageModule->FilestorageService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFilestorageService\n\nFilestorageService\n\nFilestorageModule -->\n\nFilestorageService->FilestorageModule\n\n\n\n\n\nTransformersFilestorageService\n\nTransformersFilestorageService\n\nFilestorageModule -->\n\nTransformersFilestorageService->FilestorageModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesJsonformsService \n\nIdentitiesJsonformsService \n\n\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsModule\n\nIdentitiesJsonformsService  -->\n\nIdentitiesJsonformsModule->IdentitiesJsonformsService \n\n\n\n\n\nIdentitiesJsonformsService\n\nIdentitiesJsonformsService\n\nIdentitiesModule -->\n\nIdentitiesJsonformsService->IdentitiesModule\n\n\n\nIdentitiesJsonformsModule -->\n\nIdentitiesJsonformsService->IdentitiesJsonformsModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\nManagementModule -->\n\nPasswdModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\nSettingstModule -->\n\nPasswdadmModule->SettingstModule\n\n\n\nPasswdModule -->\n\nPasswdadmModule->PasswdModule\n\n\n\n\n\nPasswdadmService \n\nPasswdadmService \n\nPasswdadmService  -->\n\nPasswdadmModule->PasswdadmService \n\n\n\n\n\nPasswdadmService\n\nPasswdadmService\n\nPasswdadmModule -->\n\nPasswdadmService->PasswdadmModule\n\n\n\n\n\nPasswdService\n\nPasswdService\n\nPasswdModule -->\n\nPasswdService->PasswdModule\n\n\n\n\n\nSmsService\n\nSmsService\n\nPasswdModule -->\n\nSmsService->PasswdModule\n\n\n\n\n\nSettingsService\n\nSettingsService\n\nSettingstModule -->\n\nSettingsService->SettingstModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    18 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    27 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    87 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.2\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            JobsDocument   (src/.../jobs.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            SettingsDocument   (src/.../settings.schema.ts)\n                        \n                        \n                            TasksDocument   (src/.../tasks.schema.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/jobs/_schemas/jobs.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/_schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/settings/_schemas/settings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SettingsDocument\n                \n            \n            \n                \n                        Document\n\n                \n            \n        \n    \n    src/core/tasks/_schemas/tasks.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TasksDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    employeeNumber: 'employeeNumber',\n    employeeType: 'employeeType',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nRéponse Attendue\n\n\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), uid (Identifiant Unique), et employeeNumber + employeeType (Identifiant Identité). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identité\"\n    \"employeeType\": \"Type Identité\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identité\",\n             \"employeeType\": \"Type Identité\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nEndpoint pour la Création d'Identité\nMême procédure pour la validation, mais ici nous avons : \nURL: /management/identities/upsert : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure au moins la données (inetOrgPerson.uid) et (inetOrgPerson.employeeNumber + inetOrgPerson.employeeType), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nDe plus pour une modification, il specifier le state a -1\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"uid\": \"Identifiant Unique\",\n    \"employeeNumber\": \"Identifiant Identite\",\n    \"employeeType\": \"Type Identite\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Example :curl -X POST \"http:///identities/upsert\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"uid\": \"Identifiant Unique\",\n             \"employeeNumber\": \"Identifiant Identite\",\n             \"employeeType\": \"Type Identite\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'Réponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\nemployeeNumber\nemployeeType\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nformat: 'email'\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nformat: 'url'\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nCorps de la Requête\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
