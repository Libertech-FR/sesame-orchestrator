var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractController.html",[0,0.168,1,2.467]],["body/classes/AbstractController.html",[0,0.2,1,3.729,2,1.054,3,0.22,4,0.185,5,0.197,6,4.538,7,0.465,8,0.933,9,3.17,10,3.01,11,1.154,12,4.527,13,5.77,14,6.936,15,1.939,16,5.045,17,6.209,18,0.86,19,7.128,20,1.653,21,0.008,22,1.198,23,0.516,24,3.153,25,3.153,26,5.607,27,5.607,28,5.607,29,0.307,30,2.746,31,4.962,32,1.548,33,3.968,34,4.962,35,4.962,36,0.987,37,0.295,38,1.69,39,2.372,40,0.889,41,1.939,42,2.249,43,2.192,44,2.662,45,3.419,46,3.758,47,3.758,48,4.962,49,3.038,50,4.221,51,4.221,52,3.968,53,2.137,54,4.962,55,0.924,56,1.42,57,4.962,58,0.006,59,0.006]],["title/interfaces/AbstractControllerContext.html",[17,3.55,38,1.421]],["body/interfaces/AbstractControllerContext.html",[0,0.21,1,3.087,3,0.232,4,0.195,5,0.207,6,4.776,7,0.49,8,0.964,9,2.842,10,2.775,11,1.084,12,4.643,14,5.223,16,4.176,17,6.041,18,0.615,21,0.008,23,0.389,29,0.312,30,2.89,31,5.223,32,1.629,33,4.176,34,5.223,35,5.223,36,1.039,37,0.304,38,1.779,39,3.115,40,1.001,41,2.546,42,2.367,43,2.307,44,2.801,45,3.599,46,3.955,47,3.955,48,5.223,49,3.198,50,4.443,51,4.443,52,4.176,53,2.249,54,5.223,55,0.973,56,1.495,57,5.223,58,0.006,59,0.006,60,2.64,61,4.443,62,5.9]],["title/classes/AbstractQueueProcessor.html",[0,0.168,63,3.337]],["body/classes/AbstractQueueProcessor.html",[0,0.207,2,1.091,3,0.228,4,0.192,5,0.204,7,0.482,8,0.954,9,3.191,11,0.855,15,2.519,18,0.83,20,1.711,21,0.008,22,1.24,23,0.524,29,0.296,37,0.24,49,3.145,53,2.777,55,1.201,58,0.006,59,0.006,63,5.156,64,5.136,65,2.657,66,6.214,67,7.106,68,5.803,69,5.597,70,5.972,71,7.285,72,4.097,73,5.803,74,3.539,75,4.107,76,3.539,77,5.136,78,5.136,79,4.443,80,6.448,81,5.136,82,5.136]],["title/classes/AbstractSchema.html",[0,0.168,83,2.555]],["body/classes/AbstractSchema.html",[0,0.219,2,1.157,3,0.242,4,0.204,5,0.216,7,0.511,8,0.99,18,0.788,21,0.008,23,0.539,29,0.304,37,0.255,42,2.471,43,2.408,44,2.924,49,3.337,55,1.469,58,0.007,59,0.007,65,2.411,83,4.096,84,5.451,85,1.515,86,4.006,87,2.763,88,4.599,89,3.482,90,6.159,91,6.158,92,1.463,93,3.337,94,6.158,95,6.159,96,3.954,97,2.033,98,2.924,99,1.857,100,6.159]],["title/injectables/AbstractService.html",[101,1.097,102,2.467]],["body/injectables/AbstractService.html",[0,0.162,3,0.179,4,0.151,5,0.16,7,0.379,8,0.815,9,3.163,10,2.841,11,1.172,12,4.329,13,5.036,15,1.578,16,4.404,18,0.905,20,1.345,21,0.008,22,0.975,23,0.501,24,3.499,25,2.565,29,0.296,30,2.234,36,0.803,37,0.257,38,1.375,39,1.93,40,0.883,41,1.578,42,2.841,43,2.769,44,3.362,45,2.782,46,3.057,47,3.057,49,2.472,50,3.435,51,3.435,52,3.229,53,2.372,55,1.026,56,1.794,58,0.005,59,0.005,65,2.088,101,1.447,102,3.255,103,1.879,104,3.692,105,2.841,106,3.982,107,4.278,108,4.329,109,7.046,110,6.268,111,5.384,112,6.222,113,4.562,114,4.278,115,4.562,116,4.562,117,4.562,118,4.562,119,4.562,120,4.562,121,4.562,122,4.562,123,1.83,124,3.692,125,3.435,126,4.038,127,2.387,128,4.038,129,3.837,130,5.732,131,5.507,132,4.038,133,4.038,134,1.93,135,4.038,136,2.234,137,3.229,138,1.471,139,3.692,140,4.038,141,2.668,142,4.038,143,2.782,144,1.039,145,4.038,146,4.038,147,4.038,148,4.038]],["title/interfaces/AbstractServiceContext.html",[38,1.421,111,3.337]],["body/interfaces/AbstractServiceContext.html",[0,0.174,3,0.191,4,0.161,5,0.171,7,0.405,8,0.853,9,2.885,10,2.534,11,1.234,12,4.496,16,3.453,18,0.679,21,0.008,23,0.429,24,2.743,29,0.303,30,2.389,36,0.859,37,0.269,38,1.471,39,2.755,40,0.975,41,2.251,42,2.94,43,2.865,44,3.479,45,2.975,46,3.269,47,3.269,49,2.643,50,3.673,51,3.673,52,3.453,53,2.482,55,1.073,56,1.856,58,0.006,59,0.006,60,2.183,61,3.673,65,1.438,101,1.514,102,2.552,104,3.948,105,1.957,106,2.743,107,4.58,108,4.238,109,6.485,110,4.318,111,5.186,114,4.58,123,1.957,124,3.948,125,3.673,126,4.318,127,2.552,128,6.919,129,3.971,130,5.931,131,5.762,132,4.318,133,4.318,134,2.064,135,4.318,136,2.389,137,3.453,138,1.573,139,3.948,140,4.318,141,2.853,142,4.318,143,2.975,144,1.111,145,4.318,146,4.318,147,4.318,148,4.318,149,4.878]],["title/injectables/AbstractServiceSchema.html",[101,1.097,150,3.008]],["body/injectables/AbstractServiceSchema.htmltitle/classes/AdditionalFieldsPart.html",[0,0.168,318,3.008]],["body/classes/AdditionalFieldsPart.html",[0,0.206,2,1.086,3,0.227,4,0.191,5,0.203,7,0.48,8,0.952,11,1.07,18,0.829,21,0.008,23,0.578,29,0.27,37,0.3,40,1.04,58,0.006,59,0.006,87,1.952,92,1.888,93,4.307,96,4.362,97,1.908,144,1.316,180,2.097,243,4.084,297,2.459,318,4.636,319,4.678,320,4.158,321,4.158,322,3.773,323,4.877,324,3.612,325,5.779,326,4.87,327,3.251,328,5.779,329,2.623,330,5.779,331,2.702,332,3.024,333,2.744,334,2.831,335,2.831,336,2.831,337,4.351,338,5.115]],["title/classes/Agents.html",[0,0.168,339,2.875]],["body/classes/Agents.html",[0,0.143,2,0.757,3,0.158,4,0.133,5,0.141,7,0.334,8,0.747,11,0.84,18,0.88,21,0.008,23,0.601,29,0.283,37,0.236,39,1.704,40,1.154,55,1.534,58,0.005,59,0.005,83,3.092,85,0.807,89,2.628,92,2.006,93,4.575,96,4.529,97,1.329,144,1.299,180,1.461,243,2.794,297,2.617,324,3.477,327,3.535,329,1.329,331,2.121,332,2.107,333,2.709,334,1.972,335,1.972,339,4.041,340,3.259,341,4.989,342,4.441,343,3.245,344,4.227,345,4.041,346,4.989,347,3.053,348,4.989,349,4.041,350,4.027,351,1.574,352,4.027,353,4.027,354,5.728,355,4.027,356,4.027,357,4.69,358,4.989,359,4.027,360,4.989,361,4.989,362,4.027,363,5.363,364,4.027,365,4.027,366,2.699,367,4.027,368,4.027,369,3.032,370,2.699,371,2.699,372,3.032,373,3.564,374,3.032,375,2.182,376,3.092,377,3.48,378,3.259,379,5.05,380,3.564]],["title/controllers/AgentsController.html",[381,1.753,382,3.55]],["body/controllers/AgentsController.html",[0,0.114,1,2.531,3,0.126,4,0.106,5,0.113,7,0.267,9,1.138,11,1.023,18,0.724,20,2.047,21,0.008,22,1.665,23,0.543,29,0.322,32,0.887,36,0.566,37,0.133,40,0.726,55,1.43,56,1.759,58,0.004,59,0.004,65,1.426,85,0.97,87,2.824,89,3.673,92,1.65,98,1.526,99,0.969,123,1.289,136,1.574,144,1.581,153,1.458,154,2.977,156,2.621,157,1.574,162,3.272,173,2.093,174,3.437,178,3.533,183,1.681,192,1.879,221,2.786,267,3.199,313,1.807,339,1.96,343,1.574,345,1.96,347,1.48,349,1.96,371,2.154,381,1.195,382,3.642,383,1.195,384,2.844,385,1.681,386,4.339,387,4.38,388,4.874,389,2.419,390,4.701,391,4.75,392,4.339,393,3.213,394,4.654,395,3.213,396,5.358,397,2.419,398,3.642,399,5.494,400,5.494,401,4.38,402,3.213,403,3.213,404,2.419,405,3.642,406,3.213,407,3.213,408,2.419,409,5.494,410,4.874,411,5.494,412,4.874,413,2.419,414,3.213,415,4.339,416,3.916,417,3.213,418,3.213,419,1.681,420,2.274,421,2.601,422,3.086,423,3.086,424,2.844,425,1.96,426,2.274,427,5.228,428,2.601,429,4.874,430,1.879,431,2.154,432,3.642,433,4.13,434,2.601,435,1.681,436,2.601,437,3.213,438,2.154,439,2.274,440,2.419,441,2.419,442,2.274,443,2.154,444,2.419,445,2.154,446,2.419,447,3.424,448,2.419,449,2.419,450,2.274,451,3.213,452,2.154,453,2.419,454,1.625,455,1.96,456,1.225,457,3.213,458,2.601,459,2.419,460,2.419,461,3.107,462,2.154,463,3.213,464,4.837,465,2.844,466,2.844,467,3.424,468,2.419,469,4.582,470,4.339,471,4.38,472,3.213,473,4.38,474,2.419,475,1.807,476,3.213,477,2.601,478,3.213,479,2.419]],["title/classes/AgentsCreateDto.html",[0,0.168,392,3.16]],["body/classes/AgentsCreateDto.html",[0,0.271,2,0.759,3,0.159,4,0.134,5,0.142,7,0.335,8,0.749,11,1.223,18,0.903,21,0.008,23,0.602,29,0.294,32,1.115,37,0.274,40,1.135,55,1.548,58,0.005,59,0.005,85,1.446,87,1.364,92,2.058,180,1.465,197,1.709,297,1.191,341,4.996,342,3.831,343,3.25,344,4.234,345,4.047,346,4.996,347,3.057,348,4.996,349,4.047,351,1.579,371,2.707,392,4.448,394,2.707,415,2.707,453,4.996,480,3.041,481,4.401,482,5.371,483,4.697,484,4.038,485,4.038,486,3.574,487,4.038,488,2.8,489,3.269,490,4.038,491,4.304,492,4.038,493,3.269,494,3.269,495,4.038,496,5.3,497,3.574,498,4.038,499,5.3,500,3.574,501,4.038,502,4.038,503,4.038,504,2.858,505,3.041,506,3.279,507,2.113,508,3.44,509,5.3,510,3.357,511,3.831,512,3.647,513,3.647,514,4.697,515,3.313,516,1.43,517,1.917,518,3.269,519,3.269,520,2.858,521,2.858,522,1.978,523,3.269]],["title/classes/AgentsDto.html",[0,0.168,394,3.16]],["body/classes/AgentsDto.html",[0,0.266,2,0.725,3,0.151,4,0.127,5,0.135,7,0.32,8,0.724,11,1.208,18,0.904,21,0.008,23,0.6,29,0.289,32,1.065,37,0.267,40,1.137,55,1.547,58,0.005,59,0.005,85,1.416,87,2.185,92,2.06,180,1.399,197,3.632,297,1.137,341,4.87,342,3.707,343,3.168,344,4.127,345,3.945,346,4.87,347,2.98,348,4.87,349,3.945,351,1.507,371,2.584,392,5.863,394,3.707,415,2.584,453,4.87,480,2.903,481,3.945,482,5.236,483,4.578,486,3.413,488,2.709,489,3.121,491,4.165,493,3.121,494,3.121,496,5.219,497,3.413,499,5.219,500,3.413,504,2.729,505,2.903,506,3.253,507,2.017,508,3.394,509,5.219,510,3.272,511,3.707,512,3.529,513,3.529,514,4.578,515,3.255,516,1.366,517,1.831,518,3.121,519,3.121,520,2.729,521,2.729,522,1.888,523,3.121,524,3.413,525,3.856,526,3.856,527,3.856,528,3.856,529,3.856,530,3.856,531,3.856,532,3.856,533,3.856,534,3.856,535,3.856]],["title/modules/AgentsModule.html",[138,1.521,536,3.16]],["body/modules/AgentsModule.html",[0,0.213,3,0.235,4,0.198,5,0.21,21,0.008,22,1.277,29,0.323,36,1.052,37,0.247,58,0.007,59,0.007,97,1.972,138,2.603,339,3.644,372,5.586,382,6.075,383,2.759,423,5.927,424,5.289,536,6.01,537,2.753,538,2.927,539,3.126,540,3.126,541,3.126,542,4.082,543,4.221,544,5.289,545,5.289,546,5.289,547,3.881,548,3.023,549,3.126,550,5.976,551,4.005,552,4.837,553,5.976,554,3.238,555,4.229,556,5.976,557,3.813]],["title/injectables/AgentsService.html",[101,1.097,423,3.008]],["body/injectables/AgentsService.html",[0,0.112,3,0.124,4,0.104,5,0.111,7,0.262,8,0.624,9,2.808,10,1.989,11,1.252,12,2.909,15,1.09,18,0.895,20,2.597,21,0.008,22,1.727,23,0.59,25,4.926,29,0.256,36,0.555,37,0.13,49,2.584,55,1.444,58,0.004,59,0.004,65,1.406,85,0.956,87,1.943,89,3.337,97,1.04,99,0.95,101,1.109,102,3.354,103,1.298,105,1.913,106,2.681,107,2.681,114,1.773,134,3.706,150,5.372,152,4.538,153,1.437,154,3.029,155,2.681,156,2.584,157,2.335,158,3.195,159,3.042,160,3.042,161,3.042,162,4.073,163,3.195,164,3.269,166,2.113,167,5.157,168,4.035,169,5.516,171,4.638,172,4.393,173,2.39,174,3.355,175,2.113,176,3.195,178,1.371,179,2.113,180,3.178,182,2.113,183,4.052,184,4.942,186,2.113,188,2.231,190,2.113,192,1.844,193,4.297,195,2.373,197,3.599,198,1.922,199,1.922,200,1.922,201,1.922,339,1.922,423,3.042,456,1.202,552,2.551,558,2.79,559,2.373,560,3.152,561,2.373,562,2.551,563,2.551,564,2.373,565,2.373,566,2.373,567,2.373,568,2.551,569,2.551,570,2.373,571,2.373,572,2.373,573,3.152]],["title/classes/AgentsUpdateDto.html",[0,0.168,415,3.16]],["body/classes/AgentsUpdateDto.html",[0,0.295,2,0.967,3,0.202,4,0.17,5,0.181,21,0.008,23,0.579,29,0.316,32,1.421,37,0.311,40,1.135,55,1.5,58,0.006,59,0.006,85,1.6,87,1.738,297,1.517,341,3.874,343,2.52,344,3.283,345,3.138,346,3.874,347,2.371,348,3.874,349,3.138,371,3.449,392,4.52,394,3.449,415,4.52,453,3.874,480,3.874,481,4.113,482,4.165,488,2.52,496,5.351,499,5.351,506,3.402,507,2.692,508,3.667,509,5.7,510,3.805,511,4.52,512,4.303,513,4.303,514,5.325,515,3.606,516,1.822,517,2.443,518,4.165,519,4.165,520,3.642,521,3.642,522,2.52,523,5.459]],["title/classes/AllExceptionFilter.html",[0,0.168,574,3.816]],["body/classes/AllExceptionFilter.html",[0,0.216,2,1.14,3,0.238,4,0.201,5,0.213,7,0.503,10,2.098,11,0.893,18,0.633,20,1.788,21,0.008,22,1.296,23,0.4,29,0.278,36,1.068,37,0.251,56,1.536,58,0.007,59,0.007,123,2.434,144,1.85,153,2.257,173,1.829,214,5.019,390,4.058,461,2.714,574,6.575,575,6.628,576,5.369,577,6.575,578,4.438,579,6.061,580,5.75,581,6.867,582,6.066,583,3.87,584,3.87,585,4.91,586,4.567,587,4.91,588,4.91,589,5.638,590,6.066,591,5.369,592,2.639,593,5.369,594,6.066,595,6.066,596,4.91,597,2.971]],["title/controllers/AppController.html",[381,1.753,598,3.55]],["body/controllers/AppController.html",[0,0.219,1,3.954,3,0.242,4,0.204,5,0.216,7,0.511,11,0.907,18,0.642,20,1.816,21,0.008,22,1.316,23,0.406,29,0.317,36,1.084,37,0.255,55,1.348,56,1.56,58,0.007,59,0.007,65,1.816,85,1.515,92,1.463,123,2.471,153,2.279,173,1.857,381,2.81,383,2.29,390,4.828,396,4.988,425,3.756,454,3.115,456,2.348,598,5.691,599,5.451,600,6.69,601,6.159,602,6.159,603,5.481,604,5.451,605,6.159,606,6.159,607,6.159]],["title/modules/AppModule.html",[138,1.521,608,3.55]],["body/modules/AppModule.html",[0,0.17,3,0.187,4,0.157,5,0.167,21,0.008,24,2.678,29,0.336,36,0.839,37,0.197,56,1.206,58,0.006,59,0.006,69,5.793,72,4.679,74,2.905,76,2.905,79,2.905,97,1.572,99,1.931,108,2.409,127,3.351,138,2.335,144,1.085,154,2.504,297,1.404,383,2.382,537,2.194,538,2.333,539,2.492,540,2.492,541,2.492,542,3.662,543,2.492,547,3.351,548,2.409,549,2.492,551,3.192,554,4.378,557,4.619,580,3.371,598,5.45,603,5.577,604,4.215,608,6.663,609,4.215,610,4.215,611,4.215,612,5.718,613,5.718,614,4.762,615,4.762,616,4.215,617,6.267,618,4.762,619,4.762,620,3.371,621,3.192,622,4.762,623,3.586,624,3.855,625,4.762,626,6.406,627,4.762,628,4.762,629,4.762,630,4.762,631,5.124,632,6.406,633,4.762,634,4.762,635,4.762,636,4.762,637,4.762,638,4.762,639,3.039,640,4.762,641,4.762,642,4.762,643,3.586,644,4.762,645,4.762,646,4.762,647,4.215,648,4.762,649,4.762,650,4.762]],["title/injectables/AppService.html",[101,1.097,603,3.16]],["body/injectables/AppService.html",[0,0.186,3,0.205,4,0.173,5,0.184,7,0.434,8,0.893,9,3.159,10,2.623,11,1.227,12,4.553,15,1.809,18,0.908,20,1.543,21,0.008,22,1.457,23,0.549,29,0.318,30,2.562,36,0.921,37,0.216,55,1.374,56,1.325,58,0.006,59,0.006,65,2.01,85,1.366,98,2.484,101,1.586,102,4.552,103,2.155,105,2.735,106,3.834,107,3.834,114,2.942,153,2.055,173,1.577,197,3.4,198,3.191,199,3.191,200,3.191,201,3.191,456,1.994,600,7.112,603,4.569,651,4.63,652,5.385,653,4.63,654,6.817,655,5.231,656,7.112,657,5.231,658,3.506,659,4.235,660,4.235,661,4.235,662,5.231,663,3.703,664,4.63,665,5.231,666,5.231,667,4.63,668,3.939,669,5.231,670,4.235]],["title/controllers/AuthController.html",[381,1.753,671,3.55]],["body/controllers/AuthController.html",[0,0.149,1,3.069,3,0.164,4,0.138,5,0.147,7,0.348,9,1.483,11,1.08,12,3.424,15,1.449,18,0.765,20,2.162,21,0.008,22,1.567,23,0.527,29,0.321,30,2.051,32,1.156,36,0.738,37,0.173,40,0.915,55,1.472,56,1.858,58,0.005,59,0.005,65,1.235,85,1.176,92,1.743,105,1.68,123,1.68,129,4.452,136,2.051,137,2.965,144,1.541,153,1.768,154,3.044,173,2.211,174,3.547,221,2.942,233,2.555,269,4.152,351,2.293,381,1.557,383,1.557,385,2.191,390,4.807,391,4.515,396,5.195,419,2.191,422,2.672,425,2.555,430,2.45,450,2.965,456,1.597,469,4.791,671,4.416,672,3.707,673,3.39,674,5.192,675,5.866,676,5.866,677,4.188,678,5.506,679,4.188,680,4.188,681,4.188,682,4.128,683,5.866,684,4.188,685,4.188,686,5.866,687,4.188,688,4.188,689,4.319,690,4.188,691,4.188,692,3.707,693,4.188,694,3.707,695,3.577,696,3.707,697,2.965,698,2.45,699,5.479,700,4.188,701,4.188,702,3.154,703,4.188,704,4.188,705,4.188,706,4.188,707,5.936,708,4.188,709,4.188,710,4.188,711,4.188,712,4.188,713,4.188,714,3.707,715,4.188,716,4.188,717,4.188,718,4.188,719,4.188]],["title/injectables/AuthGuard.html",[101,1.097,697,3.337]],["body/injectables/AuthGuard.html",[0,0.204,3,0.225,4,0.19,5,0.201,7,0.476,11,1.065,15,1.982,18,0.754,20,2.131,21,0.008,22,1.544,23,0.476,24,3.224,29,0.319,30,2.808,36,1.009,37,0.237,55,1.413,56,1.452,58,0.006,59,0.006,65,1.69,85,1.449,101,1.681,103,2.361,144,1.305,153,2.179,173,1.728,174,3.059,454,2.9,456,2.185,488,3.541,694,5.074,697,5.604,698,3.353,720,5.074,721,7.229,722,7.229,723,5.732,724,8.752,725,5.732,726,7.229,727,7.359,728,5.732,729,7.918,730,5.732,731,5.074,732,4.64,733,7.229,734,5.732,735,5.732,736,5.732,737,5.732]],["title/modules/AuthModule.html",[138,1.521,738,3.337]],["body/modules/AuthModule.html",[0,0.19,3,0.209,4,0.176,5,0.187,21,0.008,29,0.333,36,0.939,37,0.22,58,0.006,59,0.006,69,5.858,74,3.251,138,2.468,154,2.387,383,2.566,536,5.755,537,2.456,538,2.611,539,2.789,540,2.789,541,2.789,542,3.871,543,2.789,547,3.61,548,2.697,549,2.789,554,4.386,557,4.403,617,6.194,631,4.884,671,5.762,695,5.237,698,3.118,738,6.473,739,4.718,740,5.331,741,4.718,742,6.078,743,6.078,744,5.331,745,5.331,746,4.718,747,4.315,748,5.331,749,5.331,750,5.331,751,4.315,752,3.773,753,5.331,754,5.331,755,5.331,756,5.331,757,5.331,758,5.331]],["title/injectables/AuthService.html",[101,1.097,695,2.875]],["body/injectables/AuthService.html",[0,0.082,3,0.091,4,0.077,5,0.131,7,0.192,8,0.49,9,3.082,10,1.63,11,1.114,12,3.643,15,1.295,18,0.865,20,1.974,21,0.008,22,1.431,23,0.516,25,2.105,29,0.303,30,1.134,36,0.408,37,0.096,40,1.043,42,0.929,43,0.905,44,1.099,53,1.427,55,1.414,56,1.916,58,0.003,59,0.003,65,2.424,70,4.488,76,1.412,85,0.75,87,1.265,88,1.302,101,0.871,102,3.503,103,0.953,105,2.173,106,2.105,107,2.105,114,1.302,127,1.211,129,2.554,134,1.995,136,1.134,137,1.638,141,2.19,144,1.854,153,1.129,154,2.933,168,2.495,173,2.019,174,3.364,178,2.767,183,1.211,197,2.291,198,1.412,199,1.412,200,1.412,201,1.412,214,1.551,221,3.144,269,1.638,282,1.477,327,2.847,329,1.787,339,1.412,345,3.626,349,2.283,376,1.254,423,4.273,456,0.882,475,1.302,552,1.874,578,1.959,623,1.743,653,2.049,659,1.874,660,1.874,661,1.874,663,1.638,667,2.049,668,1.743,674,3.314,678,4.672,682,1.412,689,4.826,695,2.283,702,1.743,714,7.037,752,1.638,759,2.049,760,4.714,761,4.714,762,4.714,763,4.714,764,4.714,765,4.714,766,3.744,767,4.714,768,3.744,769,6.362,770,3.744,771,3.744,772,6.696,773,3.744,774,3.744,775,2.315,776,3.744,777,2.315,778,2.315,779,2.315,780,3.744,781,2.315,782,2.315,783,3.744,784,2.315,785,3.744,786,2.315,787,1.412,788,3.021,789,3.314,790,3.744,791,2.315,792,6.696,793,2.315,794,3.744,795,3.744,796,2.315,797,3.744,798,3.744,799,3.744,800,2.315,801,2.315,802,3.03,803,3.03,804,2.315,805,1.874,806,3.03,807,2.315,808,2.315,809,2.049,810,2.315,811,2.049,812,3.314,813,2.049,814,2.315,815,1.551,816,2.049,817,3.744,818,2.819,819,2.315,820,1.743,821,1.743,822,2.315,823,2.315,824,1.874,825,3.744,826,2.315,827,2.315,828,2.315,829,3.167,830,2.315,831,2.315,832,2.315,833,2.049,834,2.315,835,2.819,836,2.315,837,2.315,838,2.315,839,2.315,840,3.744,841,2.315,842,4.714,843,2.315,844,1.743,845,4.714,846,2.049,847,2.315,848,2.315,849,2.315,850,2.315,851,3.744,852,2.315,853,2.315,854,3.744,855,3.744,856,2.315,857,2.315,858,3.744,859,2.315,860,2.315,861,3.744,862,2.315,863,4.714,864,2.315,865,3.744,866,3.744,867,5.415,868,4.714,869,2.315,870,2.315,871,2.315,872,2.315,873,2.315,874,3.744,875,2.315,876,2.315,877,2.315,878,2.315,879,2.315,880,2.049,881,3.744,882,3.744,883,2.315,884,2.315,885,2.315]],["title/interfaces/AutoIncrementPluginOptions.html",[38,1.421,886,3.55]],["body/interfaces/AutoIncrementPluginOptions.html",[3,0.169,4,0.143,5,0.151,7,0.358,8,0.784,11,1.303,21,0.008,22,1.469,23,0.545,29,0.16,37,0.284,38,1.804,40,1.131,41,2.864,42,1.729,43,1.685,44,2.046,58,0.005,59,0.005,60,1.929,86,2.931,87,2.509,99,1.299,155,4.176,164,3.833,267,2.757,293,5.256,327,3.884,331,1.603,375,2.336,376,2.336,435,3.131,475,3.365,788,3.704,886,4.506,887,3.051,888,3.245,889,5.878,890,6.573,891,6.573,892,6.573,893,6.573,894,6.573,895,6.315,896,6.357,897,5.297,898,6.011,899,5.297,900,6.079,901,4.235,902,7.588,903,5.297,904,5.297,905,4.506,906,4.844,907,5.297,908,5.297,909,5.297,910,4.506,911,5.297,912,4.844,913,5.297,914,5.297,915,5.297,916,5.297,917,3.489,918,3.489,919,3.489,920,3.245,921,4.506]],["title/interfaces/AutoIncrementPluginTrackerSpec.html",[38,1.421,920,3.55]],["body/interfaces/AutoIncrementPluginTrackerSpec.html",[3,0.195,4,0.164,5,0.174,7,0.412,8,0.863,21,0.008,22,1.407,23,0.519,29,0.185,37,0.306,38,1.985,40,1.129,41,2.833,42,1.992,43,1.941,44,2.357,58,0.006,59,0.006,60,2.221,86,2.431,87,2.225,99,1.496,155,4.831,164,3.998,267,2.287,293,4.662,327,3.666,331,2.449,375,2.69,376,2.69,435,2.597,475,2.792,886,3.738,887,3.513,888,3.738,889,5.976,890,4.394,891,4.394,892,4.394,893,4.394,894,4.394,895,5.983,896,5.927,897,4.394,898,5.331,899,4.394,900,6.648,901,3.513,902,7.453,903,4.394,904,4.394,905,3.738,906,4.018,907,4.394,908,4.394,909,4.394,910,3.738,911,4.394,912,4.018,913,4.394,914,4.394,915,4.394,916,4.394,917,4.018,918,4.018,919,4.018,920,4.959,921,5.927]],["title/controllers/BackendsController.html",[381,1.753,922,3.55]],["body/controllers/BackendsController.html",[0,0.179,3,0.197,4,0.166,5,0.176,7,0.416,10,2.294,11,0.977,18,0.692,20,1.956,21,0.008,22,1.417,23,0.437,29,0.306,32,1.385,36,0.883,37,0.207,39,2.807,53,1.912,56,1.68,58,0.006,59,0.006,65,1.479,92,1.576,105,2.013,123,2.013,144,1.51,153,1.999,154,2.921,173,1.999,174,3.345,221,2.661,381,1.865,383,1.865,385,2.625,390,4.668,396,5.014,430,2.934,450,3.551,454,2.538,589,4.994,692,4.441,697,3.551,698,2.934,922,4.994,923,4.441,924,6.19,925,5.871,926,7.475,927,5.017,928,5.017,929,4.994,930,5.017,931,7.905,932,3.091,933,6.633,934,6.633,935,6.633,936,5.017,937,5.017,938,5.017,939,5.017,940,6.633,941,5.017,942,4.98,943,4.441,944,7.43,945,7.43,946,6.576,947,5.017,948,5.017,949,5.017,950,6.633,951,3.777,952,6.633,953,5.017,954,4.694,955,5.017,956,6.633,957,5.017,958,5.017,959,5.017]],["title/modules/BackendsModule.html",[138,1.521,960,3.337]],["body/modules/BackendsModule.html",[0,0.226,3,0.249,4,0.21,5,0.223,21,0.008,29,0.32,36,1.119,37,0.263,58,0.007,59,0.007,74,3.875,138,2.674,383,2.864,537,2.927,538,3.112,539,3.324,540,3.324,541,3.324,542,4.194,543,3.324,547,4.03,548,3.214,549,3.324,554,3.443,617,6.235,922,6.242,942,6.015,943,5.623,960,6.353,961,5.623,962,5.623,963,6.353,964,6.353]],["title/injectables/BackendsService.html",[101,1.097,942,3.16]],["body/injectables/BackendsService.html",[0,0.184,3,0.203,4,0.171,5,0.182,7,0.429,8,0.886,9,3.017,11,0.762,15,2.341,18,0.866,20,1.525,21,0.008,22,1.105,23,0.497,29,0.309,36,0.911,37,0.214,56,1.714,58,0.006,59,0.006,63,5.877,65,2.511,66,5.339,67,6.106,69,5.709,70,5.9,74,3.155,76,3.155,85,1.357,101,1.574,103,2.131,127,2.707,144,1.541,153,2.04,154,2.946,173,2.04,197,2.864,221,3.21,584,4.318,623,3.896,806,5.478,925,7.082,926,7.082,942,4.536,965,4.579,966,5.174,967,5.174,968,5.174,969,5.174,970,5.174,971,5.174,972,4.579,973,4.579,974,5.991,975,5.174,976,5.991,977,5.991,978,4.536,979,5.991,980,5.991,981,5.991,982,5.174]],["title/interfaces/ConfigInstance.html",[38,1.421,983,3.55]],["body/interfaces/ConfigInstance.html",[3,0.225,4,0.134,5,0.143,7,0.337,8,0.752,21,0.008,23,0.604,29,0.294,32,1.121,37,0.275,38,1.73,40,1.101,42,1.629,43,1.588,44,1.928,45,2.477,46,2.722,47,2.722,58,0.005,59,0.005,60,1.818,76,4.832,97,1.341,99,2.301,129,2.201,134,1.719,168,3.995,269,2.875,297,1.963,323,2.376,327,1.818,329,1.341,351,3.423,488,1.989,620,4.063,621,3.847,624,4.646,639,4.616,652,2.722,682,4.832,698,2.376,747,4.646,751,4.646,752,2.875,815,3.847,824,3.288,901,2.875,954,2.875,983,5.012,984,3.288,985,5.115,986,6.413,987,6.178,988,5.402,989,7.012,990,6.413,991,6.404,992,5.081,993,3.847,994,4.646,995,4.063,996,5.081,997,4.322,998,3.595,999,3.595,1000,3.595,1001,3.288,1002,3.595,1003,7.208,1004,3.595,1005,3.595,1006,3.595,1007,3.595,1008,3.595,1009,3.595,1010,3.595,1011,3.595,1012,3.595,1013,3.595,1014,3.595,1015,3.595,1016,3.595,1017,3.595,1018,3.595,1019,3.595,1020,3.595,1021,3.595,1022,3.595,1023,3.595,1024,3.595,1025,3.595,1026,3.595,1027,3.595,1028,3.595,1029,3.595,1030,3.595]],["title/classes/ConfigObjectAttributeDTO.html",[0,0.168,1031,3.337]],["body/classes/ConfigObjectAttributeDTO.html",[0,0.303,2,1.047,3,0.219,4,0.184,5,0.196,7,0.463,8,0.93,18,0.858,21,0.008,22,1.758,23,0.599,29,0.29,37,0.323,40,1.102,58,0.006,59,0.006,92,1.955,297,2.094,320,3.715,321,2.916,324,3.219,488,3.478,508,3.782,510,3.953,512,4.986,516,1.974,517,2.646,522,3.478,1031,5.824,1032,4.196,1033,6.661,1034,5.573,1035,5.573,1036,5.573,1037,5.884,1038,5.573,1039,5.573,1040,5.748,1041,3.134,1042,4.511,1043,4.511,1044,5.531,1045,3.556]],["title/classes/ConfigObjectObjectClassDTO.html",[0,0.168,1044,3.337]],["body/classes/ConfigObjectObjectClassDTO.html",[0,0.304,2,1.069,3,0.223,4,0.188,5,0.2,7,0.472,8,0.942,18,0.823,21,0.008,22,1.771,23,0.584,29,0.293,37,0.326,40,1.12,58,0.006,59,0.006,92,1.874,297,2.12,320,4.337,321,2.975,324,2.342,488,2.785,508,3.798,510,3.99,512,4.589,516,2.014,517,2.7,522,3.522,1031,5.583,1032,4.281,1033,6.71,1037,5.415,1040,6.385,1041,3.198,1042,4.602,1043,4.602,1044,5.867,1045,3.628,1046,5.686,1047,5.686,1048,5.686]],["title/classes/ConfigObjectSchemaDTO.html",[0,0.168,1045,3.008]],["body/classes/ConfigObjectSchemaDTO.html",[0,0.306,2,1.086,3,0.227,4,0.191,5,0.203,7,0.48,8,0.952,18,0.758,21,0.008,22,1.552,23,0.578,29,0.295,37,0.329,40,1.072,58,0.006,59,0.006,92,1.726,297,2.142,320,4.362,321,4.158,324,2.381,488,2.831,508,3.711,510,4.02,512,4.636,516,2.047,517,2.744,522,3.559,1031,5.902,1032,4.351,1033,5.881,1037,5.471,1040,5.881,1041,3.25,1042,4.678,1043,4.678,1044,5.902,1045,4.636,1049,5.881,1050,5.881,1051,5.779,1052,5.779]],["title/classes/ConsoleSession.html",[0,0.168,818,3.55]],["body/classes/ConsoleSession.html",[0,0.201,2,1.06,3,0.221,4,0.186,5,0.198,7,0.468,8,0.937,15,2.718,18,0.89,21,0.008,23,0.544,29,0.21,37,0.233,40,1.087,53,2.728,55,1.532,58,0.006,59,0.006,65,2.718,87,2.655,89,3.297,98,2.678,99,1.7,327,3.699,343,3.849,349,4.793,371,5.267,788,3.924,818,5.387,1053,7.714,1054,4.992,1055,7.155,1056,7.155,1057,5.64,1058,5.85,1059,7.155,1060,5.64,1061,5.64]],["title/controllers/CoreController.html",[381,1.753,1062,3.55]],["body/controllers/CoreController.html",[0,0.241,3,0.266,4,0.224,5,0.238,21,0.008,29,0.317,32,1.868,36,1.191,37,0.28,55,1.115,58,0.007,59,0.007,65,1.995,381,2.516,383,2.516,385,3.539,430,3.957,450,4.789,454,3.422,455,4.126,1062,6.023,1063,5.988,1064,5.988,1065,5.361,1066,5.988,1067,6.765]],["title/modules/CoreModule.html",[138,1.521,612,3.337]],["body/modules/CoreModule.html",[0,0.185,3,0.204,4,0.172,5,0.183,18,0.543,21,0.008,29,0.331,30,2.548,36,0.916,37,0.215,55,0.858,56,1.318,58,0.006,59,0.006,138,2.586,153,1.568,173,1.568,383,2.526,452,4.553,536,5.718,537,2.397,538,2.548,539,2.722,540,2.722,541,2.722,542,3.826,543,2.722,547,3.554,548,2.632,549,2.722,554,4.099,612,6.563,738,6.038,815,3.487,960,6.038,1062,5.694,1064,4.605,1065,5.718,1066,4.605,1068,4.605,1069,4.605,1070,4.605,1071,6.038,1072,6.038,1073,5.202,1074,6.694,1075,5.202,1076,6.694,1077,4.605,1078,5.202,1079,5.202,1080,5.202,1081,5.202,1082,5.202,1083,5.202,1084,4.605,1085,4.605,1086,4.605]],["title/injectables/CoreService.html",[101,1.097,1065,3.16]],["body/injectables/CoreService.html",[0,0.247,3,0.273,4,0.23,5,0.244,15,2.978,18,0.725,21,0.008,29,0.258,36,1.224,37,0.287,55,1.34,58,0.007,59,0.007,101,1.89,103,2.862,1065,5.446,1087,6.151,1088,6.949]],["title/classes/CustomFieldsDto.html",[0,0.168,481,2.875]],["body/classes/CustomFieldsDto.html",[0,0.277,2,1.216,3,0.254,4,0.214,5,0.227,7,0.537,8,1.02,11,1.147,18,0.675,21,0.008,23,0.513,29,0.29,37,0.268,39,2.738,40,0.807,55,1.377,58,0.007,59,0.007,92,1.537,333,3.698,334,3.169,335,3.169,342,5.601,351,2.53,481,4.75,504,4.579,510,3.94,515,3.388,516,2.292,1089,6.894,1090,5.727,1091,6.47,1092,4.555]],["title/injectables/DtoValidationPipe.html",[101,1.097,1093,3.55]],["body/injectables/DtoValidationPipe.html",[0,0.165,3,0.181,4,0.153,5,0.162,7,0.384,9,1.637,10,1.598,11,0.924,15,1.598,18,0.655,20,1.851,21,0.008,22,1.341,23,0.414,29,0.265,30,2.264,36,0.814,37,0.191,38,1.393,39,1.956,40,0.954,53,1.762,55,1.318,56,1.806,58,0.006,59,0.006,65,1.363,85,1.258,101,1.46,103,1.904,108,4.268,123,1.854,144,1.742,153,1.892,157,2.264,173,1.393,235,3.271,297,1.851,322,4.076,327,2.068,385,4.001,419,2.418,456,1.762,461,2.068,475,3.53,592,2.731,597,3.492,631,3.271,788,2.194,820,3.48,821,3.48,978,4.207,1093,5.368,1094,5.771,1095,3.48,1096,6.31,1097,6.21,1098,4.622,1099,4.622,1100,5.556,1101,6.021,1102,4.622,1103,4.727,1104,5.556,1105,4.091,1106,4.091,1107,3.741,1108,4.091,1109,4.091,1110,4.091,1111,4.091,1112,4.207,1113,3.741,1114,2.068,1115,2.194,1116,4.091,1117,3.741,1118,4.091,1119,4.091,1120,4.091,1121,3.741,1122,4.091,1123,4.091,1124,4.091,1125,3.271,1126,4.091,1127,5.556,1128,4.091,1129,4.091,1130,4.091,1131,4.091,1132,4.091,1133,4.091,1134,5.556,1135,4.091,1136,4.091,1137,4.091]],["title/classes/ErrorSchemaDto.html",[0,0.168,1138,3.816]],["body/classes/ErrorSchemaDto.html",[0,0.202,2,1.069,3,0.223,4,0.188,5,0.2,7,0.472,8,0.942,11,1.221,18,0.865,21,0.008,23,0.575,29,0.267,32,1.57,36,1.001,37,0.235,39,3.043,40,1.067,42,2.281,43,2.223,44,2.7,55,1.521,58,0.006,59,0.006,92,1.97,180,2.063,322,3.745,351,2.812,376,3.081,419,4.127,461,3.53,506,3.337,592,3.431,1125,4.024,1138,5.821,1139,7.568,1140,5.033,1141,7.888,1142,5.686,1143,5.686,1144,4.602,1145,5.686,1146,5.686,1147,2.544]],["title/classes/Form.html",[0,0.168,1148,3.008]],["body/classes/Form.html",[0,0.175,2,0.926,3,0.193,4,0.163,5,0.173,7,0.409,8,0.858,18,0.908,21,0.008,23,0.605,29,0.304,37,0.271,39,2.086,40,1.12,41,2.267,58,0.006,59,0.006,83,3.552,85,0.988,92,2.07,93,3.991,96,4.782,97,1.627,144,1.122,180,2.378,243,3.211,327,3.513,329,1.627,331,2.437,332,2.579,333,3.112,334,2.414,335,2.414,351,1.927,366,3.304,370,3.304,912,3.99,932,2.88,1147,2.933,1148,4.183,1149,3.99,1150,5.213,1151,5.213,1152,3.991,1153,4.492,1154,4.308,1155,3.296,1156,4.929,1157,4.929,1158,4.929,1159,6.948,1160,5.545,1161,4.929,1162,4.929,1163,4.929,1164,4.929,1165,4.429,1166,4.929,1167,2.883,1168,3.711,1169,4.929,1170,4.929,1171,4.363,1172,3.711,1173,4.363]],["title/controllers/FormController.html",[381,1.753,1174,3.55]],["body/controllers/FormController.html",[0,0.117,1,2.573,3,0.129,4,0.109,5,0.115,7,0.273,9,1.163,11,1.032,18,0.731,20,2.067,21,0.008,22,1.676,23,0.559,29,0.321,32,0.907,36,0.578,37,0.136,40,0.735,55,1.425,56,1.775,58,0.004,59,0.004,65,1.45,85,0.986,87,2.837,89,3.695,92,1.665,98,1.559,99,0.99,123,1.318,144,1.596,153,1.483,154,2.989,156,2.665,157,1.609,162,3.315,173,2.113,174,2.081,178,3.553,183,1.718,192,1.921,221,2.812,267,3.229,313,1.847,381,1.221,383,1.221,385,1.718,386,3.951,387,3.703,388,4.438,389,2.473,390,4.718,391,4.777,396,5.375,397,2.473,398,3.703,399,5.539,400,5.539,401,4.438,404,2.473,405,3.703,408,2.473,409,5.539,410,4.928,411,5.539,412,4.928,413,2.473,416,3.981,419,1.718,420,2.325,421,2.659,422,3.138,425,2.003,426,2.325,427,5.277,428,2.659,429,4.928,430,1.921,431,2.201,432,3.703,433,4.176,438,2.201,439,2.325,440,2.473,441,2.473,442,2.325,443,2.201,444,2.473,445,2.201,446,2.473,447,3.481,448,2.473,449,2.473,452,2.201,454,1.661,455,2.003,456,1.252,458,2.659,459,2.473,460,2.473,461,3.137,462,2.201,467,3.481,468,2.473,469,4.633,470,4.387,471,4.438,473,2.473,474,2.473,477,2.659,479,2.473,584,4.176,932,1.284,946,4.353,1148,2.096,1152,1.78,1154,1.921,1155,1.47,1174,3.703,1175,2.907,1176,5.375,1177,3.284,1178,3.284,1179,3.284,1180,3.284,1181,3.284,1182,3.284,1183,3.284,1184,3.284,1185,4.387,1186,3.284,1187,3.284,1188,3.284,1189,3.296,1190,2.907,1191,3.284,1192,3.284,1193,3.284,1194,3.284,1195,4.918,1196,3.284,1197,3.284,1198,3.284,1199,3.284,1200,3.284]],["title/classes/FormCreateDto.html",[0,0.168,1201,3.337]],["body/classes/FormCreateDto.html",[0,0.281,2,0.838,3,0.175,4,0.147,5,0.157,7,0.37,8,0.802,11,1.202,18,0.901,21,0.008,23,0.602,29,0.311,32,1.232,37,0.289,39,2.593,40,1.11,55,1.01,58,0.005,59,0.005,85,1.51,88,3.446,92,2.052,197,1.888,297,1.807,324,2.883,329,2.693,333,2.909,334,2.185,335,2.185,351,2.396,506,3.212,507,2.334,508,3.342,510,3.1,513,2.846,515,3.278,516,1.58,517,2.118,522,2.185,932,2.736,1041,2.509,1049,3.611,1050,3.611,1092,4.094,1147,1.996,1150,4.954,1151,4.954,1152,3.793,1153,4.269,1154,4.094,1155,3.132,1165,3.793,1167,2.609,1176,2.99,1185,2.99,1201,4.954,1202,3.358,1203,5.05,1204,5.423,1205,4.461,1206,3.611,1207,4.461,1208,4.461,1209,4.461,1210,4.691,1211,4.461,1212,4.461,1213,4.461,1214,3.948,1215,4.954,1216,4.461,1217,4.107,1218,3.611,1219,3.948,1220,3.611,1221,5.05,1222,3.611,1223,3.611,1224,3.611]],["title/classes/FormDto.html",[0,0.168,1176,3.16]],["body/classes/FormDto.html",[0,0.279,2,0.818,3,0.171,4,0.144,5,0.153,7,0.361,8,0.789,11,1.192,18,0.896,21,0.008,23,0.6,29,0.309,32,1.201,37,0.286,39,2.548,40,1.105,55,0.993,58,0.005,59,0.005,85,1.494,88,3.387,92,2.041,197,3.635,297,1.776,324,2.845,329,2.673,333,2.859,334,2.131,335,2.131,351,2.355,506,3.194,507,2.276,508,3.312,510,3.046,513,2.776,515,3.243,516,1.541,517,2.065,522,2.131,932,2.701,1041,2.446,1049,3.521,1050,3.521,1092,4.04,1147,1.947,1150,4.889,1151,4.889,1152,3.743,1153,4.213,1154,4.04,1155,3.091,1165,3.743,1167,2.544,1176,4.036,1185,2.916,1201,6.218,1202,3.275,1203,4.63,1204,5.331,1206,3.521,1210,4.63,1214,3.85,1215,4.889,1217,4.036,1218,3.521,1219,3.85,1220,3.521,1221,4.997,1222,3.521,1223,3.521,1224,3.521,1225,4.35,1226,4.35,1227,4.35,1228,4.35,1229,4.35,1230,4.35,1231,4.35,1232,4.35]],["title/classes/FormFieldDto.html",[0,0.168,1233,3.55]],["body/classes/FormFieldDto.html",[0,0.231,2,0.91,3,0.19,4,0.16,5,0.17,7,0.402,8,0.849,18,0.926,21,0.008,23,0.603,29,0.271,32,1.338,37,0.2,40,1.117,41,2.696,58,0.006,59,0.006,92,2.109,164,3.467,333,3.97,334,2.373,335,2.373,351,3.177,506,3.329,508,3.299,510,4.23,516,1.716,788,3.467,1210,4.894,1233,4.879,1234,4.288,1235,4.894,1236,4.894,1237,4.894,1238,4.894,1239,4.894,1240,4.894,1241,4.894,1242,4.453,1243,4.894,1244,8.126,1245,4.844,1246,4.844,1247,4.844,1248,4.844,1249,4.844,1250,6.48,1251,4.844,1252,4.844,1253,4.844,1254,4.844,1255,4.844,1256,5.168,1257,5.751]],["title/classes/FormFieldPart.html",[0,0.168,1258,3.55]],["body/classes/FormFieldPart.html",[0,0.159,2,0.838,3,0.175,4,0.147,5,0.157,7,0.37,8,0.802,18,0.912,21,0.008,23,0.608,29,0.228,37,0.253,40,1.101,41,2.606,58,0.005,59,0.005,92,2.077,93,4.28,96,4.763,97,1.472,144,1.016,164,3.323,180,2.866,243,4.522,327,3.911,331,2.278,332,2.334,333,3.874,334,2.185,335,2.185,351,3.088,788,3.323,1235,4.691,1236,4.691,1237,4.691,1238,4.691,1239,4.691,1240,4.691,1241,4.691,1242,4.269,1243,4.691,1257,5.59,1258,4.613,1259,3.611,1260,4.461,1261,4.461,1262,4.461,1263,4.461,1264,4.461,1265,4.461,1266,4.461,1267,4.461,1268,4.461,1269,4.461,1270,3.611,1271,3.948]],["title/modules/FormModule.html",[138,1.521,1272,3.55]],["body/modules/FormModule.html",[0,0.218,3,0.24,4,0.202,5,0.215,21,0.008,22,1.307,29,0.325,36,1.077,37,0.253,58,0.007,59,0.007,97,2.019,138,2.63,383,2.799,537,2.819,538,2.997,539,3.201,540,3.201,541,3.201,542,4.125,543,3.201,547,3.939,548,3.095,549,3.201,551,4.101,554,3.316,555,4.331,557,3.904,1148,3.904,1172,5.668,1174,6.14,1189,5.961,1190,5.416,1272,6.697,1273,5.416,1274,5.416,1275,6.118,1276,5.416,1277,6.118,1278,6.118]],["title/classes/FormSectionDto.html",[0,0.168,1221,3.16]],["body/classes/FormSectionDto.html",[0,0.263,2,0.931,3,0.195,4,0.164,5,0.174,7,0.411,8,0.862,11,1.239,18,0.878,21,0.008,23,0.607,29,0.304,32,1.368,37,0.205,40,1.088,58,0.006,59,0.006,92,2,297,1.94,324,3.24,329,2.778,351,2.572,506,3.193,508,3.329,510,3.736,515,3.422,516,1.755,517,2.353,522,3.222,932,2.887,1041,2.787,1092,4.319,1152,4.002,1165,4.002,1167,2.898,1206,5.325,1210,3.321,1221,5.641,1233,6.164,1242,4.504,1279,4.386,1280,4.504,1281,5.977,1282,4.955,1283,6.578,1284,4.955,1285,4.955,1286,4.955,1287,4.955,1288,4.955,1289,4.955,1290,4.955,1291,4.955,1292,4.955,1293,4.955,1294,3.731,1295,3.731]],["title/classes/FormSectionPart.html",[0,0.168,1168,3.55]],["body/classes/FormSectionPart.html",[0,0.187,2,0.987,3,0.206,4,0.174,5,0.184,7,0.436,8,0.895,11,1.259,18,0.892,21,0.008,23,0.609,29,0.282,37,0.283,40,1.139,41,2.363,58,0.006,59,0.006,87,1.774,92,2.032,93,4.635,96,4.556,97,1.733,144,1.196,180,1.905,327,3.058,329,1.733,331,2.541,332,2.747,932,2.97,1147,3.058,1152,4.117,1159,7.816,1160,3.954,1165,4.521,1167,3.071,1168,5.145,1171,4.648,1242,4.633,1258,3.954,1280,4.633,1281,6.149,1296,4.25,1297,5.251,1298,5.251,1299,5.251,1300,5.251,1301,5.251,1302,5.251,1303,5.251,1304,4.648]],["title/injectables/FormService.html",[101,1.097,1189,3.16]],["body/injectables/FormService.html",[0,0.11,3,0.121,4,0.102,5,0.109,7,0.257,8,0.616,9,2.849,10,1.966,11,1.248,12,4.135,15,1.626,18,0.892,20,2.59,21,0.008,22,1.718,23,0.589,25,4.911,29,0.267,30,1.515,36,0.545,37,0.128,49,2.547,55,1.44,58,0.004,59,0.004,65,1.676,85,0.942,87,1.92,89,3.313,97,1.021,99,0.932,101,1.093,102,3.322,103,1.274,105,1.886,106,2.643,107,2.643,114,1.739,134,3.696,150,5.351,152,4.494,153,1.417,154,3.02,155,2.643,156,2.547,157,2.302,158,3.15,159,2.999,160,2.999,161,2.999,162,4.044,163,3.15,164,3.242,166,2.073,167,5.132,168,4.024,169,5.498,171,4.613,172,4.357,173,2.378,174,3.338,175,2.073,176,3.15,178,1.346,179,2.073,180,3.169,182,2.073,183,4.029,184,4.913,186,2.073,188,2.189,190,2.073,192,1.809,193,4.256,195,2.329,197,3.586,198,1.886,199,1.886,200,1.886,201,1.886,456,1.179,559,2.329,561,2.329,562,2.504,563,2.504,564,2.329,565,2.329,566,2.329,567,2.329,568,2.504,569,2.504,570,2.329,571,2.329,572,2.329,1148,1.974,1189,3.15,1276,2.738,1305,2.738,1306,3.093,1307,3.093]],["title/classes/FormUpdateDto.html",[0,0.168,1185,3.16]],["body/classes/FormUpdateDto.html",[0,0.3,2,1.017,3,0.212,4,0.179,5,0.19,21,0.008,23,0.536,29,0.326,32,1.494,37,0.319,39,2.949,40,1.094,58,0.006,59,0.006,85,1.631,297,2.055,324,3.175,329,2.544,333,3.309,334,2.651,335,2.651,506,3.338,507,2.832,508,3.564,510,3.525,513,3.453,515,3.541,516,1.917,517,2.57,522,2.651,932,2.116,1041,3.044,1092,4.508,1147,2.422,1150,3.831,1151,3.831,1152,2.933,1153,3.301,1154,3.166,1155,2.422,1165,3.777,1167,3.166,1176,3.628,1185,4.671,1201,4.933,1202,4.075,1203,4.671,1215,4.933,1220,4.381,1221,5.455,1222,4.381,1223,4.381,1224,5.641]],["title/classes/Identities.html",[0,0.168,1308,2.875]],["body/classes/Identities.html",[0,0.183,2,0.967,3,0.202,4,0.17,5,0.181,7,0.427,8,0.883,18,0.833,21,0.008,23,0.586,29,0.322,37,0.311,41,2.761,58,0.006,59,0.006,83,3.655,85,1.031,86,3.303,92,1.897,93,4.327,96,4.336,97,1.698,99,1.551,144,1.172,180,2.729,297,1.988,318,4.8,324,3.289,327,3.806,329,2.483,331,2.508,332,2.692,336,4.166,337,5.664,347,3.466,366,3.449,370,3.449,1147,3.573,1308,4.588,1309,3.874,1310,4.077,1311,4.8,1312,5.145,1313,5.664,1314,5.145,1315,5.555,1316,5.145,1317,4.661,1318,5.145,1319,3.874,1320,5.145,1321,3.283,1322,5.145,1323,4.554,1324,5.145,1325,4.165,1326,3.642,1327,4.554]],["title/controllers/IdentitiesController.html",[381,1.753,1328,3.337]],["body/controllers/IdentitiesController.html",[0,0.088,1,2.069,3,0.097,4,0.082,5,0.087,7,0.206,9,1.748,11,0.966,15,0.857,18,0.684,20,1.934,21,0.008,22,1.574,23,0.517,29,0.319,32,0.684,36,0.436,37,0.102,40,0.768,55,1.386,56,1.989,58,0.003,59,0.003,65,1.455,85,0.793,86,1.214,87,2.653,89,3.395,92,1.559,98,1.176,99,0.747,123,0.994,134,1.673,144,1.494,153,1.192,154,2.907,156,2.674,157,1.214,162,2.775,163,3.307,173,1.977,174,3.323,178,3.515,183,1.296,192,1.449,221,2.632,267,2.273,282,2.523,313,1.393,322,3.499,333,2.343,334,1.214,335,1.214,336,1.214,347,2.835,381,0.921,383,0.921,385,1.296,386,3.775,387,3.715,388,3.715,389,1.866,390,4.589,391,4.726,396,5.261,397,1.866,398,2.977,399,4.939,400,4.939,401,3.715,404,1.866,405,2.977,408,1.866,409,4.939,410,4.24,411,4.939,412,4.24,413,1.866,416,3.201,419,1.296,420,1.754,421,2.006,422,2.523,425,1.511,426,1.754,427,4.634,428,2.006,429,4.24,430,1.449,431,1.661,432,2.977,433,3.593,434,2.006,435,1.296,436,2.006,438,1.661,439,1.754,440,1.866,441,1.866,442,1.754,443,1.661,444,1.866,445,1.661,446,1.866,447,2.799,448,1.866,449,1.866,452,1.661,455,1.511,456,0.945,459,1.866,461,3.616,462,2.65,467,2.799,468,1.866,469,3.986,470,3.775,471,3.715,473,3.715,474,1.866,477,2.006,479,1.866,578,2.946,584,1.581,589,2.977,592,3.416,597,3.014,689,2.523,829,3.294,1103,2.977,1125,3.986,1280,2.412,1308,2.412,1310,1.343,1317,1.393,1321,1.581,1328,2.799,1329,2.193,1330,4.614,1331,2.478,1332,4.198,1333,2.478,1334,2.478,1335,2.478,1336,2.478,1337,2.478,1338,2.478,1339,3.435,1340,2.478,1341,2.478,1342,2.478,1343,2.478,1344,2.478,1345,2.193,1346,2.523,1347,2.193,1348,2.143,1349,2.006,1350,2.006,1351,2.977,1352,2.478,1353,2.478,1354,2.478,1355,2.006,1356,2.478,1357,2.193,1358,3.954,1359,2.977,1360,2.069,1361,3.5,1362,3.201,1363,3.5,1364,3.5,1365,3.5,1366,3.954,1367,2.799,1368,3.954,1369,3.954,1370,3.5,1371,2.224,1372,3.201,1373,3.954,1374,1.72,1375,2.143,1376,2.65,1377,2.523,1378,3.5,1379,2.523,1380,3.5,1381,3.954,1382,2.478,1383,2.478,1384,2.478,1385,3.954,1386,4.985,1387,4.24,1388,4.985,1389,2.478,1390,1.581,1391,2.478,1392,2.478,1393,2.478]],["title/classes/IdentitiesCreateDto.html",[0,0.168,1330,3.16]],["body/classes/IdentitiesCreateDto.html",[0,0.285,2,0.87,3,0.182,4,0.153,5,0.163,7,0.384,8,0.823,11,0.925,18,0.798,21,0.008,23,0.58,29,0.314,32,1.278,37,0.295,40,0.784,41,2.174,58,0.006,59,0.006,85,1.26,92,1.818,180,1.68,320,3.733,321,3.733,324,1.907,329,2.074,336,3.495,347,3.287,506,2.975,507,2.422,515,2.734,516,1.64,517,2.198,932,2.457,1041,2.603,1092,3.676,1114,3.425,1147,2.812,1256,5.05,1310,3.867,1311,4.552,1315,4.782,1317,4.5,1319,3.486,1321,2.954,1330,4.782,1332,2.823,1339,2.823,1374,2.734,1375,4.147,1394,3.486,1395,5.265,1396,4.097,1397,5.087,1398,4.448,1399,4.212,1400,4.004,1401,4.212,1402,5.417,1403,5.129,1404,5.129,1405,4.212,1406,3.179,1407,4.448,1408,5.087,1409,5.087,1410,3.179,1411,3.288,1412,4.212,1413,3.534,1414,4.629,1415,4.64,1416,4.097,1417,4.629,1418,4.097,1419,4.629,1420,4.097,1421,4.629,1422,3.747,1423,3.747,1424,3.747,1425,3.747,1426,3.833,1427,3.747,1428,3.747,1429,3.747,1430,3.747,1431,3.747]],["title/classes/IdentitiesDto.html",[0,0.168,1332,2.875]],["body/classes/IdentitiesDto.html",[0,0.283,2,0.856,3,0.179,4,0.151,5,0.16,7,0.378,8,0.814,11,0.915,18,0.793,21,0.008,23,0.578,29,0.312,32,1.257,37,0.293,40,0.775,41,2.15,58,0.005,59,0.005,85,1.418,92,1.806,180,1.652,197,3.216,320,3.702,321,3.702,324,1.876,329,2.051,336,3.465,347,3.26,506,2.958,507,2.383,515,2.704,516,1.613,517,2.162,932,2.43,1041,2.561,1092,3.635,1114,3.401,1147,2.781,1256,5.008,1310,3.834,1311,4.514,1315,4.742,1317,4.474,1319,3.429,1321,2.906,1330,5.633,1332,3.791,1339,2.778,1374,2.704,1375,4.119,1394,3.429,1395,5.239,1396,4.031,1397,5.031,1398,4.399,1399,4.166,1400,3.977,1401,4.166,1402,5.38,1403,5.094,1404,5.094,1405,4.166,1406,3.144,1407,4.399,1408,5.031,1409,5.031,1410,3.144,1411,3.252,1412,4.166,1413,3.495,1415,4.618,1416,4.031,1418,4.031,1420,4.031,1422,3.687,1423,3.687,1424,3.687,1425,3.687,1426,3.791,1427,3.687,1428,3.687,1429,3.687,1430,3.687,1431,3.687,1432,4.554,1433,4.554,1434,4.554,1435,4.554]],["title/modules/IdentitiesModule.html",[138,1.521,1436,3.16]],["body/modules/IdentitiesModule.html",[0,0.161,3,0.177,4,0.149,5,0.158,10,1.56,21,0.008,22,0.964,29,0.322,36,0.794,37,0.187,40,0.563,53,2.354,56,1.143,58,0.005,59,0.005,72,2.537,97,1.489,98,2.142,138,2.271,141,4.117,144,1.406,154,2.135,221,1.81,293,3.193,331,2.815,347,2.078,375,3.815,376,4.103,383,2.296,537,2.078,538,2.209,539,2.36,540,2.36,541,2.36,542,3.561,543,2.36,547,3.23,548,2.282,549,2.36,551,3.023,554,3.346,555,3.193,557,2.878,578,2.36,597,4.29,631,3.193,689,2.878,829,2.638,1115,3.887,1308,3.766,1310,3.346,1317,2.537,1321,2.878,1326,4.37,1328,4.983,1346,5.224,1347,3.992,1348,4.626,1349,3.651,1350,3.651,1359,3.396,1367,3.193,1387,3.396,1390,3.939,1436,5.721,1437,3.992,1438,3.992,1439,3.992,1440,4.138,1441,4.511,1442,4.138,1443,4.511,1444,3.766,1445,3.766,1446,3.396,1447,4.511,1448,4.511,1449,4.511,1450,6.231,1451,4.511,1452,5.465,1453,3.992,1454,4.511,1455,3.992,1456,5.465,1457,4.511,1458,6.174,1459,4.649,1460,3.651,1461,6.231,1462,6.231,1463,3.992,1464,5.465,1465,5.465,1466,3.992,1467,3.992,1468,3.992,1469,3.992,1470,3.992,1471,3.992,1472,3.992,1473,3.992,1474,3.992]],["title/injectables/IdentitiesService.html",[101,1.097,1346,3.008]],["body/injectables/IdentitiesService.html",[0,0.081,3,0.089,4,0.075,5,0.08,7,0.188,8,0.482,9,2.601,10,1.849,11,1.18,12,2.349,15,1.272,18,0.845,20,2.474,21,0.008,22,1.606,23,0.566,25,4.683,29,0.266,36,0.399,37,0.094,40,0.579,49,1.993,53,1.77,55,1.401,56,1.489,58,0.003,59,0.003,65,1.369,72,1.274,83,1.227,85,0.737,86,1.801,87,1.986,89,3.185,97,0.747,98,1.746,99,0.683,101,0.855,102,2.797,103,0.933,105,2.359,106,2.068,107,2.068,114,1.274,134,3.524,136,3.085,141,2.716,144,1.511,150,4.972,152,3.784,153,1.109,154,2.94,155,2.068,156,2.516,157,2.618,158,2.465,159,2.347,160,2.347,161,2.347,162,3.732,163,3.94,164,2.791,166,1.518,167,4.411,168,3.997,169,5.27,171,4.18,172,3.411,173,2.214,174,3.297,175,1.518,176,3.583,178,2.886,179,1.518,180,3.021,182,1.518,183,3.617,184,4.411,186,1.518,188,1.603,190,1.518,192,1.324,193,3.583,197,3.346,198,1.381,199,1.381,200,1.381,201,1.381,205,1.833,206,1.833,217,4.732,221,2.527,233,3.26,235,2.603,282,2.347,291,2.603,293,1.603,297,0.668,313,2.068,322,1.746,331,1.367,347,1.043,366,1.518,456,0.863,559,1.705,561,1.705,564,1.705,565,1.705,566,1.705,567,1.705,570,1.705,571,1.705,572,1.705,578,1.185,597,3.817,689,4.411,829,1.324,833,2.004,924,4.025,1115,2.99,1308,3.586,1310,1.993,1317,1.274,1321,1.445,1346,2.347,1348,2.897,1349,1.833,1350,1.833,1357,4.11,1359,1.705,1367,1.603,1387,1.705,1390,2.347,1440,3.583,1444,2.243,1445,2.243,1446,1.705,1450,5.204,1452,4.11,1453,2.004,1455,2.004,1456,3.255,1459,1.705,1460,1.833,1461,4.11,1462,4.11,1463,2.004,1464,3.255,1465,3.255,1466,3.255,1467,2.004,1468,2.004,1469,2.004,1470,2.004,1471,2.004,1472,2.004,1473,2.004,1474,2.004,1475,2.004,1476,3.255,1477,2.265,1478,2.265,1479,2.265,1480,2.265,1481,2.265,1482,2.265,1483,2.265,1484,2.265,1485,2.265,1486,5.346,1487,5.346,1488,2.265,1489,2.265,1490,2.265,1491,4.644,1492,2.265,1493,2.265,1494,2.265,1495,2.265,1496,2.265,1497,1.274,1498,1.833,1499,2.265,1500,2.265,1501,3.678,1502,3.678,1503,2.265,1504,2.265,1505,3.678,1506,2.265,1507,3.678,1508,2.265,1509,2.265,1510,2.004,1511,3.678,1512,2.265,1513,3.255,1514,2.265,1515,2.265]],["title/classes/IdentitiesUpdateDto.html",[0,0.168,1339,2.875]],["body/classes/IdentitiesUpdateDto.html",[0,0.298,2,1.002,3,0.209,4,0.176,5,0.187,21,0.008,23,0.552,29,0.325,32,1.472,37,0.316,40,0.665,41,1.844,58,0.006,59,0.006,85,1.534,320,3.61,321,3.61,324,2.196,329,1.759,336,2.611,347,2.456,506,3.117,507,2.789,515,3.002,516,1.888,517,2.531,932,2.084,1041,2.998,1092,4.036,1114,3.088,1147,3.088,1256,5.416,1310,2.889,1311,3.401,1315,4.625,1317,4.303,1319,4.014,1321,3.401,1330,4.625,1332,3.251,1339,4.209,1374,2.319,1375,3.74,1394,4.014,1395,5.164,1397,4.315,1398,3.773,1399,3.573,1400,3.61,1401,3.573,1402,4.884,1403,4.625,1404,4.625,1405,3.573,1406,2.697,1407,3.773,1408,4.315,1409,4.315,1410,2.697,1411,2.789,1412,3.573,1413,2.998,1415,4.551,1422,4.315,1423,4.315,1424,4.315,1425,4.315,1426,4.209,1427,4.315,1428,4.315,1429,4.315,1430,4.315,1431,5.586]],["title/controllers/IdentitiesValidationController.html",[381,1.753,1516,3.55]],["body/controllers/IdentitiesValidationController.html",[0,0.194,1,3.66,3,0.214,4,0.18,5,0.191,7,0.452,11,0.802,18,0.568,20,1.605,21,0.008,22,1.163,23,0.359,29,0.326,32,1.503,36,0.959,37,0.225,55,1.274,56,1.772,58,0.006,59,0.006,65,1.605,85,1.402,92,1.294,123,2.184,144,1.24,153,2.109,154,2.673,173,1.641,174,2.96,178,3.043,221,2.184,318,5.205,322,2.585,333,2.585,334,2.666,335,2.666,381,2.024,383,2.024,385,2.848,390,4.421,391,4.935,396,4.975,419,2.848,422,4.932,425,3.32,430,3.184,455,3.32,456,2.075,460,4.099,461,3.13,462,3.649,578,2.848,592,2.368,597,2.666,664,4.819,829,3.184,1125,3.853,1348,3.791,1355,4.407,1386,4.819,1387,4.099,1388,4.819,1516,5.267,1517,4.819,1518,5.444,1519,5.471,1520,5.444,1521,5.444,1522,4.819,1523,4.819,1524,5.444,1525,5.444]],["title/classes/IdentitiesValidationFilter.html",[0,0.168,1351,3.55]],["body/classes/IdentitiesValidationFilter.html",[0,0.215,2,1.133,3,0.237,4,0.199,5,0.212,7,0.5,10,2.084,11,0.888,18,0.629,20,1.777,21,0.008,22,1.288,23,0.397,29,0.301,36,1.061,37,0.249,56,1.527,58,0.007,59,0.007,123,2.418,144,1.845,153,2.248,173,1.817,214,4.999,322,2.861,390,4.042,461,2.697,577,6.556,578,4.238,579,6.037,580,5.733,581,6.851,583,3.845,585,4.878,586,4.538,587,4.878,588,4.878,589,5.616,591,5.334,592,2.622,1351,6.099,1446,4.538,1526,6.602,1527,4.878,1528,5.673,1529,6.027,1530,6.027,1531,6.027,1532,6.027,1533,6.027]],["title/modules/IdentitiesValidationModule.html",[138,1.521,1442,3.16]],["body/modules/IdentitiesValidationModule.html",[0,0.224,3,0.247,4,0.208,5,0.221,21,0.008,29,0.307,36,1.109,37,0.26,58,0.007,59,0.007,138,2.664,383,2.849,537,2.901,538,3.084,539,3.294,540,3.294,541,3.294,542,4.178,543,4.32,547,4.008,548,3.185,549,3.294,1348,5.067,1442,6.076,1516,6.218,1523,5.573,1534,5.573,1535,6.296,1536,5.573,1537,6.296,1538,6.296]],["title/injectables/IdentitiesValidationService.html",[101,1.097,1348,2.555]],["body/injectables/IdentitiesValidationService.html",[0,0.113,2,0.902,3,0.125,4,0.105,5,0.112,7,0.264,8,0.629,10,2.609,11,0.707,15,2,18,0.758,20,1.415,21,0.008,22,1.026,23,0.424,29,0.306,36,0.56,37,0.132,39,3.193,40,0.721,52,2.251,53,2.635,55,0.953,56,1.631,58,0.004,59,0.004,72,1.789,101,1.117,103,1.31,105,3.189,134,2.447,141,2.808,144,1.921,153,1.447,154,2.514,157,1.558,173,1.942,174,3.287,178,2.802,221,1.926,233,2.928,243,1.558,297,2.344,318,4.109,320,2.511,321,1.664,322,2.745,327,1.423,329,1.584,331,2.702,420,4.092,522,1.558,578,1.664,592,2.515,597,2.832,659,2.574,660,2.574,663,2.251,788,2.745,815,3.217,816,2.815,829,1.86,905,3.614,932,2.261,978,3.875,1045,3.689,1101,4.353,1114,1.423,1115,3.582,1280,3.928,1308,3.928,1348,2.601,1360,3.369,1361,4.249,1362,3.886,1375,1.724,1376,2.132,1377,2.029,1410,2.428,1444,2.928,1445,2.928,1446,2.395,1519,5.626,1522,2.815,1539,2.815,1540,4.8,1541,4.8,1542,6.557,1543,5.782,1544,4.249,1545,4.8,1546,4.249,1547,3.18,1548,6.44,1549,6.44,1550,4.8,1551,4.8,1552,4.249,1553,7.466,1554,3.18,1555,4.8,1556,4.8,1557,4.8,1558,3.18,1559,3.18,1560,3.18,1561,2.251,1562,3.18,1563,3.18,1564,3.18,1565,2.574,1566,3.18,1567,2.574,1568,3.18,1569,3.18,1570,3.18,1571,3.18,1572,3.18,1573,3.18,1574,6.44,1575,3.18,1576,7.767,1577,6.44,1578,3.18,1579,3.18,1580,2.574,1581,3.18,1582,2.808,1583,3.18,1584,6.118,1585,3.18,1586,2.251,1587,1.789,1588,2.132,1589,2.815,1590,2.815,1591,2.132,1592,3.18,1593,2.815,1594,3.18,1595,3.18,1596,5.118,1597,2.815,1598,4.8,1599,3.18,1600,2.251,1601,4.8,1602,3.18,1603,4.8,1604,4.8,1605,3.18,1606,3.18,1607,3.18,1608,3.18,1609,3.18,1610,2.815,1611,3.18,1612,3.18,1613,3.18,1614,3.18,1615,3.18,1616,3.18,1617,3.18,1618,3.18,1619,2.815,1620,3.18,1621,2.815,1622,3.18]],["title/interfaces/InternalLogOptions.html",[38,1.421,1623,3.337]],["body/interfaces/InternalLogOptions.html",[0,0.118,3,0.13,4,0.109,5,0.116,7,0.274,8,0.647,9,1.17,11,0.967,21,0.008,23,0.39,24,4.987,29,0.244,36,0.582,37,0.271,38,1.489,40,1.049,53,1.259,55,0.814,56,1.868,58,0.004,59,0.004,60,1.478,79,4.004,85,0.662,88,2.778,97,1.09,99,1.783,101,1.149,105,1.325,108,4.063,123,1.325,129,1.79,134,1.398,136,2.419,143,3.608,144,2.045,154,1.143,168,4.105,178,2.149,221,1.325,243,3.743,267,3.521,275,4.709,278,2.214,279,1.569,286,2.108,377,2.015,454,1.671,456,1.259,578,2.584,592,3.418,597,1.618,621,3.31,639,2.108,787,2.015,829,2.889,835,5.29,993,3.965,1058,4.187,1112,2.214,1147,1.478,1390,4.876,1623,4.187,1624,2.338,1625,5.313,1626,4.942,1627,3.998,1628,3.719,1629,3.496,1630,3.719,1631,2.338,1632,2.674,1633,2.674,1634,2.674,1635,2.674,1636,3.719,1637,5.313,1638,2.674,1639,2.674,1640,2.674,1641,2.674,1642,3.998,1643,2.674,1644,2.674,1645,2.674,1646,2.674,1647,6.88,1648,3.998,1649,2.674,1650,3.998,1651,6.185,1652,3.998,1653,3.496,1654,5.968,1655,5.968,1656,5.915,1657,5.968,1658,6.331,1659,5.968,1660,2.674,1661,2.674,1662,2.674,1663,2.674,1664,2.674,1665,4.187,1666,2.674,1667,2.674,1668,2.674,1669,2.674,1670,2.674,1671,2.674,1672,2.674,1673,2.674,1674,2.674,1675,2.674,1676,2.674,1677,3.965,1678,3.998,1679,3.998,1680,2.674,1681,2.214,1682,2.674,1683,2.674,1684,2.674,1685,2.674,1686,2.674,1687,2.674,1688,2.674]],["title/injectables/InternalLogger.html",[101,1.097,1631,3.337]],["body/injectables/InternalLogger.html",[0,0.101,3,0.111,4,0.093,5,0.099,7,0.234,8,0.574,9,1.902,11,1.101,15,0.976,18,0.819,20,2.205,21,0.008,22,1.598,23,0.526,24,4.87,25,1.588,29,0.225,36,0.497,37,0.25,38,1.321,40,0.979,53,1.076,55,1.08,56,1.756,58,0.004,59,0.004,79,4.412,85,0.878,88,2.464,97,0.932,99,1.619,101,1.019,103,1.163,105,2.154,108,3.062,123,1.133,129,1.53,134,1.195,136,2.146,143,3.275,144,2.003,153,1.321,154,1.857,168,4.053,173,2.254,178,1.906,221,1.133,243,3.544,267,3.333,275,2.937,278,1.892,279,1.34,286,1.801,351,1.713,377,4.561,454,1.428,456,1.076,578,2.292,592,3.618,597,2.63,621,2.937,639,1.801,787,2.672,829,2.563,835,4.933,993,3.599,1058,3.801,1112,3.599,1147,1.263,1390,4.616,1623,4.284,1624,1.998,1625,2.285,1626,3.299,1627,4.347,1628,3.299,1629,4.284,1630,3.299,1631,3.101,1632,3.547,1633,2.285,1634,4.899,1635,2.285,1636,3.299,1637,4.899,1638,2.285,1639,2.285,1640,2.285,1641,2.285,1642,3.547,1643,2.285,1644,2.285,1645,2.285,1646,3.547,1647,7.208,1648,3.547,1649,2.285,1650,3.547,1651,5.856,1652,3.547,1653,3.101,1654,5.613,1655,5.613,1656,5.631,1657,5.613,1658,6.11,1659,5.613,1660,2.285,1661,3.547,1662,4.347,1663,2.285,1664,3.547,1665,4.638,1666,2.285,1667,3.547,1668,2.285,1669,3.547,1670,4.347,1671,2.285,1672,3.547,1673,4.347,1674,2.285,1675,4.347,1676,2.285,1677,3.599,1678,3.547,1679,3.547,1680,2.285,1681,1.892,1682,2.285,1683,2.285,1684,2.285,1685,2.285,1686,2.285,1687,2.285,1688,2.285,1689,2.823,1690,4.382,1691,2.823,1692,2.823,1693,2.823,1694,2.823,1695,2.823,1696,2.823,1697,2.823,1698,2.823,1699,2.823]],["title/interfaces/InternalLoggerOptions.html",[38,1.421,1629,3.337]],["body/interfaces/InternalLoggerOptions.html",[0,0.119,3,0.131,4,0.11,5,0.117,7,0.277,8,0.652,9,1.183,21,0.008,23,0.435,24,4.994,29,0.245,36,0.588,37,0.273,38,1.501,40,1.023,53,1.273,55,0.821,56,1.875,58,0.004,59,0.004,60,1.494,79,4.025,85,0.669,88,2.8,97,1.102,99,2.231,101,1.158,105,1.34,108,3.338,123,1.34,129,1.809,134,1.413,136,2.438,143,3.631,144,2.048,154,1.155,168,4.11,178,2.166,221,1.34,243,3.756,267,3.533,275,3.337,278,2.238,279,1.585,286,2.13,351,1.947,377,2.036,454,1.689,456,1.273,578,2.605,592,3.428,597,1.635,621,3.337,639,2.13,787,2.036,829,2.912,835,5.314,993,5.282,1058,4.214,1112,2.238,1147,1.494,1390,4.893,1623,3.524,1624,2.363,1625,2.703,1626,3.749,1627,4.03,1628,3.749,1629,4.214,1630,3.749,1631,2.363,1632,2.703,1633,2.703,1634,2.703,1635,2.703,1636,3.749,1637,5.341,1638,2.703,1639,2.703,1640,2.703,1641,2.703,1642,4.03,1643,2.703,1644,2.703,1645,2.703,1646,2.703,1647,6.895,1648,4.03,1649,2.703,1650,4.03,1651,6.207,1652,4.03,1653,3.524,1654,5.991,1655,5.991,1656,5.934,1657,5.991,1658,6.345,1659,5.991,1660,2.703,1661,2.703,1662,2.703,1663,2.703,1664,2.703,1665,4.214,1666,2.703,1667,2.703,1668,2.703,1669,2.703,1670,2.703,1671,2.703,1672,2.703,1673,2.703,1674,2.703,1675,2.703,1676,2.703,1677,3.99,1678,4.03,1679,4.03,1680,2.703,1681,2.238,1682,2.703,1683,2.703,1684,2.703,1685,2.703,1686,2.703,1687,2.703,1688,2.703]],["title/injectables/JwtStrategy.html",[101,1.097,742,3.337]],["body/injectables/JwtStrategy.html",[0,0.181,3,0.2,4,0.168,5,0.179,7,0.422,10,1.76,11,0.986,15,2.316,18,0.698,20,1.974,21,0.008,22,1.431,23,0.441,29,0.326,36,0.896,37,0.21,55,1.233,56,1.895,58,0.006,59,0.006,65,1.501,69,5.328,72,4.208,74,3.104,85,1.342,101,1.557,103,2.096,105,2.042,108,4.022,123,2.042,129,3.628,144,1.159,153,2.018,154,2.588,173,1.534,174,2.833,221,2.042,235,3.602,297,1.501,329,2.47,456,1.94,673,5.42,678,4.488,682,4.564,689,3.247,695,4.849,698,2.977,702,3.832,742,5.296,746,4.505,787,4.564,802,5.42,803,5.42,812,5.926,813,4.505,880,4.505,988,3.602,1519,5.296,1700,4.505,1701,5.926,1702,4.505,1703,5.09,1704,4.505,1705,6.623,1706,7.95,1707,5.09,1708,5.926,1709,4.505,1710,5.09,1711,4.505,1712,5.09,1713,5.09,1714,5.09,1715,5.09,1716,5.09,1717,4.505,1718,5.09,1719,5.09,1720,4.505,1721,6.696,1722,5.926,1723,5.09,1724,4.505]],["title/classes/Keyrings.html",[0,0.168,1725,3.16]],["body/classes/Keyrings.html",[0,0.202,2,1.064,3,0.222,4,0.187,5,0.199,7,0.47,8,0.939,11,1.219,18,0.821,21,0.008,23,0.584,29,0.293,37,0.326,40,1.106,55,1.492,58,0.006,59,0.006,83,3.887,85,1.135,86,3.513,92,1.871,93,4.267,96,4.33,97,1.869,99,1.707,144,1.29,180,2.055,279,3.93,297,2.115,329,1.869,331,2.667,332,2.963,354,5.401,366,3.796,370,3.796,844,5.928,1725,5.277,1726,4.264,1727,5.277,1728,5.277,1729,5.663,1730,5.663,1731,5.663,1732,5.012,1733,4.264,1734,5.012]],["title/controllers/KeyringsController.html",[381,1.753,1735,3.55]],["body/controllers/KeyringsController.html",[0,0.128,1,2.748,3,0.141,4,0.119,5,0.126,7,0.298,9,1.272,11,1.007,18,0.713,20,2.015,21,0.008,22,1.623,23,0.53,29,0.326,32,0.991,36,0.632,37,0.148,40,0.655,55,1.424,56,1.731,58,0.005,59,0.005,65,1.549,85,1.053,87,2.719,89,3.501,92,1.624,98,1.705,99,1.082,123,1.44,136,1.758,144,1.557,153,1.583,154,2.958,156,2.846,157,1.758,173,2.061,174,3.405,178,3.501,183,1.878,221,2.742,267,2.42,313,2.019,381,1.335,383,1.335,385,1.878,386,4.581,387,4.677,388,5.146,389,2.703,390,4.68,391,4.254,396,5.312,397,2.703,398,3.955,399,5.146,400,5.146,401,3.955,404,2.703,405,3.955,408,2.703,409,5.721,410,5.146,411,5.721,412,5.146,413,2.703,419,1.878,420,2.541,422,3.351,425,2.19,427,5.146,429,4.677,430,2.1,431,2.406,432,3.955,433,3.963,434,2.906,435,1.878,436,2.906,438,2.406,439,2.541,440,2.703,441,2.703,442,2.541,443,2.406,444,2.703,445,2.406,446,2.703,447,3.718,448,2.703,449,2.703,450,2.541,452,2.406,454,1.816,455,2.19,456,1.369,458,2.906,459,2.703,460,2.703,461,3.059,462,2.406,465,3.178,466,3.178,467,3.718,468,2.703,469,4.396,470,4.163,471,3.955,473,3.955,474,2.703,475,2.954,479,2.703,1725,2.406,1727,2.406,1728,2.406,1735,3.955,1736,3.178,1737,4.838,1738,3.59,1739,4.396,1740,3.59,1741,3.59,1742,3.59,1743,3.59,1744,3.59,1745,3.59,1746,3.52,1747,3.59,1748,3.59,1749,3.59,1750,4.252,1751,3.59,1752,3.59,1753,5.253,1754,3.59,1755,3.59]],["title/classes/KeyringsCreateDto.html",[0,0.168,1737,3.337]],["body/classes/KeyringsCreateDto.html",[0,0.275,2,1.025,3,0.214,4,0.18,5,0.191,7,0.453,8,0.917,11,1.272,18,0.851,21,0.008,23,0.569,29,0.288,32,1.506,37,0.29,40,1.078,55,1.513,58,0.006,59,0.006,85,1.551,87,1.843,92,1.94,197,2.308,279,3.325,297,2.281,342,4.694,351,2.133,481,4.979,491,4.107,504,3.861,505,4.107,506,2.877,508,3.274,509,4.694,514,4.957,516,1.932,520,3.861,521,3.861,522,3.789,844,5.825,1727,5.185,1728,5.185,1737,5.476,1739,3.861,1756,4.415,1757,4.828,1758,4.828,1759,5.454,1760,6.848,1761,5.454,1762,5.454,1763,4.828,1764,4.828]],["title/classes/KeyringsDto.html",[0,0.168,1739,3.337]],["body/classes/KeyringsDto.html",[0,0.271,2,0.989,3,0.207,4,0.174,5,0.185,7,0.437,8,0.896,11,1.26,18,0.871,21,0.008,23,0.574,29,0.283,32,1.453,37,0.283,40,1.102,55,1.519,58,0.006,59,0.006,85,1.524,87,2.569,92,1.983,197,3.407,279,3.249,297,2.242,342,4.586,351,2.057,481,4.638,491,3.961,504,3.724,505,3.961,506,2.827,508,3.218,509,4.586,514,4.843,516,1.863,520,3.724,521,3.724,522,3.724,524,4.656,844,5.725,1727,5.096,1728,5.096,1737,6.056,1739,4.843,1756,4.258,1757,4.656,1758,4.656,1760,6.73,1763,4.656,1764,4.656,1765,5.261,1766,5.261,1767,5.261,1768,5.261]],["title/modules/KeyringsModule.html",[138,1.521,1071,3.337]],["body/modules/KeyringsModule.html",[0,0.218,3,0.24,4,0.202,5,0.215,21,0.008,22,1.307,29,0.325,36,1.077,37,0.253,58,0.007,59,0.007,97,2.019,138,2.63,383,2.799,537,2.819,538,2.997,539,3.201,540,3.201,541,3.201,542,4.125,543,3.201,547,3.939,548,3.095,549,3.201,551,4.101,554,3.316,555,4.331,557,3.904,1071,6.296,1725,4.101,1733,5.668,1735,6.14,1746,5.961,1769,5.416,1770,5.416,1771,6.118,1772,5.416,1773,6.118,1774,6.118,1775,6.118]],["title/injectables/KeyringsService.html",[101,1.097,1746,3.16]],["body/injectables/KeyringsService.html",[0,0.112,3,0.124,4,0.104,5,0.111,7,0.262,8,0.624,9,2.808,10,1.989,11,1.252,12,2.909,15,1.09,18,0.895,20,2.597,21,0.008,22,1.727,23,0.59,25,4.926,29,0.256,36,0.555,37,0.13,49,2.584,55,1.444,58,0.004,59,0.004,65,1.406,85,0.956,87,1.943,89,3.337,97,1.04,99,0.95,101,1.109,102,3.354,103,1.298,105,1.913,106,2.681,107,2.681,114,1.773,134,3.706,150,5.372,152,4.538,153,1.437,154,3.029,155,2.681,156,2.584,157,2.335,158,3.195,159,3.042,160,3.042,161,3.042,162,4.073,163,3.195,164,3.269,166,2.113,167,5.157,168,4.035,169,5.516,171,4.638,172,4.393,173,2.39,174,3.355,175,2.113,176,3.195,178,1.371,179,2.113,180,3.178,182,2.113,183,4.052,184,4.942,186,2.113,188,2.231,190,2.113,192,1.844,193,4.297,195,2.373,197,3.599,198,1.922,199,1.922,200,1.922,201,1.922,456,1.202,559,2.373,561,2.373,562,2.551,563,2.551,564,2.373,565,2.373,566,2.373,567,2.373,568,2.551,569,2.551,570,2.373,571,2.373,572,2.373,1725,2.113,1746,3.195,1772,2.79,1776,2.79,1777,3.152,1778,3.152]],["title/injectables/LocalStrategy.html",[101,1.097,743,3.337]],["body/injectables/LocalStrategy.html",[0,0.179,3,0.197,4,0.166,5,0.176,7,0.417,10,1.738,11,0.978,15,1.738,18,0.693,20,1.958,21,0.008,22,1.419,23,0.437,29,0.32,36,0.885,37,0.208,40,1.054,42,2.016,43,1.965,44,2.386,55,1.356,58,0.006,59,0.006,65,1.482,85,1.331,101,1.545,103,2.07,108,4.002,123,2.016,129,4.287,130,5.375,136,2.462,137,3.557,144,1.145,153,2.002,154,2.572,168,3.059,173,1.515,174,2.81,221,2.016,297,1.482,329,2.455,345,4.825,349,4.825,369,3.784,375,2.724,376,2.724,377,4.05,454,2.542,456,1.916,597,3.252,663,3.557,673,5.375,678,4.451,695,4.825,696,4.449,698,2.94,702,3.784,743,5.264,802,4.068,803,5.375,811,4.449,846,4.449,988,3.557,1519,5.264,1701,5.877,1702,4.449,1704,4.449,1705,6.582,1708,5.877,1709,4.449,1711,4.449,1717,4.449,1720,4.449,1722,5.877,1724,4.449,1779,4.449,1780,5.026,1781,5.026,1782,7.437,1783,5.026,1784,5.375,1785,5.026,1786,5.026,1787,5.026,1788,5.026,1789,5.026]],["title/classes/Logger.html",[0,0.168,10,1.631]],["body/classes/Logger.html",[0,0.236,2,1.247,3,0.261,4,0.219,5,0.233,10,2.922,21,0.008,23,0.437,29,0.314,37,0.349,58,0.007,59,0.007,83,4.286,85,1.33,86,3.874,97,2.191,99,2.001,144,1.512,329,2.191,331,2.941,332,3.473,366,4.449,370,4.449,1790,4.998,1791,5.875,1792,4.998,1793,5.875]],["title/controllers/LoggerController.html",[381,1.753,1794,3.55]],["body/controllers/LoggerController.html",[0,0.239,1,4.167,3,0.264,4,0.222,5,0.236,10,2.323,21,0.008,29,0.316,36,1.183,37,0.278,58,0.007,59,0.007,65,1.98,85,1.596,381,2.498,383,2.498,385,3.514,425,4.097,454,3.398,455,4.097,456,2.561,1794,5.997,1795,5.945,1796,5.338,1797,5.945,1798,6.717]],["title/modules/LoggerModule.html",[138,1.521,1072,3.337]],["body/modules/LoggerModule.html",[0,0.218,3,0.24,4,0.202,5,0.215,10,2.116,21,0.008,22,1.307,29,0.325,36,1.077,37,0.253,58,0.007,59,0.007,97,2.019,138,2.63,383,2.799,537,2.819,538,2.997,539,3.201,540,3.201,541,3.201,542,4.125,543,3.201,547,3.939,548,3.095,549,3.201,551,4.101,554,3.316,555,4.331,557,3.904,1072,6.296,1792,5.668,1794,6.14,1796,5.961,1797,5.416,1799,5.416,1800,5.416,1801,6.118,1802,6.118,1803,6.118,1804,6.118]],["title/injectables/LoggerService.html",[101,1.097,1796,3.16]],["body/injectables/LoggerService.html",[0,0.216,3,0.238,4,0.201,5,0.213,7,0.503,8,0.981,9,3.144,10,2.809,11,1.249,12,4.109,15,2.809,18,0.909,21,0.008,23,0.535,29,0.278,36,1.068,37,0.251,58,0.007,59,0.007,65,2.208,85,1.501,101,1.742,102,4.706,103,2.499,105,3.004,106,4.211,107,4.211,114,3.411,197,3.59,198,3.699,199,3.699,200,3.699,201,3.699,456,2.312,661,4.91,1796,5.019,1805,5.369,1806,6.066]],["title/controllers/ManagementController.html",[381,1.753,1807,3.55]],["body/controllers/ManagementController.html",[0,0.241,3,0.266,4,0.224,5,0.238,21,0.008,29,0.317,32,1.868,36,1.191,37,0.28,55,1.115,58,0.007,59,0.007,65,1.995,381,2.516,383,2.516,385,3.539,430,3.957,454,3.422,455,4.126,1355,5.476,1807,6.023,1808,5.988,1809,5.988,1810,5.361,1811,5.988,1812,6.765]],["title/modules/ManagementModule.html",[138,1.521,613,3.337]],["body/modules/ManagementModule.html",[0,0.205,3,0.226,4,0.19,5,0.202,18,0.6,21,0.008,29,0.319,30,2.819,36,1.014,37,0.238,55,0.949,56,1.458,58,0.006,59,0.006,138,2.686,153,1.735,173,1.735,383,2.695,452,4.857,537,2.652,538,2.819,539,3.011,540,3.011,541,3.011,542,4.013,543,3.011,547,3.792,548,2.912,549,3.011,554,4.299,613,6.367,815,3.858,1074,7.021,1076,7.021,1077,5.094,1084,5.094,1085,5.094,1086,5.094,1436,5.872,1807,5.973,1809,5.094,1810,5.872,1811,5.094,1813,5.094,1814,5.094,1815,5.756,1816,5.756,1817,5.756,1818,5.756,1819,5.756]],["title/injectables/ManagementService.html",[101,1.097,1810,3.16]],["body/injectables/ManagementService.html",[0,0.247,3,0.273,4,0.23,5,0.244,15,2.978,18,0.725,21,0.008,29,0.258,36,1.224,37,0.287,55,1.34,58,0.007,59,0.007,101,1.89,103,2.862,1810,5.446,1820,6.151,1821,6.949]],["title/classes/MetadataDto.html",[0,0.168,1203,3.16]],["body/classes/MetadataDto.html",[0,0.294,2,1.186,3,0.248,4,0.209,5,0.222,7,0.524,8,1.005,11,1.13,18,0.658,21,0.008,23,0.566,29,0.32,32,1.742,37,0.261,55,1.363,58,0.007,59,0.007,88,4.649,92,1.499,506,2.853,510,3.881,515,3.337,516,2.235,517,2.996,1092,4.487,1203,5.142,1217,6.006,1218,5.108,1822,5.585,1823,6.31,1824,6.31]],["title/classes/MetadataPart.html",[0,0.168,91,3.55]],["body/classes/MetadataPart.html",[0,0.202,2,1.064,3,0.222,4,0.187,5,0.199,7,0.47,8,0.939,18,0.863,21,0.008,23,0.591,29,0.267,37,0.297,40,1.119,55,1.52,58,0.006,59,0.006,85,1.135,86,3.513,87,1.913,91,5.401,92,1.967,93,4.486,94,4.264,96,4.468,97,1.869,99,1.707,144,1.29,275,5.277,278,5.277,279,4.257,280,6.373,281,6.373,329,1.869,331,2.667,332,2.963,1825,4.584,1826,5.663,1827,5.663,1828,5.663,1829,5.663,1830,5.012]],["title/classes/MetadataPartDto.html",[0,0.168,1217,3.16]],["body/classes/MetadataPartDto.html",[0,0.259,2,1.086,3,0.227,4,0.191,5,0.203,7,0.48,8,0.952,11,1.326,18,0.87,21,0.008,23,0.549,29,0.27,32,1.596,37,0.239,40,1.04,55,1.525,58,0.006,59,0.006,92,1.981,275,5.327,278,5.327,279,3.959,280,6.433,281,6.433,483,5.143,506,3.195,508,3.363,515,3.738,516,2.047,1217,4.87,1831,5.115,1832,6.431,1833,5.779,1834,5.779,1835,5.779,1836,5.779,1837,7.034]],["title/classes/MongoDbTestInstance.html",[0,0.168,1838,3.55]],["body/classes/MongoDbTestInstance.html",[0,0.187,2,0.987,3,0.206,4,0.174,5,0.184,7,0.436,8,0.895,11,0.773,18,0.892,20,2.015,21,0.008,22,1.46,23,0.53,29,0.254,37,0.217,39,2.222,40,0.948,56,1.33,58,0.006,59,0.006,79,4.633,99,1.583,144,1.73,153,2.06,154,3.156,171,3.071,173,2.426,202,5.532,221,3.494,331,2.992,584,3.35,596,4.25,639,3.35,670,4.25,910,6.058,1628,3.954,1838,5.145,1839,4.648,1840,6.724,1841,6.724,1842,7.122,1843,7.122,1844,5.251,1845,6.724,1846,5.251,1847,5.251,1848,6.834,1849,5.251,1850,5.251,1851,5.251,1852,3.717,1853,4.648,1854,6.834,1855,5.251,1856,5.251,1857,5.251,1858,5.251,1859,5.251,1860,5.251,1861,5.251,1862,5.251,1863,5.251,1864,6.834,1865,5.251,1866,5.251,1867,5.251]],["title/interfaces/MongoosePlugin.html",[38,1.421,620,3.337]],["body/interfaces/MongoosePlugin.html",[3,0.237,4,0.145,5,0.154,7,0.363,8,0.792,11,1.101,21,0.008,23,0.456,29,0.302,32,1.209,37,0.287,38,1.823,40,1.097,42,1.756,43,1.711,44,2.078,45,2.67,46,2.934,47,2.934,58,0.005,59,0.005,60,1.959,76,4.227,97,1.445,99,1.823,129,2.372,134,1.852,168,4.142,269,3.098,297,2.043,323,4.053,327,1.959,329,1.445,488,3.394,620,4.905,621,4.054,624,4.896,639,4.769,652,5.01,682,4.227,698,2.56,747,4.896,751,4.896,752,3.098,815,4.054,824,6.051,901,3.098,954,3.098,983,4.554,984,3.543,985,4.054,986,5.61,987,4.896,988,4.281,989,6.134,990,5.61,991,5.353,992,5.353,993,4.054,994,4.896,995,4.281,996,5.353,997,4.554,998,3.874,999,3.874,1000,3.874,1001,3.543,1002,3.874,1003,7.36,1004,3.874,1005,3.874,1006,3.874,1007,3.874,1008,3.874,1009,3.874,1010,3.874,1011,3.874,1012,3.874,1013,3.874,1014,3.874,1015,3.874,1016,3.874,1017,3.874,1018,3.874,1019,3.874,1020,3.874,1021,3.874,1022,3.874,1023,3.874,1024,3.874,1025,3.874,1026,3.874,1027,3.874,1028,3.874,1029,3.874,1030,3.874]],["title/classes/MongooseValidationFilter.html",[0,0.168,1868,3.816]],["body/classes/MongooseValidationFilter.html",[0,0.225,2,0.877,3,0.183,4,0.154,5,0.164,7,0.387,9,2.538,10,1.614,11,0.931,18,0.659,20,1.863,21,0.008,22,1.35,23,0.416,29,0.285,36,0.822,37,0.193,39,1.975,42,1.873,43,1.825,44,2.216,55,1.181,56,1.182,58,0.006,59,0.006,99,1.407,108,3.197,123,1.873,144,1.926,153,1.905,173,1.905,214,4.236,322,3.402,323,3.696,376,2.529,377,2.847,390,3.425,419,2.442,461,2.089,516,1.653,577,5.8,578,3.749,579,5.116,580,5.072,581,6.216,583,4.032,585,3.778,586,3.514,587,3.778,588,3.778,592,2.03,593,4.131,597,3.095,820,3.514,821,3.514,901,3.304,1101,6.478,1112,4.236,1121,3.778,1390,4.032,1440,3.128,1527,3.778,1584,4.131,1596,4.131,1619,6.342,1621,4.131,1868,5.8,1869,6.342,1870,6.32,1871,8.458,1872,8.604,1873,4.668,1874,6.32,1875,4.668,1876,4.668,1877,4.668,1878,4.668,1879,4.668,1880,4.668,1881,4.668,1882,4.668,1883,6.32,1884,4.668,1885,4.668,1886,4.668,1887,4.668,1888,4.668,1889,4.668,1890,4.668,1891,4.668,1892,4.668,1893,4.668]],["title/classes/NotFoundDto.html",[0,0.168,1894,3.816]],["body/classes/NotFoundDto.html",[0,0.226,2,1.194,3,0.249,4,0.21,5,0.223,7,0.527,8,1.009,18,0.803,21,0.008,23,0.507,29,0.286,32,1.754,36,1.119,37,0.263,40,0.961,55,1.479,58,0.007,59,0.007,92,1.83,180,2.305,419,4.337,461,3.71,506,3.205,592,3.606,1144,5.143,1147,2.843,1894,6.235,1895,7.338,1896,5.623,1897,6.353,1898,6.353,1899,6.353]],["title/injectables/ObjectIdValidationPipe.html",[101,1.097,433,3.008]],["body/injectables/ObjectIdValidationPipe.html",[0,0.214,3,0.236,4,0.198,5,0.211,7,0.498,11,0.884,18,0.626,20,1.769,21,0.008,22,1.282,23,0.395,29,0.276,36,1.057,37,0.248,40,1.009,42,2.984,43,2.346,53,2.836,55,1.333,56,1.52,58,0.007,59,0.007,89,4.003,98,2.849,99,1.809,101,1.73,103,2.472,141,3.51,153,2.243,173,1.809,214,4.022,317,4.022,433,4.746,435,3.892,788,2.849,1095,4.518,1103,4.518,1107,6.021,1900,6.584,1901,7.439,1902,8.084,1903,8.451,1904,6.001,1905,7.439,1906,6.001,1907,6.001,1908,6.001,1909,6.001]],["title/classes/PaginatedFilterDto.html",[0,0.168,1910,3.816]],["body/classes/PaginatedFilterDto.html",[0,0.247,2,1.306,3,0.273,4,0.23,5,0.244,18,0.725,21,0.008,37,0.287,39,3.439,40,1.014,42,2.788,43,2.717,44,3.299,58,0.007,59,0.007,61,5.232,376,3.766,1910,6.577,1911,6.577,1912,6.151,1913,6.949]],["title/classes/PaginatedResponseDto.html",[0,0.168,33,3.337]],["body/classes/PaginatedResponseDto.html",[0,0.218,2,1.15,3,0.24,4,0.202,5,0.215,7,0.508,8,0.986,18,0.851,21,0.008,23,0.537,29,0.28,32,1.689,33,5.329,36,1.077,37,0.253,41,2.604,55,1.512,58,0.007,59,0.007,92,1.938,178,3.547,180,2.22,419,4.266,461,3.649,467,5.772,470,4.101,506,3.307,1144,4.953,1147,2.738,1911,6.887,1914,5.416,1915,7.528,1916,6.118,1917,6.118,1918,6.118]],["title/interfaces/RawBodyBufferOptions.html",[38,1.421,1919,3.816]],["body/interfaces/RawBodyBufferOptions.html",[3,0.245,4,0.206,5,0.219,7,0.518,8,0.998,11,1.316,21,0.008,23,0.542,29,0.232,37,0.315,38,1.881,40,1.148,56,1.581,58,0.007,59,0.007,60,2.793,297,1.84,375,3.382,391,4.457,994,5.051,995,6.326,1919,6.659,1920,5.524,1921,5.524,1922,8.567,1923,8.567,1924,5.524,1925,6.24,1926,6.24,1927,7.62,1928,6.24,1929,6.24]],["title/classes/SecurityPart.html",[0,0.168,357,3.337]],["body/classes/SecurityPart.html",[0,0.174,2,0.918,3,0.192,4,0.162,5,0.172,7,0.406,8,0.854,11,1.28,18,0.874,21,0.008,23,0.595,29,0.242,37,0.27,40,1.144,55,1.528,58,0.006,59,0.006,85,0.979,86,3.192,87,1.651,92,1.992,93,4.543,96,4.477,97,1.613,99,1.473,136,2.393,144,1.113,180,2.838,327,3.501,329,2.42,331,2.423,332,2.556,357,5.19,358,3.679,374,3.679,375,2.648,376,3.532,377,3.975,378,3.955,488,4.106,668,3.679,805,3.955,896,3.679,1727,4.915,1750,5.936,1930,3.955,1931,6.491,1932,6.491,1933,6.491,1934,6.491,1935,4.886,1936,4.886,1937,4.886,1938,4.886,1939,4.886,1940,4.886,1941,4.325,1942,4.325,1943,4.325,1944,4.325]],["title/classes/SecurityPartDTO.html",[0,0.168,496,3.16]],["body/classes/SecurityPartDTO.html",[0,0.239,2,0.958,3,0.2,4,0.169,5,0.179,7,0.423,8,0.878,11,1.319,18,0.885,21,0.008,23,0.585,29,0.249,32,1.408,37,0.211,40,1.14,55,1.534,58,0.006,59,0.006,92,2.016,180,2.717,297,2.208,483,3.609,488,3.283,489,5.426,493,6.062,494,4.127,496,4.493,506,3.215,508,3.497,512,4.779,513,5.076,515,3.69,516,1.806,522,3.668,1727,5.02,1750,6.062,1931,6.629,1932,6.629,1933,6.629,1934,6.629,1945,4.513,1946,6.704,1947,5.099,1948,5.099,1949,5.099,1950,5.099,1951,5.099,1952,5.099]],["title/interfaces/ServiceSchemaInterface.html",[38,1.421,211,3.55]],["body/interfaces/ServiceSchemaInterface.html",[3,0.128,4,0.108,5,0.115,7,0.271,11,1.153,18,0.817,20,2.564,21,0.008,22,1.673,23,0.573,25,4.923,29,0.182,37,0.135,38,0.984,41,1.129,42,1.964,43,1.277,58,0.004,59,0.004,60,1.461,83,1.77,86,1.599,87,1.984,89,3.689,98,1.55,99,0.984,134,3.922,153,1.476,155,2.754,156,2.653,157,2.398,158,3.937,159,3.748,160,3.748,161,3.748,162,4.128,166,3.282,167,5.411,168,4.161,169,5.723,171,4.77,172,4.857,173,2.36,174,3.68,175,3.282,176,4.374,178,1.42,179,3.282,180,3.363,182,2.189,183,4.388,184,5.411,186,2.189,190,2.189,192,1.91,193,4.374,205,2.643,206,2.643,211,3.687,213,2.89,317,2.189,435,2.562,1953,2.89,1954,3.265,1955,3.265,1956,3.265,1957,3.265,1958,3.265,1959,3.265,1960,3.265,1961,3.265,1962,3.265]],["title/classes/StatePart.html",[0,0.168,360,3.55]],["body/classes/StatePart.html",[0,0.183,2,0.963,3,0.201,4,0.17,5,0.18,7,0.425,8,0.881,11,1.294,18,0.863,21,0.008,23,0.595,29,0.279,37,0.278,40,0.995,41,2.757,53,1.954,55,1.521,58,0.006,59,0.006,85,1.028,86,3.295,87,1.732,92,1.967,93,4.32,96,4.445,97,1.692,99,1.546,144,1.167,180,2.441,279,4.341,297,1.984,324,2.112,327,3.568,329,1.692,331,2.502,332,2.682,360,5.065,361,3.86,921,5.654,1147,3.011,1728,5.033,1963,4.15,1964,6.647,1965,6.647,1966,6.647,1967,4.538,1968,6.078,1969,5.127,1970,5.127,1971,5.127,1972,5.127,1973,5.127,1974,4.538,1975,5.127,1976,5.127,1977,5.127,1978,4.538]],["title/classes/StatePartDTO.html",[0,0.168,499,3.16]],["body/classes/StatePartDTO.html",[0,0.252,2,1.043,3,0.218,4,0.184,5,0.195,7,0.461,8,0.928,11,1.315,18,0.885,21,0.008,23,0.559,29,0.263,32,1.533,37,0.23,40,0.884,41,2.45,55,1.535,58,0.006,59,0.006,92,2.017,279,4.121,483,3.929,499,4.747,506,3.227,508,2.997,509,4.747,515,3.692,516,1.966,921,5.873,1256,5.013,1728,5.228,1832,6.904,1837,7.273,1964,6.904,1965,6.904,1966,6.904,1979,4.914,1980,5.551,1981,5.551,1982,5.551,1983,5.551,1984,5.551,1985,5.551]],["title/interfaces/TicketForm.html",[38,1.421,1986,3.337]],["body/interfaces/TicketForm.html",[3,0.206,4,0.173,5,0.184,7,0.435,8,0.894,21,0.008,23,0.604,29,0.254,38,2.288,40,1.178,41,2.361,42,2.738,43,2.049,58,0.006,59,0.006,60,2.345,164,2.488,317,3.513,333,4.059,334,2.567,335,2.567,351,2.669,788,2.488,932,3.144,1152,4.518,1153,4.904,1154,4.703,1155,3.598,1165,4.518,1167,3.066,1235,3.513,1236,3.513,1237,3.513,1238,3.513,1239,3.513,1240,3.513,1241,3.513,1242,4.163,1243,3.513,1257,5.901,1280,3.197,1294,5.139,1295,3.946,1986,4.831,1987,3.946,1988,4.575,1989,5.087]],["title/interfaces/TicketFormField.html",[38,1.421,1988,3.16]],["body/interfaces/TicketFormField.html",[3,0.192,4,0.162,5,0.172,7,0.406,8,0.854,21,0.008,23,0.616,29,0.242,38,2.211,40,1.167,41,2.899,42,2.615,43,1.91,58,0.006,59,0.006,60,2.187,164,3.714,317,3.275,333,3.98,334,2.393,335,2.393,351,3.476,788,3.714,932,1.91,1152,3.532,1153,2.98,1154,2.858,1155,2.187,1165,3.974,1167,2.858,1235,5.243,1236,5.243,1237,5.243,1238,5.243,1239,5.243,1240,5.243,1241,5.243,1242,4.97,1243,5.243,1257,5.768,1280,2.98,1294,4.907,1295,3.679,1986,3.459,1987,3.679,1988,4.915,1989,4.915]],["title/interfaces/TicketFormSection.html",[38,1.421,1989,3.16]],["body/interfaces/TicketFormSection.html",[3,0.21,4,0.177,5,0.187,7,0.443,8,0.905,11,1.017,21,0.008,23,0.606,29,0.257,38,2.309,40,1.167,41,2.39,42,2.772,43,2.088,58,0.006,59,0.006,60,2.39,164,2.536,317,3.579,333,4.079,334,2.616,335,2.616,351,3.166,788,2.536,932,2.088,1152,4.545,1153,3.257,1154,3.124,1155,2.39,1165,4.545,1167,3.124,1235,3.579,1236,3.579,1237,3.579,1238,3.579,1239,3.579,1240,3.579,1241,3.579,1242,5.115,1243,3.579,1257,5.937,1280,4.939,1294,5.202,1295,4.021,1986,3.78,1987,4.021,1988,4.631,1989,5.428]],["title/classes/ValidationConfigException.html",[0,0.168,1444,2.875]],["body/classes/ValidationConfigException.html",[0,0.265,2,0.948,3,0.198,4,0.167,5,0.177,7,0.419,8,0.872,11,0.743,15,1.744,18,0.826,20,1.487,21,0.008,22,1.078,23,0.438,29,0.247,36,0.888,37,0.308,56,1.686,58,0.006,59,0.006,65,2.197,72,2.837,85,1.588,105,2.989,143,3.076,144,1.804,153,2.007,173,2.007,197,3.152,322,4.016,323,4.817,331,1.876,461,3.334,583,3.218,592,2.895,787,4.06,1115,3.537,1440,4.461,1444,4.06,1445,3.076,1528,5.781,1677,5.31,1990,3.57,1991,6.412,1992,6.412,1993,6.412,1994,6.591,1995,5.044,1996,4.465,1997,4.465,1998,4.465,1999,4.083,2000,4.083,2001,4.711,2002,3.798,2003,4.711,2004,3.798,2005,4.711,2006,4.083,2007,4.083,2008,6.03,2009,4.083,2010,4.083,2011,5.388,2012,5.388]],["title/classes/ValidationException.html",[0,0.168,1528,3.16]],["body/classes/ValidationException.html",[0,0.267,2,0.958,3,0.2,4,0.169,5,0.179,7,0.423,8,0.878,11,0.751,15,1.763,18,0.83,20,1.503,21,0.008,22,1.089,23,0.442,29,0.249,36,0.898,37,0.31,56,1.698,58,0.006,59,0.006,65,2.208,72,2.867,85,1.595,105,3.005,143,3.11,144,1.812,153,2.021,173,2.021,322,4.028,323,4.834,331,1.896,461,3.351,583,3.253,592,2.916,787,4.089,1115,3.556,1440,5.02,1444,3.11,1445,3.11,1528,5.332,1677,5.332,1990,3.609,1991,6.44,1992,6.44,1993,6.44,1994,6.607,1999,4.127,2000,4.127,2001,4.745,2002,3.839,2003,4.745,2004,3.839,2005,4.745,2006,4.127,2007,4.127,2008,6.062,2009,4.127,2010,4.127,2011,5.426,2012,5.426,2013,6.704,2014,5.099,2015,5.099]],["title/interfaces/ValidationRecursive.html",[38,1.421,1097,3.55]],["body/interfaces/ValidationRecursive.html",[0,0.175,3,0.193,4,0.163,5,0.173,9,1.746,10,1.705,18,0.514,21,0.008,29,0.274,30,2.414,36,0.868,37,0.204,38,1.486,39,2.774,40,0.979,53,1.879,55,1.081,56,1.866,58,0.006,59,0.006,60,2.206,61,3.711,65,1.453,85,0.988,101,1.525,108,3.971,123,1.978,144,1.788,157,2.414,235,3.489,297,1.933,322,4.136,385,3.43,419,2.579,456,1.879,461,2.206,475,3.687,592,2.852,597,3.211,631,3.489,820,3.711,821,3.711,978,4.394,1093,4.936,1094,5.306,1095,3.711,1096,5.802,1097,5.911,1100,4.363,1101,5.545,1103,4.936,1104,5.802,1105,4.363,1106,4.363,1107,3.99,1108,4.363,1109,4.363,1110,4.363,1111,4.363,1112,4.394,1113,3.99,1114,2.206,1115,2.34,1116,4.363,1117,3.99,1118,4.363,1119,4.363,1120,4.363,1121,3.99,1122,4.363,1123,4.363,1124,4.363,1125,3.489,1126,4.363,1127,5.802,1128,4.363,1129,4.363,1130,4.363,1131,4.363,1132,4.363,1133,4.363,1134,5.802,1135,4.363,1136,4.363,1137,4.363,2016,4.929]],["title/classes/ValidationSchemaException.html",[0,0.168,1445,2.875]],["body/classes/ValidationSchemaException.html",[0,0.265,2,0.948,3,0.198,4,0.167,5,0.177,7,0.419,8,0.872,11,0.743,15,1.744,18,0.826,20,1.487,21,0.008,22,1.078,23,0.438,29,0.247,36,0.888,37,0.308,56,1.686,58,0.006,59,0.006,65,2.197,72,2.837,85,1.588,105,2.989,143,3.076,144,1.804,153,2.007,173,2.007,197,3.152,322,4.016,323,4.817,331,1.876,461,3.334,583,3.218,592,2.895,787,4.06,1115,3.537,1440,4.461,1444,3.076,1445,4.06,1528,5.781,1677,5.31,1990,3.57,1991,6.412,1992,6.412,1993,6.412,1994,6.591,1996,4.465,1997,4.465,1998,4.465,1999,4.083,2000,4.083,2001,4.711,2002,3.798,2003,4.711,2004,3.798,2005,4.711,2006,4.083,2007,4.083,2008,6.03,2009,4.083,2010,4.083,2011,5.388,2012,5.388,2017,5.044]],["title/classes/additionalFieldsPartDto.html",[0,0.168,1395,3.008]],["body/classes/additionalFieldsPartDto.html",[0,0.224,2,1.181,3,0.247,4,0.208,5,0.221,7,0.521,8,1.002,18,0.798,21,0.008,22,1.635,23,0.59,29,0.234,32,1.735,37,0.26,39,2.658,40,1.071,58,0.007,59,0.007,92,1.818,180,2.279,243,3.747,320,4.605,321,4.316,326,5.128,351,2.456,506,3.068,1395,4.882,1399,5.128,2018,5.561,2019,7.651,2020,6.282,2021,6.282]],["title/coverage.html",[2022,5.632]],["body/coverage.html",[0,0.323,1,1.019,5,0.068,6,2.63,10,0.674,17,1.467,21,0.008,23,0.128,33,1.379,38,2.291,53,0.743,55,0.321,58,0.003,59,0.003,63,1.379,64,1.724,83,1.056,84,1.724,91,1.467,94,1.467,101,1.878,102,1.019,104,2.63,111,1.379,138,0.628,150,1.243,151,1.724,207,1.577,211,1.467,282,1.243,291,1.379,313,1.096,318,1.243,319,2.63,336,0.954,337,1.467,339,1.188,340,3.383,357,1.379,358,1.467,360,1.467,361,1.467,363,1.577,372,1.467,375,4.482,381,2.664,382,1.467,384,1.724,386,1.306,391,1.9,392,1.306,394,1.306,415,1.306,423,1.243,426,1.379,431,1.306,433,1.243,435,1.019,438,1.306,439,1.379,443,1.306,445,1.306,475,5.369,480,3.147,481,1.188,496,1.306,499,1.306,558,1.724,574,1.577,575,1.724,576,1.724,598,1.467,599,1.724,603,1.306,620,1.379,651,1.724,671,1.467,672,1.724,695,1.188,697,1.379,699,1.577,720,1.724,732,1.577,742,1.379,743,1.379,759,1.724,818,1.467,886,1.467,887,4.786,888,2.446,920,1.467,922,1.467,923,1.724,942,1.306,965,1.724,983,1.467,984,2.63,990,1.577,1031,1.379,1032,3.147,1044,1.379,1045,1.243,1053,1.724,1054,1.724,1062,1.467,1063,1.724,1065,1.306,1087,1.724,1089,1.724,1090,1.724,1093,1.467,1094,2.63,1095,3.147,1097,1.467,1138,1.577,1139,1.724,1140,1.724,1148,1.243,1149,2.63,1160,1.467,1168,1.467,1172,1.467,1174,1.467,1175,1.724,1176,1.306,1185,1.306,1189,1.306,1201,1.379,1202,3.147,1203,1.306,1215,1.379,1217,1.306,1221,1.306,1233,1.467,1234,1.724,1258,1.467,1259,2.63,1270,1.577,1279,1.724,1296,2.63,1305,1.724,1308,1.188,1309,2.446,1313,1.467,1326,1.379,1328,1.379,1329,1.724,1330,1.306,1332,1.188,1339,1.188,1346,1.243,1348,1.056,1351,1.467,1394,3.147,1395,1.243,1415,1.096,1439,1.724,1444,1.188,1445,1.188,1475,1.724,1476,1.724,1516,1.467,1517,1.724,1526,1.724,1527,2.63,1528,1.306,1539,1.724,1567,1.577,1623,1.379,1624,2.958,1629,1.379,1631,1.379,1665,1.379,1700,1.724,1725,1.306,1726,2.446,1733,1.467,1735,1.467,1736,1.724,1737,1.379,1739,1.379,1746,1.306,1756,2.63,1776,1.724,1779,1.724,1784,1.577,1790,2.446,1792,1.467,1794,1.467,1795,1.724,1796,1.306,1805,1.724,1807,1.467,1808,1.724,1810,1.306,1820,1.724,1822,1.724,1825,2.63,1831,1.724,1838,1.467,1839,1.724,1868,1.577,1869,1.724,1894,1.577,1895,1.724,1896,1.724,1900,1.724,1910,1.577,1911,2.63,1912,1.724,1914,1.724,1919,1.577,1920,2.876,1921,2.876,1930,2.63,1945,1.724,1953,1.724,1963,2.63,1968,1.577,1979,1.724,1986,1.379,1987,3.147,1988,1.306,1989,1.306,1990,4.145,2001,1.379,2003,1.379,2005,1.379,2018,1.724,2022,1.724,2023,1.139,2024,1.948,2025,1.948,2026,6.977,2027,6.977,2028,6.213,2029,6.761,2030,7.599,2031,3.249,2032,7.163,2033,9.054,2034,9.314,2035,1.724,2036,1.724,2037,5.984,2038,1.724,2039,1.724,2040,1.724,2041,4.799,2042,1.724,2043,1.724,2044,1.724,2045,1.724,2046,1.724,2047,1.724,2048,1.724,2049,1.724,2050,2.876,2051,1.948,2052,1.948,2053,1.948,2054,1.948,2055,1.948,2056,1.948,2057,1.948,2058,1.948,2059,1.948,2060,1.948,2061,1.948,2062,1.948,2063,1.948,2064,1.948,2065,2.876,2066,1.724,2067,1.724,2068,4.799,2069,1.948,2070,1.948,2071,1.724,2072,1.724,2073,1.724,2074,1.948,2075,1.724,2076,2.876,2077,3.249,2078,1.948,2079,1.724,2080,6.213,2081,7.327,2082,1.724,2083,1.948,2084,1.724,2085,1.948,2086,1.724,2087,1.948,2088,1.724,2089,1.948,2090,1.724,2091,1.948,2092,1.724,2093,1.948,2094,1.577,2095,1.948,2096,4.878,2097,1.948,2098,1.948,2099,1.577,2100,1.577,2101,1.948,2102,4.878,2103,1.577,2104,1.724,2105,3.147,2106,1.379,2107,1.379,2108,2.63,2109,1.724,2110,1.577,2111,1.724,2112,1.577,2113,2.876,2114,1.577,2115,1.577,2116,1.948,2117,1.724,2118,5.499,2119,1.724,2120,1.724,2121,1.724,2122,1.724,2123,1.724,2124,1.724,2125,1.724,2126,1.948,2127,1.948,2128,1.948,2129,1.948,2130,1.467]],["title/dependencies.html",[538,2.768,652,2.663]],["body/dependencies.html",[0,0.249,21,0.008,24,3.056,30,2.661,36,0.957,58,0.006,59,0.006,74,3.314,75,3.846,76,3.314,88,3.056,97,1.793,98,2.58,99,1.638,108,3.534,123,2.18,124,4.398,125,4.091,127,3.655,331,2.02,369,4.091,442,3.846,516,1.924,517,2.58,538,2.661,616,4.809,623,4.091,652,3.642,658,3.642,663,3.846,682,3.314,698,3.178,731,4.809,752,3.846,809,4.809,978,3.642,986,4.398,988,5.466,993,3.642,1542,5.655,1561,3.846,1565,5.655,1852,3.846,1924,4.809,2131,5.433,2132,5.433,2133,5.433,2134,5.433,2135,5.433,2136,6.986,2137,5.433,2138,5.433,2139,5.433,2140,5.433,2141,5.433,2142,5.433,2143,5.433,2144,5.433,2145,5.433,2146,6.986,2147,5.433,2148,5.433,2149,5.433,2150,5.433,2151,5.433,2152,5.433,2153,5.433,2154,5.433,2155,5.433,2156,5.433,2157,5.433,2158,8.151,2159,5.433,2160,5.433,2161,5.433,2162,5.433,2163,5.433,2164,5.433,2165,5.433,2166,5.433,2167,5.433,2168,5.433,2169,5.433,2170,5.433,2171,5.433,2172,5.433,2173,5.433,2174,5.433,2175,5.433,2176,5.433]],["title/miscellaneous/enumerations.html",[2177,2.663,2178,5.002]],["body/miscellaneous/enumerations.html",[7,0.501,21,0.008,40,0.753,41,2.089,58,0.007,59,0.007,267,3.902,279,2.868,286,5.173,313,3.397,584,3.854,788,4.397,1037,5.623,1058,5.286,1165,4.047,1315,5.006,1317,4.2,1359,4.547,1363,5.346,1513,5.346,1624,4.275,1626,5.623,1630,5.623,1653,5.286,1974,6.61,2099,4.889,2100,6.045,2103,4.889,2177,4.048,2178,5.346,2179,5.346,2180,6.04,2181,5.346,2182,6.04,2183,6.04,2184,6.04,2185,6.04,2186,6.04,2187,6.61,2188,6.04,2189,3.684,2190,5.346,2191,5.346,2192,6.04,2193,6.04,2194,6.04,2195,6.04,2196,6.04,2197,6.04,2198,6.04,2199,6.04,2200,6.04]],["title/index.html",[7,0.33,2201,3.516,2202,3.516]],["body/index.html",[4,0.134,21,0.008,58,0.005,59,0.005,60,2.569,66,2.875,70,5.31,75,4.712,127,2.125,336,1.989,537,2.645,580,2.875,647,3.595,682,2.477,707,3.288,924,3.058,932,1.588,954,2.875,985,2.722,997,3.058,1114,3.95,1371,3.228,1374,3.866,1375,3.111,1376,3.847,1379,2.591,1398,2.875,1400,3.003,1406,4.338,1410,3.861,1411,3.785,1413,2.284,1426,2.477,1497,4.757,1582,4.634,1586,4.063,1587,4.678,1656,3.058,1665,2.875,1852,4.063,2187,3.595,2189,3.501,2203,5.892,2204,4.062,2205,6.592,2206,5.856,2207,3.595,2208,5.388,2209,2.477,2210,3.288,2211,3.288,2212,5.015,2213,4.646,2214,3.288,2215,3.288,2216,5.121,2217,3.595,2218,3.595,2219,3.595,2220,3.595,2221,3.595,2222,5.081,2223,3.058,2224,3.595,2225,5.74,2226,5.74,2227,5.081,2228,5.081,2229,2.875,2230,3.595,2231,3.595,2232,5.892,2233,5.74,2234,5.74,2235,2.376,2236,4.062,2237,5.892,2238,3.595,2239,4.322,2240,4.062,2241,5.081,2242,3.501,2243,6.178,2244,4.062,2245,4.062,2246,4.062,2247,4.062,2248,2.875,2249,3.595,2250,4.062,2251,4.062,2252,5.081,2253,4.062,2254,3.288,2255,4.322,2256,4.062,2257,3.058,2258,3.058,2259,3.595,2260,3.595,2261,3.288,2262,3.595,2263,3.595,2264,3.288,2265,2.591,2266,3.595,2267,3.288,2268,3.595,2269,3.288,2270,3.595,2271,3.595,2272,4.062,2273,2.722,2274,3.595,2275,3.595,2276,2.722,2277,4.062,2278,3.595,2279,3.288,2280,3.595,2281,3.595,2282,3.288,2283,3.595,2284,3.595,2285,3.595,2286,3.595,2287,3.595,2288,3.288,2289,3.595,2290,2.722,2291,3.501,2292,3.595,2293,3.595,2294,3.595,2295,3.595,2296,3.058,2297,3.058,2298,3.595,2299,3.288,2300,3.595,2301,4.062,2302,4.062,2303,4.062,2304,4.062,2305,4.062,2306,3.288,2307,3.058,2308,3.595,2309,4.062,2310,3.595,2311,3.595,2312,3.595,2313,3.058,2314,4.062,2315,4.062,2316,4.062,2317,4.062,2318,4.062,2319,4.062,2320,4.062,2321,2.722,2322,4.062,2323,3.595,2324,4.322,2325,4.062,2326,4.062,2327,4.062,2328,4.062,2329,3.058,2330,3.058,2331,4.062,2332,4.062,2333,4.062,2334,2.591,2335,4.062,2336,4.062,2337,4.062,2338,4.062,2339,4.062,2340,2.875,2341,4.062]],["title/classes/inetOrgPerson.html",[0,0.168,336,2.309]],["body/classes/inetOrgPerson.html",[0,0.155,2,0.82,3,0.171,4,0.144,5,0.153,7,0.362,8,0.79,11,1.37,18,0.942,21,0.008,23,0.595,29,0.162,37,0.25,40,1.172,58,0.005,59,0.005,87,1.474,92,2.147,96,4.901,97,1.44,144,0.994,297,2.497,324,2.85,329,1.44,331,2.244,332,2.283,336,2.956,343,3.389,354,4.544,1155,3.096,1313,3.286,1967,6.124,2108,3.532,2342,4.22,2343,4.22,2344,4.22,2345,4.22,2346,4.22,2347,4.22,2348,4.22,2349,4.22,2350,4.22,2351,4.22,2352,4.22,2353,4.22,2354,4.22,2355,4.364,2356,4.364,2357,4.364,2358,4.364,2359,4.364,2360,4.364,2361,4.364,2362,4.364,2363,4.364,2364,4.364,2365,4.364,2366,4.364,2367,4.364,2368,4.364,2369,4.364,2370,3.862]],["title/classes/inetOrgPersonCreateDto.html",[0,0.168,2106,3.337]],["body/classes/inetOrgPersonCreateDto.html",[0,0.254,2,0.74,3,0.155,4,0.13,5,0.138,7,0.327,8,0.735,11,1.357,18,0.928,21,0.008,23,0.586,29,0.209,32,1.087,37,0.271,40,1.163,58,0.005,59,0.005,85,1.125,92,2.115,324,3.586,329,2.873,343,3.205,506,3.328,507,2.059,508,3.767,511,3.763,515,3.847,516,1.394,1155,2.928,1210,4.386,1415,2.214,2105,2.964,2106,4.631,2107,2.786,2342,3.991,2343,3.991,2344,3.991,2345,3.991,2346,3.991,2347,3.991,2348,3.991,2349,3.991,2350,3.991,2351,3.991,2352,3.991,2353,3.991,2354,3.991,2371,3.937,2372,7.539,2373,7.705,2374,3.937,2375,3.937,2376,3.937,2377,3.937,2378,3.484,2379,3.937,2380,3.484,2381,3.937,2382,3.937,2383,3.937,2384,3.937,2385,3.937,2386,3.937,2387,3.937,2388,3.937,2389,3.937,2390,3.186]],["title/classes/inetOrgPersonDto.html",[0,0.168,1415,2.651]],["body/classes/inetOrgPersonDto.html",[0,0.249,2,0.708,3,0.148,4,0.125,5,0.132,7,0.313,8,0.712,11,1.351,18,0.922,21,0.008,23,0.582,29,0.202,32,1.04,37,0.264,40,1.159,58,0.005,59,0.005,85,1.28,92,2.101,197,3.741,324,3.556,329,2.85,343,3.127,506,3.307,507,1.971,508,3.741,511,3.646,515,3.82,516,1.335,1155,2.857,1210,4.279,1415,3.06,2105,2.837,2106,6.36,2107,2.667,2342,3.894,2343,3.894,2344,3.894,2345,3.894,2346,3.894,2347,3.894,2348,3.894,2349,3.894,2350,3.894,2351,3.894,2352,3.894,2353,3.894,2354,3.894,2372,7.467,2373,7.642,2378,3.335,2380,3.335,2390,3.05,2391,3.768,2392,3.768,2393,3.768,2394,3.768,2395,3.768,2396,3.768,2397,3.768,2398,3.768,2399,3.768,2400,3.768,2401,3.768,2402,3.768,2403,3.768,2404,3.768,2405,3.768]],["title/classes/inetOrgPersonUpdateDto.html",[0,0.168,2107,3.337]],["body/classes/inetOrgPersonUpdateDto.html",[0,0.288,2,1.002,3,0.209,4,0.176,5,0.187,21,0.008,29,0.257,32,1.472,37,0.316,40,1.156,58,0.006,59,0.006,85,1.534,324,3.767,329,3.019,343,2.611,506,3.457,507,2.789,508,3.921,511,4.625,515,4.016,516,1.888,1155,2.385,1415,2.998,2105,4.014,2106,4.884,2107,4.884,2342,3.251,2343,3.251,2344,3.251,2345,3.251,2346,3.251,2347,3.251,2348,3.251,2349,3.251,2350,3.251,2351,3.251,2352,3.251,2353,3.251,2354,3.251,2390,5.586]],["title/license.html",[2201,3.516,2202,3.516,2406,3.516]],["body/license.html",[21,0.007,58,0.007,59,0.007]],["title/modules.html",[537,2.932]],["body/modules.html",[21,0.007,58,0.007,59,0.007,536,4.326,537,2.974,608,4.86,612,4.569,613,4.569,738,4.569,960,4.569,1071,4.569,1072,4.569,1272,4.86,1436,4.326,1442,4.326,2407,9.345,2408,9.345,2409,9.345,2410,9.345]],["title/overview.html",[2411,5.632]],["body/overview.html",[2,0.914,21,0.008,58,0.006,59,0.006,60,2.175,103,2.002,138,1.568,383,1.807,423,5.453,536,5.728,537,2.24,538,2.381,539,2.543,540,2.543,541,2.543,542,2.459,543,2.543,544,4.303,545,4.303,546,4.303,547,3.398,548,2.459,549,2.543,603,4.902,608,6.538,609,4.303,610,4.303,611,4.303,612,6.486,613,6.049,695,4.461,738,6.34,739,4.303,741,4.303,742,5.177,743,5.177,942,4.902,960,5.758,961,4.303,962,4.303,1065,4.902,1068,4.303,1069,4.303,1070,4.303,1071,5.758,1072,5.758,1189,4.902,1272,5.878,1273,4.303,1274,4.303,1346,4.667,1348,4.706,1436,5.728,1437,4.303,1438,4.303,1442,5.452,1534,4.303,1536,4.303,1746,4.902,1769,4.303,1770,4.303,1796,4.902,1799,4.303,1800,4.303,1810,4.902,1813,4.303,1814,4.303,2411,4.303,2412,6.495,2413,4.861,2414,4.861,2415,4.861]],["title/properties.html",[8,0.74,652,2.663]],["body/properties.html",[4,0.236,8,0.935,21,0.008,58,0.007,59,0.007,670,5.782,932,2.793,2205,5.782,2206,5.782,2207,6.322,2208,5.782,2210,5.782,2406,6.322,2416,7.143]],["title/miscellaneous/typealiases.html",[2177,2.663,2417,5.651]],["body/miscellaneous/typealiases.html",[7,0.507,21,0.008,22,1.304,23,0.537,40,0.762,41,2.111,58,0.007,59,0.007,89,2.813,134,2.583,171,3.571,243,2.99,279,2.899,326,4.092,333,3.57,351,2.939,375,4.074,447,5.321,488,2.99,583,4.797,656,5.404,678,5.039,887,4.321,888,5.661,889,4.092,895,4.942,898,6.086,900,4.597,917,4.942,918,4.942,919,4.942,1309,4.597,1323,6.655,1726,4.597,1732,6.655,1790,4.597,1791,6.655,1994,5.661,2094,4.942,2177,4.092,2418,6.105,2419,5.404,2420,5.404,2421,5.404,2422,5.404,2423,6.105,2424,7.518,2425,5.404,2426,6.105,2427,7.518,2428,6.105,2429,7.518,2430,7.518,2431,6.105,2432,6.105,2433,6.105,2434,6.105,2435,6.105]],["title/miscellaneous/variables.html",[2177,2.663,2324,4.255]],["body/miscellaneous/variables.html",[7,0.131,8,0.843,21,0.008,22,0.91,23,0.58,40,0.935,41,2.514,42,1.438,43,1.401,44,1.701,53,0.602,55,0.449,56,1.946,58,0.002,59,0.002,94,2.049,108,0.8,134,3.076,136,0.774,138,0.878,139,5.659,144,0.816,155,0.889,164,2.667,168,2.734,178,2.088,180,2.637,207,2.203,242,2.409,243,3.345,267,0.728,279,1.701,282,1.736,291,2.536,297,0.802,313,1.53,319,1.279,320,2.744,321,2.744,323,0.924,324,2.738,326,2.402,327,3.958,329,1.854,331,2.857,336,1.755,337,2.049,338,1.399,339,0.964,340,1.279,343,1.333,344,1.736,345,0.964,347,1.254,357,1.119,358,2.049,361,2.049,363,2.203,369,1.19,370,1.059,372,2.049,373,1.399,374,2.049,375,1.475,376,2.843,377,2.597,378,2.203,379,2.409,380,1.399,386,1.824,426,1.926,431,1.824,435,0.827,438,1.824,443,1.824,445,1.824,461,2.148,462,1.059,470,2.854,488,0.774,584,1.008,586,1.19,668,1.19,678,1.059,699,2.203,727,1.399,732,2.203,788,4.2,805,1.279,887,1.926,889,1.059,896,1.19,900,1.19,929,2.049,932,2.518,995,1.119,1114,2.148,1115,1.701,1147,2.514,1149,1.279,1155,1.604,1160,2.049,1172,2.049,1173,1.399,1215,1.926,1259,1.279,1270,2.203,1271,1.399,1296,1.279,1304,1.399,1309,1.19,1310,1.475,1311,1.736,1313,2.049,1325,2.203,1326,1.926,1327,1.399,1332,0.964,1339,0.964,1362,1.279,1367,1.119,1379,1.008,1395,1.008,1399,2.402,1400,1.875,1401,1.059,1405,1.824,1410,0.8,1411,2.939,1412,3.516,1415,0.889,1426,3.784,1459,1.19,1497,0.889,1567,2.203,1587,1.53,1726,1.19,1733,2.049,1734,1.399,1784,2.203,1790,1.19,1792,2.049,1793,1.399,1825,1.279,1830,1.399,1930,1.279,1941,1.399,1942,1.399,1943,1.399,1944,1.399,1963,1.279,1968,2.203,1978,1.399,1990,1.119,2001,1.926,2002,1.19,2003,1.926,2004,2.698,2005,1.926,2035,1.399,2036,2.409,2037,5.492,2038,2.409,2039,2.409,2040,2.409,2041,5.7,2042,2.409,2043,2.409,2044,2.409,2045,2.409,2046,2.409,2047,2.409,2048,1.399,2049,2.409,2050,1.399,2065,3.172,2066,2.409,2067,2.409,2068,3.769,2071,2.409,2072,2.409,2073,2.409,2094,1.279,2099,1.279,2100,2.203,2103,1.279,2104,1.399,2108,1.279,2109,1.399,2110,3.447,2111,1.399,2112,3.447,2113,1.399,2114,2.203,2115,2.203,2117,1.399,2118,1.399,2119,2.409,2120,2.409,2121,2.409,2122,2.409,2123,2.409,2124,2.409,2125,2.409,2177,1.059,2179,1.399,2181,1.399,2209,1.66,2212,0.924,2265,1.736,2296,1.19,2324,1.19,2342,2.186,2343,1.66,2344,1.66,2345,1.66,2346,1.66,2347,1.66,2348,1.66,2349,1.66,2350,1.66,2351,1.66,2352,1.66,2353,1.66,2354,1.66,2370,1.399,2419,1.399,2420,1.399,2421,1.399,2422,1.399,2425,4.249,2436,1.58,2437,1.58,2438,2.721,2439,6.205,2440,3.584,2441,1.58,2442,1.58,2443,1.58,2444,1.58,2445,2.721,2446,1.58,2447,1.58,2448,5.618,2449,2.721,2450,1.58,2451,1.58,2452,1.58,2453,1.58,2454,1.58,2455,1.58,2456,4.246,2457,4.258,2458,3.886,2459,3.769,2460,3.886,2461,3.584,2462,1.58,2463,2.721,2464,1.58,2465,2.721,2466,1.58,2467,2.203,2468,6.647,2469,3.584,2470,6.205,2471,5.246,2472,1.58,2473,5.246,2474,2.721,2475,2.721,2476,4.258,2477,6.44,2478,6.829,2479,2.721,2480,1.58,2481,2.721,2482,1.58,2483,2.721,2484,2.721,2485,5.246,2486,3.584,2487,4.258,2488,3.584,2489,3.584,2490,3.584,2491,3.584,2492,3.584,2493,1.399,2494,1.58,2495,1.58,2496,1.58,2497,1.58,2498,1.58,2499,1.58,2500,1.58,2501,1.58,2502,1.58,2503,1.58,2504,2.721,2505,1.58,2506,1.58,2507,1.58,2508,1.58,2509,1.399,2510,1.58,2511,1.58,2512,1.58,2513,2.409,2514,2.409,2515,2.409,2516,1.399,2517,1.399,2518,1.399,2519,1.58,2520,1.58,2521,1.58,2522,1.58,2523,1.58,2524,1.58,2525,1.58,2526,6.44,2527,4.23,2528,3.713,2529,2.409,2530,3.172,2531,1.58,2532,2.409,2533,1.399,2534,2.203,2535,1.399,2536,4.8,2537,2.901,2538,2.536,2539,2.901,2540,3.584,2541,1.58,2542,1.059,2543,1.399,2544,1.58]],["title/additional-documentation/cahier-des-charges.html",[1360,1.581,1374,1.314,2545,1.699,2546,2.675,2547,2.675]],["body/additional-documentation/cahier-des-charges.html",[4,0.213,21,0.008,58,0.004,59,0.004,60,2.155,70,3.228,75,3.409,127,1.671,537,1.472,682,2.938,707,3.899,924,3.627,951,4.365,954,2.261,985,2.141,997,2.406,1114,4.14,1365,5.713,1371,3.895,1374,3.818,1375,2.61,1376,3.228,1398,2.261,1400,2.52,1403,2.141,1406,4.506,1410,3.683,1411,4.069,1426,1.949,1497,4.633,1582,4.938,1587,3.63,1636,2.406,1852,4.104,2023,3.391,2189,2.938,2203,4.263,2205,5.893,2206,4.693,2208,4.693,2210,2.586,2212,4.987,2213,2.586,2214,2.586,2215,2.586,2216,5.349,2219,2.828,2220,2.828,2221,2.828,2222,2.828,2223,2.406,2224,2.828,2227,2.828,2228,6.131,2229,2.261,2230,2.828,2231,2.828,2232,5.713,2235,4.549,2237,5.132,2239,4.365,2242,4.224,2243,5.893,2248,2.261,2249,4.263,2252,5.132,2257,4.365,2258,2.406,2259,2.828,2260,2.828,2262,2.828,2265,3.073,2266,2.828,2268,2.828,2269,2.586,2270,2.828,2271,2.828,2273,2.141,2274,2.828,2275,2.828,2276,3.228,2278,2.828,2279,2.586,2280,2.828,2281,2.828,2282,3.899,2283,2.828,2284,2.828,2285,4.263,2286,2.828,2287,2.828,2288,2.586,2289,2.828,2290,5.065,2291,3.937,2292,2.828,2293,2.828,2294,2.828,2295,2.828,2296,2.406,2297,3.627,2298,4.263,2299,2.586,2300,4.263,2306,2.586,2311,2.828,2313,2.406,2321,4.88,2334,2.039,2527,5.482,2528,5.74,2546,2.828,2547,2.828,2548,3.195,2549,3.195,2550,3.195,2551,3.627,2552,3.195,2553,3.195,2554,2.828,2555,3.195,2556,3.195,2557,2.261,2558,3.195,2559,3.195,2560,2.586,2561,2.586,2562,3.195,2563,3.195,2564,2.586,2565,3.195,2566,3.195,2567,3.195,2568,2.828,2569,3.195,2570,2.828,2571,2.828,2572,3.195,2573,3.195,2574,2.261,2575,3.195,2576,4.817,2577,3.195,2578,3.195,2579,4.263,2580,3.195,2581,3.195,2582,3.195,2583,3.195,2584,3.195,2585,3.195,2586,3.195,2587,2.828,2588,3.195,2589,5.225,2590,3.195,2591,3.195,2592,3.195,2593,3.195,2594,2.828,2595,2.828,2596,3.195,2597,3.195,2598,3.195,2599,3.195,2600,3.195,2601,3.195,2602,2.828,2603,2.828,2604,4.817,2605,3.195,2606,3.195,2607,3.195,2608,3.195,2609,2.828,2610,4.817,2611,4.817,2612,4.263,2613,2.828,2614,2.586,2615,3.195,2616,5.225,2617,6.455,2618,3.195,2619,3.195,2620,3.195,2621,2.828,2622,3.195,2623,3.195,2624,3.195,2625,3.195,2626,3.195,2627,2.586,2628,3.899,2629,3.195,2630,3.195,2631,3.195,2632,3.195,2633,3.195,2634,3.195,2635,2.586,2636,3.195,2637,3.195,2638,3.195,2639,2.586,2640,3.195,2641,3.195,2642,2.586,2643,3.195,2644,3.195,2645,3.195,2646,2.406,2647,3.195,2648,3.195,2649,3.195,2650,2.828,2651,3.195,2652,3.195,2653,3.195,2654,3.195,2655,3.195,2656,2.828,2657,3.195,2658,3.195,2659,3.195,2660,3.195,2661,2.828,2662,3.195,2663,3.195,2664,3.195,2665,3.195,2666,3.195,2667,3.195,2668,3.195,2669,3.195]],["title/additional-documentation/documentation-technique.html",[1360,1.796,2023,2.008,2545,1.93,2646,2.585]],["body/additional-documentation/documentation-technique.html",[21,0.007,58,0.007,59,0.007,951,5.447,1374,3.147,2130,5.447,2616,5.856,2670,5.856,2671,7.235,2672,6.404,2673,5.856,2674,6.404]],["title/additional-documentation/documentation-technique/demon.html",[1360,2.078,2545,2.234,2675,3.973]],["body/additional-documentation/documentation-technique/demon.html",[21,0.007,58,0.007,59,0.007,951,6.272,1371,4.079,2282,5.871,2676,8.33,2677,7.253,2678,7.253]],["title/additional-documentation/documentation-technique/queue-processor-service.html",[66,2.139,233,1.843,1360,1.581,2545,1.699,2679,3.022]],["body/additional-documentation/documentation-technique/queue-processor-service.html",[0,0.145,2,0.768,5,0.286,9,2.569,15,1.993,21,0.008,29,0.284,36,0.719,37,0.169,53,2.197,55,0.673,56,1.035,58,0.005,59,0.005,63,4.079,65,2.139,66,5.414,67,6.191,69,5.32,70,5.999,72,3.241,74,3.515,75,4.727,76,3.515,77,3.616,78,3.616,79,3.515,80,5.101,81,3.616,82,3.616,85,0.819,101,1.341,127,3.015,144,0.93,154,1.413,221,2.312,233,4.073,806,4.665,932,1.597,972,3.616,973,3.616,974,3.616,977,3.616,978,2.738,979,3.616,980,3.616,981,3.616,985,2.738,987,3.307,1114,4.127,1371,2.297,1374,2.905,1400,2.137,1403,3.863,1406,3.869,1410,3.669,1411,3.015,1413,3.241,1497,4.587,1498,4.665,1582,4.474,1586,2.891,1587,4.302,1588,4.476,1597,3.616,2189,2.492,2209,3.515,2211,3.307,2212,4.954,2229,2.891,2235,2.389,2242,4.665,2276,2.738,2288,4.665,2291,4.073,2313,3.076,2321,2.738,2324,4.339,2340,2.891,2537,4.665,2542,2.738,2551,3.076,2574,4.079,2579,3.616,2589,3.307,2672,5.101,2680,3.076,2681,3.307,2682,5.763,2683,3.616,2684,4.665,2685,7.253,2686,8.33,2687,3.616,2688,3.616,2689,4.085,2690,5.763,2691,5.763,2692,4.085,2693,5.911,2694,3.616,2695,4.085,2696,3.616,2697,4.085,2698,4.085,2699,3.307,2700,3.616,2701,4.085,2702,4.085,2703,4.085,2704,4.085,2705,3.616,2706,3.616,2707,3.616,2708,4.339,2709,4.085,2710,4.085,2711,4.085,2712,4.085,2713,3.076,2714,4.085,2715,2.738,2716,3.307,2717,4.085,2718,4.085,2719,4.085,2720,3.616,2721,4.085,2722,4.085,2723,4.085,2724,4.085,2725,4.085]],["title/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[929,1.539,1360,1.069,1374,1.471,1406,1.034,2276,1.37,2545,1.149,2726,2.043,2727,2.043]],["body/additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html",[21,0.008,29,0.203,37,0.142,45,0.913,53,1.77,56,1.595,58,0.002,59,0.003,79,0.913,86,1.271,87,2.368,89,0.689,99,1.399,127,3.169,138,1.641,141,3.683,144,1.627,154,2.25,155,0.842,156,2.757,157,2.01,159,2.962,160,2.193,161,2.193,162,2.307,164,3.178,167,0.955,168,3.161,169,2.193,171,2.011,172,2.618,183,2.858,184,0.955,202,1.211,221,2.43,233,4.5,267,1.89,291,2.433,297,1.21,313,0.842,323,0.875,326,1.74,336,2.01,343,1.271,347,2.139,375,0.811,381,0.965,383,0.556,435,0.783,475,1.46,542,0.757,554,0.811,596,2.783,597,3.187,689,2.962,788,1.232,889,2.75,905,1.954,910,1.127,929,5.165,995,1.059,1001,1.211,1113,1.211,1114,3.878,1155,1.162,1308,1.583,1310,1.863,1311,1.656,1315,1.003,1317,0.842,1325,2.101,1326,1.837,1328,1.059,1332,1.583,1339,1.583,1345,1.325,1346,2.962,1348,0.811,1367,1.059,1371,2.861,1372,1.211,1374,3.688,1377,3.246,1379,1.656,1400,3.294,1406,3.784,1410,3.676,1411,3.963,1413,3.942,1415,1.46,1442,1.003,1459,1.954,1460,1.211,1497,4.47,1510,3.632,1582,4.977,1587,3.406,1588,2.75,1591,2.304,1610,3.043,1658,1.127,1838,4.56,1840,1.325,1841,1.325,1842,1.325,1843,1.325,1845,1.325,1852,4.287,1853,3.043,2023,2.715,2075,3.043,2079,4.109,2082,1.325,2084,1.325,2086,1.325,2088,1.325,2090,1.325,2092,1.325,2110,2.783,2112,3.757,2114,3.757,2115,2.101,2130,1.954,2189,1.583,2209,3.84,2211,1.211,2212,4.717,2213,1.211,2216,3.866,2217,1.325,2218,1.325,2223,1.127,2229,1.059,2235,3.683,2242,2.097,2254,1.211,2258,1.127,2263,1.325,2267,1.211,2273,2.75,2276,1.74,2279,1.211,2291,2.831,2299,2.101,2307,1.127,2308,1.325,2321,1.003,2323,1.325,2330,2.588,2334,1.656,2342,2.097,2343,1.583,2344,1.583,2345,1.583,2346,1.583,2347,1.583,2348,1.583,2349,1.583,2350,1.583,2351,1.583,2352,1.583,2353,1.583,2354,1.583,2467,1.211,2493,1.325,2509,1.325,2528,1.059,2538,1.837,2542,1.74,2543,1.325,2551,1.127,2564,2.783,2574,2.904,2587,1.325,2603,1.325,2613,1.325,2614,2.101,2616,5.883,2627,1.211,2635,1.211,2642,1.211,2650,3.632,2656,1.325,2661,2.298,2670,2.101,2680,1.954,2681,2.101,2684,4.421,2687,1.325,2693,3.632,2696,2.298,2699,1.211,2700,2.298,2705,1.325,2706,3.043,2707,1.325,2708,4.56,2715,2.304,2716,2.783,2728,5.781,2729,2.298,2730,2.596,2731,5.088,2732,6.072,2733,4.642,2734,4.642,2735,6.056,2736,2.588,2737,3.043,2738,2.596,2739,7.01,2740,2.298,2741,3.757,2742,2.783,2743,3.632,2744,4.421,2745,2.596,2746,2.596,2747,2.596,2748,1.496,2749,1.496,2750,2.596,2751,1.496,2752,1.496,2753,3.632,2754,1.496,2755,1.325,2756,1.496,2757,2.596,2758,2.596,2759,1.496,2760,2.298,2761,5.462,2762,1.496,2763,3.043,2764,1.496,2765,1.496,2766,1.496,2767,1.496,2768,1.496,2769,1.496,2770,1.496,2771,1.325,2772,1.496,2773,1.496,2774,1.496,2775,1.496,2776,1.127,2777,1.496,2778,1.325,2779,1.496,2780,1.211,2781,4.642,2782,1.496,2783,1.325,2784,1.496,2785,4.103,2786,6.296,2787,4.103,2788,1.496,2789,1.496,2790,1.496,2791,5.088,2792,1.496,2793,1.496,2794,1.325,2795,1.325,2796,2.596,2797,2.596,2798,2.596,2799,2.596,2800,2.596,2801,2.596,2802,2.596,2803,1.127,2804,1.496,2805,2.596,2806,1.496,2807,1.496,2808,1.211,2809,1.496,2810,2.596,2811,2.596,2812,2.596,2813,1.496,2814,1.496,2815,1.496,2816,1.496,2817,1.496,2818,1.496,2819,1.496,2820,1.211,2821,1.496,2822,1.496,2823,1.496,2824,1.496,2825,1.496,2826,2.596,2827,4.118,2828,1.496,2829,6.507,2830,1.496,2831,1.496,2832,1.496,2833,1.496,2834,1.496,2835,1.325,2836,1.496,2837,1.325,2838,1.496,2839,1.496,2840,1.496,2841,1.496,2842,4.103,2843,1.496,2844,1.496,2845,1.496,2846,1.496,2847,1.496,2848,1.496,2849,4.103,2850,4.103,2851,1.496,2852,1.496,2853,1.496,2854,1.496,2855,1.496,2856,1.211,2857,1.496,2858,2.101,2859,1.496,2860,1.496,2861,1.325,2862,1.496,2863,1.496,2864,1.954,2865,1.496,2866,1.496,2867,1.496,2868,1.496,2869,2.588,2870,1.496,2871,1.496,2872,1.325,2873,1.325,2874,1.496,2875,1.496,2876,2.101,2877,1.496,2878,5.117,2879,1.496,2880,1.325,2881,1.496,2882,1.496,2883,1.496,2884,2.596,2885,4.113,2886,1.496,2887,1.496,2888,1.211,2889,1.496,2890,1.325,2891,1.496,2892,2.298,2893,1.325,2894,2.596,2895,1.211,2896,2.596,2897,1.496,2898,1.496,2899,2.596,2900,1.496,2901,1.496,2902,2.596,2903,3.438,2904,2.596,2905,1.325,2906,1.496,2907,1.496,2908,1.496,2909,2.596,2910,1.127,2911,1.496,2912,1.211,2913,1.496,2914,1.211,2915,1.496,2916,1.496,2917,2.596,2918,1.496,2919,2.596,2920,1.496,2921,1.496,2922,1.496,2923,1.496,2924,1.496,2925,1.496,2926,1.496,2927,1.496,2928,1.496,2929,1.496,2930,1.496,2931,1.496,2932,1.127,2933,1.496,2934,1.496,2935,1.496,2936,2.596,2937,3.438,2938,2.596,2939,1.954,2940,1.496,2941,1.496,2942,1.496,2943,1.496,2944,1.496,2945,1.496,2946,1.496,2947,2.596,2948,1.496,2949,1.496,2950,1.325,2951,1.325,2952,1.496,2953,1.496,2954,1.496,2955,1.496,2956,1.325,2957,1.496,2958,1.496,2959,1.496,2960,1.211,2961,1.496,2962,1.496]],["title/additional-documentation/documentation-technique/validation-des-identités.html",[1115,1.435,1360,1.581,1374,1.314,2239,2.275,2545,1.699]],["body/additional-documentation/documentation-technique/validation-des-identités.html",[0,0.139,21,0.008,23,0.368,40,0.697,45,3.407,58,0.005,59,0.005,99,2.144,101,0.909,105,2.241,127,2.045,134,1.654,138,1.261,154,1.932,174,3.009,233,4.337,318,4.159,322,1.856,374,2.943,592,1.701,658,3.744,932,1.528,985,2.62,1045,2.494,1114,4.072,1115,4.194,1348,3.532,1371,3.999,1374,3.843,1375,2.118,1377,4.537,1379,2.494,1400,2.922,1402,2.767,1406,4.241,1410,3.297,1411,3.41,1413,2.198,1436,2.62,1497,4.932,1498,3.164,1519,2.767,1542,5.276,1544,3.46,1546,4.944,1552,4.944,1553,4.944,1561,4.614,1565,6.089,1580,4.522,1582,5.034,1587,3.999,1588,3.744,1589,4.944,1590,4.944,1591,2.62,1600,2.767,2023,3.267,2209,3.407,2212,4.903,2216,4.614,2235,2.286,2239,4.206,2242,4.337,2243,6.786,2248,2.767,2255,2.943,2258,2.943,2265,3.564,2276,4.369,2291,3.975,2297,2.943,2307,2.943,2310,3.46,2321,3.744,2329,2.943,2330,2.943,2334,2.494,2538,2.767,2542,2.62,2551,2.943,2557,2.767,2560,3.164,2561,3.164,2564,3.164,2570,4.944,2574,2.767,2595,4.944,2646,2.943,2683,3.46,2684,3.164,2688,3.46,2708,2.943,2713,2.943,2715,2.62,2737,3.46,2741,3.164,2742,3.164,2753,3.46,2760,3.46,2776,5.354,2803,4.206,2808,4.522,2820,3.164,2827,3.164,2835,3.46,2876,3.164,2888,3.164,2892,5.769,2893,3.46,2912,3.164,2932,4.206,2963,3.46,2964,5.586,2965,5.586,2966,5.586,2967,5.586,2968,3.909,2969,4.944,2970,3.909,2971,3.909,2972,3.46,2973,3.909,2974,3.909,2975,3.909,2976,3.909,2977,3.909,2978,3.909,2979,5.586,2980,3.909,2981,3.909,2982,3.909,2983,3.909,2984,3.909,2985,3.909,2986,4.944,2987,3.909,2988,3.909,2989,3.164,2990,3.909,2991,5.586,2992,3.909,2993,5.586,2994,3.909,2995,3.164,2996,3.46,2997,3.909,2998,3.909,2999,3.46,3000,3.909,3001,3.909,3002,3.909,3003,3.909,3004,3.909,3005,3.909,3006,5.586,3007,3.909]],["title/additional-documentation/documentation-technique/formulaires-customs.html",[1360,1.796,2545,1.93,2673,2.779,2674,3.038]],["body/additional-documentation/documentation-technique/formulaires-customs.html",[21,0.008,22,1.363,23,0.547,40,0.39,41,0.643,43,2.495,58,0.003,59,0.003,87,1.055,98,3.029,99,0.56,127,1.634,138,0.599,164,2.507,243,1.53,267,3.058,286,1.993,297,2.306,329,1.031,344,1.993,435,1.634,475,2.662,548,0.94,643,2.351,658,4.074,788,2.715,889,1.245,906,3.27,932,2.978,1114,4.092,1148,4.071,1150,3.351,1151,1.315,1152,3.911,1153,1.133,1154,1.087,1155,2.119,1165,1.692,1235,3.173,1236,3.538,1237,3.173,1238,3.173,1239,3.173,1240,3.173,1241,3.538,1242,3.892,1243,3.538,1280,3.707,1281,3.27,1371,3.216,1374,3.475,1375,4.329,1377,1.185,1379,1.185,1400,3.338,1404,4.074,1406,3.853,1407,1.315,1410,3.228,1411,3.985,1412,5.301,1413,2.272,1497,4.641,1582,4.827,1587,2.969,1588,1.245,1591,1.245,1600,1.315,1653,1.315,1681,5.025,1988,2.093,1989,2.093,2023,3.344,2189,4.048,2190,1.645,2191,4.19,2209,3.892,2212,4.915,2214,2.528,2215,2.528,2216,3.737,2223,1.399,2235,4.673,2241,1.645,2242,2.464,2248,1.315,2254,2.528,2255,3.041,2264,3.832,2265,2.577,2273,1.245,2290,1.245,2291,4.182,2306,2.528,2307,1.399,2312,1.645,2313,5.163,2334,3.368,2340,1.315,2532,4.19,2537,2.528,2542,1.245,2557,1.315,2568,1.645,2574,2.21,2594,2.764,2602,1.645,2609,1.645,2614,1.504,2628,1.504,2642,2.528,2673,3.27,2680,1.399,2694,1.645,2699,1.504,2708,1.399,2715,1.245,2716,1.504,2729,2.764,2732,5.434,2736,4.305,2740,2.764,2741,2.528,2743,3.575,2744,3.27,2771,1.645,2778,1.645,2783,1.645,2795,2.764,2803,1.399,2808,2.528,2820,2.528,2856,3.832,2858,4.92,2861,6.07,2869,3.975,2872,1.645,2876,4.273,2878,1.645,2880,5.061,2885,1.399,2890,1.645,2905,3.575,2910,1.399,2939,1.399,2963,1.645,2996,2.764,2999,1.645,3008,7.049,3009,8.72,3010,2.764,3011,6.079,3012,3.123,3013,4.734,3014,5.718,3015,5.279,3016,3.123,3017,4.039,3018,3.123,3019,6.381,3020,3.123,3021,5.718,3022,3.123,3023,3.123,3024,4.039,3025,5.279,3026,1.858,3027,1.858,3028,1.858,3029,1.645,3030,1.858,3031,3.123,3032,1.645,3033,4.734,3034,4.734,3035,3.832,3036,1.858,3037,1.858,3038,4.734,3039,1.645,3040,1.858,3041,3.123,3042,1.858,3043,1.858,3044,1.858,3045,1.858,3046,3.123,3047,4.734,3048,3.575,3049,3.123,3050,5.718,3051,1.858,3052,1.858,3053,1.858,3054,1.858,3055,4.039,3056,3.123,3057,1.645,3058,1.858,3059,3.123,3060,1.858,3061,1.645,3062,1.858,3063,1.858,3064,1.858,3065,1.858,3066,3.123,3067,3.123,3068,3.123,3069,4.734,3070,4.734,3071,4.039,3072,1.858,3073,1.858,3074,4.039,3075,1.858,3076,1.645,3077,1.858,3078,1.858,3079,1.858,3080,1.645,3081,1.645,3082,1.858,3083,1.645,3084,1.858,3085,4.039,3086,4.039,3087,4.039,3088,4.039,3089,4.039,3090,5.279,3091,3.123,3092,1.858,3093,1.858,3094,1.858,3095,1.858,3096,1.858,3097,1.858,3098,1.858,3099,1.858,3100,3.123,3101,3.123,3102,1.858,3103,4.734,3104,4.039,3105,1.858,3106,3.123,3107,1.858,3108,1.858,3109,1.858,3110,1.858,3111,1.858,3112,3.123,3113,1.858,3114,1.858,3115,1.645,3116,1.858,3117,1.858,3118,3.123,3119,1.645,3120,1.858,3121,4.039,3122,1.858,3123,1.858,3124,1.858,3125,1.858,3126,1.858,3127,1.858,3128,1.858,3129,3.123,3130,1.858,3131,1.858,3132,1.858,3133,1.858,3134,3.123,3135,1.858,3136,1.858,3137,5.279,3138,1.858,3139,1.858,3140,4.734,3141,1.858,3142,1.858,3143,3.123,3144,1.858,3145,1.858,3146,1.858,3147,3.123,3148,1.858,3149,1.858,3150,1.858,3151,1.858,3152,1.858,3153,1.858,3154,1.858,3155,1.858,3156,1.858,3157,1.858,3158,1.858,3159,1.858,3160,1.858,3161,2.764]],["title/additional-documentation/documentation-utilisateur.html",[1360,1.796,2023,2.008,2297,2.585,2545,1.93]],["body/additional-documentation/documentation-utilisateur.html",[21,0.007,58,0.007,59,0.007,1114,3.246,1115,3.444,1374,3.155,2023,4.242,2130,5.461,2235,4.242,2290,4.862,2670,5.871]],["title/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[1360,1.276,1406,1.233,2545,1.371,2557,1.726,2864,1.836,2995,1.974,3162,2.158]],["body/additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html",[21,0.008,23,0.283,58,0.004,59,0.004,267,2.753,282,1.759,320,3.126,321,3.39,322,1.309,336,3.513,343,1.35,347,2.753,354,3.982,391,2.516,422,2.745,592,1.199,643,2.076,658,1.848,976,2.44,1114,4.121,1115,1.309,1155,1.234,1310,2.866,1311,3.375,1317,2.419,1364,2.44,1370,2.44,1371,3.644,1372,3.482,1374,3.227,1375,4.304,1376,4.343,1377,4.974,1378,2.44,1379,2.745,1380,2.44,1400,3.881,1401,2.883,1403,1.848,1404,2.883,1405,2.883,1406,3.473,1407,3.744,1410,3.628,1411,4.33,1412,1.848,1413,2.975,1426,4.65,1497,4.538,1561,3.045,1582,4.784,1586,1.951,1587,3.861,1591,1.848,1600,1.951,1681,1.848,2023,1.612,2189,3.644,2209,3.226,2212,4.645,2229,1.951,2235,3.094,2238,2.44,2242,3.226,2248,3.045,2257,5.586,2261,6.005,2265,2.745,2273,4.602,2290,4.807,2291,4.188,2321,2.883,2329,3.982,2330,4.499,2334,4.134,2340,5.076,2342,3.644,2343,1.681,2344,1.681,2345,1.681,2346,1.681,2347,1.681,2348,1.681,2349,1.681,2350,3.644,2351,1.681,2352,3.644,2353,1.681,2354,1.681,2456,3.482,2458,3.482,2460,3.482,2527,3.239,2528,3.744,2534,2.232,2538,1.951,2539,2.232,2542,1.848,2557,3.045,2560,2.232,2561,2.232,2571,2.44,2589,2.232,2612,2.44,2621,2.44,2628,2.232,2635,2.232,2639,2.232,2646,2.076,2713,2.076,2715,1.848,2732,5.586,2736,3.239,2742,2.232,2744,2.232,2776,3.982,2780,3.482,2803,2.076,2827,2.232,2856,3.482,2864,6.075,2869,2.076,2873,2.44,2885,3.239,2888,2.232,2895,3.482,2910,3.239,2914,2.232,2932,3.982,2939,2.076,2950,2.44,2951,2.44,2960,5.805,2986,2.44,2989,2.232,2995,4.281,3010,3.807,3029,2.44,3032,3.807,3035,2.232,3048,2.44,3057,3.807,3076,2.44,3081,3.807,3119,2.44,3162,5.289,3163,4.301,3164,7.172,3165,7.419,3166,3.807,3167,3.807,3168,4.301,3169,5.289,3170,4.301,3171,4.301,3172,4.301,3173,6.567,3174,2.757,3175,2.757,3176,2.757,3177,2.757,3178,2.757,3179,2.757,3180,2.757,3181,4.301,3182,2.757,3183,2.757,3184,2.757,3185,2.757,3186,2.757,3187,2.757,3188,4.301,3189,4.301,3190,2.757,3191,5.289,3192,2.757,3193,2.757,3194,4.682,3195,2.757,3196,3.807,3197,2.757,3198,4.301,3199,5.289,3200,5.289,3201,5.289,3202,3.807,3203,3.807,3204,4.301,3205,2.757,3206,2.757,3207,4.301,3208,4.301,3209,2.44,3210,2.757,3211,2.757,3212,4.682,3213,2.757,3214,2.757,3215,2.757,3216,2.757,3217,2.757,3218,2.44,3219,2.757,3220,4.301,3221,2.44,3222,4.301,3223,4.301,3224,4.301,3225,4.301,3226,4.301,3227,3.807,3228,4.301,3229,4.301,3230,4.301,3231,2.757,3232,2.757,3233,2.757,3234,2.757,3235,2.757,3236,2.757,3237,2.757,3238,2.757,3239,2.757,3240,2.44,3241,4.301,3242,2.44,3243,2.757,3244,2.757,3245,2.757,3246,2.757]],["title/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[1114,0.995,1115,1.056,1360,1.163,1374,0.967,2545,1.25,2554,1.968,3173,1.968,3247,2.223]],["body/additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html",[8,0.738,21,0.008,22,0.529,23,0.599,40,1.008,41,2.613,58,0.003,59,0.003,98,1.877,168,2.273,243,3.213,267,2.595,279,3.268,286,2.523,297,2.411,320,2.069,321,2.069,324,2.32,326,4.396,331,2.094,336,3.014,343,1.214,344,3.148,347,1.822,435,1.296,488,1.937,643,3.715,658,3.307,789,4.367,932,2.565,1114,4.062,1115,3.268,1117,3.201,1155,1.769,1310,2.143,1371,1.393,1374,3.205,1375,3.993,1376,1.661,1377,3.148,1399,2.65,1400,3.432,1401,4.614,1402,1.754,1404,3.775,1405,3.775,1406,3.482,1410,2.849,1411,4.036,1413,4.02,1426,3.753,1497,4.851,1561,5.06,1580,2.006,1582,4.664,1586,2.799,1587,3.461,1588,1.661,1591,1.661,1593,2.193,1600,5.06,1681,1.661,2076,2.193,2189,1.511,2209,2.412,2212,4.512,2235,3.294,2242,3.009,2255,1.866,2257,3.715,2261,2.006,2264,2.006,2265,3.148,2267,3.201,2269,3.201,2273,4.939,2290,1.661,2291,4.001,2296,1.866,2329,1.866,2334,2.523,2340,3.986,2342,1.511,2343,1.511,2344,1.511,2345,1.511,2346,1.511,2347,1.511,2348,1.511,2349,1.511,2350,1.511,2351,1.511,2352,1.511,2353,1.511,2354,1.511,2456,3.201,2458,3.201,2459,2.193,2460,2.006,2467,2.006,2513,3.5,2514,3.5,2515,3.5,2516,2.193,2517,2.193,2518,3.5,2527,5.382,2528,5.06,2529,6.327,2530,5.447,2533,2.193,2534,3.994,2535,2.193,2538,1.754,2539,2.006,2627,3.994,2639,2.006,2680,1.866,2681,2.006,2713,1.866,2715,1.661,2720,2.193,2732,4.634,2736,1.866,2755,2.193,2763,2.193,2776,2.977,2780,2.006,2794,3.5,2837,2.193,2858,2.006,2864,1.866,2869,1.866,2885,1.866,2895,2.006,2910,2.977,2912,4.981,2914,2.006,2932,2.977,2939,1.866,2956,4.367,2960,4.559,2969,3.5,2972,4.367,2989,3.994,3035,2.006,3039,2.193,3061,2.193,3080,2.193,3083,2.193,3115,2.193,3161,7.593,3166,3.5,3167,2.193,3194,4.367,3196,4.985,3202,2.193,3203,2.193,3209,6.327,3212,4.367,3218,3.5,3221,2.193,3227,2.193,3240,3.5,3242,3.5,3248,2.478,3249,2.478,3250,2.478,3251,2.478,3252,2.478,3253,2.478,3254,2.478,3255,2.478,3256,2.478,3257,2.478,3258,2.478,3259,2.478,3260,2.478,3261,2.478,3262,6.154,3263,2.478,3264,2.478,3265,3.954,3266,2.478,3267,3.954,3268,2.478,3269,3.954,3270,6.154,3271,4.934,3272,3.954,3273,3.954,3274,6.154,3275,4.934,3276,2.478,3277,3.954,3278,4.934,3279,2.478,3280,5.632,3281,3.954,3282,4.934,3283,2.478,3284,3.954,3285,2.478,3286,3.954,3287,2.478,3288,3.954,3289,2.478,3290,3.954,3291,3.954,3292,2.478,3293,3.954,3294,2.478,3295,3.954,3296,2.478,3297,3.954,3298,3.954,3299,2.478,3300,3.954,3301,5.632,3302,2.478,3303,3.954,3304,2.478,3305,3.954,3306,2.478,3307,2.478,3308,2.478,3309,3.954,3310,3.954,3311,4.934,3312,3.954,3313,3.954,3314,2.478,3315,2.478,3316,2.478,3317,2.478,3318,2.478,3319,2.478,3320,2.478,3321,2.478,3322,2.478,3323,3.954,3324,2.478,3325,3.954,3326,2.478,3327,2.478,3328,2.478,3329,2.478,3330,2.478,3331,2.478,3332,2.478,3333,2.478,3334,2.478,3335,2.478,3336,2.478,3337,2.478]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["0",{"_index":475,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/DtoValidationPipe.html":{},"controllers/KeyringsController.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["0.0.16",{"_index":2144,"title":{},"body":{"dependencies.html":{}}}],["0.0.8",{"_index":2416,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2165,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2150,"title":{},"body":{"dependencies.html":{}}}],["0.40.1",{"_index":2147,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2149,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2160,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2096,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2102,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2097,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2098,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2116,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2101,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2027,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2029,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2080,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2095,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["000000000000000000000000",{"_index":1056,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["01",{"_index":3280,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["07/schema",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1",{"_index":267,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["1.0.0",{"_index":2162,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2134,"title":{},"body":{"dependencies.html":{}}}],["1.0.13",{"_index":2133,"title":{},"body":{"dependencies.html":{}}}],["1.12.18",{"_index":2169,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":2176,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":2152,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2155,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":2159,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2077,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["10.0.1",{"_index":2135,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2140,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2141,"title":{},"body":{"dependencies.html":{}}}],["10.1.3",{"_index":2136,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2139,"title":{},"body":{"dependencies.html":{}}}],["10.3.1",{"_index":2143,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":2076,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["11",{"_index":2412,"title":{},"body":{"overview.html":{}}}],["11.0.0",{"_index":2163,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":3229,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["123",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12345",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123456",{"_index":3224,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["14",{"_index":2415,"title":{},"body":{"overview.html":{}}}],["15",{"_index":3230,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["19",{"_index":2413,"title":{},"body":{"overview.html":{}}}],["1980",{"_index":3228,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["1y",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":286,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2.0.3",{"_index":2138,"title":{},"body":{"dependencies.html":{}}}],["2.0.39",{"_index":2170,"title":{},"body":{"dependencies.html":{}}}],["2.3.4",{"_index":2175,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3290,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["200",{"_index":931,"title":{},"body":{"controllers/BackendsController.html":{}}}],["201",{"_index":1364,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["202",{"_index":3243,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["2020",{"_index":3283,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["2024",{"_index":3279,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["24",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["3",{"_index":1653,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["3.0.0",{"_index":2146,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":2137,"title":{},"body":{"dependencies.html":{}}}],["3.11.0",{"_index":2171,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":2167,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2127,"title":{},"body":{"coverage.html":{}}}],["30000",{"_index":981,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["3600",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["4",{"_index":3071,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["4.0.1",{"_index":2161,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2148,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2174,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":2002,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["42",{"_index":2126,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["5.0.22",{"_index":1857,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["5.1.1",{"_index":2172,"title":{},"body":{"dependencies.html":{}}}],["5.3.2",{"_index":2154,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":590,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["5000",{"_index":1645,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["500mb",{"_index":999,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["52",{"_index":2414,"title":{},"body":{"overview.html":{}}}],["6/7",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["7.1.0",{"_index":2153,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2168,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":668,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["8.0.2",{"_index":2156,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":2145,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["9a",{"_index":399,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_",{"_index":1708,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/abstracts/abstract.controller",{"_index":425,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{}}}],["_common/abstracts/abstract.queue.processor",{"_index":972,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["_common/abstracts/abstract.service",{"_index":661,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LoggerService.html":{}}}],["_common/abstracts/abstract.service.schema",{"_index":572,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["_common/abstracts/dto/custom",{"_index":520,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["_common/abstracts/dto/metadata.dto",{"_index":1220,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["_common/abstracts/schemas/abstract.schema",{"_index":366,"title":{},"body":{"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"injectables/IdentitiesService.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{}}}],["_common/abstracts/schemas/parts/metadata.part.schema",{"_index":100,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["_common/constants/event",{"_index":208,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["_common/data/console",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["_common/decorators/api",{"_index":427,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/decorators/params/req",{"_index":700,"title":{},"body":{"controllers/AuthController.html":{}}}],["_common/decorators/public.decorator",{"_index":694,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{}}}],["_common/dto/paginated",{"_index":34,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["_common/errors/validationexception",{"_index":1446,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_common/filters/identities",{"_index":1352,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["_common/helpers/pick",{"_index":440,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/pipes/object",{"_index":434,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/agent.type",{"_index":702,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["_common/types/mixed",{"_index":334,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_common/types/partial",{"_index":448,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["_common/types/validation",{"_index":1999,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["_config/validschema",{"_index":1568,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/config.dto",{"_index":1562,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["_dto/form.dto",{"_index":1188,"title":{},"body":{"controllers/FormController.html":{}}}],["_dto/identities.dto",{"_index":1345,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_enum/types",{"_index":1167,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["_enums/config.object",{"_index":1042,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["_enums/lifecycle.enum",{"_index":1319,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_enums/states.enum",{"_index":1321,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_exception",{"_index":1141,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["_id",{"_index":87,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ConsoleSession.html":{},"controllers/FormController.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["_metadata",{"_index":1902,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["_model",{"_index":152,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["_options",{"_index":1632,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["_parts",{"_index":2779,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/additionalfields.dto",{"_index":1423,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_parts/additionalfields.part.schema",{"_index":1322,"title":{},"body":{"classes/Identities.html":{}}}],["_parts/addtionalfields.dto.stub",{"_index":2769,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.dto",{"_index":1422,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["_parts/inetorgperson.dto.stub",{"_index":2770,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["_parts/inetorgperson.part",{"_index":1320,"title":{},"body":{"classes/Identities.html":{}}}],["_req",{"_index":106,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["_schemas/_parts/additionalfields.part.schema",{"_index":1522,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["_schemas/form.schema",{"_index":1276,"title":{},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["_schemas/identities.schema",{"_index":1350,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["_service",{"_index":455,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{}}}],["_validation",{"_index":1357,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{}}}],["abortearly",{"_index":1617,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["abstract",{"_index":49,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstract.service",{"_index":210,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["abstractcontroller",{"_index":1,"title":{"classes/AbstractController.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"coverage.html":{}}}],["abstractcontrollercontext",{"_index":17,"title":{"interfaces/AbstractControllerContext.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"coverage.html":{}}}],["abstractqueueprocessor",{"_index":63,"title":{"classes/AbstractQueueProcessor.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"coverage.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["abstractqueueprocessor:6",{"_index":970,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractqueueprocessor:7",{"_index":971,"title":{},"body":{"injectables/BackendsService.html":{}}}],["abstractschema",{"_index":83,"title":{"classes/AbstractSchema.html":{}},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"injectables/IdentitiesService.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["abstractservice",{"_index":102,"title":{"injectables/AbstractService.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["abstractservice:17",{"_index":200,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["abstractservice:18",{"_index":201,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["abstractservice:19",{"_index":198,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["abstractservice:20",{"_index":199,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["abstractservicecontext",{"_index":111,"title":{"interfaces/AbstractServiceContext.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"coverage.html":{}}}],["abstractserviceschema",{"_index":150,"title":{"injectables/AbstractServiceSchema.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"coverage.html":{}}}],["abstractserviceschema:115",{"_index":567,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:149",{"_index":562,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:191",{"_index":568,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:20",{"_index":1478,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:21",{"_index":570,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:248",{"_index":569,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:29",{"_index":1483,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:304",{"_index":563,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:32",{"_index":564,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:42",{"_index":561,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:48",{"_index":565,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstractserviceschema:68",{"_index":1481,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:79",{"_index":1479,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["abstractserviceschema:82",{"_index":566,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["abstraite",{"_index":2682,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["acc",{"_index":1622,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["acc[err.path",{"_index":1620,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["accent",{"_index":2867,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["accepted",{"_index":3244,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["access_token",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_expires_in",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token_prefix",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessible",{"_index":2641,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/AbstractController.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{}}}],["accompagnement",{"_index":2654,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accompagnés",{"_index":2619,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["accéder",{"_index":2690,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["actions",{"_index":3119,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["active",{"_index":2187,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["add",{"_index":217,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{}}}],["additional",{"_index":1360,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["additionalfields",{"_index":1310,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["additionalfieldspart",{"_index":318,"title":{"classes/AdditionalFieldsPart.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["additionalfieldspartdto",{"_index":1395,"title":{"classes/additionalFieldsPartDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["additionalfieldspartdtostub",{"_index":2110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["additionalfieldspartschema",{"_index":337,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["additionalfilters",{"_index":3098,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["additionalproperties",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["additionnel",{"_index":3192,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["additionnels",{"_index":1376,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["administrateurs",{"_index":2611,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["adresse",{"_index":3183,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["affichage",{"_index":2583,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["affichant",{"_index":3110,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["affirmer",{"_index":2822,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterall(async",{"_index":2801,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["aftereach(async",{"_index":2799,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["afterevent",{"_index":251,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.count",{"_index":255,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.created",{"_index":285,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.data",{"_index":253,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.deleted",{"_index":316,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.result",{"_index":310,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent.updated",{"_index":302,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.count",{"_index":254,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.created",{"_index":284,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.data",{"_index":252,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.deleted",{"_index":315,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.result",{"_index":309,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevent?.updated",{"_index":301,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterevents",{"_index":249,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindandcount'].join(eventemitterseparator",{"_index":250,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindbyid'].join(eventemitterseparator",{"_index":259,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterfindone'].join(eventemitterseparator",{"_index":263,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["afterupsert'].join(eventemitterseparator",{"_index":308,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["agents",{"_index":339,"title":{"classes/Agents.html":{}},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["agents.controller",{"_index":553,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.name",{"_index":556,"title":{},"body":{"modules/AgentsModule.html":{}}}],["agents.service",{"_index":424,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{}}}],["agents/agents.module",{"_index":1083,"title":{},"body":{"modules/CoreModule.html":{}}}],["agentscontroller",{"_index":382,"title":{"controllers/AgentsController.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"coverage.html":{}}}],["agentscontroller.projection",{"_index":464,"title":{},"body":{"controllers/AgentsController.html":{}}}],["agentscreatedto",{"_index":392,"title":{"classes/AgentsCreateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"coverage.html":{}}}],["agentscreatedto:26",{"_index":535,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:31",{"_index":527,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:36",{"_index":528,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:41",{"_index":530,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:46",{"_index":534,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:52",{"_index":533,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:57",{"_index":526,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:62",{"_index":531,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:67",{"_index":532,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentscreatedto:72",{"_index":529,"title":{},"body":{"classes/AgentsDto.html":{}}}],["agentsdto",{"_index":394,"title":{"classes/AgentsDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"coverage.html":{}}}],["agentsmodule",{"_index":536,"title":{"modules/AgentsModule.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["agentsschema",{"_index":372,"title":{},"body":{"classes/Agents.html":{},"modules/AgentsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["agentsservice",{"_index":423,"title":{"injectables/AgentsService.html":{}},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["agentstate",{"_index":1974,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/enumerations.html":{}}}],["agentstate.pending",{"_index":1977,"title":{},"body":{"classes/StatePart.html":{}}}],["agentstate[k",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agentstatelist",{"_index":1968,"title":{},"body":{"classes/StatePart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["agentsupdatedto",{"_index":415,"title":{"classes/AgentsUpdateDto.html":{}},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"coverage.html":{}}}],["agenttype",{"_index":678,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["aident",{"_index":2821,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ainsi",{"_index":2950,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["ais",{"_index":2606,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["ajout",{"_index":2997,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajouterez",{"_index":3258,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ajoutée",{"_index":3082,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ajoutés",{"_index":2982,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajv",{"_index":1542,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["ajverrors",{"_index":1566,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ajverrors(this.ajv",{"_index":1569,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["alias",{"_index":1428,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["aliases",{"_index":2418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":925,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["alive(@res",{"_index":958,"title":{},"body":{"controllers/BackendsController.html":{}}}],["alive(res",{"_index":927,"title":{},"body":{"controllers/BackendsController.html":{}}}],["allerrors",{"_index":1557,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["allexceptionfilter",{"_index":574,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["allof",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allons",{"_index":2751,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["allowednetworks",{"_index":1727,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["already",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesService.html":{}}}],["ameliorer",{"_index":1496,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["améliorant",{"_index":2974,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["amélioration",{"_index":3002,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliorations",{"_index":2964,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["améliore",{"_index":2875,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["améliorée",{"_index":2977,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annotations",{"_index":2981,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["annuaires",{"_index":2220,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["anonymous",{"_index":277,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["any)?.id",{"_index":1685,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["any,user",{"_index":1781,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["aperçu",{"_index":2861,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["api",{"_index":997,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["apibadrequestresponse",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":944,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apibearerauth()@useguards(undefined",{"_index":935,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apibody",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodydecorator",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibodydecorator(bodymodel",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibodyoptions",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedecorator",{"_index":443,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicreatedecorator(agentscreatedto",{"_index":457,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apicreatedecorator(formdto",{"_index":1193,"title":{},"body":{"controllers/FormController.html":{}}}],["apicreatedecorator(identitiescreatedto",{"_index":1358,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apicreatedecorator(keyringscreatedto",{"_index":1751,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apicreatedresponse",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator",{"_index":2042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apicreatedresponsedecorator(responsemodel",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator",{"_index":431,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apideletedresponsedecorator(agentsdto",{"_index":478,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apideletedresponsedecorator(formdto",{"_index":1199,"title":{},"body":{"controllers/FormController.html":{}}}],["apideletedresponsedecorator(identitiesdto",{"_index":1393,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apideletedresponsedecorator(keyringsdto",{"_index":1755,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiextramodels",{"_index":31,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apiextramodels(errorschemadto",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(model",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(notfounddto",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedfilterdto",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiextramodels(paginatedresponsedto",{"_index":48,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["apinotfoundresponse",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apioperation",{"_index":945,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apipaginateddecorator",{"_index":445,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginateddecorator(pickprojectionhelper(agentsdto",{"_index":463,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(formdto",{"_index":1194,"title":{},"body":{"controllers/FormController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(identitiesdto",{"_index":1384,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apipaginateddecorator(pickprojectionhelper(keyringsdto",{"_index":1752,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apipaginatedresponsedecorator",{"_index":2044,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apipaginatedresponsedecorator(model",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiparam",{"_index":429,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["apiproperty",{"_index":506,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["apiproperty({enum",{"_index":1144,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{}}}],["apiproperty({type",{"_index":2019,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["apiquery",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apireadresponsedecorator",{"_index":438,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apireadresponsedecorator(agentsdto",{"_index":472,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apireadresponsedecorator(formdto",{"_index":1196,"title":{},"body":{"controllers/FormController.html":{}}}],["apireadresponsedecorator(identitiesdto",{"_index":1389,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apireadresponsedecorator(keyringsdto",{"_index":1754,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["apiresponse",{"_index":946,"title":{},"body":{"controllers/BackendsController.html":{},"controllers/FormController.html":{}}}],["apiresponse({status",{"_index":930,"title":{},"body":{"controllers/BackendsController.html":{}}}],["apiresponseoptions",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apitags",{"_index":430,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/ManagementController.html":{}}}],["apitags('core",{"_index":450,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/KeyringsController.html":{}}}],["apitags('forms",{"_index":1191,"title":{},"body":{"controllers/FormController.html":{}}}],["apitags('management",{"_index":1355,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/ManagementController.html":{}}}],["apiupdatedecorator",{"_index":426,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiupdatedecorator(agentsupdatedto",{"_index":476,"title":{},"body":{"controllers/AgentsController.html":{}}}],["apiupdatedecorator(formupdatedto",{"_index":1198,"title":{},"body":{"controllers/FormController.html":{}}}],["apiupdatedecorator(identitiesupdatedto",{"_index":1392,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["apiupdatedresponsedecorator",{"_index":2047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiupdatedresponsedecorator(responsemodel",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":3085,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["app.controller",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":604,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":598,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appel",{"_index":2948,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["appelant",{"_index":3067,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appeler",{"_index":3075,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["appels",{"_index":2919,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["application",{"_index":985,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["application/json",{"_index":3189,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["applications",{"_index":2223,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["applydecorators",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(setmetadata(meta_unprotected",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":608,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apportées",{"_index":2965,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["appropriés",{"_index":2599,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["appservice",{"_index":603,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["après",{"_index":3078,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["arbitraire",{"_index":2877,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["architecture",{"_index":2234,"title":{},"body":{"index.html":{}}}],["argon2",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["argon2verify",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2verify(user.password",{"_index":847,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":1658,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["args.push(context",{"_index":1659,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["argumentmetadata",{"_index":1903,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["arguments",{"_index":266,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[1",{"_index":268,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["arguments[2",{"_index":287,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["argumentshost",{"_index":581,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["array",{"_index":326,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arraynotempty",{"_index":1040,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["arrondi",{"_index":3299,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["arrête",{"_index":2793,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["article",{"_index":2961,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["asc",{"_index":2790,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assertions",{"_index":2739,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["assigned",{"_index":3095,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assignés",{"_index":3096,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["assure",{"_index":2837,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["assurez",{"_index":3203,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["async",{"_index":154,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["asynchrones",{"_index":2889,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["attendez",{"_index":3207,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attendue",{"_index":3172,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attentes",{"_index":3205,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attention",{"_index":3213,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["attr",{"_index":1257,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["attribut",{"_index":1580,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attribute",{"_index":1553,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["attributes",{"_index":320,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attributes[key",{"_index":1609,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributeskeys",{"_index":1574,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["attributs",{"_index":1404,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["attrsoncreate",{"_index":1235,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondefault",{"_index":1236,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsondelete",{"_index":1237,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonread",{"_index":1238,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["attrsonupdate",{"_index":1239,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["au",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["auparavant",{"_index":3003,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["auth",{"_index":673,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["auth.controller",{"_index":745,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":746,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["auth/auth.module",{"_index":1078,"title":{},"body":{"modules/CoreModule.html":{}}}],["authcontroller",{"_index":671,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1720,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["authenticatewithlocal",{"_index":674,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["authenticatewithlocal(@res",{"_index":706,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(res",{"_index":677,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticatewithlocal(username",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentification",{"_index":2283,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["authguard",{"_index":697,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"coverage.html":{}}}],["authguardinternal",{"_index":730,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardinternal(['jwt",{"_index":721,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":738,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":695,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":919,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["autocomplete",{"_index":3050,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["autoincrementidskipsymbol",{"_index":2071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["autoincrementplugin",{"_index":2069,"title":{},"body":{"coverage.html":{}}}],["autoincrementpluginoptions",{"_index":886,"title":{"interfaces/AutoIncrementPluginOptions.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{}}}],["autoincrementplugintrackerspec",{"_index":920,"title":{"interfaces/AutoIncrementPluginTrackerSpec.html":{}},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{}}}],["automatique",{"_index":3170,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatiquement",{"_index":3081,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["automatisés",{"_index":2617,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["autorisées",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autres",{"_index":2858,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["aux",{"_index":1403,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["avancées",{"_index":2314,"title":{},"body":{"index.html":{}}}],["avec",{"_index":1371,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avoir",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["avons",{"_index":2773,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["await",{"_index":221,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ayant",{"_index":3176,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["backend",{"_index":954,"title":{},"body":{"controllers/BackendsController.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends",{"_index":924,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/IdentitiesService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["backends.controller",{"_index":964,"title":{},"body":{"modules/BackendsModule.html":{}}}],["backends.service",{"_index":943,"title":{},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{}}}],["backends/backends.module",{"_index":1080,"title":{},"body":{"modules/CoreModule.html":{}}}],["backendscontroller",{"_index":922,"title":{"controllers/BackendsController.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"coverage.html":{}}}],["backendsmodule",{"_index":960,"title":{"modules/BackendsModule.html":{}},"body":{"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["backendsservice",{"_index":942,"title":{"injectables/BackendsService.html":{}},"body":{"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"coverage.html":{},"overview.html":{}}}],["badrequestexception",{"_index":1103,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["badrequestexception(`invalid",{"_index":1907,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["badrequestoptions",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barre",{"_index":3108,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["bas",{"_index":3134,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["base",{"_index":2189,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["baser",{"_index":3255,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bases",{"_index":2219,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["baseurl",{"_index":341,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["bash",{"_index":2295,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["basée",{"_index":3146,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basées",{"_index":3145,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["basés",{"_index":2890,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["beforeall(async",{"_index":2796,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforecreate'].join(eventemitterseparator",{"_index":272,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforedelete'].join(eventemitterseparator",{"_index":312,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeeach(async",{"_index":2811,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["beforeevent",{"_index":237,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.data",{"_index":274,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.filter",{"_index":240,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.options",{"_index":246,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.projection",{"_index":244,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent.update",{"_index":290,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.data",{"_index":273,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.filter",{"_index":239,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.options",{"_index":245,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.projection",{"_index":241,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.stop",{"_index":238,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevent?.update",{"_index":305,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeevents",{"_index":229,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindandcount'].join(eventemitterseparator",{"_index":234,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindbyid'].join(eventemitterseparator",{"_index":257,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforefindone'].join(eventemitterseparator",{"_index":261,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupdate'].join(eventemitterseparator",{"_index":289,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["beforeupsert'].join(eventemitterseparator",{"_index":304,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["besoin",{"_index":3238,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["besoins",{"_index":2865,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["bien",{"_index":2634,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["binary",{"_index":1856,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["birth",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["blacklistedheaders",{"_index":1922,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["body",{"_index":391,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["body.decorator.ts",{"_index":2038,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["body.interceptor.ts",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["bodymodel",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyoptions",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bodyparser",{"_index":994,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.json",{"_index":1929,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bodyparser.urlencoded",{"_index":1926,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["bon",{"_index":2838,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["boolean",{"_index":488,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthGuard.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["booléen",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["bootstrap",{"_index":541,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bouton",{"_index":3073,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["boutons",{"_index":3116,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["browse",{"_index":2410,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2407,"title":{},"body":{"modules.html":{}}}],["buffer.middleware.ts",{"_index":1921,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{}}}],["builder.vue",{"_index":3017,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["buildyup",{"_index":1564,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["buildyup(schema",{"_index":1613,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["bullmodule",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.forrootasync",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmq",{"_index":75,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cahier",{"_index":2546,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["calculer",{"_index":2923,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["calculées",{"_index":3138,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["camelcase",{"_index":3300,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["camelcase.example",{"_index":3302,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["canactivate",{"_index":722,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":726,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["capacités",{"_index":2718,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["car",{"_index":2943,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["caractères",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["caractères.example",{"_index":3311,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cart",{"_index":2665,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["cas",{"_index":2742,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["catch",{"_index":578,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(error.validationerror",{"_index":1876,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["catch(exception",{"_index":579,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["catch(validationexception",{"_index":1530,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["ce",{"_index":1591,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ceci",{"_index":2709,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cela",{"_index":2945,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["celle",{"_index":2873,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["celles",{"_index":2870,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["certaine",{"_index":3177,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["certains",{"_index":3040,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ces",{"_index":2330,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cet",{"_index":2931,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cette",{"_index":2715,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chacune",{"_index":3042,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chaine",{"_index":3210,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champ",{"_index":1412,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["champs",{"_index":1375,"title":{},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["change",{"_index":137,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["changepwdatnextlogin",{"_index":1931,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["chaque",{"_index":2265,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["charactères",{"_index":3211,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["charge",{"_index":3103,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["charges",{"_index":2547,"title":{"additional-documentation/cahier-des-charges.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["chargés",{"_index":2967,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chaîne",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["chaînes",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":1577,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["checkbox",{"_index":3064,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["checking",{"_index":2985,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["chemin",{"_index":3052,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["chiffrement",{"_index":2598,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["children",{"_index":1085,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["ci",{"_index":2856,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["cibles",{"_index":2309,"title":{},"body":{"index.html":{}}}],["clarifier",{"_index":2772,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["class1",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["classe",{"_index":1588,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/Logger.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"overview.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cleardatabase",{"_index":1842,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["clearsession",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["clearsession(jwt",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["client",{"_index":2691,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["cluster_agentsmodule",{"_index":544,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_exports",{"_index":545,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_agentsmodule_providers",{"_index":546,"title":{},"body":{"modules/AgentsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":739,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":740,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":741,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_backendsmodule",{"_index":961,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_backendsmodule_providers",{"_index":962,"title":{},"body":{"modules/BackendsModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1068,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1070,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":1069,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":1273,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":1274,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule",{"_index":1437,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesmodule_providers",{"_index":1438,"title":{},"body":{"modules/IdentitiesModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule",{"_index":1534,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_exports",{"_index":1536,"title":{},"body":{"modules/IdentitiesValidationModule.html":{},"overview.html":{}}}],["cluster_identitiesvalidationmodule_providers",{"_index":1535,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["cluster_keyringsmodule",{"_index":1769,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_keyringsmodule_providers",{"_index":1770,"title":{},"body":{"modules/KeyringsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1799,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1800,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":1813,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":1815,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":1814,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["clé/valeur",{"_index":1409,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["clés",{"_index":2912,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["cn",{"_index":2342,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["codage",{"_index":2638,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["code",{"_index":1365,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["col",{"_index":1240,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["collection",{"_index":912,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Form.html":{}}}],["collections",{"_index":1864,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["collections[key].deletemany",{"_index":1866,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["command",{"_index":933,"title":{},"body":{"controllers/BackendsController.html":{}}}],["comme",{"_index":2564,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comment",{"_index":2635,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["commentaires",{"_index":2980,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["commonlogdb",{"_index":1675,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["commonlogdb(payload",{"_index":1691,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["commun",{"_index":3199,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["communication",{"_index":2282,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["communications",{"_index":2588,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["communiquer",{"_index":2256,"title":{},"body":{"index.html":{}}}],["compact",{"_index":3267,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["compile",{"_index":2818,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compiler",{"_index":3001,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["complet",{"_index":2740,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["completion",{"_index":2581,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["complexes",{"_index":2319,"title":{},"body":{"index.html":{}}}],["complémentaires",{"_index":3247,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["component",{"_index":1241,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comportement",{"_index":2917,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["comportements",{"_index":2878,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compos",{"_index":1397,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["composant",{"_index":3008,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["composants",{"_index":3015,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["compose",{"_index":2230,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["composition",{"_index":3127,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["comprendre",{"_index":2613,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compris",{"_index":2218,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["compréhension",{"_index":2984,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["comptes",{"_index":2284,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["concernées",{"_index":3206,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["concernés",{"_index":3093,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conclusion",{"_index":2302,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":2823,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["config",{"_index":72,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["config.get('ioredis.options",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('ioredis.uri",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('jwt.options.secret",{"_index":1713,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.get('mongoose.options",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongoose.plugins",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["config.get('mongoose.uri",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["configinstance",{"_index":983,"title":{"interfaces/ConfigInstance.html":{}},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["configmodule",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{}}}],["configmodule.forroot",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["configobjectattributedto",{"_index":1031,"title":{"classes/ConfigObjectAttributeDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"coverage.html":{}}}],["configobjectobjectclassdto",{"_index":1044,"title":{"classes/ConfigObjectObjectClassDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"coverage.html":{}}}],["configobjectschemadto",{"_index":1045,"title":{"classes/ConfigObjectSchemaDTO.html":{}},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configobjecttype",{"_index":1037,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"miscellaneous/enumerations.html":{}}}],["configservice",{"_index":69,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BackendsService.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["configservice.get('ioredis.host",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('ioredis.port",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt.options",{"_index":758,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('passport.options",{"_index":756,"title":{},"body":{"modules/AuthModule.html":{}}}],["configur",{"_index":3337,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configuration",{"_index":2242,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["configurations",{"_index":2859,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["configure",{"_index":3007,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["configurer",{"_index":2263,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["conformes",{"_index":3204,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaissance",{"_index":3178,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["connaître",{"_index":3058,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["connect",{"_index":1628,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{}}}],["connect(this._options.mongoose.uri",{"_index":1638,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["connect(uri)).connection",{"_index":1860,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["connecter",{"_index":2701,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["connection",{"_index":79,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["connexion",{"_index":2707,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["console",{"_index":1058,"title":{},"body":{"classes/ConsoleSession.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["console.log('failed",{"_index":1688,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["console.log('logging",{"_index":1676,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["console.log(e",{"_index":848,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(errors",{"_index":979,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["console.log(user",{"_index":846,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["consolelogger",{"_index":1627,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["consolesession",{"_index":818,"title":{"classes/ConsoleSession.html":{}},"body":{"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"coverage.html":{}}}],["const",{"_index":144,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constant_case.example",{"_index":3304,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantcase",{"_index":3303,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["constantes",{"_index":2733,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["constructeur",{"_index":2699,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"classes/ConsoleSession.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["constructor(@inject(request",{"_index":1106,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["constructor(@injectmodel(agents.name",{"_index":573,"title":{},"body":{"injectables/AgentsService.html":{}}}],["constructor(@injectmodel(keyrings.name",{"_index":1778,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["constructor(_model",{"_index":559,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["constructor(_options",{"_index":1689,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["constructor(auth",{"_index":1702,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":68,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["constructor(configservice",{"_index":966,"title":{},"body":{"injectables/BackendsService.html":{}}}],["constructor(context",{"_index":16,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{}}}],["constructor(moduleref",{"_index":653,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["constructor(payload",{"_index":1993,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["constructor(private",{"_index":454,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"injectables/AuthGuard.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{}}}],["constructor(protected",{"_index":664,"title":{},"body":{"injectables/AppService.html":{},"controllers/IdentitiesValidationController.html":{}}}],["constructor(reflector",{"_index":723,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(request",{"_index":1098,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["construire",{"_index":3028,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["construit",{"_index":3026,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["consultez",{"_index":3060,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenant",{"_index":1407,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["conteneur",{"_index":3106,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["contenir",{"_index":3307,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["content",{"_index":3188,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["contentsecuritypolicy",{"_index":1000,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["contenu",{"_index":3153,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["context",{"_index":24,"title":{},"body":{"classes/AbstractController.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"dependencies.html":{}}}],["context.getclass",{"_index":735,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context.gethandler",{"_index":736,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context?.moduleref",{"_index":51,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["context?.req",{"_index":132,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["contexte",{"_index":1592,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["contient",{"_index":3115,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["continue",{"_index":1596,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["controller",{"_index":381,"title":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["controller('agents",{"_index":451,"title":{},"body":{"controllers/AgentsController.html":{}}}],["controller('auth",{"_index":703,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('backends",{"_index":947,"title":{},"body":{"controllers/BackendsController.html":{}}}],["controller('core",{"_index":1067,"title":{},"body":{"controllers/CoreController.html":{}}}],["controller('form",{"_index":1192,"title":{},"body":{"controllers/FormController.html":{}}}],["controller('identities",{"_index":1356,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["controller('identities/validation",{"_index":1524,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["controller('keyrings",{"_index":1749,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["controller('logger",{"_index":1798,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('management",{"_index":1812,"title":{},"body":{"controllers/ManagementController.html":{}}}],["controllername",{"_index":14,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["controllers",{"_index":383,"title":{},"body":{"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["convertis",{"_index":2968,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["convertit",{"_index":3301,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["conçu",{"_index":2602,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["conçue",{"_index":2211,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["cookie",{"_index":2151,"title":{},"body":{"dependencies.html":{}}}],["core",{"_index":1064,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core.controller",{"_index":1079,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":1066,"title":{},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/agents/_dto/agents.dto",{"_index":437,"title":{},"body":{"controllers/AgentsController.html":{}}}],["core/agents/_enum/agent",{"_index":1975,"title":{},"body":{"classes/StatePart.html":{}}}],["core/agents/_schemas/agents.schema",{"_index":552,"title":{},"body":{"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{}}}],["core/agents/_schemas/parts/security.part.schema",{"_index":368,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/_schemas/parts/state.part.schema",{"_index":367,"title":{},"body":{"classes/Agents.html":{}}}],["core/agents/agents.module",{"_index":749,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/agents/agents.service",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["core/auth/_strategies/jwt.strategy",{"_index":753,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/_strategies/local.strategy",{"_index":754,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/auth/auth.service",{"_index":696,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["core/core.module",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["core/entities",{"_index":3086,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["core/keyrings/_dto/keyrings.dto",{"_index":1748,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["core/keyrings/_schemas/keyrings.schema",{"_index":1772,"title":{},"body":{"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{}}}],["core/keyrings/keyrings.service",{"_index":1747,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["corecontroller",{"_index":1062,"title":{"controllers/CoreController.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["coremodule",{"_index":612,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coremodule.register",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["coreservice",{"_index":1065,"title":{"injectables/CoreService.html":{}},"body":{"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"coverage.html":{},"overview.html":{}}}],["corps",{"_index":3164,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["correctement",{"_index":3336,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspond",{"_index":3248,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondant",{"_index":1402,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["correspondra",{"_index":2944,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["corrupted",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["count",{"_index":155,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["count(filter",{"_index":166,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["counter",{"_index":915,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["couvre",{"_index":2954,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["coverage",{"_index":2022,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":156,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["create(@res",{"_index":458,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/KeyringsController.html":{}}}],["create(data",{"_index":175,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["create(res",{"_index":389,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator",{"_index":444,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["create.decorator.ts",{"_index":2040,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["createassertions",{"_index":2082,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createassertions(service",{"_index":2846,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["created",{"_index":282,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["createdat",{"_index":278,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createdby",{"_index":275,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["createerrorassertions",{"_index":2083,"title":{},"body":{"coverage.html":{}}}],["createerrorassertions(service",{"_index":2847,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel",{"_index":2075,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(identitiesmodel",{"_index":2812,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockmodel(model",{"_index":2804,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice",{"_index":2079,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createmockservice(identitiesservice",{"_index":2926,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["createparamdecorator((_data",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtokens",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtokens(identity",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["creation",{"_index":3013,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["credentials",{"_index":2328,"title":{},"body":{"index.html":{}}}],["crucial",{"_index":2940,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["crud",{"_index":2743,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crudmode",{"_index":3023,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["crypto",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["cryptographiques",{"_index":2592,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["créant",{"_index":2703,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["création",{"_index":2864,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["crée",{"_index":2795,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["créer",{"_index":2736,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["créée",{"_index":1370,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["créés",{"_index":2762,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ctx",{"_index":586,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":1877,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["ctx.getresponse",{"_index":588,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["curl",{"_index":3169,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["current",{"_index":921,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["customfields",{"_index":342,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customfieldsdto",{"_index":481,"title":{"classes/CustomFieldsDto.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"coverage.html":{}}}],["customfieldsdto:8",{"_index":505,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["customs",{"_index":2674,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{}}}],["cycle",{"_index":2560,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d",{"_index":3233,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'abstractserviceschema",{"_index":2758,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'action",{"_index":3117,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'appel",{"_index":2879,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'appels",{"_index":2922,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'attente",{"_index":2686,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["d'attributs",{"_index":2972,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'authentification",{"_index":2333,"title":{},"body":{"index.html":{}}}],["d'autres",{"_index":2933,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'ensemble",{"_index":2681,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'entrypoints",{"_index":2559,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'environnements",{"_index":2325,"title":{},"body":{"index.html":{}}}],["d'erreur",{"_index":2979,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'identit",{"_index":2257,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'identités",{"_index":2206,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["d'informations",{"_index":2957,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'installation",{"_index":2648,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["d'objectclass",{"_index":3333,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'objet",{"_index":1589,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'objets",{"_index":1593,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["d'onglets",{"_index":3157,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'outils",{"_index":3109,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'un",{"_index":2741,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["d'une",{"_index":2557,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["d'upsert",{"_index":1499,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["d'utilisation",{"_index":2650,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["d'échec",{"_index":2990,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["d'éléments",{"_index":3272,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["daemon",{"_index":951,"title":{},"body":{"controllers/BackendsController.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{}}}],["daemon'})@apiresponse({status",{"_index":939,"title":{},"body":{"controllers/BackendsController.html":{}}}],["dans",{"_index":1410,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["data",{"_index":178,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{}}}],["data.access_token",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.additionalfields.attributes",{"_index":1507,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.additionalfields.objectclasses",{"_index":1505,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.additionalfields.validations",{"_index":1491,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.attributes",{"_index":1573,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.inetorgperson.cn",{"_index":1490,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.inetorgperson.uid",{"_index":1502,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["data.objectclasses",{"_index":1572,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["data.state",{"_index":1494,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["database",{"_index":1637,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["date",{"_index":279,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["db",{"_index":1630,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["de",{"_index":1114,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["deamon",{"_index":2250,"title":{},"body":{"index.html":{}}}],["debug",{"_index":1112,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug(message",{"_index":1667,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["debug['_errors",{"_index":1122,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["debug['_exception",{"_index":1878,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["declarations",{"_index":540,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["decorators",{"_index":92,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["deepobject",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":327,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["default_increment",{"_index":2072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_message",{"_index":2003,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_status_code",{"_index":2001,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_third_party_auth",{"_index":363,"title":{},"body":{"classes/Agents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_validations",{"_index":2005,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":908,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["defaultsrc",{"_index":1002,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultstrategy",{"_index":1017,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["defaultvalues",{"_index":1150,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["defaut",{"_index":2335,"title":{},"body":{"index.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["delete",{"_index":157,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["delete(':_id([0",{"_index":405,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["delete(_id",{"_index":179,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["deleteassertions",{"_index":2084,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteassertions(service",{"_index":2854,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleted",{"_index":313,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["deleteerrorassertions",{"_index":2085,"title":{},"body":{"coverage.html":{}}}],["deleteerrorassertions(service",{"_index":2855,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["demon",{"_index":2675,"title":{"additional-documentation/documentation-technique/demon.html":{}},"body":{}}],["dense",{"_index":3070,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dependencies",{"_index":538,"title":{"dependencies.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":1374,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["desc",{"_index":1033,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["describe('create",{"_index":2845,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('delete",{"_index":2853,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findandcount",{"_index":2828,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findbyid",{"_index":2832,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('findone",{"_index":2840,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('identities",{"_index":2784,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["describe('update",{"_index":2848,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["description",{"_index":932,"title":{},"body":{"controllers/BackendsController.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessous",{"_index":3035,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dessus",{"_index":2857,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["destinées",{"_index":3175,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["deux",{"_index":1398,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["dev",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["dev_token_path",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["devez",{"_index":3208,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["devtokenpath",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["diff",{"_index":1563,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["diff(objectclasses",{"_index":1578,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["différentes",{"_index":2215,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["différents",{"_index":2264,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["directconnection",{"_index":1016,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["directives",{"_index":1001,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["directory",{"_index":2222,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["disable",{"_index":43,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disabled",{"_index":2185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["discut",{"_index":2668,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["displayname",{"_index":343,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConsoleSession.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponible",{"_index":3335,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["disponibles",{"_index":3059,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["disposition",{"_index":3140,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dispositions",{"_index":3104,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["divers",{"_index":2898,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["diverses",{"_index":2308,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["doc",{"_index":2678,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["document",{"_index":86,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["document.constructor.modelname",{"_index":909,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["document.save(options",{"_index":283,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["documentation",{"_index":2023,"title":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-utilisateur.html":{}},"body":{"coverage.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["documents",{"_index":2835,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["doe",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doit",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["doivent",{"_index":2589,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["done",{"_index":1705,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(new",{"_index":1722,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["done(null",{"_index":1724,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["données",{"_index":2216,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dossier",{"_index":2763,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["dtovalidationpipe",{"_index":1093,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["du",{"_index":2235,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["duplicatedcode",{"_index":236,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["dupont",{"_index":3226,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dur",{"_index":3198,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["dynamicmodule",{"_index":1076,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["dynamique",{"_index":2880,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiquement",{"_index":2876,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["dynamiques",{"_index":2887,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["début",{"_index":3328,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déclenche",{"_index":2251,"title":{},"body":{"index.html":{}}}],["déclenchement",{"_index":2562,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["découp",{"_index":2657,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["décrit",{"_index":2963,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["défaut",{"_index":3039,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["défini",{"_index":3222,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définies",{"_index":2639,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définies.example",{"_index":3308,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définir",{"_index":2267,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définis",{"_index":2888,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définissant",{"_index":3056,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["définissent",{"_index":3217,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["définit",{"_index":3161,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["définition",{"_index":2568,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["délais",{"_index":2662,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["démarre",{"_index":2792,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["démon",{"_index":2233,"title":{},"body":{"index.html":{}}}],["démontrant",{"_index":2934,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dépendances",{"_index":2689,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["déport",{"_index":2774,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["dérivées",{"_index":2711,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["désirés",{"_index":3259,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["détaill",{"_index":2862,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détaillées",{"_index":2958,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["détails",{"_index":2989,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["déterminer",{"_index":3139,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["développements",{"_index":2618,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développer",{"_index":2550,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["développeurs",{"_index":2610,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["e",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["each",{"_index":522,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["ecriture",{"_index":2726,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["effectuer",{"_index":2253,"title":{},"body":{"index.html":{}}}],["effectuées",{"_index":3236,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["efficacement",{"_index":2615,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["elle",{"_index":2687,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["email",{"_index":344,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["email.example",{"_index":3321,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["emitter",{"_index":125,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"dependencies.html":{}}}],["emitter.constant",{"_index":209,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["emitter.constant.ts",{"_index":2036,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["emplacements",{"_index":3118,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["employee",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["empty",{"_index":2834,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["en",{"_index":2291,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enable",{"_index":317,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["enabled",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["enableimplicitconversion",{"_index":1109,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["endpoint",{"_index":3163,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["enregistrement",{"_index":2266,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["ensure",{"_index":3265,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entier.example",{"_index":3285,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["entite",{"_index":1430,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["entity",{"_index":874,"title":{},"body":{"injectables/AuthService.html":{}}}],["entityid",{"_index":371,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConsoleSession.html":{}}}],["entre",{"_index":2214,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["entrypoints",{"_index":2247,"title":{},"body":{"index.html":{}}}],["entrée",{"_index":3080,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["enum",{"_index":1147,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2178,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envelope",{"_index":3046,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.assigned",{"_index":3097,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.observers",{"_index":3094,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["envelope.senders",{"_index":3068,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["enveloppe",{"_index":3047,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["environnements",{"_index":2318,"title":{},"body":{"index.html":{}}}],["envoyées",{"_index":3214,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["err",{"_index":1619,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["err.errors",{"_index":1886,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key].message",{"_index":1892,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints",{"_index":1887,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['constraints'][ckey",{"_index":1891,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.errors[key]['property",{"_index":1889,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["err.message",{"_index":1621,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["erreur",{"_index":1113,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["erreurs",{"_index":2892,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["error",{"_index":597,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/DtoValidationPipe.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('erreur",{"_index":2928,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["error('request",{"_index":142,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["error(message",{"_index":1646,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["error.casterror",{"_index":1872,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.children",{"_index":1132,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.children.length",{"_index":1130,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.constraints",{"_index":1126,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.getresponse",{"_index":1391,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["error.getvalidations",{"_index":1467,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["error.inner.reduce((acc",{"_index":1618,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["error.message",{"_index":1387,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error.property",{"_index":1128,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.property}.${errorchild.property",{"_index":1134,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["error.validationerror",{"_index":1871,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["error.validations",{"_index":1388,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["error['target",{"_index":1124,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild",{"_index":1131,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.children.length",{"_index":1136,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorchild.constraints",{"_index":1133,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errormessage",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":978,"title":{},"body":{"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["errors.map((error",{"_index":1123,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["errorschemadto",{"_index":1138,"title":{"classes/ErrorSchemaDto.html":{}},"body":{"classes/ErrorSchemaDto.html":{},"coverage.html":{}}}],["eslint",{"_index":42,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":46,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["espaces",{"_index":3327,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["est",{"_index":2209,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et",{"_index":1406,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["et/ou",{"_index":2274,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["etc",{"_index":2296,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["event",{"_index":218,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["eventemitter",{"_index":107,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["eventemitter2",{"_index":114,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["eventemitterseparator",{"_index":207,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ex",{"_index":873,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":1413,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["example(params",{"_index":2723,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["examplequeueservice",{"_index":2722,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["exception",{"_index":583,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["exception.constructor.name",{"_index":1885,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["exception.filter.ts",{"_index":576,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:5",{"_index":582,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":1531,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.getvalidations",{"_index":1533,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception.message",{"_index":1532,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["exception['message",{"_index":593,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exception['name",{"_index":594,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfactory",{"_index":1110,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["exceptionfilter",{"_index":577,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["exceptions",{"_index":2902,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["excludeagenttype",{"_index":1784,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exclusivemaximum",{"_index":3289,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exclusiveminimum",{"_index":3287,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exec",{"_index":300,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["executed",{"_index":934,"title":{},"body":{"controllers/BackendsController.html":{}}}],["executioncontext",{"_index":727,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["exemple",{"_index":2732,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["exemples",{"_index":2748,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exhaustive",{"_index":2608,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exigences",{"_index":2584,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["exist",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{}}}],["existe",{"_index":2332,"title":{},"body":{"index.html":{}}}],["exists",{"_index":1503,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["existssync",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["existssync(devtokenpath",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{}}}],["existssync(path",{"_index":1599,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["expect",{"_index":1881,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["expiresin",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["explicit",{"_index":47,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["explode",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["exports",{"_index":543,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["expose",{"_index":2246,"title":{},"body":{"index.html":{}}}],["exposition",{"_index":2558,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["express",{"_index":123,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["express.user",{"_index":130,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/LocalStrategy.html":{}}}],["expression",{"_index":3316,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["extended",{"_index":1928,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["extends",{"_index":85,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["extensibilit",{"_index":2601,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["extraction",{"_index":2971,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["extractjwt",{"_index":1710,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1715,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f]{24",{"_index":471,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["f]{24})')@apiparam({name",{"_index":401,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["fa",{"_index":400,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["faciliter",{"_index":2213,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["facsimiletelephonenumber",{"_index":2343,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["facultatifs",{"_index":3167,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["failed",{"_index":2004,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":1555,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["false",{"_index":329,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["false})@isoptional",{"_index":2373,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["famille",{"_index":3200,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fatal",{"_index":1673,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal(message",{"_index":1672,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fatal,error,warn,info,debug",{"_index":2338,"title":{},"body":{"index.html":{}}}],["fiabilit",{"_index":2623,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fichier",{"_index":1600,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fichiers",{"_index":2776,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["field",{"_index":889,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["field.dto",{"_index":1292,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["field.part.schema",{"_index":1303,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["fieldname",{"_index":1295,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["fields",{"_index":1280,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fields.dto",{"_index":521,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["fields.dto.ts",{"_index":1090,"title":{},"body":{"classes/CustomFieldsDto.html":{},"coverage.html":{}}}],["fields.dto.ts:8",{"_index":1091,"title":{},"body":{"classes/CustomFieldsDto.html":{}}}],["figma",{"_index":2236,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["filerawbodyinterceptor",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["files",{"_index":1597,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["filled",{"_index":3069,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["filter",{"_index":172,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filter((k",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter.dto.ts",{"_index":1912,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"coverage.html":{}}}],["filter.dto.ts:1",{"_index":1913,"title":{},"body":{"classes/PaginatedFilterDto.html":{}}}],["filteroptions",{"_index":412,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["filterquery",{"_index":167,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["filters",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterschema",{"_index":410,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["fin",{"_index":3083,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["finally",{"_index":854,"title":{},"body":{"injectables/AuthService.html":{}}}],["finaux",{"_index":2651,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["find",{"_index":158,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["find(filter",{"_index":182,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findandcount",{"_index":159,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcount(filter",{"_index":186,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findandcountassertions",{"_index":2086,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcountassertions(service",{"_index":2830,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findandcounterrorassertions",{"_index":2087,"title":{},"body":{"coverage.html":{}}}],["findandcounterrorassertions(service",{"_index":2831,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid",{"_index":160,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyid(_id",{"_index":188,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["findbyid(id",{"_index":1959,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["findbyidandupdate",{"_index":292,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findbyidassertions",{"_index":2088,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyidassertions(service",{"_index":2833,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findbyiderrorassertions",{"_index":2089,"title":{},"body":{"coverage.html":{}}}],["findbyiderrorassertions(service",{"_index":2836,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone",{"_index":161,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findone(filter",{"_index":190,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["findoneandupdate",{"_index":307,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["findoneassertions",{"_index":2090,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneassertions(service",{"_index":2841,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["findoneerrorassertions",{"_index":2091,"title":{},"body":{"coverage.html":{}}}],["findoneerrorassertions(service",{"_index":2843,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fine",{"_index":2322,"title":{},"body":{"index.html":{}}}],["fix",{"_index":1648,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["fixes",{"_index":2886,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["flexibilit",{"_index":2244,"title":{},"body":{"index.html":{}}}],["flexible",{"_index":2306,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fois",{"_index":2884,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonction",{"_index":2744,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["fonctionnalit",{"_index":2661,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnalités",{"_index":2313,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fonctionne",{"_index":2756,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctionnement",{"_index":2839,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["fonctions",{"_index":2734,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["font",{"_index":2315,"title":{},"body":{"index.html":{}}}],["fontsrc",{"_index":1007,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["forbiddenexception",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["form",{"_index":1148,"title":{"classes/Form.html":{}},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["form.controller",{"_index":1277,"title":{},"body":{"modules/FormModule.html":{}}}],["form.name",{"_index":1278,"title":{},"body":{"modules/FormModule.html":{}}}],["form.service",{"_index":1190,"title":{},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{}}}],["format",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["formcontroller",{"_index":1174,"title":{"controllers/FormController.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"coverage.html":{}}}],["formcontroller.projection",{"_index":1195,"title":{},"body":{"controllers/FormController.html":{}}}],["formcreatedto",{"_index":1201,"title":{"classes/FormCreateDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"coverage.html":{}}}],["formcreatedto:12",{"_index":1231,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:17",{"_index":1226,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:21",{"_index":1232,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:26",{"_index":1225,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:31",{"_index":1228,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:35",{"_index":1230,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:39",{"_index":1229,"title":{},"body":{"classes/FormDto.html":{}}}],["formcreatedto:44",{"_index":1227,"title":{},"body":{"classes/FormDto.html":{}}}],["formdto",{"_index":1176,"title":{"classes/FormDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"coverage.html":{}}}],["formdto)@apiresponse({type",{"_index":1178,"title":{},"body":{"controllers/FormController.html":{}}}],["formfielddto",{"_index":1233,"title":{"classes/FormFieldDto.html":{}},"body":{"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"coverage.html":{}}}],["formfieldpart",{"_index":1258,"title":{"classes/FormFieldPart.html":{}},"body":{"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"coverage.html":{}}}],["formfieldpartschema",{"_index":1270,"title":{},"body":{"classes/FormFieldPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formmodule",{"_index":1272,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":1170,"title":{},"body":{"classes/Form.html":{}}}],["formschema",{"_index":1172,"title":{},"body":{"classes/Form.html":{},"modules/FormModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formsectiondto",{"_index":1221,"title":{"classes/FormSectionDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"coverage.html":{}}}],["formsectionpart",{"_index":1168,"title":{"classes/FormSectionPart.html":{}},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"coverage.html":{}}}],["formsectionpartschema",{"_index":1160,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formservice",{"_index":1189,"title":{"injectables/FormService.html":{}},"body":{"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"coverage.html":{},"overview.html":{}}}],["formtypelist",{"_index":1215,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formtypes",{"_index":1165,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formtypes.base",{"_index":1171,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["formtypes[k",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formulaire",{"_index":3009,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formulaires",{"_index":2673,"title":{"additional-documentation/documentation-technique/formulaires-customs.html":{}},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["formupdatedto",{"_index":1185,"title":{"classes/FormUpdateDto.html":{}},"body":{"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"coverage.html":{}}}],["found",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found.dto.ts",{"_index":1896,"title":{},"body":{"classes/NotFoundDto.html":{},"coverage.html":{}}}],["found.dto.ts:6",{"_index":1898,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["found.dto.ts:9",{"_index":1897,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["fourni",{"_index":3329,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["fournie",{"_index":2609,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournies",{"_index":2820,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["fournir",{"_index":2683,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["fournis",{"_index":2653,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["fournit",{"_index":2747,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["framesrc",{"_index":1005,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["framework",{"_index":3024,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["frameworks",{"_index":2572,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["frontend",{"_index":2298,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["fréquente",{"_index":2277,"title":{},"body":{"index.html":{}}}],["fs",{"_index":660,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["function",{"_index":375,"title":{},"body":{"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/IdentitiesModule.html":{},"injectables/LocalStrategy.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["garantir",{"_index":2621,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["generate",{"_index":917,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["gestion",{"_index":2321,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["get(':_id([0",{"_index":398,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["get('alive",{"_index":957,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('alive')@apioperation({summary",{"_index":928,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('list",{"_index":949,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('list')@apioperation({summary",{"_index":938,"title":{},"body":{"controllers/BackendsController.html":{}}}],["get('session",{"_index":709,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('session')@useguards(undefined",{"_index":690,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@apipaginateddecorator(undefined",{"_index":413,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["getcontrollername",{"_index":27,"title":{},"body":{"classes/AbstractController.html":{}}}],["getinfo",{"_index":600,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getinfo(@res",{"_index":605,"title":{},"body":{"controllers/AppController.html":{}}}],["getinfo(res",{"_index":601,"title":{},"body":{"controllers/AppController.html":{}}}],["getloglevel",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["getmodel",{"_index":202,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodel(name",{"_index":1848,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["getmodeltoken(identities.name",{"_index":2816,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["getmodulename",{"_index":119,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getpayload",{"_index":1991,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["getrequest",{"_index":117,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getschemapath(errorschemadto",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(model",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(notfounddto",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedfilterdto",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getschemapath(paginatedresponsedto",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getservicename",{"_index":121,"title":{},"body":{"injectables/AbstractService.html":{}}}],["getsessiondata",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["getsessiondata(identity",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":2201,"title":{"index.html":{},"license.html":{}},"body":{}}],["getvalidationerrors",{"_index":1870,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidationerrors(err",{"_index":1874,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["getvalidations",{"_index":1992,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["github",{"_index":2645,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["givenname",{"_index":2344,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["grand",{"_index":2626,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["grille",{"_index":3055,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["guides",{"_index":2649,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["gère",{"_index":2238,"title":{},"body":{"index.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["génère",{"_index":3158,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["générales",{"_index":3331,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générer",{"_index":2893,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["générique",{"_index":3261,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["générées",{"_index":3144,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["gér",{"_index":3029,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["gérer",{"_index":2551,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["h",{"_index":3232,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["handled",{"_index":1474,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["handlevalidationerror",{"_index":1476,"title":{},"body":{"injectables/IdentitiesService.html":{},"coverage.html":{}}}],["handlevalidationerror(error",{"_index":1456,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["header",{"_index":3187,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["headers",{"_index":693,"title":{},"body":{"controllers/AuthController.html":{}}}],["headers('authorization",{"_index":717,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":986,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["helmetoptions",{"_index":991,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["here",{"_index":1487,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["hidden",{"_index":453,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["hooks",{"_index":3005,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["host",{"_index":580,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"index.html":{}}}],["host.switchtohttp",{"_index":587,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["http",{"_index":3181,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http:///identities",{"_index":3231,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["http://127.0.0.1:2000/jwks",{"_index":1022,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["http://json",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["httpexception",{"_index":1440,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["httpexception.createbody",{"_index":1882,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["https://randomkeygen.com",{"_index":1019,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["httpstatus",{"_index":419,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.accepted",{"_index":1368,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["httpstatus.bad_request",{"_index":1125,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/ValidationRecursive.html":{}}}],["httpstatus.created",{"_index":462,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.not_acceptable",{"_index":1883,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["httpstatus.not_found",{"_index":1899,"title":{},"body":{"classes/NotFoundDto.html":{}}}],["httpstatus.ok",{"_index":470,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{},"miscellaneous/variables.html":{}}}],["héritent",{"_index":2757,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["iauthmoduleoptions",{"_index":747,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ici",{"_index":2771,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icon",{"_index":1281,"title":{},"body":{"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["icône",{"_index":3045,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["id",{"_index":435,"title":{},"body":{"controllers/AgentsController.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["identifiant",{"_index":3201,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identifier",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["identit",{"_index":2995,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identities",{"_index":1308,"title":{"classes/Identities.html":{}},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identities).state",{"_index":1366,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identities.controller",{"_index":1441,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.name",{"_index":1447,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["identities.service",{"_index":1347,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{}}}],["identities.validation.controller",{"_index":1538,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["identities.validation.service",{"_index":1523,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{}}}],["identities/identities.module",{"_index":1819,"title":{},"body":{"modules/ManagementModule.html":{}}}],["identities/validation",{"_index":1518,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["identitiescontroller",{"_index":1328,"title":{"controllers/IdentitiesController.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiescontroller.projection",{"_index":1385,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identitiescreatedto",{"_index":1330,"title":{"classes/IdentitiesCreateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{}}}],["identitiescreatedto:13",{"_index":1435,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:18",{"_index":1434,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:23",{"_index":1433,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiescreatedto:42",{"_index":1432,"title":{},"body":{"classes/IdentitiesDto.html":{}}}],["identitiesdocument",{"_index":1323,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/typealiases.html":{}}}],["identitiesdto",{"_index":1332,"title":{"classes/IdentitiesDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesdtostub",{"_index":2114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodel",{"_index":2785,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesmodule",{"_index":1436,"title":{"modules/IdentitiesModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identitiesschema",{"_index":1326,"title":{},"body":{"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesservice",{"_index":1346,"title":{"injectables/IdentitiesService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedto",{"_index":1339,"title":{"classes/IdentitiesUpdateDto.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesupdatedtostub",{"_index":2115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidation",{"_index":2671,"title":{},"body":{"additional-documentation/documentation-technique.html":{}}}],["identitiesvalidationcontroller",{"_index":1516,"title":{"controllers/IdentitiesValidationController.html":{}},"body":{"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"coverage.html":{}}}],["identitiesvalidationfilter",{"_index":1351,"title":{"classes/IdentitiesValidationFilter.html":{}},"body":{"controllers/IdentitiesController.html":{},"classes/IdentitiesValidationFilter.html":{},"coverage.html":{}}}],["identitiesvalidationmodule",{"_index":1442,"title":{"modules/IdentitiesValidationModule.html":{}},"body":{"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitiesvalidationservice",{"_index":1348,"title":{"injectables/IdentitiesValidationService.html":{}},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["identity",{"_index":689,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identity._id",{"_index":863,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity._id}_${randombytes(16).tostring('hex",{"_index":859,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.additionalfields.attributes",{"_index":1508,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["identity.additionalfields.validations",{"_index":1466,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["identity.decorator",{"_index":701,"title":{},"body":{"controllers/AuthController.html":{}}}],["identity.decorator.ts",{"_index":2049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["identity.entityid",{"_index":875,"title":{},"body":{"injectables/AuthService.html":{}}}],["identity.state",{"_index":1465,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["identitycounter",{"_index":916,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identitycounters",{"_index":911,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["identityid",{"_index":868,"title":{},"body":{"injectables/AuthService.html":{}}}],["identitylifecycle",{"_index":1315,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitylifecycle.inactive",{"_index":1325,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate",{"_index":1317,"title":{},"body":{"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["identitystate.active",{"_index":1788,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["identitystate.to_complete",{"_index":1367,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_create",{"_index":1459,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.to_validate",{"_index":1460,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["identitystate.unknown",{"_index":1324,"title":{},"body":{"classes/Identities.html":{}}}],["identitée",{"_index":1369,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["identités",{"_index":2239,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["idschema",{"_index":2073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["idéal",{"_index":2317,"title":{},"body":{"index.html":{}}}],["ignoreexpiration",{"_index":1716,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["il",{"_index":2939,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["imgsrc",{"_index":1008,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["imiter",{"_index":2908,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implements",{"_index":214,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{}}}],["implémentation",{"_index":2993,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["implémentations",{"_index":2882,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["implémenter",{"_index":2712,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["implémentez",{"_index":2719,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["import(plugin.package).then((plugin",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["importance",{"_index":2936,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["importants",{"_index":3012,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["imported",{"_index":2193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["importer",{"_index":2301,"title":{},"body":{"index.html":{}}}],["imports",{"_index":554,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inactive",{"_index":2196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["incluant",{"_index":2900,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["includeresultmetadata",{"_index":299,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["inclure",{"_index":3191,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["increment",{"_index":895,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["increment.interface.ts",{"_index":888,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["increment.logger.ts",{"_index":2065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["increment.plugin.ts",{"_index":2068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["incrementby",{"_index":890,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":61,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{}}}],["indiquant",{"_index":3245,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indique",{"_index":3190,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["indiquer",{"_index":3223,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["individuel",{"_index":2991,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["indépendant",{"_index":2577,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["inetorgperson",{"_index":336,"title":{"classes/inetOrgPerson.html":{}},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["inetorgperson.cn",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgperson.uid",{"_index":1501,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["inetorgpersoncreatedto",{"_index":2106,"title":{"classes/inetOrgPersonCreateDto.html":{}},"body":{"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["inetorgpersoncreatedto:11",{"_index":2400,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:15",{"_index":2403,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:20",{"_index":2392,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:25",{"_index":2393,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:30",{"_index":2394,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:35",{"_index":2395,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:40",{"_index":2396,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:46",{"_index":2397,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:51",{"_index":2398,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:56",{"_index":2399,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:61",{"_index":2401,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:66",{"_index":2402,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:7",{"_index":2391,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:71",{"_index":2404,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersoncreatedto:76",{"_index":2405,"title":{},"body":{"classes/inetOrgPersonDto.html":{}}}],["inetorgpersondto",{"_index":1415,"title":{"classes/inetOrgPersonDto.html":{}},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersondtostub",{"_index":2112,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["inetorgpersonschema",{"_index":1313,"title":{},"body":{"classes/Identities.html":{},"coverage.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["inetorgpersonupdatedto",{"_index":2107,"title":{"classes/inetOrgPersonUpdateDto.html":{}},"body":{"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["informations",{"_index":2261,"title":{},"body":{"index.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["infos",{"_index":881,"title":{},"body":{"injectables/AuthService.html":{}}}],["inherited",{"_index":197,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPersonDto.html":{}}}],["initialise",{"_index":2702,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["initialize",{"_index":1634,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["inject",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"interfaces/ValidationRecursive.html":{}}}],["injectable",{"_index":101,"title":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["injectables",{"_index":103,"title":{},"body":{"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"injectables/ManagementService.html":{},"injectables/ObjectIdValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":571,"title":{},"body":{"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["injectmodel(form.name",{"_index":1307,"title":{},"body":{"injectables/FormService.html":{}}}],["injectmodel(identities.name",{"_index":1484,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["injectredis",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["input",{"_index":3063,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["instance",{"_index":2693,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instanceof",{"_index":1390,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{}}}],["instances",{"_index":2705,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["instructions",{"_index":3032,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["integer",{"_index":3284,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["interactions",{"_index":3130,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["interagir",{"_index":2692,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["interface",{"_index":38,"title":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["interfaces",{"_index":60,"title":{},"body":{"interfaces/AbstractControllerContext.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"interfaces/ServiceSchemaInterface.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"index.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["interfaces/service.schema.interface",{"_index":212,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["internal",{"_index":595,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["internallogger",{"_index":1631,"title":{"injectables/InternalLogger.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"coverage.html":{}}}],["internalloggeroptions",{"_index":1629,"title":{"interfaces/InternalLoggerOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"coverage.html":{}}}],["internalloglevel",{"_index":1626,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"miscellaneous/enumerations.html":{}}}],["internallogoptions",{"_index":1623,"title":{"interfaces/InternalLogOptions.html":{}},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"coverage.html":{}}}],["introduction",{"_index":2729,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["introuvable",{"_index":1602,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["intègre",{"_index":2688,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégration",{"_index":2570,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrations",{"_index":3000,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["intégrée",{"_index":3004,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["invalid",{"_index":1362,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"miscellaneous/variables.html":{}}}],["invalide",{"_index":1606,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["invalides",{"_index":1380,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["invalidobjectclassadditionalfieldsstub",{"_index":2119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidrequiredadditionalfieldsstub",{"_index":2120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidschemastub",{"_index":2121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidtypeadditionalfieldsstub",{"_index":2122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ioredis",{"_index":76,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["ip",{"_index":2166,"title":{},"body":{"dependencies.html":{}}}],["isarray",{"_index":513,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isarray()@isstring({each",{"_index":493,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean",{"_index":512,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/SecurityPartDTO.html":{}}}],["isboolean()@isoptional()@apiproperty",{"_index":489,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["isdate",{"_index":1837,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdate()@isoptional()@apiproperty",{"_index":1832,"title":{},"body":{"classes/MetadataPartDto.html":{},"classes/StatePartDTO.html":{}}}],["isdatestring",{"_index":1760,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isemail",{"_index":511,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isemail()@apiproperty({required",{"_index":2378,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isemail()@isnotempty()@apiproperty",{"_index":486,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["isenum",{"_index":1041,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isenum(configobjecttype",{"_index":1043,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{}}}],["isenum(formtypelist",{"_index":1223,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["isenum(formtypelist)@apiproperty({enum",{"_index":1214,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isenum(formtypes",{"_index":1293,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(formtypes)@apiproperty",{"_index":1290,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isenum(identitylifecycle",{"_index":1425,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isenum(identitystate",{"_index":1424,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["isglobal",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["isip",{"_index":1763,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isip(4",{"_index":1764,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid",{"_index":514,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["ismongoid()@apiproperty({type",{"_index":524,"title":{},"body":{"classes/AgentsDto.html":{},"classes/KeyringsDto.html":{}}}],["isnotempty",{"_index":509,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePartDTO.html":{}}}],["isnullorundefined",{"_index":2070,"title":{},"body":{"coverage.html":{}}}],["isnumber",{"_index":1256,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/StatePartDTO.html":{}}}],["isnumber()@apiproperty",{"_index":1250,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["isnumber()@isenum(identitylifecycle)@apiproperty({enum",{"_index":1418,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isenum(identitystate)@apiproperty({enum",{"_index":1420,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isnumber()@isnotempty()@apiproperty",{"_index":1980,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["isobject",{"_index":1092,"title":{},"body":{"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@isoptional()@apiproperty({required",{"_index":1204,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["isobject()@isoptional()@validatenested",{"_index":504,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/CustomFieldsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isobject()@isoptional()@validatenested()@type(undefined)@apiproperty({type",{"_index":1218,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{}}}],["isobject()@type(undefined)@apiproperty({type",{"_index":1416,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isobject()@validatenested({each",{"_index":1283,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["isoptional",{"_index":515,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isoptional()@isstring()@apiproperty({required",{"_index":2380,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isoptional()@type(undefined)@apiproperty({required",{"_index":1396,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{}}}],["isstring",{"_index":508,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["isstring()@apiproperty",{"_index":1210,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@apiproperty({required",{"_index":2372,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["isstring()@isenum(configobjecttype",{"_index":1038,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["isstring()@isnotempty()@apiproperty",{"_index":491,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":483,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/MetadataPartDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{}}}],["isstring()@isoptional()@apiproperty({required",{"_index":1206,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{}}}],["isstring({each",{"_index":1757,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["isunprotected",{"_index":733,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["it's",{"_index":1472,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["it('should",{"_index":2829,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["item",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":1399,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["iverifyoptions",{"_index":1782,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["jalons",{"_index":2659,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jest",{"_index":2728,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["jest.clearallmocks",{"_index":2860,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["job",{"_index":974,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["job.waituntilfinished(this.queueevents",{"_index":980,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["jour",{"_index":2808,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["json",{"_index":658,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["json.parse(data",{"_index":877,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(identity",{"_index":853,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(infos",{"_index":884,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(readfilesync('package.json",{"_index":666,"title":{},"body":{"injectables/AppService.html":{}}}],["json.parse(readfilesync(devtokenpath",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(data",{"_index":1489,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["json.stringify(error.getvalidations",{"_index":1462,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["json.stringify(loginfos)].join",{"_index":271,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(object.values(arguments))].join",{"_index":220,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["json.stringify(validations",{"_index":1119,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsonwebtoken",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jsunresolvedreference",{"_index":1120,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["jsunusedglobalsymbols",{"_index":1718,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jti",{"_index":880,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jti].join(this.token_path_separator",{"_index":882,"title":{},"body":{"injectables/AuthService.html":{}}}],["justifi",{"_index":2667,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["jwksuri",{"_index":1021,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwt",{"_index":682,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["jwtfromrequest",{"_index":1714,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtid",{"_index":858,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtid].join(this.token_path_separator",{"_index":872,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":750,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":757,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":751,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["jwtpayload",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":742,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keep",{"_index":913,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["key",{"_index":39,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/Agents.html":{},"controllers/BackendsController.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{}}}],["keyrings",{"_index":1725,"title":{"classes/Keyrings.html":{}},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"coverage.html":{}}}],["keyrings.controller",{"_index":1774,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.name",{"_index":1775,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings.service",{"_index":1773,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["keyrings/keyrings.module",{"_index":1082,"title":{},"body":{"modules/CoreModule.html":{}}}],["keyringscontroller",{"_index":1735,"title":{"controllers/KeyringsController.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"coverage.html":{}}}],["keyringscontroller.projection",{"_index":1753,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["keyringscreatedto",{"_index":1737,"title":{"classes/KeyringsCreateDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"coverage.html":{}}}],["keyringscreatedto:13",{"_index":1766,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:16",{"_index":1767,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringscreatedto:9",{"_index":1768,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["keyringsdocument",{"_index":1732,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/typealiases.html":{}}}],["keyringsdto",{"_index":1739,"title":{"classes/KeyringsDto.html":{}},"body":{"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"coverage.html":{}}}],["keyringsmodule",{"_index":1071,"title":{"modules/KeyringsModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/KeyringsModule.html":{},"modules.html":{},"overview.html":{}}}],["keyringsschema",{"_index":1733,"title":{},"body":{"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyringsservice",{"_index":1746,"title":{"injectables/KeyringsService.html":{}},"body":{"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"coverage.html":{},"overview.html":{}}}],["key}.yml",{"_index":1601,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["kradihsoy/lt",{"_index":2131,"title":{},"body":{"dependencies.html":{}}}],["l'aide",{"_index":3156,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'ajout",{"_index":2605,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'api",{"_index":2594,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'application",{"_index":2579,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["l'attribut",{"_index":3262,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'endpoint",{"_index":3184,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'ensemble",{"_index":2633,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'entrée",{"_index":3330,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'essentiel",{"_index":2955,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'exemple",{"_index":2941,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'id",{"_index":3079,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'identit",{"_index":3173,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["l'initiation",{"_index":2871,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instance",{"_index":2706,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'instantiation",{"_index":2874,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'objectclass",{"_index":3194,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'objet",{"_index":3196,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["l'orchestrateur",{"_index":2232,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["l'ordre",{"_index":2937,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'url",{"_index":3084,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["l'échec",{"_index":2901,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["l'équipe",{"_index":2669,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["l'état",{"_index":3234,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["la",{"_index":1497,"title":{},"body":{"injectables/IdentitiesService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["label",{"_index":1242,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["labeleduri",{"_index":2345,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lance",{"_index":2929,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["langage",{"_index":2578,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["langages",{"_index":2280,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["lastchangedat",{"_index":1964,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["lastupdatedat",{"_index":281,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["lastupdatedby",{"_index":280,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{}}}],["ldap",{"_index":2259,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["ldap/active",{"_index":2221,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["le",{"_index":1411,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["legend",{"_index":539,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["les",{"_index":1582,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lessthan",{"_index":3288,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["leurs",{"_index":3249,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["level",{"_index":1656,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"index.html":{}}}],["level.ts",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["levées",{"_index":2631,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liaison",{"_index":3053,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lib",{"_index":1944,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2406,"title":{"license.html":{}},"body":{"properties.html":{}}}],["lifecycle",{"_index":1311,"title":{},"body":{"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lifestep",{"_index":3041,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lignes",{"_index":3160,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["limit",{"_index":995,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["line",{"_index":44,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ErrorSchemaDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"miscellaneous/variables.html":{}}}],["lire",{"_index":3100,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["lisibilit",{"_index":2975,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["list",{"_index":926,"title":{},"body":{"controllers/BackendsController.html":{},"injectables/BackendsService.html":{}}}],["list(@res",{"_index":953,"title":{},"body":{"controllers/BackendsController.html":{}}}],["list(res",{"_index":937,"title":{},"body":{"controllers/BackendsController.html":{}}}],["liste",{"_index":2949,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["listerez",{"_index":3260,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["literal",{"_index":351,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"controllers/AuthController.html":{},"interfaces/ConfigInstance.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{}}}],["livrables",{"_index":2632,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["livraison",{"_index":2663,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["liés",{"_index":2698,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["load",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":369,"title":{},"body":{"classes/Agents.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["localstrategy",{"_index":743,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":1665,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"coverage.html":{},"index.html":{}}}],["log(message",{"_index":1664,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["log.levels",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log.setlevel",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log_level=info",{"_index":2339,"title":{},"body":{"index.html":{}}}],["logger",{"_index":10,"title":{"classes/Logger.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["logger(backendscontroller.name",{"_index":948,"title":{},"body":{"controllers/BackendsController.html":{}}}],["logger(this.controllername",{"_index":54,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["logger(this.servicename",{"_index":133,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["logger.controller",{"_index":1803,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.debug(`${message",{"_index":1118,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["logger.debug(`atempt",{"_index":1719,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.debug(`try",{"_index":1785,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["logger.debug(exception['message",{"_index":585,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{}}}],["logger.error(`${logprefix",{"_index":1461,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["logger.log(`${logprefix",{"_index":1452,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["logger.log(`upserting",{"_index":1488,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["logger.log(`validations",{"_index":1493,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["logger.name",{"_index":1804,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":1797,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["logger.warn(`${logprefix",{"_index":1464,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["logger/logger.module",{"_index":1081,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggercontroller",{"_index":1794,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"coverage.html":{}}}],["loggerdocument",{"_index":1791,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["loggermodule",{"_index":1072,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerschema",{"_index":1792,"title":{},"body":{"classes/Logger.html":{},"modules/LoggerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggerservice",{"_index":1796,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":1486,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["loginfos",{"_index":264,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["logique",{"_index":1498,"title":{},"body":{"injectables/IdentitiesService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["loglevel",{"_index":993,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["loglevels",{"_index":2066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":675,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@res",{"_index":716,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(res",{"_index":681,"title":{},"body":{"controllers/AuthController.html":{}}}],["logprefix",{"_index":1450,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["logs",{"_index":1636,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["longueur",{"_index":3310,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["lors",{"_index":3076,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["lowercase",{"_index":3323,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["léments",{"_index":2720,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["m",{"_index":3225,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["mail",{"_index":2346,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maintenabilit",{"_index":2976,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["maintenance",{"_index":2556,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintenant",{"_index":2629,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["maintient",{"_index":2240,"title":{},"body":{"index.html":{}}}],["mais",{"_index":1373,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["majuscule.example",{"_index":3326,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["management",{"_index":1809,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management.controller",{"_index":1818,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.service",{"_index":1811,"title":{},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{}}}],["management/identities",{"_index":3182,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["management/identities/_dto/_parts/inetorgperson.dto",{"_index":2782,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_dto/identities.dto",{"_index":2766,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/lifecycle.enum",{"_index":2767,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/identities/_enums/states.enum",{"_index":2768,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["management/management.module",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["managementcontroller",{"_index":1807,"title":{"controllers/ManagementController.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"coverage.html":{}}}],["managementmodule",{"_index":613,"title":{"modules/ManagementModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["managementmodule.register",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["managementservice",{"_index":1810,"title":{"injectables/ManagementService.html":{}},"body":{"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"coverage.html":{},"overview.html":{}}}],["manipulation",{"_index":2300,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["manière",{"_index":2603,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["manquant",{"_index":1581,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["manquants",{"_index":1378,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["manuels",{"_index":2647,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["map",{"_index":1159,"title":{},"body":{"classes/Form.html":{},"classes/FormSectionPart.html":{}}}],["map((k",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":3314,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["matching",{"_index":59,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["math.random().tostring(36).slice",{"_index":1943,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["matière",{"_index":3179,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["matières",{"_index":2670,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["max",{"_index":3270,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxdate",{"_index":3277,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum",{"_index":3271,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maximum.example",{"_index":3278,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxitems",{"_index":3269,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxlength",{"_index":3312,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["maxretriesperrequest",{"_index":1013,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mdi",{"_index":3049,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["meilleure",{"_index":2983,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["memory",{"_index":1853,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["message",{"_index":592,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["messages",{"_index":2978,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["met",{"_index":3131,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["meta_unprotected",{"_index":732,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":88,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["metadata.createdat",{"_index":2789,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["metadata.lastupdatedat",{"_index":296,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata.lastupdatedby",{"_index":295,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["metadata['context",{"_index":1680,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadata['createdby",{"_index":1683,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["metadatadto",{"_index":1203,"title":{"classes/MetadataDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/MetadataDto.html":{},"coverage.html":{}}}],["metadatadto:12",{"_index":1219,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["metadatapart",{"_index":91,"title":{"classes/MetadataPart.html":{}},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{},"coverage.html":{}}}],["metadatapartdto",{"_index":1217,"title":{"classes/MetadataPartDto.html":{}},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"coverage.html":{}}}],["metadatapartschema",{"_index":94,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/MetadataPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["methode",{"_index":2754,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["methods",{"_index":153,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["methodstubs",{"_index":2909,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettant",{"_index":2866,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mettre",{"_index":3101,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["min",{"_index":3274,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mindate",{"_index":3281,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimales",{"_index":3219,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["minimum",{"_index":3275,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minimum.example",{"_index":3282,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minitems",{"_index":3273,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minlength",{"_index":3309,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["minuscule.example",{"_index":3324,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["miscellaneous",{"_index":2177,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":2595,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mises",{"_index":2807,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["missing",{"_index":1361,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{}}}],["missingattributeadditionalfieldsstub",{"_index":2123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mixedvalue",{"_index":333,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/typealiases.html":{}}}],["mobile",{"_index":2347,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mock",{"_index":2735,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mocker",{"_index":2903,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mode",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["model",{"_index":164,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modellabel",{"_index":3088,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modelmodel",{"_index":2806,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modelname",{"_index":900,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["models",{"_index":907,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["modes",{"_index":3124,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["modification",{"_index":3162,"title":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["modifications",{"_index":2970,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modifyresult",{"_index":205,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["modulaire",{"_index":2311,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["module",{"_index":138,"title":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{}},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["module.get(identitiesservice",{"_index":2819,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["modulename",{"_index":109,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.charat(0).touppercase",{"_index":146,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["modulename.slice(1",{"_index":147,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["moduleref",{"_index":12,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{}}}],["modules",{"_index":537,"title":{"modules.html":{}},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["modules/ioredis",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"dependencies.html":{}}}],["modèle",{"_index":2753,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["modèles",{"_index":2737,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["mongo",{"_index":2962,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongoconnection",{"_index":1840,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongod",{"_index":1841,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb",{"_index":1852,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodb://localhost:27017/backend",{"_index":1015,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongodbtestinstance",{"_index":1838,"title":{"classes/MongoDbTestInstance.html":{}},"body":{"classes/MongoDbTestInstance.html":{},"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.cleardatabase",{"_index":2800,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.getmodel(identities.name",{"_index":2798,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.start",{"_index":2797,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongodbtestinstance.stop",{"_index":2802,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver",{"_index":1845,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["mongomemoryserver.create",{"_index":1855,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["mongoose",{"_index":99,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConsoleSession.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/SecurityPart.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mongoose.connection",{"_index":1641,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["mongoose.plugin(plugin.default",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule",{"_index":551,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":555,"title":{},"body":{"modules/AgentsModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemoduleoptions",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"interfaces/MongoosePlugin.html":{}}}],["mongooseplugin",{"_index":620,"title":{"interfaces/MongoosePlugin.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["mongoosevalidationfilter",{"_index":1868,"title":{"classes/MongooseValidationFilter.html":{}},"body":{"classes/MongooseValidationFilter.html":{},"coverage.html":{}}}],["morethan",{"_index":3286,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["mots",{"_index":2286,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["mr",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["ms",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["much",{"_index":897,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["multi",{"_index":2207,"title":{},"body":{"index.html":{},"properties.html":{}}}],["multiple",{"_index":906,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["mysecret",{"_index":1025,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["mécanismes",{"_index":2597,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["méthode",{"_index":2827,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["méthodes",{"_index":2708,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["n",{"_index":2331,"title":{},"body":{"index.html":{}}}],["n'avez",{"_index":3237,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["n'est",{"_index":1585,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["n'implémente",{"_index":2710,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["name_queue=backend",{"_index":2341,"title":{},"body":{"index.html":{}}}],["namequeue",{"_index":987,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["navigation",{"_index":3143,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["naviguer",{"_index":3141,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ne",{"_index":2755,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["negative",{"_index":3293,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nest",{"_index":2157,"title":{},"body":{"dependencies.html":{}}}],["nestjs",{"_index":127,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nestjs/bullmq",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":36,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/config",{"_index":74,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["nestjs/core",{"_index":30,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"injectables/FormService.html":{},"modules/ManagementModule.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":124,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":752,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":97,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Keyrings.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"classes/Logger.html":{},"modules/LoggerModule.html":{},"classes/MetadataPart.html":{},"interfaces/MongoosePlugin.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{}}}],["nestjs/passport",{"_index":698,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"controllers/BackendsController.html":{},"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2142,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"interfaces/ConfigInstance.html":{},"controllers/CoreController.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"controllers/ManagementController.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["new",{"_index":53,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/StatePart.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["newidentitydata",{"_index":2786,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["next",{"_index":376,"title":{},"body":{"classes/Agents.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/ErrorSchemaDto.html":{},"modules/IdentitiesModule.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"classes/PaginatedFilterDto.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["niveau",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nnetorgperson",{"_index":2563,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["node.js",{"_index":2759,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nodejs",{"_index":2281,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["noinspection",{"_index":235,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesService.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidationRecursive.html":{}}}],["nom",{"_index":2340,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nombre",{"_index":2627,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nomm",{"_index":3250,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nommés",{"_index":3215,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["noms",{"_index":2914,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["non",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["normes",{"_index":2637,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nosortedges",{"_index":1614,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["notamment",{"_index":2571,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notez",{"_index":3195,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["notfound",{"_index":2842,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["notfounddto",{"_index":1894,"title":{"classes/NotFoundDto.html":{}},"body":{"classes/NotFoundDto.html":{},"coverage.html":{}}}],["notfoundexception",{"_index":204,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["notfoundoptions",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nounknown",{"_index":3305,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["nous",{"_index":2750,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["nouveau",{"_index":2996,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nouveaux",{"_index":2607,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nouvelle",{"_index":3048,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nouvelles",{"_index":2704,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["null",{"_index":134,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/KeyringsService.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["number",{"_index":41,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Form.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["numérations",{"_index":3022,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["numéro",{"_index":3037,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["nuxtjs",{"_index":2573,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["nécessaire",{"_index":3193,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["nécessitant",{"_index":2320,"title":{},"body":{"index.html":{}}}],["nécessitent",{"_index":2717,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["négative.example",{"_index":3294,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["o",{"_index":2911,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["object",{"_index":243,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["object.keys(agentstate",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(attributes",{"_index":1575,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["object.keys(err.errors[key]['constraints']).foreach((ckey",{"_index":1888,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["object.keys(formtypes",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(validations).join",{"_index":1116,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values",{"_index":265,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["object.values(error.constraints)[0",{"_index":1129,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["object.values(errorchild.constraints)[0",{"_index":1135,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["objectclass",{"_index":3212,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses",{"_index":321,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objectclasses.includes(key",{"_index":1583,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectclasses.join",{"_index":1595,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["objectid",{"_index":1908,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["objectidvalidationpipe",{"_index":433,"title":{"injectables/ObjectIdValidationPipe.html":{}},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"coverage.html":{}}}],["objectif",{"_index":2548,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["objectsrc",{"_index":1004,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["objet",{"_index":2910,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["objets",{"_index":2999,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["obligatoires",{"_index":3166,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["observable",{"_index":729,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["observers",{"_index":3092,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ochestrator",{"_index":2204,"title":{},"body":{"index.html":{}}}],["official",{"_index":2194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["offre",{"_index":2303,"title":{},"body":{"index.html":{}}}],["ok",{"_index":940,"title":{},"body":{"controllers/BackendsController.html":{}}}],["oldpasswords",{"_index":1932,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["omit",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["omit(user.toobject",{"_index":1789,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["on_error",{"_index":2200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["one",{"_index":1473,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["onglet",{"_index":3154,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onglets",{"_index":3137,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["onmoduleinit",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["open",{"_index":2210,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["openldap",{"_index":2227,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["operator",{"_index":3099,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optimis",{"_index":2625,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["optional",{"_index":11,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{}}}],["optionalparams",{"_index":1647,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams.length",{"_index":1652,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionalparams[optionalparams.length",{"_index":1651,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["optionlabel",{"_index":3087,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["optionnels",{"_index":2271,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["options",{"_index":168,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["options).exec",{"_index":224,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["options.createdby",{"_index":1678,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.limit",{"_index":1927,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["options.request",{"_index":1682,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.request.user",{"_index":1684,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.console",{"_index":1657,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["options.target.includes(internalloglevel.db",{"_index":1654,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["opérations",{"_index":2254,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["orchestrateur",{"_index":2237,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["organiser",{"_index":3147,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["original",{"_index":1471,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["otherwise",{"_index":1556,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["otpkey",{"_index":1933,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["ou",{"_index":1379,"title":{},"body":{"controllers/IdentitiesController.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["out",{"_index":549,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["outil",{"_index":2316,"title":{},"body":{"index.html":{}}}],["overview",{"_index":2411,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":899,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelname",{"_index":891,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["overwritemodelnamefunction",{"_index":898,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["overwritten",{"_index":903,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["package",{"_index":652,"title":{"dependencies.html":{},"properties.html":{}},"body":{"injectables/AppService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["packagejson",{"_index":657,"title":{},"body":{"injectables/AppService.html":{}}}],["page",{"_index":2545,"title":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{}}],["paginated",{"_index":2043,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginated.decorator",{"_index":446,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["paginated.decorator.ts",{"_index":2045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["paginatedfilterdto",{"_index":1910,"title":{"classes/PaginatedFilterDto.html":{}},"body":{"classes/PaginatedFilterDto.html":{},"coverage.html":{}}}],["paginatedresponsedto",{"_index":33,"title":{"classes/PaginatedResponseDto.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["pair",{"_index":1408,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["panneaux",{"_index":3151,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["par",{"_index":2334,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["param",{"_index":420,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"controllers/KeyringsController.html":{}}}],["param('_id",{"_index":473,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AbstractController.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["params",{"_index":2725,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["paramètre",{"_index":2904,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["paramètres",{"_index":2700,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["parentid",{"_index":466,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/KeyringsController.html":{}}}],["parse",{"_index":1560,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parse(readfilesync(path",{"_index":1603,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["parseint(agentstate[k",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parseint(formtypes[k",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parser",{"_index":1924,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"dependencies.html":{}}}],["partial",{"_index":656,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/typealiases.html":{}}}],["partialprojectiontype",{"_index":447,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":507,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["partialtype(agentscreatedto",{"_index":523,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["partialtype(formdto",{"_index":1224,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["partialtype(identitiescreatedto",{"_index":1431,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["partialtype(inetorgpersoncreatedto",{"_index":2390,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["particulier",{"_index":2868,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partie",{"_index":2775,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["partir",{"_index":2307,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["parts/metadata.part.dto",{"_index":1824,"title":{},"body":{"classes/MetadataDto.html":{}}}],["parts/section.dto",{"_index":1222,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{}}}],["parts/section.part.schema",{"_index":1169,"title":{},"body":{"classes/Form.html":{}}}],["parts/security.part.dto",{"_index":519,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["parts/state.part.dto",{"_index":518,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["pas",{"_index":1586,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["passe",{"_index":2287,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["passer",{"_index":3155,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["passport",{"_index":988,"title":{},"body":{"interfaces/ConfigInstance.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":748,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.registerasync",{"_index":755,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1709,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1701,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1717,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":345,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":421,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["patch(':_id([0",{"_index":416,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["path",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"modules/CoreModule.html":{},"injectables/IdentitiesValidationService.html":{},"modules/ManagementModule.html":{},"interfaces/MongoosePlugin.html":{}}}],["pattern",{"_index":3313,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["patternproperties",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.context",{"_index":1679,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.identity",{"_index":850,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.jti].join",{"_index":852,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.level",{"_index":1687,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["payload.message",{"_index":1677,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.scopes.includes('offline",{"_index":849,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.type",{"_index":2000,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["payload.type.ts",{"_index":2429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["payload?.identity",{"_index":1721,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":2186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":2624,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["performances",{"_index":2630,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["perl",{"_index":2294,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["permet",{"_index":2241,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["permettant",{"_index":2299,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["permettre",{"_index":2604,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["persistauthorization",{"_index":1030,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["personnalis",{"_index":3112,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisable",{"_index":3125,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personnalisées",{"_index":3120,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["personne",{"_index":3332,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peut",{"_index":3242,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["peuvent",{"_index":2915,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["pick",{"_index":662,"title":{},"body":{"injectables/AppService.html":{}}}],["pick(this.package",{"_index":669,"title":{},"body":{"injectables/AppService.html":{}}}],["pickprojectionhelper",{"_index":439,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"coverage.html":{}}}],["pipetransform",{"_index":1905,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["plac",{"_index":3252,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["place",{"_index":2596,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["placement",{"_index":3159,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["planning",{"_index":2655,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plateforme",{"_index":2643,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["plugin",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin.default",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin.options",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["plugins",{"_index":996,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["plus",{"_index":2956,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["plusieurs",{"_index":3123,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["port",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["positionnement",{"_index":3054,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["positive",{"_index":3291,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["positive.example",{"_index":3292,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["possibilit",{"_index":2262,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["possible",{"_index":2566,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["post",{"_index":422,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["post('local",{"_index":704,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('local')@useguards(undefined",{"_index":679,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":683,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refresh",{"_index":686,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upsert",{"_index":1382,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post('upsert')@apicreatedecorator(identitiescreatedto",{"_index":1343,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post()@apicreatedecorator(agentscreatedto",{"_index":393,"title":{},"body":{"controllers/AgentsController.html":{}}}],["post()@apicreatedecorator(formdto",{"_index":1177,"title":{},"body":{"controllers/FormController.html":{}}}],["post()@apicreatedecorator(identitiescreatedto",{"_index":1331,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["post()@apicreatedecorator(keyringscreatedto",{"_index":1738,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["postaladdress",{"_index":2348,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pour",{"_index":2212,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["pouvez",{"_index":3254,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["powershell",{"_index":2293,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["pr",{"_index":2569,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["pre",{"_index":3006,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["preferredlanguage",{"_index":2349,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["prefix",{"_index":385,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{},"controllers/LoggerController.html":{},"controllers/ManagementController.html":{},"interfaces/ValidationRecursive.html":{}}}],["premier",{"_index":2947,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prend",{"_index":2905,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["prendre",{"_index":2752,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["principal",{"_index":3107,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["principale",{"_index":2580,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principales",{"_index":2555,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["principaux",{"_index":2231,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["prise",{"_index":3122,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["private",{"_index":105,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["privée",{"_index":2973,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["process.env.node_env",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["process.env['jwt_secret",{"_index":1020,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['log_level",{"_index":998,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['mongo_uri",{"_index":1014,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['name_queue",{"_index":1023,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['redis_uri",{"_index":1010,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['secret",{"_index":1024,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['swagger_api",{"_index":1027,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["process.env['swagger_path",{"_index":1026,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["processor",{"_index":2679,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{}}],["processus",{"_index":2323,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["production",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["profile.commonname",{"_index":3090,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["projection",{"_index":183,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projection.helper",{"_index":441,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["projection.helper.ts",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["projection.type",{"_index":449,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["projection.type.ts",{"_index":2427,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projectiontype",{"_index":184,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["projet",{"_index":2228,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["projets",{"_index":2552,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["promesse",{"_index":2987,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promesses",{"_index":2891,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["promise.reject(new",{"_index":2927,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["promise.resolve",{"_index":1610,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prop",{"_index":96,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{}}}],["prop({required",{"_index":1967,"title":{},"body":{"classes/StatePart.html":{},"classes/inetOrgPerson.html":{}}}],["prop({type",{"_index":93,"title":{},"body":{"classes/AbstractSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["property",{"_index":901,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{}}}],["propertynames",{"_index":3306,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["propres",{"_index":3043,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriét",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["propriétés",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["protected",{"_index":9,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LoggerService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["protocoles",{"_index":2591,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["provide",{"_index":2815,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["providers",{"_index":542,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["provisional",{"_index":2195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["précis",{"_index":2660,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["précise",{"_index":2953,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["prérequis",{"_index":2730,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["présence",{"_index":2270,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["public",{"_index":55,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["puissante",{"_index":2305,"title":{},"body":{"index.html":{}}}],["python",{"_index":2292,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["qcard",{"_index":3105,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qcardactions",{"_index":3114,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qstepper",{"_index":3142,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabpanels",{"_index":3150,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qtabs",{"_index":3148,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["qu'il",{"_index":3251,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["qu'ils",{"_index":3216,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["quasar",{"_index":3025,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["que",{"_index":2273,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["query",{"_index":206,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["queryoptions",{"_index":169,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["queue",{"_index":66,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"index.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queue(this.config.get('namequeue",{"_index":78,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents",{"_index":67,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueevents(this.config.get('namequeue",{"_index":82,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["queueprocessorservice",{"_index":2672,"title":{},"body":{"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["qui",{"_index":2716,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["racine",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["radash",{"_index":663,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["radio",{"_index":3065,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["randombytes",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["randombytes(64).tostring('hex')].join(this.token_path_separator",{"_index":864,"title":{},"body":{"injectables/AuthService.html":{}}}],["rationalisant",{"_index":2897,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["raw",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["rawbodybuffer",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["rawbodybuffer(options",{"_index":1925,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["rawbodybufferoptions",{"_index":1919,"title":{"interfaces/RawBodyBufferOptions.html":{}},"body":{"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{}}}],["rawresult",{"_index":1510,"title":{},"body":{"injectables/IdentitiesService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["read",{"_index":386,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["read(@param('_id",{"_index":1197,"title":{},"body":{"controllers/FormController.html":{}}}],["read(_id",{"_index":397,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["readfilesync",{"_index":659,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesValidationService.html":{}}}],["readonly",{"_index":65,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["record",{"_index":323,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["redirection",{"_index":3077,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redirecturl",{"_index":1151,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["redis",{"_index":70,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"injectables/AuthService.html":{},"injectables/BackendsService.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["redis://localhost:6379/0",{"_index":1011,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["redis_host=redis",{"_index":2326,"title":{},"body":{"index.html":{}}}],["redis_password=xx",{"_index":2337,"title":{},"body":{"index.html":{}}}],["redis_port=6379",{"_index":2327,"title":{},"body":{"index.html":{}}}],["redis_user=monuser",{"_index":2336,"title":{},"body":{"index.html":{}}}],["redismodule",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["redismodule.forrootasync",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["redisoptions",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["ref",{"_index":139,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":2164,"title":{},"body":{"dependencies.html":{}}}],["reflect.getmetadata('imports",{"_index":1086,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reflector",{"_index":724,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["refresh",{"_index":676,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(@res",{"_index":713,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(res",{"_index":685,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh_token",{"_index":714,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token].join(this.token_path_separator",{"_index":867,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_expires_in",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token_prefix",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["regenerating",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["regex",{"_index":3315,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["register",{"_index":1074,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["reject",{"_index":1576,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejects",{"_index":1551,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["rejetée",{"_index":2988,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["remarques",{"_index":3334,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["remove",{"_index":387,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remove(@param('_id",{"_index":1200,"title":{},"body":{"controllers/FormController.html":{}}}],["remove(_id",{"_index":404,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["remplir",{"_index":3034,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renater",{"_index":2275,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["rendant",{"_index":3113,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendent",{"_index":3152,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendre",{"_index":3133,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["rendu",{"_index":3121,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["renewtokens",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["renewtokens(refresh_token",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["renvoie",{"_index":2986,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["représent",{"_index":3036,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représentant",{"_index":2694,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["représente",{"_index":2994,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["représentent",{"_index":2913,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["représenter",{"_index":2998,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["req",{"_index":128,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["reqidentity",{"_index":699,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":108,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"modules/AppModule.html":{},"injectables/DtoValidationPipe.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["request.query['debug",{"_index":1121,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["request.user",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestcontext",{"_index":126,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontext.currentcontext?.req",{"_index":135,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["requestcontextmodule",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["requete",{"_index":3168,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["required",{"_index":324,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requis",{"_index":1405,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["requises",{"_index":3220,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requête",{"_index":3165,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["requêtes",{"_index":3180,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["res",{"_index":396,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.json",{"_index":606,"title":{},"body":{"controllers/AppController.html":{}}}],["res.status(200).json(backend",{"_index":956,"title":{},"body":{"controllers/BackendsController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":1386,"title":{},"body":{"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{}}}],["res.status(httpstatus.created).json",{"_index":460,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesValidationController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":469,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["res.status(httpstatus.ok).send",{"_index":719,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.status(statuscode).json",{"_index":1381,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["reset",{"_index":548,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resetvalidation",{"_index":3128,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["resolve",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(process.cwd",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolves",{"_index":1549,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["respecter",{"_index":2636,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["respecter.example",{"_index":3318,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["respectés",{"_index":2664,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["response",{"_index":390,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BackendsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{}}}],["response.decorator",{"_index":432,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["response.decorator.ts",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["response.dto",{"_index":35,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["response.dto.ts",{"_index":1914,"title":{},"body":{"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":1916,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:6",{"_index":1917,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.dto.ts:9",{"_index":1918,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["response.status(httpstatus.not_acceptable).json",{"_index":1879,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["response.status(status).json",{"_index":591,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["responsemodel",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responseoptions",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsible",{"_index":1540,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["ressource",{"_index":3186,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["rest",{"_index":2249,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["result",{"_index":306,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["results",{"_index":58,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/demon.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["rethrow",{"_index":1470,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["retour",{"_index":2924,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retourne",{"_index":2809,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retournées",{"_index":2938,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["retours",{"_index":2745,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["return",{"_index":56,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["returns",{"_index":173,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"modules/CoreModule.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/InternalLogger.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"modules/ManagementModule.html":{},"classes/MongoDbTestInstance.html":{},"classes/MongooseValidationFilter.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["roles",{"_index":482,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["round",{"_index":3298,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["routermodule",{"_index":1077,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["routermodule.register",{"_index":1084,"title":{},"body":{"modules/CoreModule.html":{},"modules/ManagementModule.html":{}}}],["row",{"_index":1243,"title":{},"body":{"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["runvalidators",{"_index":298,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["rxjs",{"_index":731,"title":{},"body":{"injectables/AuthGuard.html":{},"dependencies.html":{}}}],["règles",{"_index":2269,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["récupér",{"_index":3027,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["référence",{"_index":2906,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["références",{"_index":2746,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["référez",{"_index":2959,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["régulière",{"_index":3317,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["réponse",{"_index":3171,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["résultats",{"_index":2652,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["réussies",{"_index":2935,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["réussit",{"_index":2992,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["save",{"_index":374,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["saveoptions",{"_index":176,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["schema",{"_index":331,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/MongoDbTestInstance.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"dependencies.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.dto.ts",{"_index":1140,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"coverage.html":{}}}],["schema.dto.ts:12",{"_index":1146,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:16",{"_index":1142,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:6",{"_index":1145,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.dto.ts:9",{"_index":1143,"title":{},"body":{"classes/ErrorSchemaDto.html":{}}}],["schema.org/draft",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["schema.pre('save",{"_index":1457,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["schema.pre('validate",{"_index":1449,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["schemafactory",{"_index":332,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"classes/MetadataPart.html":{},"classes/SecurityPart.html":{},"classes/StatePart.html":{},"classes/inetOrgPerson.html":{}}}],["schemafactory.createforclass(additionalfieldspart",{"_index":338,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(agents).pre",{"_index":373,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(form",{"_index":1173,"title":{},"body":{"classes/Form.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(formfieldpart",{"_index":1271,"title":{},"body":{"classes/FormFieldPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(formsectionpart",{"_index":1304,"title":{},"body":{"classes/FormSectionPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(identities",{"_index":1327,"title":{},"body":{"classes/Identities.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(inetorgperson",{"_index":2370,"title":{},"body":{"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(keyrings",{"_index":1734,"title":{},"body":{"classes/Keyrings.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(logger",{"_index":1793,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(metadatapart",{"_index":1830,"title":{},"body":{"classes/MetadataPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(securitypart).pre",{"_index":1941,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(statepart",{"_index":1978,"title":{},"body":{"classes/StatePart.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":2554,"title":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["schemas/abstract.schema",{"_index":213,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["schemas/logger.schema",{"_index":1802,"title":{},"body":{"modules/LoggerModule.html":{}}}],["schematics",{"_index":2132,"title":{},"body":{"dependencies.html":{}}}],["schéma",{"_index":2258,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["schémas",{"_index":2243,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["scope",{"_index":1104,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scope.request",{"_index":1105,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["scopes",{"_index":855,"title":{},"body":{"injectables/AuthService.html":{}}}],["scopes.push('offline",{"_index":857,"title":{},"body":{"injectables/AuthService.html":{}}}],["script",{"_index":3018,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["scripts",{"_index":2252,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["scriptsrc",{"_index":1009,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["scénarios",{"_index":2899,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["se",{"_index":2229,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["search",{"_index":388,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["search(res",{"_index":408,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["searchfield",{"_index":3089,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["searchfilteroptions",{"_index":411,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["searchfilterschema",{"_index":409,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["secret",{"_index":989,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["secretkey",{"_index":1750,"title":{},"body":{"controllers/KeyringsController.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["secretorkey",{"_index":1712,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":3011,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sectionname",{"_index":1294,"title":{},"body":{"classes/FormSectionDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["sections",{"_index":1152,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["security",{"_index":346,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["securitypart",{"_index":357,"title":{"classes/SecurityPart.html":{}},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["securitypartdto",{"_index":496,"title":{"classes/SecurityPartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/SecurityPartDTO.html":{},"coverage.html":{}}}],["securitypartschema",{"_index":358,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1018,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["sein",{"_index":2764,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["select",{"_index":3062,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["self",{"_index":1003,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["selon",{"_index":2895,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["senders",{"_index":3066,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sensibles",{"_index":2600,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sera",{"_index":2656,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["server",{"_index":596,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["serveur",{"_index":2288,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["serveurs",{"_index":2226,"title":{},"body":{"index.html":{}}}],["service",{"_index":233,"title":{"additional-documentation/documentation-technique/queue-processor-service.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["servicename",{"_index":110,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["services",{"_index":2684,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["serviceschemainterface",{"_index":211,"title":{"interfaces/ServiceSchemaInterface.html":{}},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["ses",{"_index":2312,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sesame",{"_index":2676,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["session",{"_index":269,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["session(@res",{"_index":711,"title":{},"body":{"controllers/AuthController.html":{}}}],["session(res",{"_index":688,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.ts",{"_index":1054,"title":{},"body":{"classes/ConsoleSession.html":{},"coverage.html":{}}}],["session.ts:4",{"_index":1057,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["session.ts:5",{"_index":1061,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["session.ts:6",{"_index":1060,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["session.ts:7",{"_index":1055,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["set",{"_index":293,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["set([...identity.additionalfields.objectclasses",{"_index":1506,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["setloglevel",{"_index":2067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settimeout",{"_index":1643,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["showfriendlyerrorstack",{"_index":1012,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["si",{"_index":2329,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["significatif",{"_index":2666,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["significative",{"_index":2942,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["signifie",{"_index":2946,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["similaire",{"_index":2872,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["simplifie",{"_index":2881,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simul",{"_index":2810,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulation",{"_index":2952,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulations",{"_index":2930,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simuler",{"_index":2761,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulées",{"_index":2894,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["simulés",{"_index":2738,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["single",{"_index":905,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["skip",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["slots",{"_index":3126,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sn",{"_index":2350,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["soft",{"_index":1514,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["solution",{"_index":2304,"title":{},"body":{"index.html":{}}}],["sommaire",{"_index":3010,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["son",{"_index":2310,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["sont",{"_index":1377,"title":{},"body":{"controllers/IdentitiesController.html":{},"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sort",{"_index":2788,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sorties",{"_index":2575,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["soumission",{"_index":3074,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"modules/AgentsModule.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"modules/BackendsModule.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"modules/FormModule.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"modules/IdentitiesValidationModule.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"modules/KeyringsModule.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"controllers/ManagementController.html":{},"modules/ManagementModule.html":{},"injectables/ManagementService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"index.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sources",{"_index":2208,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["sous",{"_index":3044,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sprints",{"_index":2658,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["spécifi",{"_index":2925,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["spécifier",{"_index":3239,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["spécifique",{"_index":2713,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiques",{"_index":2932,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiquesexample",{"_index":3276,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["spécifiés",{"_index":2896,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["src/.../additionalfields.part.schema.ts",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../addtionalfields.dto.stub.ts",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../agent",{"_index":2179,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../agent.type.ts",{"_index":2419,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../agents.schema.ts",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auto",{"_index":2425,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../config.object.ts",{"_index":2180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../event",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../field.part.schema.ts",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../form.schema.ts",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.dto.stub.ts",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../identities.schema.ts",{"_index":2420,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../identities.validation.stub.ts",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.dto.stub.ts",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../inetorgperson.part.ts",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../internal.logger.ts",{"_index":2184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../keyrings.schema.ts",{"_index":2421,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../lifecycle.enum.ts",{"_index":2182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.schema.ts",{"_index":2422,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../metadata.part.schema.ts",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed",{"_index":2423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../partial",{"_index":2426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../req",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../section.part.schema.ts",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../security.part.schema.ts",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../state.part.schema.ts",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../states.enum.ts",{"_index":2183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../types.ts",{"_index":2181,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../validation",{"_index":2428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validationexception.ts",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validschema.ts",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../wrapper.type.ts",{"_index":2431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/abstracts/abstract.controller.ts",{"_index":6,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.controller.ts:14",{"_index":26,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:15",{"_index":19,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:22",{"_index":28,"title":{},"body":{"classes/AbstractController.html":{}}}],["src/_common/abstracts/abstract.controller.ts:6",{"_index":62,"title":{},"body":{"interfaces/AbstractControllerContext.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts",{"_index":64,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:6",{"_index":73,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.queue.processor.ts:7",{"_index":71,"title":{},"body":{"classes/AbstractQueueProcessor.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts",{"_index":151,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:115",{"_index":191,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:149",{"_index":177,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:191",{"_index":194,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:21",{"_index":165,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:248",{"_index":196,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:27",{"_index":203,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:304",{"_index":181,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:32",{"_index":185,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:42",{"_index":170,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:48",{"_index":187,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.schema.ts:82",{"_index":189,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["src/_common/abstracts/abstract.service.ts",{"_index":104,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"coverage.html":{}}}],["src/_common/abstracts/abstract.service.ts:17",{"_index":115,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:18",{"_index":116,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:19",{"_index":113,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:20",{"_index":112,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:28",{"_index":118,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:36",{"_index":120,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:43",{"_index":122,"title":{},"body":{"injectables/AbstractService.html":{}}}],["src/_common/abstracts/abstract.service.ts:7",{"_index":149,"title":{},"body":{"interfaces/AbstractServiceContext.html":{}}}],["src/_common/abstracts/dto/custom",{"_index":1089,"title":{},"body":{"classes/CustomFieldsDto.html":{},"coverage.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts",{"_index":1822,"title":{},"body":{"classes/MetadataDto.html":{},"coverage.html":{}}}],["src/_common/abstracts/dto/metadata.dto.ts:12",{"_index":1823,"title":{},"body":{"classes/MetadataDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts",{"_index":1831,"title":{},"body":{"classes/MetadataPartDto.html":{},"coverage.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:13",{"_index":1833,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:18",{"_index":1836,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:23",{"_index":1835,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/dto/parts/metadata.part.dto.ts:8",{"_index":1834,"title":{},"body":{"classes/MetadataPartDto.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts",{"_index":1953,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{},"coverage.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:16",{"_index":1957,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:22",{"_index":1954,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:24",{"_index":1958,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:30",{"_index":1960,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:36",{"_index":1961,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:42",{"_index":1955,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:44",{"_index":1962,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/interfaces/service.schema.interface.ts:50",{"_index":1956,"title":{},"body":{"interfaces/ServiceSchemaInterface.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts",{"_index":84,"title":{},"body":{"classes/AbstractSchema.html":{},"coverage.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:6",{"_index":90,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/abstract.schema.ts:9",{"_index":95,"title":{},"body":{"classes/AbstractSchema.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts",{"_index":1825,"title":{},"body":{"classes/MetadataPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10",{"_index":1826,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13",{"_index":1829,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16",{"_index":1828,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7",{"_index":1827,"title":{},"body":{"classes/MetadataPart.html":{}}}],["src/_common/constants/event",{"_index":2035,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/data/console",{"_index":1053,"title":{},"body":{"classes/ConsoleSession.html":{},"coverage.html":{}}}],["src/_common/decorators/api",{"_index":2037,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/decorators/params/req",{"_index":2048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/decorators/public.decorator.ts",{"_index":2050,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/dto/error",{"_index":1139,"title":{},"body":{"classes/ErrorSchemaDto.html":{},"coverage.html":{}}}],["src/_common/dto/not",{"_index":1895,"title":{},"body":{"classes/NotFoundDto.html":{},"coverage.html":{}}}],["src/_common/dto/paginated",{"_index":1911,"title":{},"body":{"classes/PaginatedFilterDto.html":{},"classes/PaginatedResponseDto.html":{},"coverage.html":{}}}],["src/_common/errors/validationexception.ts",{"_index":1990,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/_common/errors/validationexception.ts:18",{"_index":2015,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:22",{"_index":2014,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/errors/validationexception.ts:31",{"_index":2017,"title":{},"body":{"classes/ValidationSchemaException.html":{}}}],["src/_common/errors/validationexception.ts:38",{"_index":1995,"title":{},"body":{"classes/ValidationConfigException.html":{}}}],["src/_common/errors/validationexception.ts:9",{"_index":2013,"title":{},"body":{"classes/ValidationException.html":{}}}],["src/_common/filters/all",{"_index":575,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/_common/filters/identities",{"_index":1526,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"coverage.html":{}}}],["src/_common/filters/mongoose",{"_index":1869,"title":{},"body":{"classes/MongooseValidationFilter.html":{},"coverage.html":{}}}],["src/_common/functions/get",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["src/_common/guards/auth.guard.ts",{"_index":720,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/_common/guards/auth.guard.ts:13",{"_index":728,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/guards/auth.guard.ts:8",{"_index":725,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/_common/helpers/pick",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["src/_common/interceptors/file",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["src/_common/middlewares/raw",{"_index":1920,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{},"coverage.html":{}}}],["src/_common/pipes/dto",{"_index":1094,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["src/_common/pipes/object",{"_index":1900,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{},"coverage.html":{}}}],["src/_common/plugins/mongoose/auto",{"_index":887,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/tests/mock.model.ts",{"_index":2074,"title":{},"body":{"coverage.html":{}}}],["src/_common/tests/mock.service.ts",{"_index":2078,"title":{},"body":{"coverage.html":{}}}],["src/_common/tests/mongodb.test.instance.ts",{"_index":1839,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"coverage.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:18",{"_index":1851,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:24",{"_index":1847,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:31",{"_index":1849,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:5",{"_index":1846,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:6",{"_index":1844,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/mongodb.test.instance.ts:8",{"_index":1850,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["src/_common/tests/service.assertions.utils.ts",{"_index":2081,"title":{},"body":{"coverage.html":{}}}],["src/_common/types/agent.type.ts",{"_index":2094,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/_common/types/mixed",{"_index":2432,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/partial",{"_index":2433,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/validation",{"_index":2434,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/_common/types/wrapper.type.ts",{"_index":2435,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":599,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":602,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":651,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:10",{"_index":654,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:17",{"_index":655,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config.ts",{"_index":984,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["src/core/agents/_dto/agents.dto.ts",{"_index":480,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"coverage.html":{}}}],["src/core/agents/_dto/agents.dto.ts:26",{"_index":503,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:31",{"_index":485,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:36",{"_index":487,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:41",{"_index":492,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:46",{"_index":502,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:52",{"_index":501,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:57",{"_index":484,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:62",{"_index":495,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:67",{"_index":498,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:72",{"_index":490,"title":{},"body":{"classes/AgentsCreateDto.html":{}}}],["src/core/agents/_dto/agents.dto.ts:78",{"_index":525,"title":{},"body":{"classes/AgentsDto.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts",{"_index":1945,"title":{},"body":{"classes/SecurityPartDTO.html":{},"coverage.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:13",{"_index":1950,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:19",{"_index":1952,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:25",{"_index":1947,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:30",{"_index":1948,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:35",{"_index":1951,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/security.part.dto.ts:8",{"_index":1949,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts",{"_index":1979,"title":{},"body":{"classes/StatePartDTO.html":{},"coverage.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:13",{"_index":1982,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:18",{"_index":1983,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:23",{"_index":1985,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:28",{"_index":1984,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_dto/parts/state.part.dto.ts:8",{"_index":1981,"title":{},"body":{"classes/StatePartDTO.html":{}}}],["src/core/agents/_enum/agent",{"_index":2099,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/agents.schema.ts",{"_index":340,"title":{},"body":{"classes/Agents.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:23",{"_index":365,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:28",{"_index":353,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:35",{"_index":355,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:41",{"_index":356,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:47",{"_index":364,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:54",{"_index":362,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:60",{"_index":350,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:65",{"_index":359,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/agents.schema.ts:70",{"_index":352,"title":{},"body":{"classes/Agents.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts",{"_index":1930,"title":{},"body":{"classes/SecurityPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts:10",{"_index":1937,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts:15",{"_index":1938,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts:20",{"_index":1940,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts:25",{"_index":1935,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts:31",{"_index":1936,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/parts/security.part.schema.ts:36",{"_index":1939,"title":{},"body":{"classes/SecurityPart.html":{}}}],["src/core/agents/_schemas/parts/state.part.schema.ts",{"_index":1963,"title":{},"body":{"classes/StatePart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/agents/_schemas/parts/state.part.schema.ts:13",{"_index":1969,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/parts/state.part.schema.ts:19",{"_index":1970,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/parts/state.part.schema.ts:22",{"_index":1971,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/parts/state.part.schema.ts:25",{"_index":1973,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/_schemas/parts/state.part.schema.ts:28",{"_index":1972,"title":{},"body":{"classes/StatePart.html":{}}}],["src/core/agents/agents.controller.ts",{"_index":384,"title":{},"body":{"controllers/AgentsController.html":{},"coverage.html":{}}}],["src/core/agents/agents.controller.ts:35",{"_index":395,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:45",{"_index":414,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:66",{"_index":403,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:82",{"_index":418,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.controller.ts:97",{"_index":407,"title":{},"body":{"controllers/AgentsController.html":{}}}],["src/core/agents/agents.module.ts",{"_index":550,"title":{},"body":{"modules/AgentsModule.html":{}}}],["src/core/agents/agents.service.ts",{"_index":558,"title":{},"body":{"injectables/AgentsService.html":{},"coverage.html":{}}}],["src/core/agents/agents.service.ts:8",{"_index":560,"title":{},"body":{"injectables/AgentsService.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts",{"_index":1700,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:11",{"_index":1703,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/jwt.strategy.ts:25",{"_index":1707,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts",{"_index":1779,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:10",{"_index":1780,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/_strategies/local.strategy.ts:18",{"_index":1783,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/core/auth/auth.controller.ts",{"_index":672,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/core/auth/auth.controller.ts:25",{"_index":680,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:35",{"_index":691,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:46",{"_index":687,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.controller.ts:54",{"_index":684,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/core/auth/auth.module.ts",{"_index":744,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/core/auth/auth.service.ts",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/core/auth/auth.service.ts:145",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:160",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:172",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:20",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:21",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:23",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:24",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:26",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:27",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:38",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:67",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:81",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/auth/auth.service.ts:95",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/backends/backends.controller.ts",{"_index":923,"title":{},"body":{"controllers/BackendsController.html":{},"coverage.html":{}}}],["src/core/backends/backends.controller.ts:19",{"_index":941,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.controller.ts:28",{"_index":936,"title":{},"body":{"controllers/BackendsController.html":{}}}],["src/core/backends/backends.module.ts",{"_index":963,"title":{},"body":{"modules/BackendsModule.html":{}}}],["src/core/backends/backends.service.ts",{"_index":965,"title":{},"body":{"injectables/BackendsService.html":{},"coverage.html":{}}}],["src/core/backends/backends.service.ts:15",{"_index":969,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:22",{"_index":968,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/backends/backends.service.ts:8",{"_index":967,"title":{},"body":{"injectables/BackendsService.html":{}}}],["src/core/core.controller.ts",{"_index":1063,"title":{},"body":{"controllers/CoreController.html":{},"coverage.html":{}}}],["src/core/core.module.ts",{"_index":1073,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.module.ts:17",{"_index":1075,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":1087,"title":{},"body":{"injectables/CoreService.html":{},"coverage.html":{}}}],["src/core/core.service.ts:4",{"_index":1088,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/form/_dto/form.dto.ts",{"_index":1202,"title":{},"body":{"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"coverage.html":{}}}],["src/core/form/_dto/form.dto.ts:12",{"_index":1213,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:17",{"_index":1207,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:21",{"_index":1216,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:26",{"_index":1205,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:31",{"_index":1209,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:35",{"_index":1212,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:39",{"_index":1211,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/form.dto.ts:44",{"_index":1208,"title":{},"body":{"classes/FormCreateDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts",{"_index":1234,"title":{},"body":{"classes/FormFieldDto.html":{},"coverage.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:11",{"_index":1253,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:15",{"_index":1254,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:19",{"_index":1255,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:23",{"_index":1251,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:27",{"_index":1246,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:31",{"_index":1245,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:35",{"_index":1248,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:39",{"_index":1249,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:43",{"_index":1247,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/field.dto.ts:7",{"_index":1252,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts",{"_index":1279,"title":{},"body":{"classes/FormSectionDto.html":{},"coverage.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:10",{"_index":1287,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:14",{"_index":1291,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:19",{"_index":1286,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:24",{"_index":1282,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:31",{"_index":1289,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_dto/parts/section.dto.ts:37",{"_index":1285,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["src/core/form/_enum/types.ts",{"_index":2103,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_interface/form.interface.ts",{"_index":1987,"title":{},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"coverage.html":{}}}],["src/core/form/_schemas/form.schema.ts",{"_index":1149,"title":{},"body":{"classes/Form.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/form.schema.ts:12",{"_index":1164,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:15",{"_index":1157,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:21",{"_index":1156,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:28",{"_index":1166,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:31",{"_index":1161,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:34",{"_index":1163,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:37",{"_index":1162,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/form.schema.ts:40",{"_index":1158,"title":{},"body":{"classes/Form.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts",{"_index":1259,"title":{},"body":{"classes/FormFieldPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:12",{"_index":1268,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:15",{"_index":1269,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:18",{"_index":1265,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:24",{"_index":1261,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:30",{"_index":1260,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:36",{"_index":1263,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:42",{"_index":1264,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:48",{"_index":1262,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:6",{"_index":1266,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/field.part.schema.ts:9",{"_index":1267,"title":{},"body":{"classes/FormFieldPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts",{"_index":1296,"title":{},"body":{"classes/FormSectionPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:10",{"_index":1300,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:17",{"_index":1302,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:22",{"_index":1299,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:27",{"_index":1297,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:30",{"_index":1301,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/_schemas/parts/section.part.schema.ts:33",{"_index":1298,"title":{},"body":{"classes/FormSectionPart.html":{}}}],["src/core/form/form.controller.ts",{"_index":1175,"title":{},"body":{"controllers/FormController.html":{},"coverage.html":{}}}],["src/core/form/form.controller.ts:39",{"_index":1179,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:49",{"_index":1184,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:69",{"_index":1181,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:80",{"_index":1187,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.controller.ts:95",{"_index":1183,"title":{},"body":{"controllers/FormController.html":{}}}],["src/core/form/form.module.ts",{"_index":1275,"title":{},"body":{"modules/FormModule.html":{}}}],["src/core/form/form.service.ts",{"_index":1305,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["src/core/form/form.service.ts:9",{"_index":1306,"title":{},"body":{"injectables/FormService.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts",{"_index":1756,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"coverage.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:13",{"_index":1759,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:16",{"_index":1761,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:22",{"_index":1765,"title":{},"body":{"classes/KeyringsDto.html":{}}}],["src/core/keyrings/_dto/keyrings.dto.ts:9",{"_index":1762,"title":{},"body":{"classes/KeyringsCreateDto.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts",{"_index":1726,"title":{},"body":{"classes/Keyrings.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:13",{"_index":1731,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:18",{"_index":1729,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/_schemas/keyrings.schema.ts:21",{"_index":1730,"title":{},"body":{"classes/Keyrings.html":{}}}],["src/core/keyrings/keyrings.controller.ts",{"_index":1736,"title":{},"body":{"controllers/KeyringsController.html":{},"coverage.html":{}}}],["src/core/keyrings/keyrings.controller.ts:32",{"_index":1740,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:42",{"_index":1745,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:63",{"_index":1742,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.controller.ts:79",{"_index":1744,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["src/core/keyrings/keyrings.module.ts",{"_index":1771,"title":{},"body":{"modules/KeyringsModule.html":{}}}],["src/core/keyrings/keyrings.service.ts",{"_index":1776,"title":{},"body":{"injectables/KeyringsService.html":{},"coverage.html":{}}}],["src/core/keyrings/keyrings.service.ts:8",{"_index":1777,"title":{},"body":{"injectables/KeyringsService.html":{}}}],["src/core/logger/internal.logger.ts",{"_index":1624,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/logger/internal.logger.ts:108",{"_index":1695,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:120",{"_index":1692,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:27",{"_index":1690,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:34",{"_index":1696,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:45",{"_index":1694,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:59",{"_index":1699,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:71",{"_index":1697,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:83",{"_index":1693,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/internal.logger.ts:95",{"_index":1698,"title":{},"body":{"injectables/InternalLogger.html":{}}}],["src/core/logger/logger.controller.ts",{"_index":1795,"title":{},"body":{"controllers/LoggerController.html":{},"coverage.html":{}}}],["src/core/logger/logger.module.ts",{"_index":1801,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/core/logger/logger.service.ts",{"_index":1805,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/core/logger/logger.service.ts:5",{"_index":1806,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/core/logger/schemas/logger.schema.ts",{"_index":1790,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":2104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts",{"_index":2018,"title":{},"body":{"classes/additionalFieldsPartDto.html":{},"coverage.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:10",{"_index":2021,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/additionalfields.dto.ts:16",{"_index":2020,"title":{},"body":{"classes/additionalFieldsPartDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts",{"_index":2105,"title":{},"body":{"coverage.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:11",{"_index":2384,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:15",{"_index":2387,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:20",{"_index":2374,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:25",{"_index":2375,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:30",{"_index":2376,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:35",{"_index":2377,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:40",{"_index":2379,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:46",{"_index":2381,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:51",{"_index":2382,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:56",{"_index":2383,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:61",{"_index":2385,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:66",{"_index":2386,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:7",{"_index":2371,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:71",{"_index":2388,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/_parts/inetorgperson.dto.ts:76",{"_index":2389,"title":{},"body":{"classes/inetOrgPersonCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts",{"_index":1394,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"coverage.html":{}}}],["src/management/identities/_dto/identities.dto.ts:13",{"_index":1421,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:18",{"_index":1419,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:23",{"_index":1417,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_dto/identities.dto.ts:42",{"_index":1414,"title":{},"body":{"classes/IdentitiesCreateDto.html":{}}}],["src/management/identities/_enums/lifecycle.enum.ts",{"_index":2192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_enums/states.enum.ts",{"_index":2197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts",{"_index":319,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:10",{"_index":325,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:13",{"_index":330,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/additionalfields.part.schema.ts:7",{"_index":328,"title":{},"body":{"classes/AdditionalFieldsPart.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts",{"_index":2108,"title":{},"body":{"coverage.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:12",{"_index":2357,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:15",{"_index":2358,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:18",{"_index":2359,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:21",{"_index":2360,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:24",{"_index":2361,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:27",{"_index":2362,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:30",{"_index":2363,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:33",{"_index":2364,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:36",{"_index":2365,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:39",{"_index":2366,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:42",{"_index":2367,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:45",{"_index":2368,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:48",{"_index":2369,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:6",{"_index":2355,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/_parts/inetorgperson.part.ts:9",{"_index":2356,"title":{},"body":{"classes/inetOrgPerson.html":{}}}],["src/management/identities/_schemas/identities.schema.ts",{"_index":1309,"title":{},"body":{"classes/Identities.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:14",{"_index":1318,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:17",{"_index":1316,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:20",{"_index":1314,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_schemas/identities.schema.ts:23",{"_index":1312,"title":{},"body":{"classes/Identities.html":{}}}],["src/management/identities/_stubs/_parts/addtionalfields.dto.stub.ts",{"_index":2109,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/_parts/inetorgperson.dto.stub.ts",{"_index":2111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/_stubs/identities.dto.stub.ts",{"_index":2113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/identities.controller.ts",{"_index":1329,"title":{},"body":{"controllers/IdentitiesController.html":{},"coverage.html":{}}}],["src/management/identities/identities.controller.ts:120",{"_index":1338,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:148",{"_index":1335,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:172",{"_index":1341,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:195",{"_index":1337,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:52",{"_index":1333,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.controller.ts:86",{"_index":1344,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["src/management/identities/identities.module.ts",{"_index":1439,"title":{},"body":{"modules/IdentitiesModule.html":{},"coverage.html":{}}}],["src/management/identities/identities.service.ts",{"_index":1475,"title":{},"body":{"injectables/IdentitiesService.html":{},"coverage.html":{}}}],["src/management/identities/identities.service.ts:12",{"_index":1477,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/identities.service.ts:90",{"_index":1480,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["src/management/identities/validations/_config/${key}.yml",{"_index":1598,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/_config/validschema.ts",{"_index":2117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts",{"_index":1032,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"coverage.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:10",{"_index":1034,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:14",{"_index":1039,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:17",{"_index":1036,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:22",{"_index":1048,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:25",{"_index":1047,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:28",{"_index":1046,"title":{},"body":{"classes/ConfigObjectObjectClassDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:34",{"_index":1052,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:38",{"_index":1051,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{}}}],["src/management/identities/validations/_dto/config.dto.ts:7",{"_index":1035,"title":{},"body":{"classes/ConfigObjectAttributeDTO.html":{}}}],["src/management/identities/validations/_enums/config.object.ts",{"_index":2188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/management/identities/validations/_stubs/identities.validation.stub.ts",{"_index":2118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts",{"_index":1517,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"coverage.html":{}}}],["src/management/identities/validations/identities.validation.controller.ts:17",{"_index":1521,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["src/management/identities/validations/identities.validation.module.ts",{"_index":1537,"title":{},"body":{"modules/IdentitiesValidationModule.html":{}}}],["src/management/identities/validations/identities.validation.service.ts",{"_index":1539,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"coverage.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:101",{"_index":1554,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:18",{"_index":1558,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:19",{"_index":1559,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:20",{"_index":1545,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/identities/validations/identities.validation.service.ts:33",{"_index":1547,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["src/management/management.controller.ts",{"_index":1808,"title":{},"body":{"controllers/ManagementController.html":{},"coverage.html":{}}}],["src/management/management.module.ts",{"_index":1816,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.module.ts:13",{"_index":1817,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/management/management.service.ts",{"_index":1820,"title":{},"body":{"injectables/ManagementService.html":{},"coverage.html":{}}}],["src/management/management.service.ts:4",{"_index":1821,"title":{},"body":{"injectables/ManagementService.html":{}}}],["src/swagger.ts",{"_index":2128,"title":{},"body":{"coverage.html":{}}}],["stabilit",{"_index":2622,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stack",{"_index":1650,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["standards",{"_index":2576,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["start",{"_index":910,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["startat",{"_index":892,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["started",{"_index":2202,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1453,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["state",{"_index":347,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["state.enum",{"_index":1976,"title":{},"body":{"classes/StatePart.html":{}}}],["state.enum.ts",{"_index":2100,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["statepart",{"_index":360,"title":{"classes/StatePart.html":{}},"body":{"classes/Agents.html":{},"classes/StatePart.html":{},"coverage.html":{}}}],["statepartdto",{"_index":499,"title":{"classes/StatePartDTO.html":{}},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/StatePartDTO.html":{},"coverage.html":{}}}],["statepartschema",{"_index":361,"title":{},"body":{"classes/Agents.html":{},"classes/StatePart.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":452,"title":{},"body":{"controllers/AgentsController.html":{},"modules/CoreModule.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"modules/ManagementModule.html":{}}}],["status",{"_index":589,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/BackendsController.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesValidationFilter.html":{}}}],["statuscode",{"_index":461,"title":{},"body":{"controllers/AgentsController.html":{},"classes/AllExceptionFilter.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"controllers/KeyringsController.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{}}}],["statut",{"_index":3241,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["stepper",{"_index":3021,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["steps",{"_index":2190,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stock",{"_index":2778,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stockage",{"_index":2565,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["stocker",{"_index":2260,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["stockés",{"_index":2285,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["stop",{"_index":1843,"title":{},"body":{"classes/MongoDbTestInstance.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["strategy",{"_index":1711,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["streamkits/nestjs_module_scrud",{"_index":442,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"dependencies.html":{}}}],["strict",{"_index":1616,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["string",{"_index":40,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedFilterDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"interfaces/ValidationRecursive.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/enumerations.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["string})@apideletedresponsedecorator(agentsdto",{"_index":406,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apideletedresponsedecorator(formdto",{"_index":1182,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apideletedresponsedecorator(identitiesdto",{"_index":1336,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apideletedresponsedecorator(keyringsdto",{"_index":1743,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apireadresponsedecorator(agentsdto",{"_index":402,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apireadresponsedecorator(formdto",{"_index":1180,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apireadresponsedecorator(identitiesdto",{"_index":1334,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["string})@apireadresponsedecorator(keyringsdto",{"_index":1741,"title":{},"body":{"controllers/KeyringsController.html":{}}}],["string})@apiupdatedecorator(agentsupdatedto",{"_index":417,"title":{},"body":{"controllers/AgentsController.html":{}}}],["string})@apiupdatedecorator(formupdatedto",{"_index":1186,"title":{},"body":{"controllers/FormController.html":{}}}],["string})@apiupdatedecorator(identitiesupdatedto",{"_index":1340,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["structure",{"_index":1681,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["structures",{"_index":3135,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["stub",{"_index":2781,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["stubs",{"_index":2731,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["style",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stylesrc",{"_index":1006,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["subject",{"_index":862,"title":{},"body":{"injectables/AuthService.html":{}}}],["submit",{"_index":3129,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitapiurl",{"_index":1153,"title":{},"body":{"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["submitbuttontext",{"_index":1154,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["succeeded",{"_index":1611,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["succeeds",{"_index":1550,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["successful",{"_index":1455,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["succès",{"_index":1372,"title":{},"body":{"controllers/IdentitiesController.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suite",{"_index":2951,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["suites",{"_index":2620,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["suivantes",{"_index":2783,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["suivants",{"_index":3061,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suivez",{"_index":3174,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["summary",{"_index":950,"title":{},"body":{"controllers/BackendsController.html":{}}}],["supann",{"_index":1426,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supann.yml",{"_index":3218,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannaliaslogin",{"_index":1427,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["supannbirthdate",{"_index":3227,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannbirthname\"options",{"_index":3263,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supanncivilite",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannempid",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supannentiteaffectationprincipale",{"_index":1429,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{}}}],["super",{"_index":456,"title":{},"body":{"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"interfaces/ValidationRecursive.html":{}}}],["super(configservice",{"_index":973,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["super(context",{"_index":215,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["super(message",{"_index":2006,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super(payload",{"_index":2012,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["super.canactivate(context",{"_index":737,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["super.create(data",{"_index":1485,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.debug(...[message",{"_index":1668,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.delete(_id",{"_index":1515,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.error('failed",{"_index":1642,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.error(...[message",{"_index":1660,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.fatal(...[message",{"_index":1674,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log('initializing",{"_index":1635,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.log(...[message",{"_index":1666,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.update(_id",{"_index":1512,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.upsert",{"_index":1509,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["super.verbose(...[message",{"_index":1671,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["super.warn(...[message",{"_index":1663,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["supplémentaires",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["support",{"_index":2408,"title":{},"body":{"modules.html":{}}}],["supportant",{"_index":2883,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["supprime",{"_index":2794,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["supprimer",{"_index":3102,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["sur",{"_index":2869,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["suspendedat",{"_index":1728,"title":{},"body":{"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendedreason",{"_index":1965,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["suspendeduntil",{"_index":1966,"title":{},"body":{"classes/StatePart.html":{},"classes/StatePartDTO.html":{}}}],["svg",{"_index":2409,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":990,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"coverage.html":{}}}],["swagger/json",{"_index":1028,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggercustomoptions",{"_index":992,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["swaggeroptions",{"_index":1029,"title":{},"body":{"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["symbol('autoincrementidskip",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synced",{"_index":2198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synchronisation",{"_index":2205,"title":{},"body":{"index.html":{},"properties.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["synchroniser",{"_index":2582,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["syncronisation",{"_index":3235,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["system",{"_index":1649,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["système",{"_index":2290,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["sécurisée",{"_index":2593,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurisées",{"_index":2590,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["sécurit",{"_index":2586,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["séparés",{"_index":2777,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["séquentiels",{"_index":2921,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["sésame",{"_index":2203,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["t",{"_index":171,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["t>>(filter",{"_index":223,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["table",{"_index":2130,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur.html":{}}}],["tableau",{"_index":1401,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tableaux",{"_index":2920,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2129,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":2191,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tant",{"_index":3264,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tapes",{"_index":3038,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["target",{"_index":1625,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["tat",{"_index":3221,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tats",{"_index":3057,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["tbd",{"_index":3253,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tdata",{"_index":1915,"title":{},"body":{"classes/PaginatedResponseDto.html":{}}}],["teaket",{"_index":856,"title":{},"body":{"injectables/AuthService.html":{}}}],["technique",{"_index":2646,"title":{"additional-documentation/documentation-technique.html":{}},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["techniques",{"_index":2585,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["technologies",{"_index":2278,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tel",{"_index":2553,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["telephonenumber",{"_index":2351,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["telles",{"_index":3136,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tels",{"_index":2272,"title":{},"body":{"index.html":{}}}],["template",{"_index":3256,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["temporaire",{"_index":2791,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tendez",{"_index":2714,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["tendu",{"_index":2721,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["test",{"_index":929,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"controllers/BackendsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["test.createtestingmodule",{"_index":2814,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testclass",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teste",{"_index":2844,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tester",{"_index":2749,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["testingmodule",{"_index":2813,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["tests",{"_index":2616,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["texte",{"_index":3072,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["thirdpartyauth",{"_index":348,"title":{},"body":{"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{}}}],["this._model",{"_index":216,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter",{"_index":226,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.countdocuments(filter).exec",{"_index":247,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find",{"_index":222,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.find>(filter",{"_index":248,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyid>(_id",{"_index":258,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findbyidanddelete",{"_index":314,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._model.findone",{"_index":1500,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this._model.findone>(filter",{"_index":262,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this._options.mongoose.options",{"_index":1639,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this._req",{"_index":131,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this._service.create(body",{"_index":459,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.delete(_id",{"_index":479,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findandcount",{"_index":468,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.findbyid(_id",{"_index":474,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["this._service.update(_id",{"_index":477,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["this._service.upsert(body",{"_index":1383,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["this._service.validate(body",{"_index":1525,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["this._validation.validate(data.additionalfields",{"_index":1492,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.access_token_expires_in",{"_index":861,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.access_token_prefix",{"_index":871,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.agentsservice.findone",{"_index":845,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ajv.compile(validschema",{"_index":1571,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.ajv.errorstext(this.validateschema.errors",{"_index":1607,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.appservice.getinfo",{"_index":607,"title":{},"body":{"controllers/AppController.html":{}}}],["this.auth.authenticatewithlocal(username",{"_index":1786,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.auth.verifyidentity(payload",{"_index":1723,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.backendsservice.alive",{"_index":959,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.backendsservice.list",{"_index":955,"title":{},"body":{"controllers/BackendsController.html":{}}}],["this.commonlogdb",{"_index":1655,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection",{"_index":1640,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.connection.collection('logs').insertone",{"_index":1686,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.constructor.name",{"_index":143,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.constructor.name.replace(/controller",{"_index":57,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{}}}],["this.constructor.name.replace(/service",{"_index":148,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.createtokens(new",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createtokens(omit(identity.toobject",{"_index":878,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.dev_token_path",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.displayname",{"_index":379,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["this.eventemitter",{"_index":228,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.eventemitter?.emitasync",{"_index":230,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.getstatus",{"_index":2010,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.getvalidationerrors(exception",{"_index":1884,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["this.handlevalidationerror(error",{"_index":1495,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["this.inetorgperson.cn",{"_index":1451,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["this.initialize",{"_index":1644,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.isnew",{"_index":378,"title":{},"body":{"classes/Agents.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["this.jwtservice.decode(jwt",{"_index":879,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":860,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":52,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/IdentitiesValidationService.html":{}}}],["this.logger.debug(['count",{"_index":225,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['create",{"_index":270,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['delete",{"_index":311,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['find",{"_index":219,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findandcount",{"_index":227,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findbyid",{"_index":256,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['findone",{"_index":260,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['update",{"_index":288,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.debug(['upsert",{"_index":303,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.logger.error(`token",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`new",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`token",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.warn('dev",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.message",{"_index":2009,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.modulename.tolowercase",{"_index":231,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.moduleref",{"_index":50,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.mongoconnection",{"_index":1859,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.close",{"_index":1862,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.collections",{"_index":1865,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.dropdatabase",{"_index":1861,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongoconnection.model(name",{"_index":1867,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod",{"_index":1854,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.geturi",{"_index":1858,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.mongod.stop",{"_index":1863,"title":{},"body":{"classes/MongoDbTestInstance.html":{}}}],["this.name",{"_index":2007,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["this.package",{"_index":665,"title":{},"body":{"injectables/AppService.html":{}}}],["this.queue",{"_index":77,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add('exemple",{"_index":2724,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queue.add('listbackend",{"_index":975,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queue.add('ping",{"_index":982,"title":{},"body":{"injectables/BackendsService.html":{}}}],["this.queueevents",{"_index":81,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.queueevents.on('failed",{"_index":977,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis",{"_index":80,"title":{},"body":{"classes/AbstractQueueProcessor.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["this.redis.del([this.access_token_prefix",{"_index":883,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.del([this.refresh_token_prefix",{"_index":885,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.expire",{"_index":869,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.access_token_prefix",{"_index":851,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.get([this.refresh_token_prefix",{"_index":876,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.redis.set",{"_index":865,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.reflector.getallandoverride(meta_unprotected",{"_index":734,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.refresh_token_expires_in",{"_index":870,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.refresh_token_prefix",{"_index":866,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.request",{"_index":140,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request.path.split('/').slice(1).shift",{"_index":145,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{}}}],["this.request?.user?.username",{"_index":276,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.secretkey",{"_index":1942,"title":{},"body":{"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["this.service.clearsession(jwt.replace(/^bearer\\s",{"_index":718,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.createtokens(user",{"_index":708,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.getsessiondata(identity",{"_index":712,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.service.renewtokens(body.refresh_token",{"_index":715,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.servicename.tolowercase",{"_index":232,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["this.setloglevels(_options?.loglevel",{"_index":1633,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["this.state",{"_index":1458,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["this.username",{"_index":380,"title":{},"body":{"classes/Agents.html":{},"miscellaneous/variables.html":{}}}],["this.validateattribute(key",{"_index":1608,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema",{"_index":1570,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validateschema(schema",{"_index":1605,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["this.validationrecursive(error",{"_index":1111,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validationrecursive(errorchild",{"_index":1137,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["this.validations",{"_index":2008,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["throw",{"_index":141,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AuthService.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["ticket",{"_index":3014,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketform",{"_index":1986,"title":{"interfaces/TicketForm.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"coverage.html":{}}}],["ticketformfield",{"_index":1988,"title":{"interfaces/TicketFormField.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"coverage.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["ticketformsection",{"_index":1989,"title":{"interfaces/TicketFormSection.html":{}},"body":{"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"coverage.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tickets/form",{"_index":3030,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tierces",{"_index":2224,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiers",{"_index":2289,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["tiquette",{"_index":3051,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["title",{"_index":1155,"title":{},"body":{"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormUpdateDto.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["titre",{"_index":3031,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tk",{"_index":3019,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tkformtype",{"_index":3111,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tmodel",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["to_complete",{"_index":1359,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"miscellaneous/enumerations.html":{}}}],["to_create",{"_index":2199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to_sync",{"_index":1513,"title":{},"body":{"injectables/IdentitiesService.html":{},"miscellaneous/enumerations.html":{}}}],["to_validate",{"_index":1363,"title":{},"body":{"controllers/IdentitiesController.html":{},"miscellaneous/enumerations.html":{}}}],["todo",{"_index":136,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/IdentitiesService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"controllers/KeyringsController.html":{},"injectables/LocalStrategy.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":844,"title":{},"body":{"injectables/AuthService.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["token.json",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["token_path_separator",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":707,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["total",{"_index":467,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{},"classes/PaginatedResponseDto.html":{}}}],["totale",{"_index":2245,"title":{},"body":{"index.html":{}}}],["toujours",{"_index":3266,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tout",{"_index":2628,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["toutes",{"_index":2587,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["track",{"_index":914,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["tracker",{"_index":902,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackercollection",{"_index":893,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["trackermodelname",{"_index":894,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["traitement",{"_index":2685,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["traiter",{"_index":2695,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["transform",{"_index":1107,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transform(value",{"_index":1901,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["transformer",{"_index":517,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/MetadataDto.html":{},"dependencies.html":{}}}],["transformkeys",{"_index":3091,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["transformoptions",{"_index":1108,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["transport",{"_index":2173,"title":{},"body":{"dependencies.html":{}}}],["travers",{"_index":2642,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["tre",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tree",{"_index":465,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/KeyringsController.html":{}}}],["trim",{"_index":1117,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["tronque",{"_index":3296,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["trouve",{"_index":2765,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["true",{"_index":297,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePart.html":{},"interfaces/ValidationRecursive.html":{},"classes/inetOrgPerson.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["true})@apiproperty({type",{"_index":494,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/SecurityPartDTO.html":{}}}],["true})@isip(4",{"_index":1758,"title":{},"body":{"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{}}}],["true})@isoptional()@apiproperty({type",{"_index":1946,"title":{},"body":{"classes/SecurityPartDTO.html":{}}}],["true})@isoptional()@type(undefined)@apiproperty({type",{"_index":1288,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["true})@type(undefined",{"_index":1050,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["true})@type(undefined)@apiproperty({type",{"_index":1284,"title":{},"body":{"classes/FormSectionDto.html":{}}}],["truncate",{"_index":3295,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["try",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["ts",{"_index":1880,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["typage",{"_index":2268,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"classes/AbstractQueueProcessor.html":{},"classes/AbstractSchema.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/AgentsUpdateDto.html":{},"classes/AllExceptionFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"controllers/BackendsController.html":{},"injectables/BackendsService.html":{},"interfaces/ConfigInstance.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/ConsoleSession.html":{},"classes/CustomFieldsDto.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"controllers/FormController.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionDto.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/FormUpdateDto.html":{},"classes/Identities.html":{},"controllers/IdentitiesController.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/IdentitiesUpdateDto.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"classes/Keyrings.html":{},"controllers/KeyringsController.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"injectables/KeyringsService.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerService.html":{},"classes/MetadataDto.html":{},"classes/MetadataPart.html":{},"classes/MetadataPartDto.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{},"classes/MongooseValidationFilter.html":{},"classes/NotFoundDto.html":{},"injectables/ObjectIdValidationPipe.html":{},"classes/PaginatedResponseDto.html":{},"interfaces/RawBodyBufferOptions.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/StatePartDTO.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"classes/additionalFieldsPartDto.html":{},"coverage.html":{},"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["type.vue",{"_index":3020,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["typealiases",{"_index":2417,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":242,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":98,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AppService.html":{},"classes/ConsoleSession.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["types.objectid",{"_index":89,"title":{},"body":{"classes/AbstractSchema.html":{},"injectables/AbstractServiceSchema.html":{},"classes/Agents.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"classes/ConsoleSession.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/KeyringsController.html":{},"injectables/KeyringsService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ServiceSchemaInterface.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["types.objectid('000000000000000000000000",{"_index":1059,"title":{},"body":{"classes/ConsoleSession.html":{}}}],["types.objectid(value",{"_index":1909,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":1906,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["typescript",{"_index":45,"title":{},"body":{"classes/AbstractController.html":{},"interfaces/AbstractControllerContext.html":{},"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"interfaces/ConfigInstance.html":{},"interfaces/MongoosePlugin.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["têtes",{"_index":3149,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["u2fkey",{"_index":1934,"title":{},"body":{"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{}}}],["uid",{"_index":2352,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["un",{"_index":1400,"title":{},"body":{"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unauthorizedexception",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":180,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"injectables/AgentsService.html":{},"classes/ErrorSchemaDto.html":{},"classes/Form.html":{},"classes/FormFieldPart.html":{},"classes/FormSectionPart.html":{},"injectables/FormService.html":{},"classes/Identities.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"injectables/IdentitiesService.html":{},"classes/Keyrings.html":{},"injectables/KeyringsService.html":{},"classes/NotFoundDto.html":{},"classes/PaginatedResponseDto.html":{},"classes/SecurityPart.html":{},"classes/SecurityPartDTO.html":{},"interfaces/ServiceSchemaInterface.html":{},"classes/StatePart.html":{},"classes/additionalFieldsPartDto.html":{},"miscellaneous/variables.html":{}}}],["une",{"_index":1587,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["unhandled",{"_index":1469,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["uniforme",{"_index":2918,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unique",{"_index":354,"title":{},"body":{"classes/Agents.html":{},"classes/Keyrings.html":{},"classes/inetOrgPerson.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["uniquement",{"_index":2825,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["uniques",{"_index":2916,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["unknown",{"_index":584,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/BackendsService.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{},"classes/MongoDbTestInstance.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["unnecessarylocalvariablejs",{"_index":1511,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["unprotected",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["update",{"_index":162,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["update(_id",{"_index":192,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"controllers/AgentsController.html":{},"injectables/AgentsService.html":{},"controllers/FormController.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["update.decorator",{"_index":428,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/FormController.html":{},"controllers/IdentitiesController.html":{}}}],["update.decorator.ts",{"_index":2046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["update?.$set",{"_index":294,"title":{},"body":{"injectables/AbstractServiceSchema.html":{}}}],["updateassertions",{"_index":2092,"title":{},"body":{"coverage.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateassertions(service",{"_index":2851,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updated",{"_index":291,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/IdentitiesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedata",{"_index":2849,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedidentitydata",{"_index":2787,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatedstub",{"_index":2805,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateerrorassertions",{"_index":2093,"title":{},"body":{"coverage.html":{}}}],["updateerrorassertions(service",{"_index":2852,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updateoptions",{"_index":2850,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["updatequery",{"_index":193,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["updating",{"_index":1504,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["uppercase",{"_index":3325,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["upsert",{"_index":163,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"injectables/KeyringsService.html":{}}}],["upsert(data",{"_index":1482,"title":{},"body":{"injectables/IdentitiesService.html":{}}}],["upsert(filter",{"_index":195,"title":{},"body":{"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/FormService.html":{},"injectables/KeyringsService.html":{}}}],["upsert(res",{"_index":1342,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["uri",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"classes/MongoDbTestInstance.html":{},"interfaces/MongoosePlugin.html":{}}}],["url",{"_index":643,"title":{},"body":{"modules/AppModule.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["url.example",{"_index":3322,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["use",{"_index":896,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":918,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{},"miscellaneous/typealiases.html":{}}}],["usefactory",{"_index":557,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{}}}],["usefilters(new",{"_index":1354,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["useguards",{"_index":692,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BackendsController.html":{}}}],["useguards(authguard('api",{"_index":952,"title":{},"body":{"controllers/BackendsController.html":{}}}],["useguards(authguard('jwt",{"_index":710,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard('local",{"_index":705,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":129,"title":{},"body":{"injectables/AbstractService.html":{},"interfaces/AbstractServiceContext.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/ConfigInstance.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/MongoosePlugin.html":{}}}],["user.state.current",{"_index":1787,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usercertificate",{"_index":2353,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["username",{"_index":349,"title":{},"body":{"classes/Agents.html":{},"controllers/AgentsController.html":{},"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"injectables/AuthService.html":{},"classes/ConsoleSession.html":{},"injectables/LocalStrategy.html":{}}}],["userpassword",{"_index":2354,"title":{},"body":{"classes/inetOrgPerson.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["usevalue",{"_index":2817,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utf",{"_index":667,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{}}}],["utf8",{"_index":1604,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["utilis",{"_index":2803,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisables",{"_index":2824,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisant",{"_index":2574,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisateur",{"_index":2297,"title":{"additional-documentation/documentation-utilisateur.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilisateurs",{"_index":2612,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["utilisation",{"_index":2276,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilise",{"_index":2255,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["utiliser",{"_index":2614,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["utilisée",{"_index":2696,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisées",{"_index":2279,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilisés",{"_index":2760,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["utilitaire",{"_index":2863,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["utilitaires",{"_index":2727,"title":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}},"body":{}}],["va",{"_index":2907,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["valeur",{"_index":3209,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeur.example",{"_index":3297,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valeurs",{"_index":2885,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valid",{"_index":3197,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validadditionalfieldsstub",{"_index":2124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":1519,"title":{},"body":{"controllers/IdentitiesValidationController.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(_",{"_index":1704,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(data",{"_index":1546,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validate(res",{"_index":1520,"title":{},"body":{"controllers/IdentitiesValidationController.html":{}}}],["validateattribute",{"_index":1544,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validateattribute(key",{"_index":1552,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["validatenested",{"_index":510,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/MetadataDto.html":{}}}],["validatenested()@apiproperty",{"_index":1244,"title":{},"body":{"classes/FormFieldDto.html":{}}}],["validatenested()@type(undefined)@apiproperty({type",{"_index":497,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested()@type(undefined)@isnotempty()@apiproperty({type",{"_index":500,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{}}}],["validatenested({each",{"_index":1049,"title":{},"body":{"classes/ConfigObjectSchemaDTO.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{}}}],["validates",{"_index":1548,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validateschema",{"_index":1543,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validating",{"_index":1541,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validation",{"_index":1115,"title":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["validation.filter",{"_index":1353,"title":{},"body":{"controllers/IdentitiesController.html":{}}}],["validation.filter.ts",{"_index":1527,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/MongooseValidationFilter.html":{},"coverage.html":{}}}],["validation.filter.ts:34",{"_index":1875,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.filter.ts:7",{"_index":1529,"title":{},"body":{"classes/IdentitiesValidationFilter.html":{}}}],["validation.filter.ts:8",{"_index":1873,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validation.pipe",{"_index":436,"title":{},"body":{"controllers/AgentsController.html":{},"controllers/IdentitiesController.html":{},"controllers/KeyringsController.html":{}}}],["validation.pipe.ts",{"_index":1095,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["validation.pipe.ts:14",{"_index":2016,"title":{},"body":{"interfaces/ValidationRecursive.html":{}}}],["validation.pipe.ts:19",{"_index":1099,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:51",{"_index":1102,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["validation.pipe.ts:7",{"_index":1904,"title":{},"body":{"injectables/ObjectIdValidationPipe.html":{}}}],["validationconfigexception",{"_index":1444,"title":{"classes/ValidationConfigException.html":{}},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{}}}],["validationconfigexception(error.getpayload",{"_index":1463,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["validationerror",{"_index":1101,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationexception",{"_index":1528,"title":{"classes/ValidationException.html":{}},"body":{"classes/IdentitiesValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{}}}],["validationexception:18",{"_index":1998,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:22",{"_index":1997,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexception:9",{"_index":1996,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationSchemaException.html":{}}}],["validationexceptionpayload",{"_index":1994,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"miscellaneous/typealiases.html":{}}}],["validationpipe",{"_index":1096,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validationrecursive",{"_index":1097,"title":{"interfaces/ValidationRecursive.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{},"coverage.html":{}}}],["validationrecursive(error",{"_index":1100,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations",{"_index":322,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"injectables/DtoValidationPipe.html":{},"classes/ErrorSchemaDto.html":{},"controllers/IdentitiesController.html":{},"injectables/IdentitiesService.html":{},"controllers/IdentitiesValidationController.html":{},"classes/IdentitiesValidationFilter.html":{},"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"interfaces/ValidationRecursive.html":{},"classes/ValidationSchemaException.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["validations/identities.validation.module",{"_index":1443,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validations/identities.validation.service",{"_index":1349,"title":{},"body":{"controllers/IdentitiesController.html":{},"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["validations[`${key}.${property",{"_index":1890,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[`${prefix",{"_index":1127,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"interfaces/ValidationRecursive.html":{}}}],["validations[attribute",{"_index":1579,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validations[err.path",{"_index":1893,"title":{},"body":{"classes/MongooseValidationFilter.html":{}}}],["validations[key",{"_index":1584,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"classes/MongooseValidationFilter.html":{}}}],["validationschemaexception",{"_index":1445,"title":{"classes/ValidationSchemaException.html":{}},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{},"injectables/IdentitiesValidationService.html":{},"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{},"coverage.html":{}}}],["validationschemaexception(error.getpayload",{"_index":1468,"title":{},"body":{"modules/IdentitiesModule.html":{},"injectables/IdentitiesService.html":{}}}],["validationservice",{"_index":1448,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validationservice.validate(this.additionalfields",{"_index":1454,"title":{},"body":{"modules/IdentitiesModule.html":{}}}],["validator",{"_index":516,"title":{},"body":{"classes/AgentsCreateDto.html":{},"classes/AgentsDto.html":{},"classes/AgentsUpdateDto.html":{},"classes/ConfigObjectAttributeDTO.html":{},"classes/ConfigObjectObjectClassDTO.html":{},"classes/ConfigObjectSchemaDTO.html":{},"classes/CustomFieldsDto.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormSectionDto.html":{},"classes/FormUpdateDto.html":{},"classes/IdentitiesCreateDto.html":{},"classes/IdentitiesDto.html":{},"classes/IdentitiesUpdateDto.html":{},"classes/KeyringsCreateDto.html":{},"classes/KeyringsDto.html":{},"classes/MetadataDto.html":{},"classes/MetadataPartDto.html":{},"classes/MongooseValidationFilter.html":{},"classes/SecurityPartDTO.html":{},"classes/StatePartDTO.html":{},"dependencies.html":{},"classes/inetOrgPersonCreateDto.html":{},"classes/inetOrgPersonDto.html":{},"classes/inetOrgPersonUpdateDto.html":{}}}],["valide",{"_index":1590,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["valider",{"_index":2969,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["valides",{"_index":1594,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["validschema",{"_index":1567,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validschemastub",{"_index":2125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validés",{"_index":3202,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["value",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AutoIncrementPluginOptions.html":{},"classes/ConsoleSession.html":{},"injectables/DtoValidationPipe.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"injectables/IdentitiesValidationService.html":{},"injectables/ObjectIdValidationPipe.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["value.type",{"_index":335,"title":{},"body":{"classes/AdditionalFieldsPart.html":{},"classes/Agents.html":{},"classes/CustomFieldsDto.html":{},"classes/Form.html":{},"classes/FormCreateDto.html":{},"classes/FormDto.html":{},"classes/FormFieldDto.html":{},"classes/FormFieldPart.html":{},"classes/FormUpdateDto.html":{},"controllers/IdentitiesController.html":{},"controllers/IdentitiesValidationController.html":{},"interfaces/TicketForm.html":{},"interfaces/TicketFormField.html":{},"interfaces/TicketFormSection.html":{}}}],["value.type.ts",{"_index":2424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["variabilit",{"_index":2567,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["variable",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2324,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["venir",{"_index":3246,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbe",{"_index":3185,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["verbose",{"_index":1670,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verbose(message",{"_index":1669,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["verifiedcallback",{"_index":1706,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["verify",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyidentity(payload",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["vers",{"_index":2225,"title":{},"body":{"index.html":{}}}],["version",{"_index":670,"title":{},"body":{"injectables/AppService.html":{},"classes/MongoDbTestInstance.html":{},"properties.html":{}}}],["versionkey",{"_index":370,"title":{},"body":{"classes/Agents.html":{},"classes/Form.html":{},"classes/Identities.html":{},"classes/Keyrings.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["versionn",{"_index":2640,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["versions",{"_index":2644,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["veuillez",{"_index":3033,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["via",{"_index":2248,"title":{},"body":{"index.html":{},"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vides",{"_index":3268,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vie",{"_index":2561,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["vise",{"_index":2549,"title":{},"body":{"additional-documentation/cahier-des-charges.html":{}}}],["voici",{"_index":2780,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["void",{"_index":377,"title":{},"body":{"classes/Agents.html":{},"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{},"injectables/LocalStrategy.html":{},"classes/MongooseValidationFilter.html":{},"classes/SecurityPart.html":{},"miscellaneous/variables.html":{}}}],["voir",{"_index":2677,"title":{},"body":{"additional-documentation/documentation-technique/demon.html":{}}}],["votre",{"_index":3240,"title":{},"body":{"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vous",{"_index":2960,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vpis",{"_index":3257,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue",{"_index":2680,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{},"additional-documentation/documentation-technique/formulaires-customs.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["vue.js",{"_index":3016,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénement",{"_index":3132,"title":{},"body":{"additional-documentation/documentation-technique/formulaires-customs.html":{}}}],["vénements",{"_index":2697,"title":{},"body":{"additional-documentation/documentation-technique/queue-processor-service.html":{}}}],["vérifie",{"_index":2826,"title":{},"body":{"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["wanting",{"_index":904,"title":{},"body":{"interfaces/AutoIncrementPluginOptions.html":{},"interfaces/AutoIncrementPluginTrackerSpec.html":{}}}],["warn",{"_index":1662,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["warn(message",{"_index":1661,"title":{},"body":{"interfaces/InternalLogOptions.html":{},"injectables/InternalLogger.html":{},"interfaces/InternalLoggerOptions.html":{}}}],["whitelistedheaders",{"_index":1923,"title":{},"body":{"interfaces/RawBodyBufferOptions.html":{}}}],["winston",{"_index":2158,"title":{},"body":{"dependencies.html":{}}}],["wrappertype",{"_index":2430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["writefilesync",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrong",{"_index":2011,"title":{},"body":{"classes/ValidationConfigException.html":{},"classes/ValidationException.html":{},"classes/ValidationSchemaException.html":{}}}],["x",{"_index":976,"title":{},"body":{"injectables/BackendsService.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{}}}],["y",{"_index":2217,"title":{},"body":{"index.html":{},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{}}}],["yaml",{"_index":1561,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["yes",{"_index":25,"title":{},"body":{"classes/AbstractController.html":{},"injectables/AbstractService.html":{},"injectables/AbstractServiceSchema.html":{},"injectables/AgentsService.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"injectables/IdentitiesService.html":{},"injectables/InternalLogger.html":{},"injectables/KeyringsService.html":{},"interfaces/ServiceSchemaInterface.html":{}}}],["yml",{"_index":2966,"title":{},"body":{"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yup",{"_index":1565,"title":{},"body":{"injectables/IdentitiesValidationService.html":{},"dependencies.html":{},"additional-documentation/documentation-technique/validation-des-identités.html":{}}}],["yupschema",{"_index":1612,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["yupschema.validate(attribute",{"_index":1615,"title":{},"body":{"injectables/IdentitiesValidationService.html":{}}}],["z",{"_index":3320,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["za",{"_index":3319,"title":{},"body":{"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{}}}],["zoom",{"_index":547,"title":{},"body":{"modules/AgentsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BackendsModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/IdentitiesModule.html":{},"modules/IdentitiesValidationModule.html":{},"modules/KeyringsModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractController.html":{"url":"classes/AbstractController.html","title":"class - AbstractController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                    Optional\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controllerName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractControllerContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractControllerContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.controller.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controllerName\n                    \n                \n\n                \n                    \n                        getcontrollerName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.controller.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerContext.html":{"url":"interfaces/AbstractControllerContext.html","title":"interface - AbstractControllerContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControllerContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.controller.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.controller.ts:6\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { ApiExtraModels } from '@nestjs/swagger';\nimport { PaginatedResponseDto } from '~/_common/dto/paginated-response.dto';\nimport { Logger } from '@nestjs/common';\n\nexport interface AbstractControllerContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n}\n\n@ApiExtraModels(PaginatedResponseDto)\nexport abstract class AbstractController {\n  protected logger: Logger;\n  protected moduleRef?: ModuleRef;\n\n  protected constructor(context?: AbstractControllerContext) {\n    this.moduleRef = context?.moduleRef;\n    this.logger = new Logger(this.controllerName);\n  }\n\n  public get controllerName(): string {\n    return this.constructor.name.replace(/Controller$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractQueueProcessor.html":{"url":"classes/AbstractQueueProcessor.html","title":"class - AbstractQueueProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractQueueProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.queue.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                queue\n                            \n                            \n                                    Protected\n                                    Readonly\n                                queueEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: ConfigService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.queue.processor.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { Queue, QueueEvents } from 'bullmq';\nimport Redis from 'ioredis';\n\nexport abstract class AbstractQueueProcessor {\n  protected readonly queue: Queue;\n  protected readonly queueEvents: QueueEvents;\n  public constructor(\n    protected readonly config: ConfigService,\n    protected readonly redis: Redis,\n  ) {\n    this.queue = new Queue(this.config.get('nameQueue'), {\n      connection: this.redis,\n    });\n    this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n      connection: this.redis,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractSchema.html":{"url":"classes/AbstractSchema.html","title":"class - AbstractSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/abstract.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    \n                                    Public\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId | any\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MetadataPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/abstract.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop } from '@nestjs/mongoose';\nimport { Types, Document } from 'mongoose';\nimport { MetadataPart, MetadataPartSchema } from '~/_common/abstracts/schemas/parts/metadata.part.schema';\n\nexport abstract class AbstractSchema extends Document {\n  public readonly _id: Types.ObjectId | any // eslint-disable-line\n\n  @Prop({ type: MetadataPartSchema })\n  public metadata: MetadataPart;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractService.html":{"url":"injectables/AbstractService.html","title":"injectable - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    request\n                                \n                                \n                                    moduleName\n                                \n                                \n                                    serviceName\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        request\n                    \n                \n\n                \n                    \n                        getrequest()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        moduleName\n                    \n                \n\n                \n                    \n                        getmoduleName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n\n                \n                    \n                        getserviceName()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.ts:43\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractServiceContext.html":{"url":"interfaces/AbstractServiceContext.html","title":"interface - AbstractServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            eventEmitter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            moduleRef\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            req\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string | number]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        eventEmitter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        eventEmitter:     EventEmitter2\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter2\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        moduleRef:     ModuleRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ModuleRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        req:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { Request } from 'express';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { RequestContext } from 'nestjs-request-context';\n\nexport interface AbstractServiceContext {\n  [key: string | number]: any; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n  moduleRef?: ModuleRef;\n  req?: Request & { user?: Express.User };\n  eventEmitter?: EventEmitter2;\n}\n\n@Injectable()\nexport abstract class AbstractService {\n  protected logger: Logger;\n  protected moduleRef: ModuleRef;\n  private readonly _req?: Request & { user?: Express.User & any } // eslint-disable-line\n  protected eventEmitter?: EventEmitter2;\n\n  protected constructor(context?: AbstractServiceContext) {\n    this.moduleRef = context?.moduleRef;\n    this._req = context?.req;\n    this.logger = new Logger(this.serviceName);\n  }\n\n  protected get request():\n    | (Request & {\n        user?: Express.User & any // eslint-disable-line\n      })\n    | null {\n    return this._req || RequestContext.currentContext?.req;\n  }\n\n  public get moduleName(): string {\n    //TODO: change modulename from module ref ?\n    if (!this.request) throw new Error('Request is not defined in ' + this.constructor.name);\n    const moduleName = this.request.path.split('/').slice(1).shift();\n    return moduleName.charAt(0).toUpperCase() + moduleName.slice(1);\n  }\n\n  public get serviceName(): string {\n    return this.constructor.name.replace(/Service$/, '');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractServiceSchema.html":{"url":"injectables/AbstractServiceSchema.html","title":"injectable - AbstractServiceSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AbstractServiceSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/abstract.service.schema.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(context?: AbstractServiceContext)\n                    \n                \n                        \n                            \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        AbstractServiceContext\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:149\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:304\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:32\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:82\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:115\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:191\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/abstract.service.schema.ts:248\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/abstract.service.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/_common/abstracts/abstract.service.schema.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport {\n  Document,\n  FilterQuery,\n  Model,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { EventEmitterSeparator } from '~/_common/constants/event-emitter.constant';\nimport { AbstractService, AbstractServiceContext } from './abstract.service';\nimport { ServiceSchemaInterface } from './interfaces/service.schema.interface';\nimport { AbstractSchema } from './schemas/abstract.schema';\n\n@Injectable()\nexport abstract class AbstractServiceSchema extends AbstractService implements ServiceSchemaInterface {\n  protected abstract _model: Model;\n\n  protected constructor(context?: AbstractServiceContext) {\n    super(context);\n  }\n\n  public get model(): Model {\n    return this._model;\n  }\n\n  /* eslint-disable */\n  public async find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]> {\n    //TODO: add event emitter\n    this.logger.debug(['find', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.find, T, any, T>>(filter, projection, options).exec()\n  }\n\n  public async count(filter?: FilterQuery, options?: QueryOptions): Promise {\n    //TODO: add event emitter\n    this.logger.debug(['count', JSON.stringify(Object.values(arguments))].join(' '))\n    return await this._model.countDocuments(filter, options).exec()\n  }\n\n  public async findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]> {\n    this.logger.debug(['findAndCount', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindAndCount'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      // noinspection DuplicatedCode\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let count = await this._model.countDocuments(filter).exec()\n    let data = await this._model.find>(filter, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { data, count },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n        if (afterEvent?.count) count += afterEvent.count\n      }\n    }\n    return [data, count]\n  }\n\n  public async findById(\n    _id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindById'].join(EventEmitterSeparator),\n        { _id, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findById>(_id, projection, options).exec()\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindById'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    return data\n  }\n\n  public async findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    this.logger.debug(['findOne', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeFindOne'].join(EventEmitterSeparator),\n        { filter, projection, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter }\n        if (beforeEvent?.projection) projection = { ...(typeof projection === 'object' ? projection : {}), ...beforeEvent.projection }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let data = await this._model.findOne>(filter, projection, options).exec()\n    if (!data) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindOne'].join(EventEmitterSeparator),\n        { data },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.data) data = { ...data, ...afterEvent.data }\n      }\n    }\n    return data\n  }\n\n  public async create(data?: any, options?: SaveOptions): Promise> {\n    const logInfos = Object.values({\n      ...arguments,\n      1: {\n        ...arguments[1],\n        session: typeof arguments[1] === 'object' && 'session' in arguments[1] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['create', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeCreate'].join(EventEmitterSeparator),\n        { data, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) data = { ...data, ...beforeEvent.data }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    const document: Document = new this._model({\n      metadata: {\n        createdBy: this.request?.user?.username || 'anonymous',\n        createdAt: new Date(),\n        lastUpdatedBy: this.request?.user?.username || 'anonymous',\n        lastUpdatedAt: new Date(),\n      },\n      ...data,\n    })\n    let created = document.save(options)\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { created },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.created) created = { ...created, ...afterEvent.created }\n      }\n    }\n    return created\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions,\n  ): Promise>> {\n    const logInfos = Object.values({\n      ...arguments,\n      2: {\n        ...arguments[2],\n        session: typeof arguments[2] === 'object' && 'session' in arguments[2] ? 'session' : undefined,\n      },\n    })\n    this.logger.debug(['update', JSON.stringify(logInfos)].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpdate'].join(EventEmitterSeparator),\n        { _id, update, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.data) update = { ...update, ...beforeEvent.update }\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let updated = await this._model\n      .findByIdAndUpdate>(\n        { _id },\n        {\n          ...update,\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec()\n    if (!updated) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { updated },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.updated) updated = { ...updated, ...afterEvent.updated }\n      }\n    }\n    return updated\n  }    \n\n  public async upsert(\n  filter: FilterQuery,\n  update: UpdateQuery,\n  options?: QueryOptions\n  ): Promise>> {\n    this.logger.debug(['upsert', JSON.stringify(Object.values(arguments))].join(' '));\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeUpsert'].join(EventEmitterSeparator),\n        { filter, update, options },\n      );\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop;\n        if (beforeEvent?.filter) filter = { ...filter, ...beforeEvent.filter };\n        if (beforeEvent?.update) update = { ...update, ...beforeEvent.update };\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options };\n      }\n    }\n    let result = await this._model\n      .findOneAndUpdate>(\n        filter,\n        {\n          ...update,\n          $set: {\n            ...(update?.$set || {}),\n            'metadata.lastUpdatedBy': this.request?.user?.username || 'anonymous',\n            'metadata.lastUpdatedAt': new Date(),\n          }\n        },\n        {\n          upsert: true,\n          new: true,\n          runValidators: true,\n          ...options,\n        } as QueryOptions & { includeResultMetadata: true },\n      )\n      .exec();\n\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterUpsert'].join(EventEmitterSeparator),\n        { result },\n      );\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.result) result = { ...result, ...afterEvent.result };\n      }\n    }\n\n    if (!result) {\n      throw new NotFoundException();\n    }\n\n    return result;\n  }\n  \n\n  public async delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise> {\n    this.logger.debug(['delete', JSON.stringify(Object.values(arguments))].join(' '))\n    if (this.eventEmitter) {\n      const beforeEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'beforeDelete'].join(EventEmitterSeparator),\n        { _id, options },\n      )\n      for (const beforeEvent of beforeEvents) {\n        if (beforeEvent?.stop) throw beforeEvent?.stop\n        if (beforeEvent?.options) options = { ...options, ...beforeEvent.options }\n      }\n    }\n    let deleted = await this._model.findByIdAndDelete>({ _id }, options).exec()\n    if (!deleted) {\n      this.logger.debug(['findById', JSON.stringify(Object.values(arguments))].join(' '))\n      throw new NotFoundException()}\n    if (this.eventEmitter) {\n      const afterEvents = await this.eventEmitter?.emitAsync(\n        [this.moduleName.toLowerCase(), this.serviceName.toLowerCase(), 'service', 'afterFindAndCount'].join(EventEmitterSeparator),\n        { deleted },\n      )\n      for (const afterEvent of afterEvents) {\n        if (afterEvent?.deleted) deleted = { ...deleted, ...afterEvent.deleted }\n      }\n    }\n    return deleted\n  }\n\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdditionalFieldsPart.html":{"url":"classes/AdditionalFieldsPart.html","title":"class - AdditionalFieldsPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdditionalFieldsPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                            \n                                    \n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Array, of: String, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/additionalFields.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\n@Schema({ _id: false })\nexport class AdditionalFieldsPart {\n  @Prop({ type: Array, of: String, required: true, default: ['inetOrgPerson'] })\n  objectClasses: string[];\n\n  @Prop({ type: Object, required: true })\n  attributes: Record;\n\n  @Prop({ type: Object, required: false })\n  validations?: Record;\n}\n\nexport const AdditionalFieldsPartSchema = SchemaFactory.createForClass(AdditionalFieldsPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Agents.html":{"url":"classes/Agents.html","title":"class - Agents","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Agents\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/agents.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                baseURL\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                            \n                                    \n                                    Public\n                                displayName\n                            \n                            \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    Public\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: '/'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: SecurityPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StatePartSchema, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, default: DEFAULT_THIRD_PARTY_AUTH})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/agents.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { StatePart, StatePartSchema } from '~/core/agents/_schemas/parts/state.part.schema';\nimport { SecurityPart, SecurityPartSchema } from '~/core/agents/_schemas/parts/security.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nconst DEFAULT_THIRD_PARTY_AUTH = 'local';\n\n@Schema({ versionKey: false })\nexport class Agents extends AbstractSchema {\n  // @Prop({\n  //   type: Types.ObjectId,\n  //   required: true,\n  //   unique: true,\n  // })\n  // public entityId: Types.ObjectId\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public username: string;\n\n  @Prop({\n    type: String,\n  })\n  public displayName: string;\n\n  @Prop({\n    type: String,\n    required: true,\n    unique: true,\n  })\n  public email: string;\n\n  @Prop({\n    type: String,\n    required: true,\n  })\n  public password: string;\n\n  @Prop({\n    type: String,\n    default: DEFAULT_THIRD_PARTY_AUTH,\n  })\n  public thirdPartyAuth: string;\n\n  @Prop({\n    type: StatePartSchema,\n    required: true,\n    default: {},\n  })\n  public state: StatePart;\n\n  @Prop({\n    type: String,\n    default: '/',\n  })\n  public baseURL: string;\n\n  @Prop({\n    type: SecurityPartSchema,\n  })\n  public security: SecurityPart;\n\n  @Prop({\n    type: Object,\n  })\n  public customFields?: { [key: string]: MixedValue };\n}\n\nexport const AgentsSchema = SchemaFactory.createForClass(Agents).pre(\n  'save',\n  function (this: Agents, next: () => void): void {\n    if (this.isNew) {\n      this.displayName = this.displayName || this.username;\n    }\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AgentsController.html":{"url":"controllers/AgentsController.html","title":"controller - AgentsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AgentsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                agents\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: AgentsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: AgentsUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/agents/agents.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AgentsUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { AgentsService } from './agents.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { AgentsCreateDto, AgentsDto, AgentsUpdateDto } from '~/core/agents/_dto/agents.dto';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\n\n@ApiTags('core')\n@Controller('agents')\nexport class AgentsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    // entityId: 1,\n    username: 1,\n    displayName: 1,\n    state: 1,\n    hidden: 1,\n  };\n\n  public constructor(private readonly _service: AgentsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(AgentsCreateDto, AgentsDto)\n  public async create(@Res() res: Response, @Body() body: AgentsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(AgentsDto, AgentsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      AgentsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(AgentsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      password: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(AgentsUpdateDto, AgentsDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: AgentsUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(AgentsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsCreateDto.html":{"url":"classes/AgentsCreateDto.html","title":"class - AgentsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsDto.html":{"url":"classes/AgentsDto.html","title":"class - AgentsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AgentsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                baseURL\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                hidden\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                security\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                state\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                thirdPartyAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                username\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/agents.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        baseURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:36\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:72\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:62\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        security\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SecurityPartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@ApiProperty({type: SecurityPartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:67\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StatePartDTO\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)@IsNotEmpty()@ApiProperty({type: StatePartDTO})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:52\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        thirdPartyAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AgentsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         AgentsCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AgentsModule.html":{"url":"modules/AgentsModule.html","title":"module - AgentsModule","body":"\n                   \n\n\n\n\n    Modules\n    AgentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/agents/agents.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AgentsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AgentsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AgentsSchema, Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from './agents.service';\nimport { AgentsController } from './agents.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Agents.name,\n        useFactory: () => AgentsSchema,\n      },\n    ]),\n  ],\n  providers: [AgentsService],\n  controllers: [AgentsController],\n  exports: [AgentsService],\n})\nexport class AgentsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AgentsService.html":{"url":"injectables/AgentsService.html","title":"injectable - AgentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AgentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/agents.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/agents/agents.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:42\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:149\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:304\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:32\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:82\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:115\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:248\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\n\n@Injectable()\nexport class AgentsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Agents.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AgentsUpdateDto.html":{"url":"classes/AgentsUpdateDto.html","title":"class - AgentsUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AgentsUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/agents.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(AgentsCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNotEmpty,\n  ValidateNested,\n  IsEmail,\n  IsBoolean,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StatePartDTO } from './parts/state.part.dto';\nimport { SecurityPartDTO } from './parts/security.part.dto';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class AgentsCreateDto extends CustomFieldsDto {\n  // @IsMongoId()\n  // @IsNotEmpty()\n  // @ApiProperty({ type: String })\n  // public entityId: string\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public username: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public displayName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public password: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public thirdPartyAuth?: string;\n\n  @ValidateNested()\n  @Type(() => StatePartDTO)\n  @IsNotEmpty()\n  @ApiProperty({ type: StatePartDTO })\n  public state: StatePartDTO;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public baseURL?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public roles: string[];\n\n  @ValidateNested()\n  @Type(() => SecurityPartDTO)\n  @ApiProperty({ type: SecurityPartDTO })\n  public security: SecurityPartDTO;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public hidden: boolean;\n}\n\nexport class AgentsDto extends AgentsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\nexport class AgentsUpdateDto extends PartialType(AgentsCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/all-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/all-exception.filter.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { Response } from 'express';\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    Logger.debug(exception['message'], 'AllExceptionFilter');\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = 500;\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception['message'] || exception['name'] || 'Internal server error',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Response\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Response } from 'express';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller()\nexport class AppController extends AbstractController {\n  constructor(private readonly appService: AppService) {\n    super();\n  }\n\n  @Get()\n  public getInfo(@Res() res: Response): Response {\n    return res.json({\n      ...this.appService.getInfo(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BullModule } from '@nestjs/bullmq';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { CoreModule } from './core/core.module';\nimport { ManagementModule } from './management/management.module';\nimport config, { MongoosePlugin } from './config';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { RedisModule } from '@nestjs-modules/ioredis';\nimport { RedisOptions } from 'ioredis';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { RequestContextModule } from 'nestjs-request-context';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [config],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => {\n        for (const plugin of config.get('mongoose.plugins')) {\n          import(plugin.package).then((plugin) => {\n            mongoose.plugin(plugin.default ? plugin.default : plugin, plugin.options);\n          });\n        }\n        return {\n          ...config.get('mongoose.options'),\n          uri: config.get('mongoose.uri'),\n        };\n      },\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (config: ConfigService) => ({\n        config: {\n          ...config.get('ioredis.options'),\n          url: config.get('ioredis.uri'),\n        },\n      }),\n    }),\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        connection: {\n          host: configService.get('ioredis.host'),\n          port: configService.get('ioredis.port'),\n        },\n      }),\n    }),\n    RequestContextModule,\n    CoreModule.register(),\n    ManagementModule.register(),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                package\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInfo()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Partial\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        package\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PackageJson } from 'types-package-json';\nimport { ModuleRef } from '@nestjs/core';\nimport { readFileSync } from 'fs';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { pick } from 'radash';\n\n@Injectable()\nexport class AppService extends AbstractService {\n  protected package: Partial;\n\n  public constructor(protected moduleRef: ModuleRef) {\n    super({ moduleRef });\n    this.package = JSON.parse(readFileSync('package.json', 'utf-8'));\n  }\n\n  public getInfo(): Partial {\n    return pick(this.package, ['name', 'version']);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                session\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(res: Response, user: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('local')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, jwt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    refresh(res: Response, body: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        session\n                        \n                    \n                \n            \n            \n                \n                        \n                    session(res: Response, identity: AgentType)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('session')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/auth/auth.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res, UseGuards, Headers, Get } from '@nestjs/common';\nimport { Public } from '~/_common/decorators/public.decorator';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ModuleRef } from '@nestjs/core';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\nimport { ReqIdentity } from '~/_common/decorators/params/req-identity.decorator';\nimport { AgentType } from '~/_common/types/agent.type';\n\n@Public()\n@ApiTags('core')\n@Controller('auth')\nexport class AuthController extends AbstractController {\n  constructor(\n    protected moduleRef: ModuleRef,\n    private readonly service: AuthService,\n  ) {\n    super();\n  }\n\n  @Post('local')\n  @UseGuards(AuthGuard('local'))\n  public async authenticateWithLocal(@Res() res: Response, @ReqIdentity() user: AgentType): Promise {\n    const tokens = await this.service.createTokens(user);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n      user,\n    });\n  }\n\n  @Get('session')\n  @UseGuards(AuthGuard('jwt'))\n  public async session(@Res() res: Response, @ReqIdentity() identity: AgentType): Promise {\n    const user = await this.service.getSessionData(identity);\n    return res.status(HttpStatus.OK).json({\n      user: {\n        ...user,\n      },\n    });\n  }\n\n  //TODO: change any\n  @Post('refresh')\n  public async refresh(@Res() res: Response, @Body() body: { refresh_token: string }): Promise {\n    const tokens = await this.service.renewTokens(body.refresh_token);\n    return res.status(HttpStatus.OK).json({\n      ...tokens,\n    });\n  }\n\n  @Post('logout')\n  public async logout(@Res() res: Response, @Headers('Authorization') jwt: string): Promise {\n    await this.service.clearSession(jwt.replace(/^Bearer\\s/, ''));\n    return res.status(HttpStatus.OK).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/guards/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardInternal(['jwt'])\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/_common/guards/auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/guards/auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard as AuthGuardInternal } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport { META_UNPROTECTED } from '~/_common/decorators/public.decorator';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardInternal(['jwt']) {\n  public constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  public canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const isUnprotected = this.reflector.getAllAndOverride(META_UNPROTECTED, [\n      context.getClass(),\n      context.getHandler(),\n    ]);\n    return isUnprotected || super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { IAuthModuleOptions, PassportModule } from '@nestjs/passport';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AgentsModule } from '~/core/agents/agents.module';\nimport { JwtModule, JwtModuleOptions } from '@nestjs/jwt';\nimport { JwtStrategy } from '~/core/auth/_strategies/jwt.strategy';\nimport { LocalStrategy } from '~/core/auth/_strategies/local.strategy';\n\n@Module({\n  imports: [\n    PassportModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('passport.options', {}),\n      }),\n    }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        ...configService.get('jwt.options', {}),\n      }),\n    }),\n    AgentsModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                ACCESS_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                ACCESS_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                DEV_TOKEN_PATH\n                            \n                            \n                                    Protected\n                                REFRESH_TOKEN_EXPIRES_IN\n                            \n                            \n                                    Protected\n                                    Readonly\n                                REFRESH_TOKEN_PREFIX\n                            \n                            \n                                    Protected\n                                    Readonly\n                                TOKEN_PATH_SEPARATOR\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticateWithLocal\n                            \n                            \n                                    Public\n                                    Async\n                                clearSession\n                            \n                            \n                                    Public\n                                    Async\n                                createTokens\n                            \n                            \n                                    Public\n                                    Async\n                                getSessionData\n                            \n                            \n                                    Public\n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Public\n                                    Async\n                                renewTokens\n                            \n                            \n                                    Public\n                                    Async\n                                verifyIdentity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(moduleRef: ModuleRef, agentsService: AgentsService, jwtService: JwtService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/auth.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        agentsService\n                                                  \n                                                        \n                                                                        AgentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticateWithLocal\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticateWithLocal(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        clearSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearSession(jwt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                jwt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTokens(identity: AgentType, refresh_token?: string | , options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refresh_token\n                                            \n                                                        string | \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        getSessionData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSessionData(identity: AgentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                identity\n                                            \n                                                            AgentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        renewTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    renewTokens(refresh_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        verifyIdentity\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyIdentity(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        ACCESS_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 5 * 60\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        ACCESS_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'access_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        DEV_TOKEN_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.dev-token.json'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        REFRESH_TOKEN_EXPIRES_IN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 3600 * 24 * 7\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        REFRESH_TOKEN_PREFIX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'refresh_token'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        TOKEN_PATH_SEPARATOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ':'\n                    \n                \n                    \n                        \n                                Defined in src/core/auth/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, OnModuleInit, UnauthorizedException } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\nimport { ModuleRef } from '@nestjs/core';\nimport { Redis } from 'ioredis';\nimport { randomBytes } from 'crypto';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\nimport { verify as argon2Verify } from 'argon2';\nimport { Agents } from '~/core/agents/_schemas/agents.schema';\nimport { AgentsService } from '~/core/agents/agents.service';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\nimport { JwtPayload } from 'jsonwebtoken';\nimport { JwtService } from '@nestjs/jwt';\nimport { resolve } from 'path';\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { ConsoleSession } from '~/_common/data/console-session';\n\n@Injectable()\nexport class AuthService extends AbstractService implements OnModuleInit {\n  protected readonly DEV_TOKEN_PATH = '.dev-token.json';\n  protected readonly TOKEN_PATH_SEPARATOR = ':';\n\n  protected readonly ACCESS_TOKEN_PREFIX = 'access_token';\n  protected readonly REFRESH_TOKEN_PREFIX = 'refresh_token';\n\n  protected ACCESS_TOKEN_EXPIRES_IN = 5 * 60;\n  protected REFRESH_TOKEN_EXPIRES_IN = 3600 * 24 * 7;\n\n  public constructor(\n    protected moduleRef: ModuleRef,\n    protected readonly agentsService: AgentsService,\n    private readonly jwtService: JwtService,\n    @InjectRedis() private readonly redis: Redis,\n  ) {\n    super();\n  }\n\n  public async onModuleInit(): Promise {\n    if (process.env.NODE_ENV !== 'production') {\n      this.logger.warn('DEV MODE ENABLED !');\n      const devTokenPath = resolve(process.cwd(), this.DEV_TOKEN_PATH);\n      if (existsSync(devTokenPath)) {\n        try {\n          const data = JSON.parse(readFileSync(devTokenPath, 'utf-8'));\n          if (data.access_token) {\n            this.logger.log(`TOKEN ALREADY EXIST : `);\n            return;\n          }\n        } catch (e) {\n          this.logger.error(`TOKEN FILE CORRUPTED ! REGENERATING...`);\n        }\n      }\n      const { access_token } = await this.createTokens(new ConsoleSession(), false, {\n        expiresIn: '1y',\n      });\n      writeFileSync(\n        devTokenPath,\n        JSON.stringify({\n          access_token,\n        }),\n      );\n\n      this.logger.log(`NEW TOKEN CREATED : `);\n    }\n  }\n\n  public async authenticateWithLocal(username: string, password: string): Promise {\n    try {\n      const user = await this.agentsService.findOne({ username });\n      console.log(user);\n      if (user && (await argon2Verify(user.password, password))) {\n        return user;\n      }\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  // eslint-disable-next-line\n  public async verifyIdentity(payload: any & { identity: AgentType }): Promise {\n    try {\n      if (payload.scopes.includes('offline')) {\n        return payload.identity;\n      }\n      const identity = await this.redis.get([this.ACCESS_TOKEN_PREFIX, payload.jti].join(':'));\n      if (identity) {\n        return JSON.parse(identity);\n      }\n    } finally {\n    }\n    return null;\n  }\n\n  public async createTokens(\n    identity: AgentType,\n    refresh_token?: string | false,\n    options?: any,\n  ): Promise {\n    const scopes = ['teaket'];\n    if (refresh_token === false) scopes.push('offline');\n    const jwtid = `${identity._id}_${randomBytes(16).toString('hex')}`;\n    const access_token = this.jwtService.sign(\n      { identity, scopes },\n      {\n        expiresIn: this.ACCESS_TOKEN_EXPIRES_IN,\n        jwtid,\n        subject: `${identity._id}`,\n        ...options,\n      },\n    );\n    if (refresh_token === false) return { access_token };\n    if (!refresh_token) {\n      refresh_token = [`${identity._id}`, randomBytes(64).toString('hex')].join(this.TOKEN_PATH_SEPARATOR);\n      await this.redis.set(\n        [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n        JSON.stringify({\n          identityId: identity._id,\n        }),\n      );\n    }\n    await this.redis.expire(\n      [this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR),\n      this.REFRESH_TOKEN_EXPIRES_IN,\n    );\n    await this.redis.set(\n      [this.ACCESS_TOKEN_PREFIX, jwtid].join(this.TOKEN_PATH_SEPARATOR),\n      JSON.stringify({\n        identity,\n        refresh_token,\n      }),\n      'EX',\n      this.ACCESS_TOKEN_EXPIRES_IN,\n    );\n    return {\n      access_token,\n      refresh_token,\n    };\n  }\n\n  //TODO: change any\n  public async getSessionData(identity: AgentType): Promise {\n    // const entity = await this.agentsService.findOne(\n    //   { _id: identity.entityId },\n    //   {\n    //     projection: {\n    //       metadata: 0,\n    //     },\n    //   },\n    // )\n    return {\n      ...identity,\n      // entity,\n    };\n  }\n\n  public async renewTokens(refresh_token: string): Promise {\n    const data = await this.redis.get([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n    if (!data) throw new UnauthorizedException();\n    const { identityId } = JSON.parse(data);\n    const identity = await this.agentsService.findOne({ _id: identityId });\n    if (!identity) throw new ForbiddenException();\n    return this.createTokens(omit(identity.toObject(), ['password']), refresh_token);\n  }\n\n  public async clearSession(jwt: string): Promise {\n    try {\n      const data = this.jwtService.decode(jwt) as JwtPayload;\n      if (!data) return null;\n      const { jti } = data;\n      const infos = await this.redis.get([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      await this.redis.del([this.ACCESS_TOKEN_PREFIX, jti].join(this.TOKEN_PATH_SEPARATOR));\n      if (infos) {\n        const { refresh_token } = JSON.parse(infos);\n        await this.redis.del([this.REFRESH_TOKEN_PREFIX, refresh_token].join(this.TOKEN_PATH_SEPARATOR));\n      }\n    } finally {\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginOptions.html":{"url":"interfaces/AutoIncrementPluginOptions.html","title":"interface - AutoIncrementPluginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            incrementBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            overwriteModelName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerCollection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trackerModelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : _id\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the field to increment\n-> Only use this if it is not \"_id\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incrementBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incrementBy:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How much to increment the field by\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overwriteModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overwriteModelName:         string | OverwriteModelNameFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string | OverwriteModelNameFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Overwrite what to use for the modelName property in the tracker document\nThis can be overwritten when wanting to use a single tracker for multiple models\nDefaults to document.constructor.modelName\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startAt:         number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 0\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    the count should start at\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerCollection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerCollection:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounters\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Tracker Collection to use to keep track of an counter for the ID\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackerModelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trackerModelName:         string\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : identitycounter\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Set the tracker model name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoIncrementPluginTrackerSpec.html":{"url":"interfaces/AutoIncrementPluginTrackerSpec.html","title":"interface - AutoIncrementPluginTrackerSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoIncrementPluginTrackerSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/plugins/mongoose/auto-increment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            modelName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current Tracker count\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The field in the schema\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modelName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ModelName from the current model\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Model } from 'mongoose';\n\nexport interface AutoIncrementPluginOptions {\n  /**\n   * How much to increment the field by\n   * @default 1\n   */\n  incrementBy?: number;\n  /**\n   * Set the field to increment\n   * -> Only use this if it is not \"_id\"\n   * @default _id\n   */\n  field?: string;\n  /**\n   * The Tracker Collection to use to keep track of an counter for the ID\n   * @default identitycounters\n   */\n  trackerCollection?: string;\n  /**\n   * Set the tracker model name\n   * @default identitycounter\n   */\n  trackerModelName?: string;\n  /**\n   * the count should start at\n   * @default 0\n   */\n  startAt?: number;\n  /**\n   * Overwrite what to use for the `modelName` property in the tracker document\n   * This can be overwritten when wanting to use a single tracker for multiple models\n   * Defaults to `document.constructor.modelName`\n   */\n  overwriteModelName?: string | OverwriteModelNameFunction;\n}\n\n/**\n * A function to generate the name used for the auto-increment \"modelName\" field\n */\n// eslint-disable-next-line\nexport type OverwriteModelNameFunction = (modelName: string, model: Model) => string;\n\nexport interface AutoIncrementPluginTrackerSpec {\n  /** The ModelName from the current model */\n  modelName: string;\n  /** The field in the schema */\n  field: string;\n  /** Current Tracker count */\n  count: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BackendsController.html":{"url":"controllers/BackendsController.html","title":"controller - BackendsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BackendsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                backends\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                alive\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        alive\n                        \n                    \n                \n            \n            \n                \n                        \n                    alive(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('alive')@ApiOperation({summary: 'test backends '})@ApiResponse({status: 200, description: 'command executed '})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('list')@ApiOperation({summary: 'List backends from daemon'})@ApiResponse({status: 200, description: 'List ok '})@ApiBearerAuth()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/backends/backends.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Logger, Get, Res, UseGuards } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Response } from 'express';\n\n@Controller('backends')\n@ApiTags('core')\nexport class BackendsController {\n  private readonly logger = new Logger(BackendsController.name);\n\n  constructor(private backendsService: BackendsService) {}\n\n  @Get('list')\n  @ApiOperation({ summary: 'List backends from daemon' })\n  @ApiResponse({ status: 200, description: 'List ok ' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async list(@Res() res: Response): Promise {\n    const backend = await this.backendsService.list();\n    return res.status(200).json(backend);\n  }\n  @Get('alive')\n  @ApiOperation({ summary: 'test backends ' })\n  @ApiResponse({ status: 200, description: 'command executed ' })\n  @ApiBearerAuth()\n  @UseGuards(AuthGuard('api-key'))\n  async alive(@Res() res: Response): Promise {\n    const backend = await this.backendsService.alive();\n    return res.status(200).json(backend);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BackendsModule.html":{"url":"modules/BackendsModule.html","title":"module - BackendsModule","body":"\n                   \n\n\n\n\n    Modules\n    BackendsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\n\nBackendsService\n\nBackendsService\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/backends/backends.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BackendsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BackendsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BackendsService } from './backends.service';\nimport { BackendsController } from './backends.controller';\nimport { ConfigModule } from '@nestjs/config';\n@Module({\n  imports: [ConfigModule],\n  controllers: [BackendsController],\n  providers: [BackendsService],\n})\nexport class BackendsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BackendsService.html":{"url":"injectables/BackendsService.html","title":"injectable - BackendsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BackendsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/backends/backends.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractQueueProcessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                queue\n                            \n                            \n                                    Protected\n                                    Readonly\n                                queueEvents\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                alive\n                            \n                            \n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, redis: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/core/backends/backends.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redis\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        alive\n                        \n                    \n                \n            \n            \n                \n                        \n                    alive()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                        \n                    list()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/backends/backends.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Queue\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        queueEvents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     QueueEvents\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractQueueProcessor\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractQueueProcessor:7\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\nimport { Redis } from 'ioredis';\nimport { InjectRedis } from '@nestjs-modules/ioredis';\n\n@Injectable()\nexport class BackendsService extends AbstractQueueProcessor {\n  constructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n  ) {\n    super(configService, redis);\n  }\n  async list() {\n    const job = await this.queue.add('LISTBACKEND', 'x');\n    this.queueEvents.on('failed', (errors) => {\n      console.log(errors);\n    });\n    return await job.waitUntilFinished(this.queueEvents, 30000);\n  }\n  async alive() {\n    const job = await this.queue.add('PING', 'x');\n    this.queueEvents.on('failed', (errors) => {\n      console.log(errors);\n    });\n    return await job.waitUntilFinished(this.queueEvents, 30000);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigInstance.html":{"url":"interfaces/ConfigInstance.html","title":"interface - ConfigInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            application\n                                        \n                                \n                                \n                                        \n                                            helmet\n                                        \n                                \n                                \n                                        \n                                            ioredis\n                                        \n                                \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                                \n                                        \n                                            nameQueue\n                                        \n                                \n                                \n                                        \n                                            passport\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                                \n                                        \n                                            swagger\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        application\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        application:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        helmet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        helmet:     HelmetOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HelmetOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ioredis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ioredis:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nameQueue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nameQueue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passport\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        passport:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        swagger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        swagger:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n  nameQueue: string;\n  secret: string;\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['LOG_LEVEL'] || 'info',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  nameQueue: process.env['NAME_QUEUE'] || 'backend',\n  secret: process.env['SECRET'] || 'mySecret',\n  swagger: {\n    path: process.env['SWAGGER_PATH'] || '/swagger',\n    api: process.env['SWAGGER_API'] || '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectAttributeDTO.html":{"url":"classes/ConfigObjectAttributeDTO.html","title":"class - ConfigObjectAttributeDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectAttributeDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                required\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        required\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ConfigObjectType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectObjectClassDTO.html":{"url":"classes/ConfigObjectObjectClassDTO.html","title":"class - ConfigObjectObjectClassDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectObjectClassDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigObjectSchemaDTO.html":{"url":"classes/ConfigObjectSchemaDTO.html","title":"class - ConfigObjectSchemaDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigObjectSchemaDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/_dto/config.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attributes\n                            \n                            \n                                    \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectAttributeDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigObjectObjectClassDTO[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/_dto/config.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, ArrayNotEmpty, ValidateNested, IsEnum, IsBoolean } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ConfigObjectType } from '../_enums/config.object';\n\nexport class ConfigObjectAttributeDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @IsString()\n  @IsEnum(ConfigObjectType)\n  type: ConfigObjectType;\n\n  @IsBoolean()\n  required: boolean;\n}\n\nexport class ConfigObjectObjectClassDTO {\n  @IsString()\n  name: string;\n\n  @IsString()\n  desc: string;\n\n  @ArrayNotEmpty()\n  attributes: string[];\n}\n\nexport class ConfigObjectSchemaDTO {\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectObjectClassDTO)\n  objectClasses: ConfigObjectObjectClassDTO[];\n\n  @ValidateNested({ each: true })\n  @Type(() => ConfigObjectAttributeDTO)\n  attributes: ConfigObjectAttributeDTO[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConsoleSession.html":{"url":"classes/ConsoleSession.html","title":"class - ConsoleSession","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConsoleSession\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/data/console-session.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                _id\n                            \n                            \n                                    Public\n                                    Readonly\n                                displayName\n                            \n                            \n                                    Public\n                                    Readonly\n                                entityId\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/_common/data/console-session.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '000000000000000000000000'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        entityId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Default value : new Types.ObjectId('000000000000000000000000')\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'console'\n                    \n                \n                    \n                        \n                                Defined in src/_common/data/console-session.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport class ConsoleSession {\n  public readonly _id: string = '000000000000000000000000';\n  public readonly username: string = 'console';\n  public readonly entityId: Types.ObjectId = new Types.ObjectId('000000000000000000000000');\n  public readonly displayName: string = 'Console';\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CoreService } from './core.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('core')\n@Controller('core')\nexport class CoreController {\n  public constructor(private readonly _service: CoreService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nAgentsModule\n\nAgentsModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nBackendsModule\n\nBackendsModule\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AgentsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            BackendsModule\n                        \n                        \n                            KeyringsModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/core.module.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { RouterModule } from '@nestjs/core';\nimport { AuthModule } from './auth/auth.module';\nimport { CoreService } from './core.service';\nimport { CoreController } from './core.controller';\nimport { BackendsModule } from './backends/backends.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { KeyringsModule } from './keyrings/keyrings.module';\nimport { AgentsModule } from './agents/agents.module';\n\n@Module({\n  imports: [AuthModule, BackendsModule, LoggerModule, KeyringsModule, AgentsModule],\n  providers: [CoreService],\n  controllers: [CoreController],\n})\nexport class CoreModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'core',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CoreService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomFieldsDto.html":{"url":"classes/CustomFieldsDto.html","title":"class - CustomFieldsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomFieldsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/custom-fields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/custom-fields.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\nexport class CustomFieldsDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  public customFields?: { [key: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidationPipe\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                validationRecursive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validationRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    validationRecursive(error: ValidationError, prefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/dto-validation.pipe.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ValidationRecursive\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorSchemaDto.html":{"url":"classes/ErrorSchemaDto.html","title":"class - ErrorSchemaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorSchemaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/error-schema.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                _exception\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                validations\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        _exception\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/error-schema.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class ErrorSchemaDto {\n  @ApiProperty({ enum: [HttpStatus.BAD_REQUEST] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n\n  @ApiProperty()\n  public validations?: { [key: string]: string }[];\n\n  @ApiProperty()\n  // eslint-disable-next-line\n  public _exception?: { [key: string]: any }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Form.html":{"url":"classes/Form.html","title":"class - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/form.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                redirectUrl\n                            \n                            \n                                    \n                                sections\n                            \n                            \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map, of: FormSectionPartSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/form.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { FormTypes } from '../_enum/types';\nimport { FormSectionPart, FormSectionPartSchema } from './parts/section.part.schema';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema({\n  collection: 'forms',\n  versionKey: false,\n})\nexport class Form extends AbstractSchema {\n  @Prop()\n  title: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  defaultValues: { [key: string]: MixedValue };\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({ type: Map, of: FormSectionPartSchema })\n  sections: Map;\n\n  @Prop()\n  submitButtonText: string;\n\n  @Prop()\n  submitApiUrl: string;\n\n  @Prop()\n  redirectUrl: string;\n}\n\nexport const FormSchema = SchemaFactory.createForClass(Form);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FormController.html":{"url":"controllers/FormController.html","title":"controller - FormController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FormController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                form\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: FormDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(FormDto, FormDto)@ApiResponse({type: FormDto})\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: FormUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(FormUpdateDto, FormDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/form/form.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            FormUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Patch, Post, Res } from '@nestjs/common';\nimport { FormDto, FormUpdateDto } from './_dto/form.dto';\nimport { FormService } from './form.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport {\n  SearchFilterSchema,\n  FilterSchema,\n  SearchFilterOptions,\n  FilterOptions,\n  ObjectIdValidationPipe,\n} from '@streamkits/nestjs_module_scrud';\nimport { Types } from 'mongoose';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\n\n@ApiTags('forms')\n@Controller('form')\nexport class FormController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    title: 1,\n    description: 1,\n    type: 1,\n    sections: 1,\n    submitButtonText: 1,\n  };\n  constructor(private readonly _service: FormService) {\n    super();\n  }\n  @Post()\n  @ApiCreateDecorator(FormDto, FormDto)\n  @ApiResponse({ type: FormDto })\n  public async create(@Res() res: Response, @Body() body: FormDto) {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(FormDto, FormController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      FormController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(FormDto)\n  public async read(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.findById(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(FormUpdateDto, FormDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: FormUpdateDto,\n    @Res() res: Response,\n  ) {\n    const data = await this._service.update(_id, body);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(FormDto)\n  public async remove(@Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId, @Res() res: Response) {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormCreateDto.html":{"url":"classes/FormCreateDto.html","title":"class - FormCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MetadataDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/form.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormDto.html":{"url":"classes/FormDto.html","title":"class - FormDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            FormCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                defaultValues\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                redirectUrl\n                            \n                            \n                                    \n                                    \n                                sections\n                            \n                            \n                                    \n                                    \n                                submitApiUrl\n                            \n                            \n                                    \n                                    \n                                submitButtonText\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        defaultValues\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:26\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        redirectUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitApiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:39\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        submitButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypeList)@ApiProperty({enum: FormTypeList})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         FormCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         FormCreateDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         MetadataDto\n\n                            \n                        \n                    \n                        \n                                Defined in         MetadataDto:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldDto.html":{"url":"classes/FormFieldDto.html","title":"class - FormFieldDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/field.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                    \n                                col\n                            \n                            \n                                    \n                                    \n                                component\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                model-value\n                            \n                            \n                                    \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/field.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNumber, ValidateNested } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nexport class FormFieldDto {\n  @IsString()\n  @ApiProperty()\n  component: string;\n\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsString()\n  @ApiProperty()\n  'model-value': string;\n\n  @IsNumber()\n  @ApiProperty()\n  row: number;\n\n  @IsNumber()\n  @ApiProperty()\n  col: number;\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDefault: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnCreate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnRead: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnUpdate: { [attr: string]: MixedValue };\n\n  @ValidateNested()\n  @ApiProperty()\n  attrsOnDelete: { [attr: string]: MixedValue };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormFieldPart.html":{"url":"classes/FormFieldPart.html","title":"class - FormFieldPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormFieldPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/field.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attrsOnCreate\n                            \n                            \n                                    \n                                attrsOnDefault\n                            \n                            \n                                    \n                                attrsOnDelete\n                            \n                            \n                                    \n                                attrsOnRead\n                            \n                            \n                                    \n                                attrsOnUpdate\n                            \n                            \n                                    \n                                col\n                            \n                            \n                                    \n                                component\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                model-value\n                            \n                            \n                                    \n                                row\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnCreate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDefault\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnDelete\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnRead\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attrsOnUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        col\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        model-value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        row\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/field.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n@Schema()\nexport class FormFieldPart {\n  @Prop()\n  component: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  'model-value': string;\n\n  @Prop()\n  row: number;\n\n  @Prop()\n  col: number;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDefault: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnCreate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnRead: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnUpdate: { [attr: string]: MixedValue } | object;\n\n  @Prop({\n    type: Object,\n    default: {},\n  })\n  attrsOnDelete: { [attr: string]: MixedValue } | object;\n}\n\nexport const FormFieldPartSchema = SchemaFactory.createForClass(FormFieldPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FormController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FormSchema, Form } from './_schemas/form.schema';\nimport { FormService } from './form.service';\nimport { FormController } from './form.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Form.name,\n        useFactory: () => FormSchema,\n      },\n    ]),\n  ],\n  providers: [FormService],\n  controllers: [FormController],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionDto.html":{"url":"classes/FormSectionDto.html","title":"class - FormSectionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/parts/section.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                fields\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                    \n                                label\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@Type(undefined)@ApiProperty({type: FormFieldDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@ValidateNested({each: true})@IsOptional()@Type(undefined)@ApiProperty({type: () => FormSectionDto, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(FormTypes)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_dto/parts/section.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsObject, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { FormFieldDto } from './field.dto';\nimport { FormTypes } from '../../_enum/types';\n\nexport class FormSectionDto {\n  @IsString()\n  @ApiProperty()\n  label: string;\n\n  @IsEnum(FormTypes)\n  @ApiProperty()\n  type: FormTypes;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  icon?: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @IsOptional()\n  @Type(() => FormSectionDto)\n  @ApiProperty({ type: () => FormSectionDto, required: false })\n  sections?: { [sectionName: string]: FormSectionDto };\n\n  @IsObject()\n  @ValidateNested({ each: true })\n  @Type(() => FormFieldDto)\n  @ApiProperty({ type: FormFieldDto })\n  fields: { [fieldName: string]: FormFieldDto };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormSectionPart.html":{"url":"classes/FormSectionPart.html","title":"class - FormSectionPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormSectionPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_schemas/parts/section.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                fields\n                            \n                            \n                                    \n                                    Optional\n                                icon\n                            \n                            \n                                    \n                                label\n                            \n                            \n                                    \n                                    Optional\n                                sections\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        sections\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Map})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormTypes\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: FormTypes, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/form/_schemas/parts/section.part.schema.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { FormTypes } from '../../_enum/types';\nimport { FormFieldPart } from './field.part.schema';\n\n@Schema({ _id: false })\nexport class FormSectionPart {\n  @Prop({\n    type: String,\n  })\n  label: string;\n\n  @Prop({\n    type: Number,\n    enum: FormTypes,\n    default: FormTypes.BASE,\n  })\n  type: FormTypes;\n\n  @Prop({\n    type: String,\n  })\n  icon?: string;\n\n  @Prop({\n    type: String,\n  })\n  description?: string;\n\n  @Prop({ type: Map })\n  sections?: Map;\n\n  @Prop({ type: Map })\n  fields: Map;\n}\n\nexport const FormSectionPartSchema = SchemaFactory.createForClass(FormSectionPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/core/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:42\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:149\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:304\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:32\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:82\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:115\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:248\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Form } from './_schemas/form.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { ModuleRef } from '@nestjs/core';\n\n@Injectable()\nexport class FormService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Form.name) protected _model: Model,\n    protected readonly moduleRef: ModuleRef,\n  ) {\n    super({ moduleRef });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormUpdateDto.html":{"url":"classes/FormUpdateDto.html","title":"class - FormUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_dto/form.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(FormDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEnum, IsObject, ValidateNested, IsOptional } from 'class-validator';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { FormTypeList, FormTypes } from '../_enum/types';\nimport { MetadataDto } from '~/_common/abstracts/dto/metadata.dto';\nimport { Type } from 'class-transformer';\nimport { FormSectionDto } from './parts/section.dto';\n\nexport class FormCreateDto extends MetadataDto {\n  @IsString()\n  @ApiProperty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  description?: string;\n\n  @IsEnum(FormTypeList)\n  @ApiProperty({ enum: FormTypeList })\n  type: FormTypes;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  defaultValues: { [key: string]: MixedValue };\n\n  @ValidateNested({ each: true })\n  @Type(() => FormSectionDto)\n  // @ApiProperty({ type: () => FormSectionDto, isArray: true })\n  sections: { [key: string]: FormSectionDto };\n\n  @IsString()\n  @ApiProperty()\n  submitButtonText: string;\n\n  @IsString()\n  @ApiProperty()\n  submitApiUrl: string;\n\n  @IsObject()\n  @IsOptional()\n  @ApiProperty({ required: false })\n  redirectUrl?: string;\n}\n\nexport class FormDto extends FormCreateDto {}\n\nexport class FormUpdateDto extends PartialType(FormDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Identities.html":{"url":"classes/Identities.html","title":"class - Identities","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Identities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/identities.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                additionalFields\n                            \n                            \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AdditionalFieldsPart\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: AdditionalFieldsPartSchema, required: false, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPerson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: inetOrgPersonSchema, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityLifecycle\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityLifecycle, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, enum: IdentityState, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/identities.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdentityLifecycle } from './../_enums/lifecycle.enum';\nimport { inetOrgPerson, inetOrgPersonSchema } from './_parts/inetOrgPerson.part';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentityState } from '../_enums/states.enum';\nimport { AdditionalFieldsPart, AdditionalFieldsPartSchema } from './_parts/additionalFields.part.schema';\n\nexport type IdentitiesDocument = Identities & Document;\n\n@Schema({ versionKey: false })\nexport class Identities extends AbstractSchema {\n  @Prop({ type: Number, enum: IdentityState, default: IdentityState.UNKNOWN })\n  state: IdentityState;\n\n  @Prop({ type: Number, enum: IdentityLifecycle, default: IdentityLifecycle.INACTIVE })\n  lifecycle: IdentityLifecycle;\n\n  @Prop({ type: inetOrgPersonSchema, required: true })\n  inetOrgPerson: inetOrgPerson;\n\n  @Prop({ type: AdditionalFieldsPartSchema, required: false, default: {} })\n  additionalFields: AdditionalFieldsPart;\n}\n\nexport const IdentitiesSchema = SchemaFactory.createForClass(Identities);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesController.html":{"url":"controllers/IdentitiesController.html","title":"controller - IdentitiesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId, body: IdentitiesUpdateDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(res: Response, body: IdentitiesCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upsert')@ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/identities.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            IdentitiesCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  Res,\n} from '@nestjs/common';\nimport { IdentitiesDto, IdentitiesCreateDto, IdentitiesUpdateDto } from './_dto/identities.dto';\nimport { IdentitiesService } from './identities.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { ApiUpdateDecorator } from '~/_common/decorators/api-update.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { Response } from 'express';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { Identities } from './_schemas/identities.schema';\nimport { Types, Document } from 'mongoose';\nimport { IdentityState } from './_enums/states.enum';\n// import { IdentitiesValidationFilter } from '~/_common/filters/identities-validation.filter';\n\n// @UseFilters(new IdentitiesValidationFilter())\n@ApiTags('management')\n@Controller('identities')\nexport class IdentitiesController extends AbstractController {\n  constructor(\n    protected readonly _service: IdentitiesService,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n  protected static readonly projection: PartialProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n\n  @Post()\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async create(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    const data = await this._service.create(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as Identities).state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n\n  @Post('upsert')\n  @ApiCreateDecorator(IdentitiesCreateDto, IdentitiesDto)\n  public async upsert(\n    @Res()\n    res: Response,\n    @Body() body: IdentitiesCreateDto,\n  ): Promise;\n        message?: string;\n        validations?: MixedValue;\n      },\n      any\n    >\n  > {\n    let statusCode = HttpStatus.CREATED;\n    let message = null;\n    const data = await this._service.upsert(body);\n    // If the state is TO_COMPLETE, the identity is created but additional fields are missing or invalid\n    // Else the state is TO_VALIDATE, we return a 201 status code\n    if ((data as unknown as Identities).state === IdentityState.TO_COMPLETE) {\n      statusCode = HttpStatus.ACCEPTED;\n      message = 'Identitée créée avec succès, mais des champs additionnels sont manquants ou invalides.';\n    }\n\n    return res.status(statusCode).json({\n      statusCode,\n      data,\n      message,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(IdentitiesDto, IdentitiesController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    try {\n      const [data, total] = await this._service.findAndCount(\n        searchFilterSchema,\n        IdentitiesController.projection,\n        searchFilterOptions,\n      );\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        total,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(IdentitiesDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.findById(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      let validations = error.validations;\n      if (error instanceof BadRequestException) validations = error.getResponse();\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: validations,\n      });\n    }\n  }\n\n  @Patch(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiUpdateDecorator(IdentitiesUpdateDto, IdentitiesDto)\n  public async update(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Body() body: IdentitiesUpdateDto,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.update(_id, body);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(IdentitiesDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    try {\n      const data = await this._service.delete(_id);\n      return res.status(HttpStatus.OK).json({\n        statusCode: HttpStatus.OK,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesCreateDto.html":{"url":"classes/IdentitiesCreateDto.html","title":"class - IdentitiesCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/identities.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\n\nexport class IdentitiesCreateDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesDto.html":{"url":"classes/IdentitiesDto.html","title":"class - IdentitiesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IdentitiesCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                additionalFields\n                            \n                            \n                                    \n                                    \n                                    \n                                inetOrgPerson\n                            \n                            \n                                    \n                                    \n                                    \n                                lifecycle\n                            \n                            \n                                    \n                                    \n                                    \n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        additionalFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :         additionalFieldsPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Type(undefined)@ApiProperty({required: false, type: additionalFieldsPartDto, description: 'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses', example: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        inetOrgPerson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         inetOrgPersonDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Type(undefined)@ApiProperty({type: inetOrgPersonDto})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lifecycle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityLifecycle)@ApiProperty({enum: IdentityLifecycle})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentityState\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsEnum(IdentityState)@ApiProperty({enum: IdentityState})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdentitiesCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         IdentitiesCreateDto:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\n\nexport class IdentitiesCreateDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesModule.html":{"url":"modules/IdentitiesModule.html","title":"module - IdentitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/identities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesService\n                        \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpException, Logger, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { IdentitiesSchema, Identities } from './_schemas/identities.schema';\nimport { IdentitiesService } from './identities.service';\nimport { IdentitiesController } from './identities.controller';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { IdentitiesValidationModule } from './validations/identities.validation.module';\nimport { IdentityState } from './_enums/states.enum';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Identities.name,\n        imports: [IdentitiesValidationModule],\n        inject: [IdentitiesValidationService],\n        useFactory: (validationService: IdentitiesValidationService) => {\n          const schema = IdentitiesSchema;\n\n          schema.pre('validate', async function (next) {\n            const logPrefix = `Validation [${this.inetOrgPerson.cn}]:`;\n            try {\n              Logger.log(`${logPrefix} Starting additionalFields validation.`);\n              await validationService.validate(this.additionalFields);\n              Logger.log(`${logPrefix} AdditionalFields validation successful.`);\n            } catch (error) {\n              handleValidationError(error, this, logPrefix);\n            }\n            next();\n          });\n\n          schema.pre('save', async function (next) {\n            if (this.state === IdentityState.TO_CREATE) {\n              this.state = IdentityState.TO_VALIDATE;\n            }\n            next();\n          });\n\n          return schema;\n        },\n      },\n    ]),\n  ],\n  providers: [IdentitiesService, IdentitiesValidationService],\n  controllers: [IdentitiesController],\n})\nexport class IdentitiesModule {}\n\nfunction handleValidationError(error: Error | HttpException, identity: Identities, logPrefix: string) {\n  if (error instanceof ValidationConfigException) {\n    Logger.error(`${logPrefix} Validation config error. ${JSON.stringify(error.getValidations())}`);\n    throw new ValidationConfigException(error.getPayload());\n  }\n\n  if (error instanceof ValidationSchemaException) {\n    Logger.warn(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n    if (identity.state === IdentityState.TO_CREATE) {\n      Logger.warn(`${logPrefix} State set to TO_COMPLETE.`);\n      identity.state = IdentityState.TO_COMPLETE;\n      identity.additionalFields.validations = error.getValidations();\n    } else {\n      Logger.error(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n      throw new ValidationSchemaException(error.getPayload());\n    }\n  } else {\n    Logger.error(`${logPrefix} Unhandled error: ${error.message}`);\n    throw error; // Rethrow the original error if it's not one of the handled types.\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesService.html":{"url":"injectables/IdentitiesService.html","title":"injectable - IdentitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/identities.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Private\n                                handleValidationError\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model, _validation: IdentitiesValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/identities.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _validation\n                                                  \n                                                        \n                                                                        IdentitiesValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:20\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:79\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleValidationError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleValidationError(error: Error | HttpException, identity: Identities, logPrefix: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/identities.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error | HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                identity\n                                            \n                                                            Identities\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                logPrefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Identities\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:68\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(data?: any, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:29\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:42\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:32\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:82\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:115\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, Injectable, Logger } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Identities } from './_schemas/identities.schema';\nimport { Document, Model, ModifyResult, Query, QueryOptions, SaveOptions, Types, UpdateQuery } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\nimport { IdentitiesValidationService } from './validations/identities.validation.service';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\nimport { IdentityState } from './_enums/states.enum';\n\n@Injectable()\nexport class IdentitiesService extends AbstractServiceSchema {\n  constructor(\n    @InjectModel(Identities.name) protected _model: Model,\n    protected readonly _validation: IdentitiesValidationService,\n  ) {\n    super();\n  }\n\n  public async create(\n    data?: any,\n    options?: SaveOptions,\n  ): Promise> {\n    const created: Document = await super.create(data, options);\n    return created;\n    //TODO: add backends service logic here\n  }\n\n  public async upsert(\n    data?: any,\n    options?: QueryOptions,\n  ): Promise>> {\n    Logger.log(`Upserting identity: ${JSON.stringify(data)}`);\n    const logPrefix = `Validation [${data.inetOrgPerson.cn}]:`;\n    data.additionalFields.validations = {};\n    try {\n      Logger.log(`${logPrefix} Starting additionalFields validation.`);\n      const validations = await this._validation.validate(data.additionalFields);\n      Logger.log(`${logPrefix} AdditionalFields validation successful.`);\n      Logger.log(`Validations : ${validations}`);\n      data.state = IdentityState.TO_VALIDATE;\n    } catch (error) {\n      data = this.handleValidationError(error, data, logPrefix);\n    }\n\n    //TODO: ameliorer la logique d'upsert\n    const identity = await this._model.findOne({ 'inetOrgPerson.uid': data.inetOrgPerson.uid });\n    if (identity) {\n      Logger.log(`${logPrefix} Identity already exists. Updating.`);\n      data.additionalFields.objectClasses = [\n        ...new Set([...identity.additionalFields.objectClasses, ...data.additionalFields.objectClasses]),\n      ];\n      data.additionalFields.attributes = {\n        ...identity.additionalFields.attributes,\n        ...data.additionalFields.attributes,\n      };\n      data.additionalFields.validations = {\n        ...identity.additionalFields.validations,\n        ...data.additionalFields.validations,\n      };\n    }\n\n    const upsert = await super.upsert({ 'inetOrgPerson.uid': data.inetOrgPerson.uid }, data, options);\n    return upsert;\n    //TODO: add backends service logic here\n  }\n\n  public async update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery,\n    options?: QueryOptions & { rawResult: true },\n  ): Promise>> {\n    // noinspection UnnecessaryLocalVariableJS\n    const updated = await super.update(_id, update, options);\n    //TODO: add backends service logic here (TO_SYNC)\n    return updated;\n  }\n\n  public async delete(\n    _id: Types.ObjectId | any,\n    options?: QueryOptions | null | undefined,\n  ): Promise> {\n    // noinspection UnnecessaryLocalVariableJS\n    //TODO: soft delete\n    const deleted = await super.delete(_id, options);\n    //TODO: add backends service logic here (TO_SYNC)\n    return deleted;\n  }\n\n  private handleValidationError(error: Error | HttpException, identity: Identities, logPrefix: string) {\n    if (error instanceof ValidationConfigException) {\n      Logger.error(`${logPrefix} Validation config error. ${JSON.stringify(error.getValidations())}`);\n      throw new ValidationConfigException(error.getPayload());\n    }\n\n    if (error instanceof ValidationSchemaException) {\n      Logger.warn(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n      identity.additionalFields.validations = error.getValidations();\n      if (identity.state === IdentityState.TO_CREATE) {\n        Logger.warn(`${logPrefix} State set to TO_COMPLETE.`);\n        identity.state = IdentityState.TO_COMPLETE;\n        return identity;\n      } else {\n        Logger.error(`${logPrefix} Validation schema error. ${JSON.stringify(error.getValidations())}`);\n        throw new ValidationSchemaException(error.getPayload());\n      }\n    } else {\n      Logger.error(`${logPrefix} Unhandled error: ${error.message}`);\n      throw error; // Rethrow the original error if it's not one of the handled types.\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesUpdateDto.html":{"url":"classes/IdentitiesUpdateDto.html","title":"class - IdentitiesUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/identities.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(IdentitiesCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsOptional, IsObject, IsEnum, IsNumber } from 'class-validator';\nimport { inetOrgPersonDto } from './_parts/inetOrgPerson.dto';\nimport { IdentityState } from '../_enums/states.enum';\nimport { IdentityLifecycle } from '../_enums/lifecycle.enum';\nimport { Type } from 'class-transformer';\nimport { additionalFieldsPartDto } from './_parts/additionalFields.dto';\n\nexport class IdentitiesCreateDto {\n  @IsNumber()\n  @IsEnum(IdentityState)\n  @ApiProperty({ enum: IdentityState })\n  state: IdentityState;\n\n  @IsNumber()\n  @IsEnum(IdentityLifecycle)\n  @ApiProperty({ enum: IdentityLifecycle })\n  lifecycle: number;\n\n  @IsObject()\n  @Type(() => inetOrgPersonDto)\n  @ApiProperty({ type: inetOrgPersonDto })\n  inetOrgPerson: inetOrgPersonDto;\n\n  @IsOptional()\n  @Type(() => additionalFieldsPartDto)\n  @ApiProperty({\n    required: false,\n    type: additionalFieldsPartDto,\n    description:\n      'Champs composé de deux items, un tableau de string correspondant aux attributs requis et un champs attributes contenant des pair clé/valeur correspondant aux attributs dans le champ objectClasses',\n    example: {\n      objectClasses: ['supann'],\n      attributes: {\n        supann: {\n          supannAliasLogin: 'alias',\n          supannEntiteAffectationPrincipale: 'entite',\n        },\n      },\n    },\n  })\n  additionalFields?: additionalFieldsPartDto;\n}\n\nexport class IdentitiesDto extends IdentitiesCreateDto {}\n\nexport class IdentitiesUpdateDto extends PartialType(IdentitiesCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/IdentitiesValidationController.html":{"url":"controllers/IdentitiesValidationController.html","title":"controller - IdentitiesValidationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  IdentitiesValidationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                identities/validation\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(res: Response, body: AdditionalFieldsPart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpStatus, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport { IdentitiesValidationService } from './identities.validation.service';\n\n@ApiTags('management')\n@Controller('identities/validation')\nexport class IdentitiesValidationController extends AbstractController {\n  constructor(protected readonly _service: IdentitiesValidationService) {\n    super();\n  }\n\n  @Post()\n  public async validate(\n    @Res()\n    res: Response,\n    @Body() body: AdditionalFieldsPart,\n  ): Promise\n  > {\n    try {\n      const data = await this._service.validate(body);\n      return res.status(HttpStatus.CREATED).json({\n        statusCode: HttpStatus.CREATED,\n        data,\n      });\n    } catch (error) {\n      return res.status(HttpStatus.BAD_REQUEST).json({\n        statusCode: HttpStatus.BAD_REQUEST,\n        message: error.message,\n        validations: error.validations,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdentitiesValidationFilter.html":{"url":"classes/IdentitiesValidationFilter.html","title":"class - IdentitiesValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdentitiesValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/identities-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: ValidationException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/identities-validation.filter.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ValidationException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, Logger } from '@nestjs/common';\nimport { ValidationException } from '~/_common/errors/ValidationException';\nimport { Response } from 'express';\n\n@Catch(ValidationException)\nexport class IdentitiesValidationFilter implements ExceptionFilter {\n  catch(exception: ValidationException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    Logger.debug(exception['message'], 'IdentitiesValidationFilter');\n\n    return response.status(status).json({\n      statusCode: status,\n      message: exception.message,\n      validations: exception.getValidations(),\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IdentitiesValidationModule.html":{"url":"modules/IdentitiesValidationModule.html","title":"module - IdentitiesValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    IdentitiesValidationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_providers\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            IdentitiesValidationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IdentitiesValidationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { IdentitiesValidationService } from './identities.validation.service';\nimport { IdentitiesValidationController } from './identities.validation.controller';\n\n@Module({\n  controllers: [IdentitiesValidationController],\n  providers: [IdentitiesValidationService],\n  exports: [IdentitiesValidationService],\n})\nexport class IdentitiesValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentitiesValidationService.html":{"url":"injectables/IdentitiesValidationService.html","title":"injectable - IdentitiesValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IdentitiesValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/validations/identities.validation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for validating identities.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ajv\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    Private\n                                validateSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Public\n                                    Async\n                                validateAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(data: AdditionalFieldsPart)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Validates additional fields for identities.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            AdditionalFieldsPart\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe additional fields data to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves if validation succeeds, or rejects with validation errors.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validateAttribute\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAttribute(key: string, attribute: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/identities/validations/identities.validation.service.ts:101\n                        \n                    \n\n\n            \n                \n                        Validates a single attribute.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key of the attribute to validate.\n\n\n                                            \n                                        \n                                        \n                                                attribute\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe attribute value to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves with an error message if validation fails, otherwise null.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        ajv\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Ajv\n\n                    \n                \n                \n                    \n                        Default value : new Ajv({ allErrors: true })\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validateSchema\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/management/identities/validations/identities.validation.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { parse } from 'yaml';\nimport { existsSync, readFileSync } from 'fs';\nimport { ConfigObjectSchemaDTO } from './_dto/config.dto';\nimport { diff } from 'radash';\nimport { AdditionalFieldsPart } from '../_schemas/_parts/additionalFields.part.schema';\nimport Ajv from 'ajv';\nimport { buildYup } from 'schema-to-yup';\nimport ajvErrors from 'ajv-errors';\nimport validSchema from './_config/validSchema';\nimport { ValidationConfigException, ValidationSchemaException } from '~/_common/errors/ValidationException';\n\n/**\n * Service responsible for validating identities.\n */\n@Injectable()\nexport class IdentitiesValidationService {\n  private ajv: Ajv = new Ajv({ allErrors: true });\n  private validateSchema;\n  private logger: Logger;\n\n  constructor() {\n    ajvErrors(this.ajv);\n    this.validateSchema = this.ajv.compile(validSchema);\n    this.logger = new Logger();\n  }\n\n  /**\n   * Validates additional fields for identities.\n   * @param data - The additional fields data to validate.\n   * @returns A promise that resolves if validation succeeds, or rejects with validation errors.\n   */\n  async validate(data: AdditionalFieldsPart): Promise {\n    const objectClasses = data.objectClasses;\n    const attributes = data.attributes;\n    const attributesKeys = Object.keys(attributes);\n    const validations = {};\n    let reject = false;\n\n    // Check for missing attributes\n    for (const attribute of diff(objectClasses, attributesKeys)) {\n      validations[attribute] = `Attribut '${attribute}' manquant dans les champs additionnels`;\n      reject = true;\n    }\n\n    for (const key of attributesKeys) {\n      // Check for invalid object classes\n      if (!objectClasses.includes(key)) {\n        validations[key] =\n          `${key} n'est pas une classe d'objet valide dans ce contexte, les classes d'objets valides sont: ${objectClasses.join(\n            ', ',\n          )}'`;\n        reject = true;\n        continue;\n      }\n\n      // Check for missing schema files\n      const path = `./src/management/identities/validations/_config/${key}.yml`;\n      if (!existsSync(path)) {\n        validations[key] = `Fichier de config '${key}.yml' introuvable`;\n        reject = true;\n        continue;\n      }\n\n      // Check for invalid schema\n      const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n      if (!this.validateSchema(schema)) {\n        validations[key] = `Schema ${key}.yml invalide: ${this.ajv.errorsText(this.validateSchema.errors)}`;\n        reject = true;\n        continue;\n      }\n    }\n\n    if (reject) {\n      throw new ValidationConfigException({ validations });\n    }\n\n    // Validate each attribute\n    for (const key of attributesKeys) {\n      const validationError = await this.validateAttribute(key, attributes[key]);\n      if (validationError) {\n        validations[key] = validationError;\n        reject = true;\n      } else {\n        delete validations[key];\n      }\n    }\n\n    if (reject) {\n      throw new ValidationSchemaException({ validations });\n    }\n    return Promise.resolve({ message: 'Validation succeeded' });\n  }\n\n  /**\n   * Validates a single attribute.\n   * @param key - The key of the attribute to validate.\n   * @param attribute - The attribute value to validate.\n   * @returns A promise that resolves with an error message if validation fails, otherwise null.\n   */\n  public async validateAttribute(key: string, attribute: any): Promise {\n    const path = `./src/management/identities/validations/_config/${key}.yml`;\n    const schema: ConfigObjectSchemaDTO = parse(readFileSync(path, 'utf8'));\n\n    const yupSchema = buildYup(schema, { noSortEdges: true });\n    try {\n      await yupSchema.validate(attribute, { strict: true, abortEarly: false });\n      return null;\n    } catch (error) {\n      return error.inner.reduce((acc, err) => {\n        acc[err.path] = err.message;\n        return acc;\n      }, {});\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLogOptions.html":{"url":"interfaces/InternalLogOptions.html","title":"interface - InternalLogOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLogOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            request\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         InternalLogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InternalLogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const stack = optionalParams[optionalParams.length - (optionalParams.length === 3 ? -2 : -1)];\n    const context = optionalParams.length === 3 ? optionalParams[optionalParams.length - 1] : null;\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'error', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [stack];\n    if (context) args.push(context);\n    super.error(...[message, ...args]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'warn', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.warn(...[message, ...args]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'log', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.log(...[message, ...args]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'debug', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.debug(...[message, ...args]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'verbose', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.verbose(...[message, ...args]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'fatal', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.fatal(...[message, ...args]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    console.log('logging');\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.error('Failed to log to the database', e, this.constructor.name);\n      console.log('Failed to log to the database', e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InternalLogger.html":{"url":"injectables/InternalLogger.html","title":"injectable - InternalLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InternalLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                connection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                commonLogDb\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                    Public\n                                    Async\n                                initialize\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(_options?: InternalLoggerOptions)\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/internal.logger.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _options\n                                                  \n                                                        \n                                                                        InternalLoggerOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        commonLogDb\n                        \n                    \n                \n            \n            \n                \n                        \n                    commonLogDb(payload: literal type, options: InternalLogOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            InternalLogOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: [...any, ])\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/logger/internal.logger.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        [...any, ]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        connection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/core/logger/internal.logger.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const stack = optionalParams[optionalParams.length - (optionalParams.length === 3 ? -2 : -1)];\n    const context = optionalParams.length === 3 ? optionalParams[optionalParams.length - 1] : null;\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'error', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [stack];\n    if (context) args.push(context);\n    super.error(...[message, ...args]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'warn', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.warn(...[message, ...args]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'log', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.log(...[message, ...args]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'debug', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.debug(...[message, ...args]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'verbose', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.verbose(...[message, ...args]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'fatal', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.fatal(...[message, ...args]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    console.log('logging');\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.error('Failed to log to the database', e, this.constructor.name);\n      console.log('Failed to log to the database', e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InternalLoggerOptions.html":{"url":"interfaces/InternalLoggerOptions.html","title":"interface - InternalLoggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InternalLoggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/internal.logger.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                        \n                                            mongoose\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mongoose\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mongoose:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ConsoleLogger, Injectable, LogLevel } from '@nestjs/common';\nimport { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { Request } from 'express';\nimport { Connection, connect } from 'mongoose';\n\nexport interface InternalLoggerOptions {\n  logLevel: LogLevel[];\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n  };\n}\n\nexport enum InternalLogLevel {\n  CONSOLE = 'console',\n  DB = 'db',\n}\n\nexport interface InternalLogOptions {\n  target: InternalLogLevel[];\n  request?: Request;\n  createdBy?: string;\n}\n\n@Injectable()\nexport class InternalLogger extends ConsoleLogger {\n  protected connection: Connection;\n\n  public constructor(private _options?: InternalLoggerOptions) {\n    super();\n    this.setLogLevels(_options?.logLevel);\n  }\n\n  public async initialize() {\n    super.log('Initializing logs database connection...', this.constructor.name);\n    try {\n      const mongoose = await connect(this._options.mongoose.uri, this._options.mongoose.options);\n      this.connection = mongoose.connection;\n    } catch (e) {\n      super.error('Failed to connect to the logs database', e, this.constructor.name);\n      setTimeout(() => this.initialize(), 5000);\n    }\n  }\n\n  error(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    //TODO: fix optionalParams system\n    const stack = optionalParams[optionalParams.length - (optionalParams.length === 3 ? -2 : -1)];\n    const context = optionalParams.length === 3 ? optionalParams[optionalParams.length - 1] : null;\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'error', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [stack];\n    if (context) args.push(context);\n    super.error(...[message, ...args]);\n  }\n\n  warn(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'warn', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.warn(...[message, ...args]);\n  }\n\n  log(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'log', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.log(...[message, ...args]);\n  }\n\n  debug(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'debug', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.debug(...[message, ...args]);\n  }\n\n  verbose(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB))\n        this.commonLogDb({ level: 'verbose', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.verbose(...[message, ...args]);\n  }\n\n  fatal(message: any, ...optionalParams: [...any, string?]) {\n    const [options] = optionalParams;\n    const context = optionalParams[optionalParams.length - 1];\n    if (options instanceof Object) {\n      if (options.target.includes(InternalLogLevel.DB)) this.commonLogDb({ level: 'fatal', message, context }, options);\n      if (!options.target.includes(InternalLogLevel.CONSOLE)) return;\n    }\n    const args = [];\n    if (context) args.push(context);\n    super.fatal(...[message, ...args]);\n  }\n\n  private commonLogDb(\n    payload: {\n      level: string;\n      message: any;\n      context?: string;\n    },\n    options: InternalLogOptions,\n  ): void {\n    console.log('logging');\n    const data = payload.message instanceof Object ? payload.message : { message: payload.message };\n    const metadata = {\n      createdAt: new Date(),\n      createdBy: options.createdBy || 'console',\n    };\n    if (payload.context) metadata['context'] = payload.context;\n    // TODO: fix request user structure\n    if (options.request && !options.createdBy) metadata['createdBy'] = (options.request.user as any)?.id;\n\n    try {\n      this.connection.collection('logs').insertOne({\n        level: payload.level,\n        data,\n        metadata,\n      });\n    } catch (e) {\n      super.error('Failed to log to the database', e, this.constructor.name);\n      console.log('Failed to log to the database', e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, payload, done: VerifiedCallback)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/jwt.strategy.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                        VerifiedCallback\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy, VerifiedCallback } from 'passport-jwt';\nimport { AuthService } from '../auth.service';\nimport { Request } from 'express';\nimport { AgentType } from '~/_common/types/agent.type';\nimport { JwtPayload } from 'jsonwebtoken';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(\n    private readonly auth: AuthService,\n    config: ConfigService,\n  ) {\n    super({\n      secretOrKey: `${config.get('jwt.options.secret')}`,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      passReqToCallback: true,\n    });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  public async validate(\n    _: Request,\n    payload: JwtPayload & { identity: AgentType },\n    done: VerifiedCallback,\n  ): Promise {\n    Logger.debug(`Atempt to authenticate with JTI: `, 'JwtStrategy');\n    if (!payload?.identity) return done(new UnauthorizedException(), false);\n    const user = await this.auth.verifyIdentity(payload);\n    if (!user) return done(new ForbiddenException(), false);\n    return done(null, payload?.identity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Keyrings.html":{"url":"classes/Keyrings.html","title":"class - Keyrings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Keyrings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_schemas/keyrings.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_schemas/keyrings.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type KeyringsDocument = Keyrings & Document;\n\n@Schema({ versionKey: false })\nexport class Keyrings extends AbstractSchema {\n  @Prop({\n    type: String,\n    unique: true,\n  })\n  public token: string;\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n}\n\nexport const KeyringsSchema = SchemaFactory.createForClass(Keyrings);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KeyringsController.html":{"url":"controllers/KeyringsController.html","title":"controller - KeyringsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KeyringsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                keyrings\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(res: Response, body: KeyringsCreateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                            KeyringsCreateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                        \n                    read(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiReadResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(_id: Types.ObjectId, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':_id([0-9a-fA-F]{24})')@ApiParam({name: '_id', type: String})@ApiDeletedResponseDecorator(KeyringsDto)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Async\n                        search\n                        \n                    \n                \n            \n            \n                \n                        \n                    search(res: Response, searchFilterSchema: FilterSchema, searchFilterOptions: FilterOptions)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiPaginatedDecorator(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/core/keyrings/keyrings.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterSchema\n                                            \n                                                        FilterSchema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchFilterOptions\n                                            \n                                                        FilterOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, HttpStatus, Param, Post, Res } from '@nestjs/common';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\nimport { Types } from 'mongoose';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ApiDeletedResponseDecorator } from '~/_common/decorators/api-deleted-response.decorator';\nimport { ObjectIdValidationPipe } from '~/_common/pipes/object-id-validation.pipe';\nimport { Response } from 'express';\nimport { ApiReadResponseDecorator } from '~/_common/decorators/api-read-response.decorator';\nimport { PickProjectionHelper } from '~/_common/helpers/pick-projection.helper';\nimport { FilterOptions, FilterSchema, SearchFilterOptions, SearchFilterSchema } from '@streamkits/nestjs_module_scrud';\nimport { ApiCreateDecorator } from '~/_common/decorators/api-create.decorator';\nimport { ApiPaginatedDecorator } from '~/_common/decorators/api-paginated.decorator';\nimport { PartialProjectionType } from '~/_common/types/partial-projection.type';\nimport { KeyringsService } from '~/core/keyrings/keyrings.service';\nimport { KeyringsCreateDto, KeyringsDto } from '~/core/keyrings/_dto/keyrings.dto';\n\n@ApiTags('core')\n@Controller('keyrings')\nexport class KeyringsController extends AbstractController {\n  protected static readonly projection: PartialProjectionType = {\n    //secretKey: 0,\n    allowedNetworks: 1,\n    suspendedAt: 1,\n  };\n\n  public constructor(private readonly _service: KeyringsService) {\n    super();\n  }\n\n  @Post()\n  @ApiCreateDecorator(KeyringsCreateDto, KeyringsDto)\n  public async create(@Res() res: Response, @Body() body: KeyringsCreateDto): Promise {\n    const data = await this._service.create(body);\n    return res.status(HttpStatus.CREATED).json({\n      statusCode: HttpStatus.CREATED,\n      data,\n    });\n  }\n\n  @Get()\n  @ApiPaginatedDecorator(PickProjectionHelper(KeyringsDto, KeyringsController.projection))\n  public async search(\n    @Res() res: Response,\n    @SearchFilterSchema() searchFilterSchema: FilterSchema,\n    @SearchFilterOptions() searchFilterOptions: FilterOptions,\n  ): Promise {\n    //TODO: search tree by parentId\n    const [data, total] = await this._service.findAndCount(\n      searchFilterSchema,\n      KeyringsController.projection,\n      searchFilterOptions,\n    );\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      total,\n      data,\n    });\n  }\n\n  @Get(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiReadResponseDecorator(KeyringsDto)\n  public async read(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.findById(_id, {\n      secretKey: 0,\n    });\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n\n  @Delete(':_id([0-9a-fA-F]{24})')\n  @ApiParam({ name: '_id', type: String })\n  @ApiDeletedResponseDecorator(KeyringsDto)\n  public async remove(\n    @Param('_id', ObjectIdValidationPipe) _id: Types.ObjectId,\n    @Res() res: Response,\n  ): Promise {\n    const data = await this._service.delete(_id);\n    return res.status(HttpStatus.OK).json({\n      statusCode: HttpStatus.OK,\n      data,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsCreateDto.html":{"url":"classes/KeyringsCreateDto.html","title":"class - KeyringsCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CustomFieldsDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyringsDto.html":{"url":"classes/KeyringsDto.html","title":"class - KeyringsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyringsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/_dto/keyrings.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            KeyringsCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                _id\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                customFields\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/keyrings/_dto/keyrings.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({each: true})@IsIP(4, {each: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         KeyringsCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         KeyringsCreateDto:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        customFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CustomFieldsDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CustomFieldsDto:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString, IsIP, IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CustomFieldsDto } from '~/_common/abstracts/dto/custom-fields.dto';\n\nexport class KeyringsCreateDto extends CustomFieldsDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty()\n  public token: string;\n\n  @IsString({ each: true })\n  @IsIP(4, { each: true })\n  public allowedNetworks?: string[];\n\n  @IsDateString()\n  public suspendedAt?: Date;\n}\n\nexport class KeyringsDto extends KeyringsCreateDto {\n  @IsMongoId()\n  @ApiProperty({ type: String })\n  public _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyringsModule.html":{"url":"modules/KeyringsModule.html","title":"module - KeyringsModule","body":"\n                   \n\n\n\n\n    Modules\n    KeyringsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_providers\n\n\n\n\nKeyringsService\n\nKeyringsService\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/keyrings/keyrings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KeyringsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KeyringsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { KeyringsSchema, Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { KeyringsService } from './keyrings.service';\nimport { KeyringsController } from './keyrings.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Keyrings.name,\n        useFactory: () => KeyringsSchema,\n      },\n    ]),\n  ],\n  providers: [KeyringsService],\n  controllers: [KeyringsController],\n})\nexport class KeyringsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyringsService.html":{"url":"injectables/KeyringsService.html","title":"injectable - KeyringsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  KeyringsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/keyrings/keyrings.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractServiceSchema\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _model\n                            \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                count\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAndCount\n                            \n                            \n                                    Public\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Public\n                                    Async\n                                upsert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_model: Model)\n                    \n                \n                        \n                            \n                                Defined in src/core/keyrings/keyrings.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _model\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        count\n                        \n                    \n                \n            \n            \n                \n                        \n                    count(filter?: FilterQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:42\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:149\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:304\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:32\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAndCount\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:48\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(_id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:82\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:115\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(_id: Types.ObjectId | any, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:191\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        upsert\n                        \n                    \n                \n            \n            \n                \n                        \n                    upsert(filter: FilterQuery, update: UpdateQuery, options?: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AbstractServiceSchema\n\n                        \n                    \n                    \n                        \n                                Defined in         AbstractServiceSchema:248\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractServiceSchema\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractServiceSchema:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Keyrings } from '~/core/keyrings/_schemas/keyrings.schema';\nimport { Model } from 'mongoose';\nimport { AbstractServiceSchema } from '~/_common/abstracts/abstract.service.schema';\n\n@Injectable()\nexport class KeyringsService extends AbstractServiceSchema {\n  constructor(@InjectModel(Keyrings.name) protected _model: Model) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/auth/_strategies/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/auth/_strategies/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(_: Request, username: string, password: string, done: (error: any,user: Express.User | ,options: IVerifyOptions) => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/auth/_strategies/local.strategy.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                done\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '~/core/auth/auth.service';\nimport { IVerifyOptions, Strategy } from 'passport-local';\nimport { Request } from 'express';\nimport { ExcludeAgentType, AgentType } from '~/_common/types/agent.type';\nimport { omit } from 'radash';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  public constructor(private readonly auth: AuthService) {\n    super({\n      passReqToCallback: true,\n    });\n  }\n\n  //TODO: change any\n  public async validate(\n    _: Request,\n    username: string,\n    password: string,\n    // eslint-disable-next-line\n    done: (error: any, user?: Express.User | false, options?: IVerifyOptions) => void,\n  ): Promise {\n    Logger.debug(`Try to authenticate user : ${username}`, 'LocalStrategy');\n    const user = await this.auth.authenticateWithLocal(username, password);\n    console.log(user);\n    if (!user) done(new UnauthorizedException(), false);\n    // if (user.state.current !== IdentityState.ACTIVE) done(new ForbiddenException(), false)\n    done(null, omit(user.toObject(), ExcludeAgentType) as AgentType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/schemas/logger.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AbstractSchema } from '~/_common/abstracts/schemas/abstract.schema';\n\nexport type LoggerDocument = Logger & Document;\n\n@Schema({ versionKey: false })\nexport class Logger extends AbstractSchema {}\n\nexport const LoggerSchema = SchemaFactory.createForClass(Logger);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                logger\n            \n\n\n\n            \n                Extends\n            \n            \n            \n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { AbstractController } from '~/_common/abstracts/abstract.controller';\n\n@Controller('logger')\nexport class LoggerController extends AbstractController {\n  constructor(private readonly _service: LoggerService) {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LoggerSchema, Logger } from './schemas/logger.schema';\nimport { LoggerService } from './logger.service';\nimport { LoggerController } from './logger.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Logger.name,\n        useFactory: () => LoggerSchema,\n      },\n    ]),\n  ],\n  providers: [LoggerService],\n  controllers: [LoggerController],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AbstractService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                _req\n                            \n                            \n                                    Protected\n                                    Optional\n                                eventEmitter\n                            \n                            \n                                    Protected\n                                logger\n                            \n                            \n                                    Protected\n                                moduleRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/logger/logger.service.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        _req\n                        \n                    \n                \n            \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Optional\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitter2\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        moduleRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ModuleRef\n\n                    \n                \n                        \n                            \n                                Inherited from         AbstractService\n\n                            \n                        \n                    \n                        \n                                Defined in         AbstractService:18\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AbstractService } from '~/_common/abstracts/abstract.service';\n\n@Injectable()\nexport class LoggerService extends AbstractService {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ManagementController.html":{"url":"controllers/ManagementController.html","title":"controller - ManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('management')\n@Controller('management')\nexport class ManagementController {\n  public constructor(private readonly _service: ManagementService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ManagementService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IdentitiesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register()\n                \n            \n\n\n                    \n                        \n                            Defined in src/management/management.module.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     DynamicModule\n\n                        \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ManagementService } from './management.service';\nimport { ManagementController } from './management.controller';\nimport { RouterModule } from '@nestjs/core';\nimport { IdentitiesModule } from './identities/identities.module';\n\n@Module({\n  imports: [IdentitiesModule],\n  providers: [ManagementService],\n  controllers: [ManagementController],\n})\nexport class ManagementModule {\n  public static register(): DynamicModule {\n    return {\n      module: this,\n      imports: [\n        RouterModule.register([\n          {\n            path: 'management',\n            children: [...Reflect.getMetadata('imports', this)],\n          },\n        ]),\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManagementService.html":{"url":"injectables/ManagementService.html","title":"injectable - ManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/management.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/management/management.service.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ManagementService {\n  public constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataDto.html":{"url":"classes/MetadataDto.html","title":"class - MetadataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/metadata.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                metadata\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MetadataPartDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@IsOptional()@ValidateNested()@Type(undefined)@ApiProperty({type: MetadataPartDto})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/metadata.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject, IsOptional, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { MetadataPartDto } from './parts/metadata.part.dto';\n\nexport class MetadataDto {\n  @IsObject()\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => MetadataPartDto)\n  @ApiProperty({ type: MetadataPartDto })\n  public metadata?: MetadataPartDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPart.html":{"url":"classes/MetadataPart.html","title":"class - MetadataPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createdAt\n                            \n                            \n                                    \n                                    Public\n                                createdBy\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    Public\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/schemas/parts/metadata.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class MetadataPart extends Document {\n  @Prop({ type: String })\n  public createdBy: string;\n\n  @Prop({ type: Date })\n  public createdAt: Date;\n\n  @Prop({ type: String })\n  public lastUpdatedBy: string;\n\n  @Prop({ type: Date })\n  public lastUpdatedAt: Date;\n}\n\nexport const MetadataPartSchema = SchemaFactory.createForClass(MetadataPart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MetadataPartDto.html":{"url":"classes/MetadataPartDto.html","title":"class - MetadataPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MetadataPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/dto/parts/metadata.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastUpdatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastUpdatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/abstracts/dto/parts/metadata.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsOptional, IsDate } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class MetadataPartDto {\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public createdBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public createdAt?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedBy?: string;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastUpdatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDbTestInstance.html":{"url":"classes/MongoDbTestInstance.html","title":"class - MongoDbTestInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDbTestInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/tests/mongodb.test.instance.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mongoConnection\n                            \n                            \n                                mongod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearDatabase\n                            \n                            \n                                    Async\n                                getModel\n                            \n                            \n                                    Async\n                                start\n                            \n                            \n                                    Async\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        mongoConnection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Connection\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mongod\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongoMemoryServer\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/tests/mongodb.test.instance.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        clearDatabase\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearDatabase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getModel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getModel(name: string, schema: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:31\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                schema\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        start\n                        \n                    \n                \n            \n            \n                \n                        \n                    start()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        stop\n                        \n                    \n                \n            \n            \n                \n                        \n                    stop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/tests/mongodb.test.instance.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoMemoryServer } from 'mongodb-memory-server';\nimport { connect, Connection } from 'mongoose';\n\nexport class MongoDbTestInstance {\n  mongod: MongoMemoryServer;\n  mongoConnection: Connection;\n\n  async start() {\n    this.mongod = await MongoMemoryServer.create({\n      binary: {\n        version: '5.0.22',\n      },\n    });\n    const uri = await this.mongod.getUri();\n    this.mongoConnection = (await connect(uri)).connection;\n  }\n\n  async stop() {\n    await this.mongoConnection.dropDatabase();\n    await this.mongoConnection.close();\n    if (this.mongod) await this.mongod.stop();\n  }\n\n  async clearDatabase() {\n    const collections = this.mongoConnection.collections;\n    for (const key in collections) {\n      await collections[key].deleteMany({});\n    }\n  }\n\n  async getModel(name: string, schema: any) {\n    return this.mongoConnection.model(name, schema);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MongoosePlugin.html":{"url":"interfaces/MongoosePlugin.html","title":"interface - MongoosePlugin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MongoosePlugin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            package\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        package\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        package:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { MongooseModuleOptions } from '@nestjs/mongoose';\nimport { RedisOptions } from 'ioredis';\nimport { HelmetOptions } from 'helmet';\nimport { SwaggerCustomOptions } from '@nestjs/swagger';\nimport { IAuthModuleOptions } from '@nestjs/passport';\nimport { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface MongoosePlugin {\n  package: string;\n  enabled?: boolean;\n  options?: Record; // eslint-disable-line @typescript-eslint/no-explicit-any\n}\nexport interface ConfigInstance {\n  application: {\n    logLevel: string;\n    bodyParser: {\n      limit: string;\n    };\n  };\n  helmet: HelmetOptions;\n  mongoose: {\n    uri: string;\n    options: MongooseModuleOptions;\n    plugins: MongoosePlugin[];\n  };\n  ioredis: {\n    uri: string;\n    options: RedisOptions;\n  };\n  passport: {\n    options: IAuthModuleOptions;\n  };\n  jwt: {\n    options: JwtModuleOptions;\n  };\n  swagger: {\n    path: string;\n    api: string;\n    options: SwaggerCustomOptions;\n  };\n  nameQueue: string;\n  secret: string;\n}\n\nexport default (): ConfigInstance => ({\n  application: {\n    logLevel: process.env['LOG_LEVEL'] || 'info',\n    bodyParser: {\n      limit: '500mb',\n    },\n  },\n  helmet: {\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        objectSrc: [\"'self'\"],\n        frameSrc: [\"'self'\"],\n        styleSrc: [\"'self'\"],\n        fontSrc: [\"'self'\"],\n        imgSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\"],\n      },\n    },\n  },\n  ioredis: {\n    uri: process.env['REDIS_URI'] || 'redis://localhost:6379/0',\n    options: {\n      showFriendlyErrorStack: true,\n      maxRetriesPerRequest: null,\n    },\n  },\n  mongoose: {\n    uri: process.env['MONGO_URI'] || 'mongodb://localhost:27017/backend',\n    options: {\n      directConnection: true,\n    },\n    plugins: [],\n  },\n  passport: {\n    options: {\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    },\n  },\n  jwt: {\n    options: {\n      /**\n       * @see https://randomkeygen.com/\n       */\n      secret: process.env['JWT_SECRET'],\n      // jwksUri: 'http://127.0.0.1:2000/jwks',\n    },\n  },\n  nameQueue: process.env['NAME_QUEUE'] || 'backend',\n  secret: process.env['SECRET'] || 'mySecret',\n  swagger: {\n    path: process.env['SWAGGER_PATH'] || '/swagger',\n    api: process.env['SWAGGER_API'] || '/swagger/json',\n    options: {\n      swaggerOptions: {\n        persistAuthorization: true,\n      },\n    },\n  },\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseValidationFilter.html":{"url":"classes/MongooseValidationFilter.html","title":"class - MongooseValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/filters/mongoose-validation.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                            \n                                    Protected\n                                getValidationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        catch\n                        \n                    \n                \n            \n            \n                \n                        \n                    catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        getValidationErrors\n                        \n                    \n                \n            \n            \n                \n                        \n                    getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/filters/mongoose-validation.filter.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error.ValidationError | Error.CastError | ValidationError\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Error } from 'mongoose';\nimport { ValidationError } from 'class-validator';\n\n@Catch(Error.ValidationError, Error.CastError, ValidationError)\nexport class MongooseValidationFilter implements ExceptionFilter {\n  public catch(exception: Error.ValidationError | Error.CastError | ValidationError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    Logger.debug(exception['message'], 'MongooseValidationFilter');\n    const debug = {};\n    if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n      debug['_exception'] = exception;\n    }\n    response.status(HttpStatus.NOT_ACCEPTABLE).json(\n      // @ts-expect-error( )\n      HttpException.createBody(\n        {\n          statusCode: HttpStatus.NOT_ACCEPTABLE,\n          message: exception['message'],\n          validations: this.getValidationErrors(exception),\n          ...debug,\n        },\n        exception.constructor.name,\n        HttpStatus.NOT_ACCEPTABLE,\n      ),\n    );\n  }\n\n  // eslint-disable-next-line\n  protected getValidationErrors(err: Error.ValidationError | Error.CastError | ValidationError): Record {\n    const validations = {};\n    if (err instanceof Error.ValidationError) {\n      for (const key in err.errors) {\n        if (err.errors[key]['constraints']) {\n          Object.keys(err.errors[key]['constraints']).forEach((ckey) => {\n            const property = err.errors[key]['property'];\n            validations[`${key}.${property}`] = err.errors[key]['constraints'][ckey];\n          });\n          continue;\n        }\n        validations[key] = err.errors[key].message;\n      }\n    } else if (err instanceof Error.CastError) {\n      validations[err.path] = err.message;\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundDto.html":{"url":"classes/NotFoundDto.html","title":"class - NotFoundDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/not-found.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                message\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/not-found.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class NotFoundDto {\n  @ApiProperty({ enum: [HttpStatus.NOT_FOUND] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ObjectIdValidationPipe.html":{"url":"injectables/ObjectIdValidationPipe.html","title":"injectable - ObjectIdValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ObjectIdValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/object-id-validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                        \n                    transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/pipes/object-id-validation.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Types.ObjectId\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ObjectIdValidationPipe implements PipeTransform {\n  /* eslint-disable */\n  public transform(value: string | Types.ObjectId, _metadata: ArgumentMetadata): Types.ObjectId {\n    if (!Types.ObjectId.isValid(value)) {\n      throw new BadRequestException(`Invalid ObjectId `);\n    }\n    return new Types.ObjectId(value);\n  }\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedFilterDto.html":{"url":"classes/PaginatedFilterDto.html","title":"class - PaginatedFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-filter.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/dto/paginated-filter.dto.ts:1\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatedFilterDto {\n  // eslint-disable-next-line\n  [key: string]: any\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResponseDto.html":{"url":"classes/PaginatedResponseDto.html","title":"class - PaginatedResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/dto/paginated-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                    \n                                    Public\n                                statusCode\n                            \n                            \n                                    \n                                    Public\n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TData[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_common/dto/paginated-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { HttpStatus } from '@nestjs/common';\n\nexport class PaginatedResponseDto> {\n  @ApiProperty({ enum: [HttpStatus.OK] })\n  public statusCode: HttpStatus;\n\n  @ApiProperty()\n  public total: number;\n\n  @ApiProperty()\n  public data: TData[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RawBodyBufferOptions.html":{"url":"interfaces/RawBodyBufferOptions.html","title":"interface - RawBodyBufferOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RawBodyBufferOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/middlewares/raw-body-buffer.middleware.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blacklistedHeaders\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            whitelistedHeaders\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blacklistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blacklistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelistedHeaders\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelistedHeaders:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import * as bodyParser from 'body-parser';\n\nexport interface RawBodyBufferOptions {\n  whitelistedHeaders?: string[];\n  blacklistedHeaders?: string[];\n  limit?: string;\n}\n\nexport function rawBodyBuffer(options?: RawBodyBufferOptions) {\n  return [bodyParser.urlencoded({ limit: options.limit, extended: true }), bodyParser.json({ limit: options.limit })];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPart.html":{"url":"classes/SecurityPart.html","title":"class - SecurityPart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/parts/security.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    Public\n                                secretKey\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/security.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/security.part.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/security.part.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/security.part.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/security.part.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/security.part.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ _id: false })\nexport class SecurityPart extends Document {\n  @Prop({\n    type: [String],\n    default: [],\n  })\n  public oldPasswords?: string[];\n\n  @Prop({\n    type: String,\n  })\n  public otpKey?: string;\n\n  @Prop({\n    type: [String],\n  })\n  public u2fKey?: string[];\n\n  @Prop({\n    type: [String],\n  })\n  public allowedNetworks?: string[];\n\n  @Prop({\n    type: Boolean,\n    default: false,\n  })\n  public changePwdAtNextLogin: boolean;\n\n  @Prop({\n    type: Boolean,\n  })\n  public secretKey: string;\n}\n\nexport const SecurityPartSchema = SchemaFactory.createForClass(SecurityPart).pre(\n  'save',\n  function (this: SecurityPart, next: () => void): void {\n    if (this.isNew) {\n      this.secretKey = Math.random().toString(36).slice(-8); //TODO: use crypto lib\n    }\n    next();\n  },\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SecurityPartDTO.html":{"url":"classes/SecurityPartDTO.html","title":"class - SecurityPartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SecurityPartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/security.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                allowedNetworks\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                changePwdAtNextLogin\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                oldPasswords\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                otpKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                secretKey\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                u2fKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        allowedNetworks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        changePwdAtNextLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        oldPasswords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        otpKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        secretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                            Optional\n                        u2fKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsString({each: true})@IsOptional()@ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/security.part.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsArray, IsBoolean, IsOptional } from 'class-validator';\n\nexport class SecurityPartDTO {\n  @IsArray()\n  @IsString({ each: true })\n  @ApiProperty({ type: [String] })\n  public oldPasswords?: string[];\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public otpKey?: string;\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public u2fKey?: string[];\n\n  @IsArray()\n  @IsString({ each: true })\n  @IsOptional()\n  @ApiProperty({ type: [String] })\n  public allowedNetworks?: string[];\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public changePwdAtNextLogin: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  @ApiProperty()\n  public secretKey?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceSchemaInterface.html":{"url":"interfaces/ServiceSchemaInterface.html","title":"interface - ServiceSchemaInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceSchemaInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/abstracts/interfaces/service.schema.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        count\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        findAndCount\n                                    \n                                \n                                \n                                    \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n            \n                \ncount(filter?: FilterQuery, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:22\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data?: any, options?: SaveOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:42\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        SaveOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:50\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:16\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAndCount\n                        \n                    \n                \n            \n            \n                \nfindAndCount(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:24\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: Types.ObjectId | any, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:30\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(filter?: FilterQuery, projection?: ProjectionType | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:36\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        FilterQuery\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                projection\n                                            \n                                                        ProjectionType | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(_id: Types.ObjectId | any, update: UpdateQuery | null | undefined, options?: QueryOptions | null | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/abstracts/interfaces/service.schema.interface.ts:44\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _id\n                                            \n                                                        Types.ObjectId | any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        UpdateQuery | null | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions | null | undefined\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise>>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Document,\n  FilterQuery,\n  ModifyResult,\n  ProjectionType,\n  Query,\n  QueryOptions,\n  SaveOptions,\n  Types,\n  UpdateQuery,\n} from 'mongoose';\nimport { AbstractSchema } from '../schemas/abstract.schema';\n\nexport interface ServiceSchemaInterface {\n  /* eslint-disable */\n  find(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise, T, any, T>[]>\n\n  count(filter?: FilterQuery, options?: QueryOptions | null | undefined): Promise\n\n  findAndCount(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>, number]>\n\n  findById(\n    id: Types.ObjectId | any,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  findOne(\n    filter?: FilterQuery,\n    projection?: ProjectionType | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>\n\n  create(data?: any, options?: SaveOptions): Promise>\n\n  update(\n    _id: Types.ObjectId | any,\n    update: UpdateQuery | null | undefined,\n    options?: QueryOptions | null | undefined,\n  ): Promise>>\n\n  delete(_id: Types.ObjectId | any, options?: QueryOptions | null | undefined): Promise>\n  /* eslint-enable */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePart.html":{"url":"classes/StatePart.html","title":"class - StatePart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_schemas/parts/state.part.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Number, enum: AgentStateList, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/state.part.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/state.part.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/state.part.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/state.part.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_schemas/parts/state.part.schema.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { AgentState, AgentStateList } from '~/core/agents/_enum/agent-state.enum';\n\n@Schema({ _id: false })\nexport class StatePart extends Document {\n  @Prop({\n    required: true,\n    type: Number,\n    enum: AgentStateList,\n    default: AgentState.PENDING,\n  })\n  public current: number;\n\n  @Prop({\n    type: Date,\n    default: new Date(),\n  })\n  public lastChangedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedAt?: Date;\n\n  @Prop({ type: Date })\n  public suspendedUntil?: Date;\n\n  @Prop({ type: String })\n  public suspendedReason?: string;\n}\n\nexport const StatePartSchema = SchemaFactory.createForClass(StatePart);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatePartDTO.html":{"url":"classes/StatePartDTO.html","title":"class - StatePartDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatePartDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/agents/_dto/parts/state.part.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                current\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                lastChangedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedReason\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Optional\n                                suspendedUntil\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        lastChangedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedReason\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                            Optional\n                        suspendedUntil\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/agents/_dto/parts/state.part.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsNotEmpty, IsNumber, IsDate, IsOptional } from 'class-validator';\n\nexport class StatePartDTO {\n  @IsNumber()\n  @IsNotEmpty()\n  @ApiProperty()\n  public current: number;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public lastChangedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedAt?: Date;\n\n  @IsDate()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedUntil?: Date;\n\n  @IsString()\n  @IsOptional()\n  @ApiProperty()\n  public suspendedReason?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketForm.html":{"url":"interfaces/TicketForm.html","title":"interface - TicketForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            submitApiUrl\n                                        \n                                \n                                \n                                        \n                                            submitButtonText\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitApiUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitApiUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitButtonText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormField.html":{"url":"interfaces/TicketFormField.html","title":"interface - TicketFormField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attrsOnCreate\n                                        \n                                \n                                \n                                        \n                                            attrsOnDefault\n                                        \n                                \n                                \n                                        \n                                            attrsOnDelete\n                                        \n                                \n                                \n                                        \n                                            attrsOnRead\n                                        \n                                \n                                \n                                        \n                                            attrsOnUpdate\n                                        \n                                \n                                \n                                        \n                                            col\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            model-value\n                                        \n                                \n                                \n                                        \n                                            row\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnCreate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDefault\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDefault:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnDelete\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnDelete:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnRead\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnRead:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attrsOnUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attrsOnUpdate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        col\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        col:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model-value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model-value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        row:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketFormSection.html":{"url":"interfaces/TicketFormSection.html","title":"interface - TicketFormSection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketFormSection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/form/_interface/form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fields\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sections\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fields:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sections\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sections:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         FormTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FormTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FormTypes } from '../_enum/types';\nimport { MixedValue } from '~/_common/types/mixed-value.type';\n\ninterface TicketFormField {\n  component: string;\n  label: string;\n  'model-value': string;\n  row: number;\n  col: number;\n  attrsOnDefault: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnCreate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnRead: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnUpdate: {\n    [attr: string]: MixedValue;\n  };\n  attrsOnDelete: {\n    [attr: string]: MixedValue;\n  };\n}\n\ninterface TicketFormSection {\n  label: string;\n  type: FormTypes;\n  sections?: {\n    [sectionName: string]: TicketFormSection;\n  };\n  fields: {\n    [fieldName: string]: TicketFormField;\n  };\n}\n\n/* eslint-disable */\ninterface TicketForm {\n  title: string;\n  description: string;\n  type: FormTypes;\n  sections: {\n    [sectionName: string]: TicketFormSection;\n  };\n  submitButtonText: string;\n  submitApiUrl: string;\n}\n/* eslint-enable */\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationConfigException.html":{"url":"classes/ValidationConfigException.html","title":"class - ValidationConfigException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationConfigException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationException.html":{"url":"classes/ValidationException.html","title":"class - ValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/_common/errors/ValidationException.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/_common/errors/ValidationException.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationRecursive.html":{"url":"interfaces/ValidationRecursive.html","title":"interface - ValidationRecursive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationRecursive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/pipes/dto-validation.pipe.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/_common/pipes/dto-validation.pipe.ts:14\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  HttpStatus,\n  ValidationPipe,\n  ValidationError,\n  Logger,\n  Injectable,\n  Scope,\n  Inject,\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\ninterface ValidationRecursive {\n  [key: string]: string;\n}\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe extends ValidationPipe {\n  public constructor(@Inject(REQUEST) protected readonly request: Request) {\n    super({\n      transform: true,\n      transformOptions: {\n        enableImplicitConversion: true,\n      },\n      exceptionFactory: (errors: ValidationError[]) => {\n        let validations: ValidationRecursive = {};\n        for (const error of errors) {\n          validations = { ...validations, ...this.validationRecursive(error) };\n        }\n        const debug = {};\n        const message = `Erreur de validation : ${Object.keys(validations).join(', ')}`.trim();\n        Logger.debug(`${message} (${JSON.stringify(validations)})`, 'DtoValidationPipe');\n        // noinspection JSUnresolvedReference\n        if (process.env.NODE_ENV !== 'production' && request.query['debug']) {\n          debug['_errors'] = errors.map((error) => {\n            delete error['target'];\n            return error;\n          });\n        }\n        return new BadRequestException({\n          statusCode: HttpStatus.BAD_REQUEST,\n          message,\n          validations,\n          ...debug,\n        });\n      },\n    });\n  }\n\n  public validationRecursive(error: ValidationError, prefix = ''): ValidationRecursive {\n    let validations = {};\n    if (error.constraints) {\n      validations[`${prefix + error.property}`] = Object.values(error.constraints)[0];\n    }\n    if (error.children.length > 0) {\n      for (const errorChild of error.children) {\n        if (errorChild.constraints) {\n          validations[`${prefix + error.property}.${errorChild.property}`] = Object.values(errorChild.constraints)[0];\n        }\n        if (errorChild.children.length > 0) {\n          validations = {\n            ...validations,\n            ...this.validationRecursive(errorChild, `${prefix + error.property}.${errorChild.property}.`),\n          };\n        }\n      }\n    }\n    return validations;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationSchemaException.html":{"url":"classes/ValidationSchemaException.html","title":"class - ValidationSchemaException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationSchemaException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_common/errors/ValidationException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ValidationException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                validations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPayload\n                            \n                            \n                                getValidations\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: ValidationExceptionPayload)\n                    \n                \n                        \n                            \n                                Defined in src/_common/errors/ValidationException.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        ValidationExceptionPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        validations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         ValidationException\n\n                            \n                        \n                    \n                        \n                                Defined in         ValidationException:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPayload\n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:22\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ValidationExceptionPayload\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValidations\n                        \n                    \n                \n            \n            \n                \ngetValidations()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ValidationException\n\n                        \n                    \n                    \n                        \n                                Defined in         ValidationException:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from '@nestjs/common';\nimport { ValidationExceptionPayload } from '~/_common/types/validation-exception-payload.type';\n\nconst DEFAULT_STATUS_CODE = 400;\nconst DEFAULT_MESSAGE = 'Validation failed';\nconst DEFAULT_VALIDATIONS: Record = {};\n\nexport class ValidationException extends HttpException {\n  private readonly validations: Record;\n\n  constructor(payload: ValidationExceptionPayload) {\n    const { message, validations, statusCode } = payload;\n    super(message || DEFAULT_MESSAGE, statusCode || DEFAULT_STATUS_CODE);\n    this.name = this.constructor.name;\n    this.validations = validations || DEFAULT_VALIDATIONS;\n  }\n\n  getValidations(): Record {\n    return this.validations;\n  }\n\n  getPayload(): ValidationExceptionPayload {\n    return {\n      message: this.message,\n      statusCode: this.getStatus(),\n      validations: this.validations,\n    };\n  }\n}\n\nexport class ValidationSchemaException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong schema validation';\n    super(payload);\n  }\n}\n\nexport class ValidationConfigException extends ValidationException {\n  constructor(payload: ValidationExceptionPayload) {\n    payload.message = payload.message || 'Wrong config validation';\n    super(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/additionalFieldsPartDto.html":{"url":"classes/additionalFieldsPartDto.html","title":"class - additionalFieldsPartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  additionalFieldsPartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/additionalFields.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                attributes\n                            \n                            \n                                    \n                                objectClasses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'object', name: 'attributes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        objectClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'array', items: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/additionalFields.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class additionalFieldsPartDto {\n  @ApiProperty({\n    type: 'array',\n    items: {\n      type: 'string',\n    },\n  })\n  objectClasses: string[];\n\n  @ApiProperty({\n    type: 'object',\n    name: 'attributes',\n  })\n  attributes: { [key: string]: any };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/_common/abstracts/abstract.controller.ts\n            \n            class\n            AbstractController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.controller.ts\n            \n            interface\n            AbstractControllerContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.queue.processor.ts\n            \n            class\n            AbstractQueueProcessor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.service.schema.ts\n            \n            injectable\n            AbstractServiceSchema\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.service.ts\n            \n            injectable\n            AbstractService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_common/abstracts/abstract.service.ts\n            \n            interface\n            AbstractServiceContext\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/abstracts/dto/custom-fields.dto.ts\n            \n            class\n            CustomFieldsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/abstracts/dto/metadata.dto.ts\n            \n            class\n            MetadataDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/abstracts/dto/parts/metadata.part.dto.ts\n            \n            class\n            MetadataPartDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/abstracts/interfaces/service.schema.interface.ts\n            \n            interface\n            ServiceSchemaInterface\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/_common/abstracts/schemas/abstract.schema.ts\n            \n            class\n            AbstractSchema\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n            \n            class\n            MetadataPart\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n            \n            variable\n            MetadataPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/constants/event-emitter.constant.ts\n            \n            variable\n            EventEmitterSeparator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/data/console-session.ts\n            \n            class\n            ConsoleSession\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-body.decorator.ts\n            \n            variable\n            ApiBodyDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-create.decorator.ts\n            \n            variable\n            ApiCreateDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-created-response.decorator.ts\n            \n            variable\n            ApiCreatedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-deleted-response.decorator.ts\n            \n            variable\n            ApiDeletedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-paginated-response.decorator.ts\n            \n            variable\n            ApiPaginatedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-paginated.decorator.ts\n            \n            variable\n            ApiPaginatedDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-read-response.decorator.ts\n            \n            variable\n            ApiReadResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-update.decorator.ts\n            \n            variable\n            ApiUpdateDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/api-updated-response.decorator.ts\n            \n            variable\n            ApiUpdatedResponseDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/params/req-identity.decorator.ts\n            \n            variable\n            ReqIdentity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/public.decorator.ts\n            \n            variable\n            META_UNPROTECTED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/dto/error-schema.dto.ts\n            \n            class\n            ErrorSchemaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/dto/not-found.dto.ts\n            \n            class\n            NotFoundDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/dto/paginated-filter.dto.ts\n            \n            class\n            PaginatedFilterDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/dto/paginated-response.dto.ts\n            \n            class\n            PaginatedResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/errors/ValidationException.ts\n            \n            class\n            ValidationConfigException\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/errors/ValidationException.ts\n            \n            class\n            ValidationException\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/errors/ValidationException.ts\n            \n            class\n            ValidationSchemaException\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/_common/errors/ValidationException.ts\n            \n            variable\n            DEFAULT_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/errors/ValidationException.ts\n            \n            variable\n            DEFAULT_STATUS_CODE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/errors/ValidationException.ts\n            \n            variable\n            DEFAULT_VALIDATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/filters/all-exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/filters/identities-validation.filter.ts\n            \n            class\n            IdentitiesValidationFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/filters/mongoose-validation.filter.ts\n            \n            class\n            MongooseValidationFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/functions/get-log-level.ts\n            \n            function\n            getLogLevel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/guards/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/helpers/pick-projection.helper.ts\n            \n            function\n            PickProjectionHelper\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/interceptors/file-raw-body.interceptor.ts\n            \n            function\n            FileRawBodyInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/middlewares/raw-body-buffer.middleware.ts\n            \n            interface\n            RawBodyBufferOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/_common/middlewares/raw-body-buffer.middleware.ts\n            \n            function\n            rawBodyBuffer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/pipes/dto-validation.pipe.ts\n            \n            injectable\n            DtoValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/_common/pipes/dto-validation.pipe.ts\n            \n            interface\n            ValidationRecursive\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/pipes/object-id-validation.pipe.ts\n            \n            injectable\n            ObjectIdValidationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.interface.ts\n            \n            interface\n            AutoIncrementPluginOptions\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.interface.ts\n            \n            interface\n            AutoIncrementPluginTrackerSpec\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.logger.ts\n            \n            variable\n            LogLevels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.logger.ts\n            \n            variable\n            setLogLevel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            function\n            AutoIncrementPlugin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            function\n            isNullOrUndefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            variable\n            AutoIncrementIDSkipSymbol\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            variable\n            DEFAULT_INCREMENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/plugins/mongoose/auto-increment.plugin.ts\n            \n            variable\n            IDSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/mock.model.ts\n            \n            function\n            createMockModel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/_common/tests/mock.service.ts\n            \n            function\n            createMockService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/_common/tests/mongodb.test.instance.ts\n            \n            class\n            MongoDbTestInstance\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            createAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            createErrorAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            deleteAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            deleteErrorAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            findAndCountAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            findAndCountErrorAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            findByIdAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            findByIdErrorAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            findOneAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            findOneErrorAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            updateAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/tests/service.assertions.utils.ts\n            \n            function\n            updateErrorAssertions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_common/types/agent.type.ts\n            \n            variable\n            ExcludeAgentType\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            interface\n            ConfigInstance\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            interface\n            MongoosePlugin\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/agents/_dto/agents.dto.ts\n            \n            class\n            AgentsCreateDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/core/agents/_dto/agents.dto.ts\n            \n            class\n            AgentsDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/core/agents/_dto/agents.dto.ts\n            \n            class\n            AgentsUpdateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/agents/_dto/parts/security.part.dto.ts\n            \n            class\n            SecurityPartDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/agents/_dto/parts/state.part.dto.ts\n            \n            class\n            StatePartDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/agents/_enum/agent-state.enum.ts\n            \n            variable\n            AgentStateList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/agents.schema.ts\n            \n            class\n            Agents\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/agents.schema.ts\n            \n            variable\n            AgentsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/agents.schema.ts\n            \n            variable\n            DEFAULT_THIRD_PARTY_AUTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/parts/security.part.schema.ts\n            \n            class\n            SecurityPart\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/parts/security.part.schema.ts\n            \n            variable\n            SecurityPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/parts/state.part.schema.ts\n            \n            class\n            StatePart\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/agents/_schemas/parts/state.part.schema.ts\n            \n            variable\n            StatePartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/agents/agents.controller.ts\n            \n            controller\n            AgentsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/agents/agents.service.ts\n            \n            injectable\n            AgentsService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/auth/_strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/auth/_strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/core/backends/backends.controller.ts\n            \n            controller\n            BackendsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/backends/backends.service.ts\n            \n            injectable\n            BackendsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/core.controller.ts\n            \n            controller\n            CoreController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/core.service.ts\n            \n            injectable\n            CoreService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/form/_dto/form.dto.ts\n            \n            class\n            FormCreateDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/form/_dto/form.dto.ts\n            \n            class\n            FormDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/form/_dto/form.dto.ts\n            \n            class\n            FormUpdateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/form/_dto/parts/field.dto.ts\n            \n            class\n            FormFieldDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/form/_dto/parts/section.dto.ts\n            \n            class\n            FormSectionDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/form/_enum/types.ts\n            \n            variable\n            FormTypeList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/form/_interface/form.interface.ts\n            \n            interface\n            TicketForm\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/form/_interface/form.interface.ts\n            \n            interface\n            TicketFormField\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/form/_interface/form.interface.ts\n            \n            interface\n            TicketFormSection\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/form/_schemas/form.schema.ts\n            \n            class\n            Form\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/form/_schemas/form.schema.ts\n            \n            variable\n            FormSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/form/_schemas/parts/field.part.schema.ts\n            \n            class\n            FormFieldPart\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/form/_schemas/parts/field.part.schema.ts\n            \n            variable\n            FormFieldPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/form/_schemas/parts/section.part.schema.ts\n            \n            class\n            FormSectionPart\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/core/form/_schemas/parts/section.part.schema.ts\n            \n            variable\n            FormSectionPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/form/form.controller.ts\n            \n            controller\n            FormController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/keyrings/_dto/keyrings.dto.ts\n            \n            class\n            KeyringsCreateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/keyrings/_dto/keyrings.dto.ts\n            \n            class\n            KeyringsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/keyrings/_schemas/keyrings.schema.ts\n            \n            class\n            Keyrings\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/keyrings/_schemas/keyrings.schema.ts\n            \n            variable\n            KeyringsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/keyrings/keyrings.controller.ts\n            \n            controller\n            KeyringsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/keyrings/keyrings.service.ts\n            \n            injectable\n            KeyringsService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/core/logger/internal.logger.ts\n            \n            injectable\n            InternalLogger\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/core/logger/internal.logger.ts\n            \n            interface\n            InternalLoggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/logger/internal.logger.ts\n            \n            interface\n            InternalLogOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/logger/logger.controller.ts\n            \n            controller\n            LoggerController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/logger/schemas/logger.schema.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/logger/schemas/logger.schema.ts\n            \n            variable\n            LoggerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/additionalFields.dto.ts\n            \n            class\n            additionalFieldsPartDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n            \n            class\n            inetOrgPersonCreateDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n            \n            class\n            inetOrgPersonDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n            \n            class\n            inetOrgPersonUpdateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/identities.dto.ts\n            \n            class\n            IdentitiesCreateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/identities.dto.ts\n            \n            class\n            IdentitiesDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/_dto/identities.dto.ts\n            \n            class\n            IdentitiesUpdateDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n            \n            class\n            AdditionalFieldsPart\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n            \n            variable\n            AdditionalFieldsPartSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n            \n            class\n            inetOrgPerson\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n            \n            variable\n            inetOrgPersonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/identities.schema.ts\n            \n            class\n            Identities\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/_schemas/identities.schema.ts\n            \n            variable\n            IdentitiesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/_parts/addtionalFields.dto.stub.ts\n            \n            variable\n            additionalFieldsPartDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/_parts/inetOrgPerson.dto.stub.ts\n            \n            variable\n            inetOrgPersonDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/identities.dto.stub.ts\n            \n            variable\n            IdentitiesDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/_stubs/identities.dto.stub.ts\n            \n            variable\n            IdentitiesUpdateDtoStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/identities.controller.ts\n            \n            controller\n            IdentitiesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/management/identities/identities.module.ts\n            \n            function\n            handleValidationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/identities.service.ts\n            \n            injectable\n            IdentitiesService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_config/validSchema.ts\n            \n            variable\n            validSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_dto/config.dto.ts\n            \n            class\n            ConfigObjectAttributeDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_dto/config.dto.ts\n            \n            class\n            ConfigObjectObjectClassDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_dto/config.dto.ts\n            \n            class\n            ConfigObjectSchemaDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            invalidObjectClassAdditionalFieldsStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            invalidRequiredAdditionalFieldsStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            invalidSchemaStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            invalidTypeAdditionalFieldsStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            missingAttributeAdditionalFieldsStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            validAdditionalFieldsStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/_stubs/identities.validation.stub.ts\n            \n            variable\n            validSchemaStub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/identities/validations/identities.validation.controller.ts\n            \n            controller\n            IdentitiesValidationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/management/identities/validations/identities.validation.service.ts\n            \n            injectable\n            IdentitiesValidationService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/management/management.controller.ts\n            \n            controller\n            ManagementController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/management/management.service.ts\n            \n            injectable\n            ManagementService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/swagger.ts\n            \n            function\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @kradihsoy/lt-schematics : ^1.0.13\n        \n            @nestjs-modules/ioredis : ^1.0.1\n        \n            @nestjs/bullmq : ^10.0.1\n        \n            @nestjs/common : ^10.1.3\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.1.3\n        \n            @nestjs/event-emitter : ^2.0.3\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.3.1\n        \n            @streamkits/nestjs_module_scrud : ^0.0.16\n        \n            ajv : ^8.12.0\n        \n            ajv-errors : ^3.0.0\n        \n            argon2 : ^0.40.1\n        \n            bullmq : ^4.14.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            helmet : ^7.1.0\n        \n            ioredis : ^5.3.2\n        \n            loglevel : ^1.8.1\n        \n            mongoose : ^8.0.2\n        \n            nest-winston : ^1.9.4\n        \n            nestjs-request-context : ^3.0.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            radash : ^11.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-ip : ^3.3.0\n        \n            rxjs : ^7.8.1\n        \n            schema-to-yup : ^1.12.18\n        \n            types-package-json : ^2.0.39\n        \n            winston : ^3.11.0\n        \n            winston-mongodb : ^5.1.1\n        \n            winston-transport : ^4.6.0\n        \n            yaml : ^2.3.4\n        \n            yup : ^1.3.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentState   (src/.../agent-state.enum.ts)\n                        \n                        \n                            ConfigObjectType   (src/.../config.object.ts)\n                        \n                        \n                            FormTypes   (src/.../types.ts)\n                        \n                        \n                            IdentityLifecycle   (src/.../lifecycle.enum.ts)\n                        \n                        \n                            IdentityState   (src/.../states.enum.ts)\n                        \n                        \n                            InternalLogLevel   (src/.../internal.logger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        AgentState\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n    src/management/identities/validations/_enums/config.object.ts\n    \n        \n            \n                \n                    \n                        \n                        ConfigObjectType\n                    \n                \n                        \n                            \n                                 string\n                            \n                        \n                        \n                            \n                                 date\n                            \n                        \n                        \n                            \n                                 number\n                            \n                        \n            \n        \n\n    src/core/form/_enum/types.ts\n    \n        \n            \n                \n                    \n                        \n                        FormTypes\n                    \n                \n                        \n                            \n                                 BASE\n                            \n                        \n                        \n                            \n                                 STEPS\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TABS\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/lifecycle.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityLifecycle\n                    \n                \n                        \n                            \n                                 IMPORTED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 OFFICIAL\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 PROVISIONAL\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n            \n        \n\n    src/management/identities/_enums/states.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IdentityState\n                    \n                \n                        \n                            \n                                 SYNCED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 TO_SYNC\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 TO_VALIDATE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                 TO_CREATE\n                            \n                        \n                        \n                            \n                                 TO_COMPLETE\n                            \n                        \n                        \n                            \n                                 ON_ERROR\n                            \n                        \n            \n        \n\n    src/core/logger/internal.logger.ts\n    \n        \n            \n                \n                    \n                        \n                        InternalLogLevel\n                    \n                \n                        \n                            \n                                 CONSOLE\n                            \n                        \n                        \n                            \n                                Value : console\n                            \n                        \n                        \n                            \n                                 DB\n                            \n                        \n                        \n                            \n                                Value : db\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\nSésame ochestrator - Synchronisation d'Identités Multi-sources\n\n  \n  \n  \n  \n\n\n\nDescription\nSésame est une application open source conçue pour faciliter la synchronisation d'identités entre différentes sources de données, y compris des bases de données, des annuaires LDAP/Active Directory et des applications tierces, vers des serveurs OpenLDAP ou Active Directory. Le projet se compose de deux modules principaux : l'orchestrateur et le démon.\nArchitecture du projet\nFigma\nModules\nOrchestrateur\n\nGère la synchronisation des identités.\nMaintient une base d'identités pour faciliter la synchronisation.\nPermet la configuration de schémas additionnels pour une flexibilité totale.\nExpose des entrypoints via une API REST avec des tokens JWT.\n\nDeamon\n\nDéclenche les scripts backend pour effectuer les opérations de synchronisation.\nUtilise BullMQ et Redis pour communiquer avec l'orchestrateur.\n\nSchémas d'Identité\n\nUtilise le schéma LDAP InetOrgPerson pour stocker les informations dans une base de données MongoDB.\nPossibilité de configurer des schémas additionnels pour des champs différents dans chaque enregistrement.\nPermet de définir le typage, les règles, et la présence des champs dans les identités.\nSchémas optionnels tels que Supann et/ou Renater pour une utilisation fréquente.\n\nTechnologies utilisées\n\nLangages : NodeJS et NestJS.\nCommunication Démon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, mots de passe dans un serveur tiers (OpenLDAP).\nBackends : Scripts système en Python, PowerShell, Perl, Bash, etc.\n\nInterfaces Utilisateur\n\nFrontend : Interfaces permettant la configuration de l'orchestrateur et la manipulation des données à importer.\n\nConclusion\nSésame offre une solution puissante et flexible pour la synchronisation d'identités à partir de diverses sources vers des serveurs cibles. Son architecture modulaire et ses fonctionnalités avancées en font un outil idéal pour les environnements complexes nécessitant une gestion fine des schémas et des processus de synchronisation.\nVariables d'environnements\nExample :#Host Redis\nREDIS_HOST=redis\n#Port Redis\nREDIS_PORT=6379\n# redis credentials (si ces variables n existe pas, pas d'authentification par defaut\nREDIS_USER=monUser\nREDIS_PASSWORD=xx\n#Log level  ( fatal,error,warn,info,debug)\nLOG_LEVEL=info\n#Nom de la queue (bullMQ) Redis\nNAME_QUEUE=backend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPerson.html":{"url":"classes/inetOrgPerson.html","title":"class - inetOrgPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                cn\n                            \n                            \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                sn\n                            \n                            \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                uid\n                            \n                            \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_schemas/_parts/inetOrgPerson.part.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ _id: false })\nexport class inetOrgPerson {\n  @Prop({ required: true })\n  cn: string;\n\n  @Prop()\n  displayName?: string;\n\n  @Prop()\n  facsimileTelephoneNumber?: string;\n\n  @Prop()\n  givenName?: string;\n\n  @Prop()\n  labeledURI?: string;\n\n  @Prop()\n  mail?: string;\n\n  @Prop()\n  mobile?: string;\n\n  @Prop()\n  postalAddress?: string;\n\n  @Prop()\n  preferredLanguage?: string;\n\n  @Prop({ required: true })\n  sn: string;\n\n  @Prop()\n  telephoneNumber?: string;\n\n  @Prop()\n  title?: string;\n\n  @Prop({ required: true, unique: true })\n  uid: string;\n\n  @Prop()\n  userCertificate?: string;\n\n  @Prop()\n  userPassword?: string;\n}\n\nexport const inetOrgPersonSchema = SchemaFactory.createForClass(inetOrgPerson);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonCreateDto.html":{"url":"classes/inetOrgPersonCreateDto.html","title":"class - inetOrgPersonCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/management/identities/_dto/_parts/inetOrgPerson.dto.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonDto.html":{"url":"classes/inetOrgPersonDto.html","title":"class - inetOrgPersonDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            inetOrgPersonCreateDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                cn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                displayName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                facsimileTelephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                givenName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                labeledURI\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                mail\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                mobile\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postalAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                preferredLanguage\n                            \n                            \n                                    \n                                    \n                                sn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                telephoneNumber\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                title\n                            \n                            \n                                    \n                                    \n                                uid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userCertificate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                userPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        cn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        facsimileTelephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        givenName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        labeledURI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:35\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:40\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        mobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:46\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:51\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        preferredLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:56\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        telephoneNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userCertificate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:71\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        userPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({required: false})@IsOptional()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         inetOrgPersonCreateDto\n\n                            \n                        \n                    \n                        \n                                Defined in         inetOrgPersonCreateDto:76\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/inetOrgPersonUpdateDto.html":{"url":"classes/inetOrgPersonUpdateDto.html","title":"class - inetOrgPersonUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  inetOrgPersonUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/management/identities/_dto/_parts/inetOrgPerson.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(inetOrgPersonCreateDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { IsString, IsEmail, IsOptional } from 'class-validator';\n\nexport class inetOrgPersonCreateDto {\n  @IsString()\n  @ApiProperty()\n  cn: string;\n\n  @IsString()\n  @ApiProperty()\n  sn: string;\n\n  @IsString()\n  @ApiProperty()\n  uid: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  displayName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  facsimileTelephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  givenName?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  labeledURI?: string;\n\n  @IsEmail()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mail?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  mobile?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  postalAddress?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  preferredLanguage?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  telephoneNumber?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  title?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userCertificate?: string;\n\n  @IsString()\n  @ApiProperty({ required: false })\n  @IsOptional()\n  userPassword?: string;\n}\n\nexport class inetOrgPersonDto extends inetOrgPersonCreateDto {}\n\nexport class inetOrgPersonUpdateDto extends PartialType(inetOrgPersonCreateDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AgentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BackendsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IdentitiesValidationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KeyringsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AgentsModule\n\n\n\ncluster_AgentsModule_exports\n\n\n\ncluster_AgentsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BackendsModule\n\n\n\ncluster_BackendsModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IdentitiesModule\n\n\n\ncluster_IdentitiesModule_providers\n\n\n\ncluster_IdentitiesValidationModule\n\n\n\ncluster_IdentitiesValidationModule_exports\n\n\n\ncluster_KeyringsModule\n\n\n\ncluster_KeyringsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\n\nAgentsService \n\nAgentsService \n\n\n\nAgentsModule\n\nAgentsModule\n\nAgentsService  -->\n\nAgentsModule->AgentsService \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAgentsModule->CoreModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAgentsModule->AuthModule\n\n\n\n\n\nAgentsService\n\nAgentsService\n\nAgentsModule -->\n\nAgentsService->AgentsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nAppModule -->\n\nManagementModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\nCoreModule -->\n\nAuthModule->CoreModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nBackendsService\n\nBackendsService\n\n\n\nBackendsModule\n\nBackendsModule\n\nBackendsModule -->\n\nBackendsService->BackendsModule\n\n\n\nCoreModule -->\n\nBackendsModule->CoreModule\n\n\n\n\n\nKeyringsModule\n\nKeyringsModule\n\nCoreModule -->\n\nKeyringsModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nFormService\n\nFormService\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIdentitiesService\n\nIdentitiesService\n\n\n\nIdentitiesModule\n\nIdentitiesModule\n\nIdentitiesModule -->\n\nIdentitiesService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationService\n\nIdentitiesValidationService\n\nIdentitiesModule -->\n\nIdentitiesValidationService->IdentitiesModule\n\n\n\n\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule\n\nIdentitiesValidationModule -->\n\nIdentitiesValidationService->IdentitiesValidationModule\n\n\n\nManagementModule -->\n\nIdentitiesModule->ManagementModule\n\n\n\n\n\nIdentitiesValidationService \n\nIdentitiesValidationService \n\nIdentitiesValidationService  -->\n\nIdentitiesValidationModule->IdentitiesValidationService \n\n\n\n\n\nKeyringsService\n\nKeyringsService\n\nKeyringsModule -->\n\nKeyringsService->KeyringsModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nManagementService\n\nManagementService\n\nManagementModule -->\n\nManagementService->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    52 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.8\n        \n            Description : Synchronisation d'Identités Multi-sources\n        \n            License : Open Source\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgentType   (src/.../agent.type.ts)\n                        \n                        \n                            IdentitiesDocument   (src/.../identities.schema.ts)\n                        \n                        \n                            KeyringsDocument   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerDocument   (src/.../logger.schema.ts)\n                        \n                        \n                            MixedValue   (src/.../mixed-value.type.ts)\n                        \n                        \n                            OverwriteModelNameFunction   (src/.../auto-increment.interface.ts)\n                        \n                        \n                            PartialProjectionType   (src/.../partial-projection.type.ts)\n                        \n                        \n                            ValidationExceptionPayload   (src/.../validation-exception-payload.type.ts)\n                        \n                        \n                            WrapperType   (src/.../wrapper.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/_common/types/agent.type.ts\n    \n    \n        \n            \n                \n                    \n                    AgentType\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    src/management/identities/_schemas/identities.schema.ts\n    \n    \n        \n            \n                \n                    \n                    IdentitiesDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n    \n        \n            \n                \n                    \n                    KeyringsDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/core/logger/schemas/logger.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LoggerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/mixed-value.type.ts\n    \n    \n        \n            \n                \n                    \n                    MixedValue\n                \n            \n            \n                \n                            string | Types.ObjectId | Date | number | boolean | null | object | Array | literal type\n\n                \n            \n        \n    \n    src/_common/plugins/mongoose/auto-increment.interface.ts\n    \n    \n        \n            \n                \n                    \n                    OverwriteModelNameFunction\n                \n            \n            \n                \n                    A function to generate the name used for the auto-increment \"modelName\" field\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/_common/types/partial-projection.type.ts\n    \n    \n        \n            \n                \n                    \n                    PartialProjectionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/_common/types/validation-exception-payload.type.ts\n    \n    \n        \n            \n                \n                    \n                    ValidationExceptionPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/_common/types/wrapper.type.ts\n    \n    \n        \n            \n                \n                    \n                    WrapperType\n                \n            \n            \n                \n                        T\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            additionalFieldsPartDtoStub   (src/.../addtionalFields.dto.stub.ts)\n                        \n                        \n                            AdditionalFieldsPartSchema   (src/.../additionalFields.part.schema.ts)\n                        \n                        \n                            AgentsSchema   (src/.../agents.schema.ts)\n                        \n                        \n                            AgentStateList   (src/.../agent-state.enum.ts)\n                        \n                        \n                            ApiBodyDecorator   (src/.../api-body.decorator.ts)\n                        \n                        \n                            ApiCreateDecorator   (src/.../api-create.decorator.ts)\n                        \n                        \n                            ApiCreatedResponseDecorator   (src/.../api-created-response.decorator.ts)\n                        \n                        \n                            ApiDeletedResponseDecorator   (src/.../api-deleted-response.decorator.ts)\n                        \n                        \n                            ApiPaginatedDecorator   (src/.../api-paginated.decorator.ts)\n                        \n                        \n                            ApiPaginatedResponseDecorator   (src/.../api-paginated-response.decorator.ts)\n                        \n                        \n                            ApiReadResponseDecorator   (src/.../api-read-response.decorator.ts)\n                        \n                        \n                            ApiUpdateDecorator   (src/.../api-update.decorator.ts)\n                        \n                        \n                            ApiUpdatedResponseDecorator   (src/.../api-updated-response.decorator.ts)\n                        \n                        \n                            AutoIncrementIDSkipSymbol   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            DEFAULT_INCREMENT   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            DEFAULT_MESSAGE   (src/.../ValidationException.ts)\n                        \n                        \n                            DEFAULT_STATUS_CODE   (src/.../ValidationException.ts)\n                        \n                        \n                            DEFAULT_THIRD_PARTY_AUTH   (src/.../agents.schema.ts)\n                        \n                        \n                            DEFAULT_VALIDATIONS   (src/.../ValidationException.ts)\n                        \n                        \n                            EventEmitterSeparator   (src/.../event-emitter.constant.ts)\n                        \n                        \n                            ExcludeAgentType   (src/.../agent.type.ts)\n                        \n                        \n                            FormFieldPartSchema   (src/.../field.part.schema.ts)\n                        \n                        \n                            FormSchema   (src/.../form.schema.ts)\n                        \n                        \n                            FormSectionPartSchema   (src/.../section.part.schema.ts)\n                        \n                        \n                            FormTypeList   (src/.../types.ts)\n                        \n                        \n                            IdentitiesDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IdentitiesSchema   (src/.../identities.schema.ts)\n                        \n                        \n                            IdentitiesUpdateDtoStub   (src/.../identities.dto.stub.ts)\n                        \n                        \n                            IDSchema   (src/.../auto-increment.plugin.ts)\n                        \n                        \n                            inetOrgPersonDtoStub   (src/.../inetOrgPerson.dto.stub.ts)\n                        \n                        \n                            inetOrgPersonSchema   (src/.../inetOrgPerson.part.ts)\n                        \n                        \n                            invalidObjectClassAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidRequiredAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidSchemaStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            invalidTypeAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            KeyringsSchema   (src/.../keyrings.schema.ts)\n                        \n                        \n                            LoggerSchema   (src/.../logger.schema.ts)\n                        \n                        \n                            LogLevels   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            META_UNPROTECTED   (src/.../public.decorator.ts)\n                        \n                        \n                            MetadataPartSchema   (src/.../metadata.part.schema.ts)\n                        \n                        \n                            missingAttributeAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            ReqIdentity   (src/.../req-identity.decorator.ts)\n                        \n                        \n                            SecurityPartSchema   (src/.../security.part.schema.ts)\n                        \n                        \n                            setLogLevel   (src/.../auto-increment.logger.ts)\n                        \n                        \n                            StatePartSchema   (src/.../state.part.schema.ts)\n                        \n                        \n                            validAdditionalFieldsStub   (src/.../identities.validation.stub.ts)\n                        \n                        \n                            validSchema   (src/.../validSchema.ts)\n                        \n                        \n                            validSchemaStub   (src/.../identities.validation.stub.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/management/identities/_stubs/_parts/addtionalFields.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        additionalFieldsPartDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): additionalFieldsPartDto => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/additionalFields.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdditionalFieldsPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AdditionalFieldsPart)\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/agents.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AgentsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Agents).pre(\n  'save',\n  function (this: Agents, next: () => void): void {\n    if (this.isNew) {\n      this.displayName = this.displayName || this.username;\n    }\n    next();\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_THIRD_PARTY_AUTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'local'\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_enum/agent-state.enum.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AgentStateList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(AgentState)\n  // eslint-disable-next-line\n  .filter((k) => typeof AgentState[k as any] === 'number')\n  // eslint-disable-next-line\n  .map((k) => parseInt(AgentState[k as any], 10))\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-body.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiBodyDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiBodyOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiBody({\n      schema: {\n        $ref: getSchemaPath(model),\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-create.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiCreatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-created-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiCreatedResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.CREATED],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...options,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-deleted-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiDeletedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiQuery({ name: 'limit', type: Number, required: false }),\n    ApiQuery({ name: 'skip', type: Number, required: false }),\n    ApiExtraModels(PaginatedFilterDto),\n    ApiQuery({\n      required: false,\n      name: 'filters',\n      style: 'deepObject',\n      explode: true,\n      type: 'object',\n      schema: {\n        $ref: getSchemaPath(PaginatedFilterDto),\n      },\n    }),\n    ApiPaginatedResponseDecorator(model, options),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-paginated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiPaginatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  options?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiOkResponse({\n      schema: {\n        allOf: [\n          { $ref: getSchemaPath(PaginatedResponseDto) },\n          {\n            properties: {\n              statusCode: {\n                type: 'number',\n                enum: [HttpStatus.OK],\n              },\n              data: {\n                type: 'array',\n                items: { $ref: getSchemaPath(model) },\n              },\n            },\n          },\n        ],\n      },\n      ...options,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-read-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiReadResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-update.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdateDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  bodyModel: TModel,\n  responseModel: TModel,\n  bodyOptions?: ApiBodyOptions | null | undefined,\n  responseOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiBodyDecorator(bodyModel, bodyOptions),\n    ApiUpdatedResponseDecorator(responseModel, responseOptions),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/api-updated-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUpdatedResponseDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >>(\n  model: TModel,\n  responseOptions?: ApiResponseOptions | null | undefined,\n  badRequestOptions?: ApiResponseOptions | null | undefined,\n  notFoundOptions?: ApiResponseOptions | null | undefined,\n) => {\n  return applyDecorators(\n    ApiExtraModels(model),\n    ApiExtraModels(ErrorSchemaDto),\n    ApiExtraModels(NotFoundDto),\n    ApiOkResponse({\n      schema: {\n        properties: {\n          statusCode: {\n            type: 'number',\n            enum: [HttpStatus.OK],\n          },\n          data: {\n            $ref: getSchemaPath(model),\n          },\n        },\n      },\n      ...responseOptions,\n    }),\n    ApiBadRequestResponse({\n      description: 'Schema validation failed',\n      schema: {\n        $ref: getSchemaPath(ErrorSchemaDto),\n      },\n      ...badRequestOptions,\n    }),\n    ApiNotFoundResponse({\n      description: 'Item not found',\n      schema: {\n        $ref: getSchemaPath(NotFoundDto),\n      },\n      ...notFoundOptions,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.plugin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AutoIncrementIDSkipSymbol\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('AutoIncrementIDSkip')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_INCREMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IDSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema(\n  {\n    field: String,\n    modelName: String,\n    count: Number,\n  },\n  { versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n    src/_common/errors/ValidationException.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Validation failed'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_STATUS_CODE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DEFAULT_VALIDATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/_common/constants/event-emitter.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EventEmitterSeparator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '.'\n                    \n                \n\n\n        \n    \n\n    src/_common/types/agent.type.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ExcludeAgentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['password']\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/parts/field.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormFieldPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FormFieldPart)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/form.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Form)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_schemas/parts/section.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormSectionPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(FormSectionPart)\n                    \n                \n\n\n        \n    \n\n    src/core/form/_enum/types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FormTypeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : Object.keys(FormTypes)\n  .filter((k) => typeof FormTypes[k as any] === 'number') // eslint-disable-line\n  .map((k) => parseInt(FormTypes[k as any], 10))\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/identities.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IdentitiesUpdateDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_COMPLETE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/identities.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IdentitiesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Identities)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_stubs/_parts/inetOrgPerson.dto.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonDtoStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/management/identities/_schemas/_parts/inetOrgPerson.part.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        inetOrgPersonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(inetOrgPerson)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/validations/_stubs/identities.validation.stub.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        invalidObjectClassAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['testClass'],\n    attributes: { supann: { test: 'test' } },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidRequiredAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidSchemaStub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'invalid',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invalidTypeAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 123,\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        missingAttributeAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['class1'],\n    attributes: {},\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validAdditionalFieldsStub\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return {\n    objectClasses: ['supann'],\n    attributes: {\n      supann: {\n        supannEmpId: '12345',\n        supannCivilite: 'Mr',\n        supannBirthName: 'Doe',\n      },\n    },\n  };\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validSchemaStub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    supannEmpId: {\n      type: 'string',\n      description: 'Employee ID',\n    },\n    supannCivilite: {\n      type: 'string',\n      description: 'Title (Mr, Ms, etc.)',\n    },\n    supannBirthName: {\n      type: 'string',\n      description: 'Birth name',\n    },\n  },\n  required: ['supannEmpId', 'supannCivilite'],\n}\n                    \n                \n\n\n        \n    \n\n    src/core/keyrings/_schemas/keyrings.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        KeyringsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Keyrings)\n                    \n                \n\n\n        \n    \n\n    src/core/logger/schemas/logger.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Logger)\n                    \n                \n\n\n        \n    \n\n    src/_common/plugins/mongoose/auto-increment.logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogLevels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.levels\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLogLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : log.setLevel\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        META_UNPROTECTED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'unprotected'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => applyDecorators(SetMetadata(META_UNPROTECTED, true))\n                    \n                \n\n\n        \n    \n\n    src/_common/abstracts/schemas/parts/metadata.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MetadataPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MetadataPart)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/_common/decorators/params/req-identity.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqIdentity\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, ctx: ExecutionContext): AgentType => {\n  const request = ctx.switchToHttp().getRequest();\n  return request.user;\n})\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/parts/security.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SecurityPartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(SecurityPart).pre(\n  'save',\n  function (this: SecurityPart, next: () => void): void {\n    if (this.isNew) {\n      this.secretKey = Math.random().toString(36).slice(-8); //TODO: use crypto lib\n    }\n    next();\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/core/agents/_schemas/parts/state.part.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StatePartSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StatePart)\n                    \n                \n\n\n        \n    \n\n    src/management/identities/validations/_config/validSchema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  $schema: 'http://json-schema.org/draft-07/schema#',\n  type: 'object',\n  properties: {\n    $schema: {\n      type: 'string',\n      errorMessage: \"Le champ '$schema' doit être une chaîne de caractères.\",\n    },\n    type: {\n      type: 'string',\n      const: 'object',\n      errorMessage: \"Le champ 'type' doit être 'object'.\",\n    },\n    properties: {\n      type: 'object',\n      patternProperties: {\n        '^.+$': {\n          type: 'object',\n          properties: {\n            type: {\n              type: 'string',\n              enum: ['string', 'number', 'boolean', 'array', 'object', 'date'],\n              errorMessage: \"Chaque propriété doit avoir un 'type' de 'string'.\",\n            },\n            description: {\n              type: 'string',\n              errorMessage: \"La 'description' doit être une chaîne de caractères.\",\n            },\n            format: {\n              type: 'string',\n              enum: ['date', 'email'],\n              errorMessage: \"Le 'format' doit être 'date' ou 'email'.\",\n            },\n            items: {\n              type: 'object',\n              errorMessage: \"Le champ 'required' doit être un booléen.\",\n            },\n          },\n          required: ['type'],\n          additionalProperties: false,\n          errorMessage: {\n            required: \"Le champ 'type' est requis pour chaque propriété.\",\n            additionalProperties: 'Propriétés supplémentaires non autorisées.',\n          },\n        },\n      },\n      additionalProperties: false,\n      errorMessage: \"Propriétés supplémentaires non autorisées dans 'properties'.\",\n    },\n    required: {\n      type: 'array',\n      items: {\n        type: 'string',\n      },\n      errorMessage: \"Le champ 'required' doit être un tableau de chaînes de caractères.\",\n    },\n  },\n  required: ['type'],\n  additionalProperties: false,\n  errorMessage: {\n    required: \"Le champ 'type' est requis.\",\n    additionalProperties: 'Propriétés supplémentaires non autorisées au niveau racine.',\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/cahier-des-charges.html":{"url":"additional-documentation/cahier-des-charges.html","title":"additional-page - Cahier des charges","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCahier des charges pour le Projet Sésame\nObjectif du Projet\nLe projet Sésame vise à développer une application open source de synchronisation d'identités, permettant de gérer la synchronisation entre différentes sources de données (bases de données, annuaires LDAP/Active Directory, applications tierces). Le système se compose de deux modules principaux, l'orchestrateur et le daemon. Et de scripts et projets tel que les backends de synchronisation et les interfaces utilisateur frontend pour la configuration et la manipulation des données.\nSchemas\n  \n\nFonctionnalités Principales\n\nOrchestrateur :\n\n\nGestion de la synchronisation des identités stockés dans MongoDB.\nMaintenance d'une base d'identités pour faciliter la synchronisation.\nConfiguration flexible des schémas additionnels.\nExposition d'entrypoints via une API REST avec des tokens JWT.\nGestion du cycle de vie des identités.\n\n\nDaemon :\n\n\nDéclenchement des scripts backend pour la synchronisation.\nUtilisation de BullMQ et Redis pour la communication avec l'orchestrateur.\n\n\nSchémas d'Identité :\n\n\nUtilisation du schéma LDAP NnetOrgPerson comme base de stockage dans MongoDB.\nConfiguration possible de schémas additionnels pour une variabilité des champs dans chaque enregistrement.\nDéfinition du typage, des règles, et de la présence des champs dans les identités.\nPré-intégration de schémas optionnels, notamment Supann et/ou Renater.\n\n\nTechnologies Utilisées :\n\n\nLangages : NodeJS avec les frameworks NestJS et NuxtJS.\nCommunication daemon-Orchestrateur : BullMQ et Redis.\nAuthentification Orchestrateur : Comptes stockés dans MongoDB, possibilité de stocker les mots de passe dans un serveur tiers (OpenLDAP, ...).\nBackends : Scripts système utilisant les sorties standards, indépendant du langage de l'application principale (Python, PowerShell, Perl, Bash, etc).\n\n\nInterfaces Utilisateur Frontend :\n\n\nConfiguration de l'orchestrateur.\nManipulation et completion des données à synchroniser.\nGestion des schémas d'identité.\nAffichage des logs.\n\nExigences Techniques\n\nSécurité :\n\n\nToutes les communications doivent être sécurisées par des protocoles cryptographiques standards.\nGestion sécurisée des tokens JWT pour l'API REST de l'orchestrateur.\nMise en place de mécanismes de chiffrement appropriés pour les données sensibles.\n\n\nExtensibilité :\n\n\nLe système doit être conçu de manière modulaire pour permettre l'ajout aisé de nouveaux schémas d'identité et sources de données.\n\n\nDocumentation :\n\n\nUne documentation exhaustive doit être fournie pour permettre aux développeurs, administrateurs système et utilisateurs de comprendre et utiliser efficacement l'application.\n\n\nTests Automatisés :\n\n\nLes développements doivent être accompagnés de suites de tests automatisés pour garantir la stabilité et la fiabilité du système.\n\n\nPerformance :\n\n\nLe système doit être optimisé pour gérer un grand nombre d'identités et de sources de données tout en maintenant des performances élevées.\n\nLivrables\n\nCode Source :\n\n\nL'ensemble du code source doit être bien commenté et respecter les normes de codage définies.\nLe code doit être versionné et accessible à travers la plateforme de gestion de versions GitHub.\n\n\nDocumentation Technique :\n\n\nManuels d'installation et de configuration.\nGuides d'utilisation pour les développeurs, administrateurs système et utilisateurs finaux.\n\n\nTests Automatisés :\n\n\nLes résultats des tests automatisés doivent être fournis en accompagnement du code source.\n\nPlanning\nLe projet sera découpé en sprints avec des jalons précis pour chaque fonctionnalité. Les délais de livraison doivent être respectés, et tout écart significatif doit être justifié et discuté avec l'équipe de gestion de projet.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique.html":{"url":"additional-documentation/documentation-technique.html","title":"additional-page - Documentation technique","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDAEMON\nIdentitiesValidation\nQueueProcessorService\nTests\nFormulaires Customs\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/demon.html":{"url":"additional-documentation/documentation-technique/demon.html","title":"additional-page - Demon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCommunication avec sesame-daemon\nVoir doc sesame-daemon\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/queue-processor-service.html":{"url":"additional-documentation/documentation-technique/queue-processor-service.html","title":"additional-page - Queue processor service","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nQueueProcessorService\nVue d'ensemble\nQueueProcessorService est une classe abstraite conçue pour fournir une configuration de base pour les services de traitement de files d'attente dans une application NestJS. Elle intègre des fonctionnalités de gestion de file d'attente en utilisant bullmq et Redis.\nDépendances\n\nConfigService : Service de @nestjs/config pour accéder aux variables de configuration.\nRedis : Client Redis pour interagir avec un serveur Redis.\n\nPropriétés\n\nqueue (Queue) : Instance de Queue de bullmq, représentant la file d'attente à traiter.\nqueueEvents (QueueEvents) : Instance de QueueEvents de bullmq, utilisée pour gérer les événements liés à la file d'attente.\n\nConstructeur\nExample :public constructor(\n  protected readonly config: ConfigService,\n  protected readonly redis: Redis,\n) {\n  this.queue = new Queue(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n  this.queueEvents = new QueueEvents(this.config.get('nameQueue'), {\n    connection: this.redis,\n  });\n}Paramètres\n\nconfig (ConfigService):  Service de configuration pour accéder aux variables de configuration de l'application.\nredis (Redis): Instance du client Redis pour se connecter au serveur Redis.\n\nDescription\nInitialise les propriétés queue et queueEvents en créant de nouvelles instances de Queue et QueueEvents, en utilisant la configuration nameQueue pour le nom de la file d'attente et l'instance Redis pour la connexion.\nMéthodes\nCeci est une classe abstraite et n'implémente pas de méthodes. Les classes dérivées doivent implémenter une logique spécifique de traitement de file d'attente.\nUtilisation\nÉtendez cette classe dans les services qui nécessitent des capacités de traitement de file d'attente. Implémentez la logique de traitement des éléments dans la file d'attente dans le service étendu.\nExample :import Redis from 'ioredis';\nimport { InjectRedis } from 'nestjs-ioredis';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { AbstractQueueProcessor } from '~/_common/abstracts/abstract.queue.processor';\n\n@Injectable()\nexport class ExampleQueueService extends AbstractQueueProcessor {\nconstructor(\n    protected readonly configService: ConfigService,\n    @InjectRedis() protected readonly redis: Redis,\n)  {\n        super(configService, redis);\n   }\n\n    async example(params: any) {\n        const job = await this.queue.add('EXEMPLE', params);\n        this.queueEvents.on('failed', (errors) => {\n            console.log(errors);\n        });\n        return await job.waitUntilFinished(this.queueEvents, 30000);\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html":{"url":"additional-documentation/documentation-technique/ecriture-des-test-et-utilisation-des-utilitaires.html","title":"additional-page - Ecriture des test et utilisation des utilitaires","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation des Tests Jest et NestJS\nTable des matières\n\nDocumentation des Tests Jest et NestJS\nTable des matières\nIntroduction\nPrérequis\n\n\nStubs\nExemple\n\n\nConstantes\nUtilisation de MongoDbTestInstance\nFonctions\nConstantes\nExemple d'utilisation\n\n\nMock du module et créer des modèles simulés avec createMockModel\nExemple\n\n\nAssertions dans les tests\nAssertions findAndCount\nExemple\n\n\nAssertions findById\nExemple\n\n\nAssertions findOne\nExemple\n\n\nAssertions create\nExemple\n\n\nAssertions update\nExemple\n\n\nAssertions delete\nExemple\n\n\n\n\nExemple complet d'un cas de test\nConfiguration du Test\n\n\nTest d'un controller CRUD\nVue d'ensemble\nFonction : createMockService\nBut\nParamètres\nRetours\nExemple d'utilisation\n\n\n\n\nRéférences supplémentaires\n\n\n\nIntroduction\nCe document fournit des directives et des exemples pour tester les services NestJS en utilisant Jest et MongoDB Memory Server. Dans ce document, nous allons prendre comme exemple le service IdentitiesService et le modèle Identities.\nCette methode ne fonctionne que pour les services CRUD qui héritent d'AbstractServiceSchema.\nPrérequis\n\nNode.js\nNestJS\nJest\nMongoDB Memory Server\n\nStubs\nLes stubs sont utilisés pour simuler des données dans les tests. Les stubs sont créés dans le dossier stubs au sein du module ou se trouve le test et sont utilisés dans les tests.\nExemple\nExample :import { IdentitiesUpdateDto } from './../_dto/identities.dto';\nimport { IdentitiesDto } from '~/management/identities/_dto/identities.dto';\nimport { IdentityLifecycle } from '~/management/identities/_enums/lifecycle.enum';\nimport { IdentityState } from '~/management/identities/_enums/states.enum';\nimport { additionalFieldsPartDtoStub } from './_parts/addtionalFields.dto.stub';\nimport { inetOrgPersonDtoStub } from './_parts/inetOrgPerson.dto.stub';\n\nexport const IdentitiesDtoStub = (): IdentitiesDto => {\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson: inetOrgPersonDtoStub(),\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};\n\nexport const IdentitiesUpdateDtoStub = (): IdentitiesUpdateDto => {\n  const inetOrgPerson = inetOrgPersonDtoStub();\n  inetOrgPerson.cn = 'updated-cn';\n  return {\n    state: IdentityState.TO_CREATE,\n    lifecycle: IdentityLifecycle.INACTIVE,\n    inetOrgPerson,\n    additionalFields: additionalFieldsPartDtoStub(),\n  };\n};Ici pour clarifier les données, nous avons déporté une partie des données dans des fichiers séparés stocké dans le dossier _parts du dossier stubs.\nVoici un exemple de stub pour inetOrgPersonDtoStub:\nExample :import { inetOrgPersonDto } from '~/management/identities/_dto/_parts/inetOrgPerson.dto';\n\nexport const inetOrgPersonDtoStub = (): inetOrgPersonDto => {\n  return {\n    cn: 'cn',\n    sn: 'sn',\n    uid: 'uid',\n    displayName: 'displayName',\n    facsimileTelephoneNumber: 'facsimileTelephoneNumber',\n    givenName: 'givenName',\n    labeledURI: 'labeledURI',\n    mail: 'mail',\n    mobile: 'mobile',\n    postalAddress: 'postalAddress',\n    preferredLanguage: 'preferredLanguage',\n    telephoneNumber: 'telephoneNumber',\n    title: 'title',\n    userCertificate: 'userCertificate',\n    userPassword: 'userPassword',\n  };\n};Constantes\nLes constantes suivantes sont utilisées dans les tests.\nExample :describe('Identities Service', () => {\n  let mongoDbTestInstance: MongoDbTestInstance;\n  let service: IdentitiesService;\n  let model: Model;\n  let identitiesModel: Model;\n  const _id = new Types.ObjectId();\n  const newIdentityData = {\n    _id,\n    ...IdentitiesDtoStub(),\n  };\n  const updatedIdentityData = {\n    _id,\n    ...IdentitiesUpdateDtoStub(),\n  };\n\n  const options: QueryOptions = {\n    limit: 10,\n    skip: 0,\n    sort: {\n      'metadata.createdAt': 'asc',\n    },\n  };\n  const projection: ProjectionType = {\n    state: 1,\n    inetOrgPerson: 1,\n    additionalFields: 1,\n  };\n  const filter: FilterQuery = {};\n});Utilisation de MongoDbTestInstance\nLa classe MongoDbTestInstance est utilisée pour créer une instance MongoDB temporaire pour les tests.\nFonctions\nstart() démarre une instance MongoDB temporaire pour les tests.\nstop() arrête l'instance MongoDB temporaire.\nclearDatabase() supprime toutes les données de la base de données temporaire.\ngetModel() crée un modèle Mongoose à partir d'un schéma Mongoose.\nConstantes\nmongod: MongoMemoryServer est l'instance MongoDB temporaire.\nmongoConnection: Connection est la connexion à l'instance MongoDB temporaire.\nExemple d'utilisation\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Mock du module et créer des modèles simulés avec createMockModel\ncreateMockModel est utilisé pour simuler des modèles Mongoose pour les tests.\nExample :function createMockModel(model: Model, stub, updatedStub?): Modelmodel est le modèle Mongoose à simuler.\nstub est le stub à utiliser pour simuler les données.\nupdatedStub est le stub à utiliser pour simuler les données mises à jour.\nLa fonction retourne un modèle Mongoose simulé.\nExemple\nExample :  beforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n\n    // Mock the module\n    const module: TestingModule = await Test.createTestingModule({\n      controllers: [IdentitiesController],\n      providers: [\n        IdentitiesService,\n        {\n          provide: getModelToken(Identities.name),\n          useValue: identitiesModel,\n        },\n        IdentitiesValidationService,\n      ],\n      imports: [IdentitiesValidationModule],\n    }).compile();\n\n    // Get the service\n    service = module.get(IdentitiesService);\n  });Assertions dans les tests\nLes fonctions fournies aident à affirmer diverses conditions dans les tests. Ces méthodes sont utilisables uniquement pour les services CRUD qui héritent d'AbstractServiceSchema.\nAssertions findAndCount\nfindAndCountAssertions vérifie la méthode de service findAndCount.\nExemple\nExample :  describe('findAndCount', () => {\n    it('should return an array of identities or throw an error', async () => {\n      findAndCountAssertions(service, model, filter, projection, options, newIdentityData);\n      findAndCountErrorAssertions(service, filter, projection, options);\n    });\n  });Assertions findById\nfindByIdAssertions vérifie la fonctionnalité de la méthode de service findById.\nExemple\nExample :  describe('findById', () => {\n    it('should return a single identity by id or throw an error', async () => {\n      findByIdAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should return an empty array and count 0 documents', async () => {\n      findByIdErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions findOne\nfindOneAssertions assure le bon fonctionnement de la méthode findOne du service.\nExemple\nExample :  describe('findOne', () => {\n    it('should return a single identity matching the filter or throw an error', async () => {\n      findOneAssertions(service, model, _id, projection, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      findOneErrorAssertions(service, _id, projection, options);\n    });\n  });Assertions create\ncreateAssertions teste la méthode create du service.\nExemple\nExample :  describe('create', () => {\n    it('should create and return a new identity or throw an error', async () => {\n      createAssertions(service, model, newIdentityData, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      createErrorAssertions(service, newIdentityData);\n    });\n  });Assertions update\nupdateAssertions évalue la fonctionnalité update.\nExemple\nExample :  describe('update', () => {\n    it('should update and return an identity or throw an error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateAssertions(service, model, _id, updateData, updateOptions, updatedIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      const updateData = {\n        'field': 'updated-field',\n      };\n      const updateOptions: QueryOptions & { rawResult: true } = {\n        options: options,\n        rawResult: true,\n      };\n\n      updateErrorAssertions(service, _id, updateData, updateOptions);\n    });\n  });Assertions delete\ndeleteAssertions évalue la méthode delete dans le service.\nExemple\nExample :  describe('delete', () => {\n    it('should delete and return the deleted identity or throw an error', async () => {\n      deleteAssertions(service, model, _id, options, newIdentityData);\n    });\n    it('should throw a Notfound error', async () => {\n      deleteErrorAssertions(service, _id, options);\n    });\n  });Exemple complet d'un cas de test\nUn exemple de cas de test pour IdentitiesService en utilisant les méthodes ci-dessus.\nConfiguration du Test\nExample :beforeAll(async () => {\n    mongoDbTestInstance = new MongoDbTestInstance();\n    await mongoDbTestInstance.start();\n    identitiesModel = await mongoDbTestInstance.getModel(Identities.name, IdentitiesSchema);\n});\n\nbeforeEach(async () => {\n    model = createMockModel(identitiesModel, newIdentityData, updatedIdentityData);\n    // Autres configurations de test\n});\n\nafterEach(async () => {\n    await mongoDbTestInstance.clearDatabase();\n    jest.clearAllMocks();\n});\n\nafterAll(async () => {\n    await mongoDbTestInstance.stop();\n});Test d'un controller CRUD\nCette documentation fournit un aperçu détaillé de la fonction utilitaire createMockService, conçue pour faciliter la création de services mock pour les besoins de test dans les applications TypeScript, en mettant un accent particulier sur celles utilisant Jest et NestJS. L'initiation du test est similaire à celle des tests de services au niveau du module et de l'instantiation de la base mongoDB.\nVue d'ensemble\nLa fonction createMockService améliore dynamiquement la création de services mock, permettant de configurer un nombre arbitraire de comportements d'appel de méthode de manière dynamique. Elle simplifie le processus de configuration des implémentations mock pour les méthodes de service, supportant à la fois des valeurs fixes et des comportements dynamiques définis par des fonctions, y compris des comportements asynchrones basés sur des promesses et la gestion des erreurs.\nFonction : createMockService\nBut\nGénérer une instance de service mock avec des méthodes simulées selon les comportements spécifiés, rationalisant le test de divers scénarios incluant le succès, l'échec, et les exceptions.\nParamètres\n\nservice (new (...args: any[]) => T): Le constructeur de la classe de service à mocker. Ce paramètre prend une référence de classe que le service mock va imiter.\n\nmethodStubs (Record): Un objet où les clés représentent les noms des méthodes à mocker, et les valeurs sont les comportements à simuler pour ces méthodes. Ces comportements peuvent être spécifiés comme des valeurs uniques pour un comportement uniforme à travers les appels, des tableaux de valeurs pour définir des comportements séquentiels d'appels, des fonctions pour calculer dynamiquement les valeurs de retour, ou des instances de Error pour simuler des exceptions.\n\n\nRetours\n\nT: Une instance mock de la classe de service (T), avec des méthodes simulées comme spécifié par le paramètre methodStubs.\n\nExemple d'utilisation\nExample :service = createMockService(IdentitiesService, {\n  create: [\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_VALIDATE }),\n    () => Promise.resolve({ ...IdentitiesDtoStub(), _id, state: IdentityState.TO_COMPLETE }),\n  ],\n  findAndCount: [\n    () => Promise.resolve([[{ ...IdentitiesDtoStub(), _id }], 1]),\n    () => Promise.reject(new Error('Erreur')), // Fonction qui lance une erreur\n  ],\n  // Autres simulations de méthodes...\n});Dans cet exemple, la fonction createMockService est utilisée pour mocker un IdentitiesService avec des comportements spécifiques pour les méthodes create, findAndCount, et d'autres, démontrant comment gérer à la fois les opérations réussies et les erreurs.\nImportance de l'ordre des valeurs retournées : Il est crucial de comprendre que l'ordre des valeurs retournées dans l'exemple a une importance significative car il correspondra à l'ordre des appels dans les tests. Cela signifie que le comportement simulé pour le premier appel sera le premier dans la liste, et ainsi de suite, permettant une simulation précise des scénarios de test.\nRéférences supplémentaires\nCette documentation couvre l'essentiel des tests des services NestJS en utilisant Jest. Pour plus d'informations détaillées, référez-vous à la documentation de Jest et NestJS.\n\nTests NestJS\nJest\nMongoDB Memory Server\nArticle sur les tests en  NestJS avec Mongo\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/validation-des-identités.html":{"url":"additional-documentation/documentation-technique/validation-des-identités.html","title":"additional-page - Validation des identités","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation Technique - Service de Validation des Identités (Mise à Jour)\nDescription\nCette documentation mise à jour décrit les améliorations apportées au service de validation des identités dans une application NestJS. Ce service utilise yup pour la validation des données et ajv pour gérer la validation des schémas JSON et YML. Les fichiers de configuration YML sont chargés dynamiquement et convertis en schémas yup pour valider les données utilisateur.\nServices\nIdentitiesValidationService\nModifications Clés\n\nExtraction de la logique de validation d'attributs dans une méthode privée validateAttribute, améliorant la lisibilité et la maintenabilité.\nUtilisation améliorée de la gestion des erreurs pour fournir des messages d'erreur spécifiques.\nCommentaires et annotations de type TypeScript ajoutés pour une meilleure compréhension et utilisation du type checking de TypeScript.\n\nMéthodes\n\nvalidate(data: AdditionalFieldsPart): Promise\nValide les données fournies en utilisant des schémas de validation yup.\nLes schémas sont chargés à partir de fichiers YAML spécifiques à chaque classe d'objet.\nRenvoie une promesse rejetée avec les détails des erreurs en cas d'échec de la validation.\n\n\nprivate validateAttribute(key: string, attribute: any): Promise\nValide un attribut individuel.\nRenvoie un message d'erreur spécifique ou null si la validation réussit.\n\n\n\nUtilisation\nExample :@Injectable()\nclass IdentitiesValidationService {\n  async validate(data: AdditionalFieldsPart): Promise {\n    // ... Implémentation de la validation\n  }\n\n  private async validateAttribute(key: string, attribute: any): Promise {\n    // ... Implémentation de la validation d'un attribut individuel\n  }\n}Modèles\nAdditionalFieldsPart\n\nReprésente les champs supplémentaires d'une identité.\nUtilisé par IdentitiesValidationService pour la validation.\n\nConfigObjectSchemaDTO\n\nNouveau modèle ajouté pour représenter les schémas de configuration des objets.\n\nConfiguration\nFichiers YAML\n\nChaque classe d'objet a son fichier de configuration YAML correspondant.\nCes fichiers sont utilisés pour générer des schémas de validation yup.\n\nIntégrations\nIntégration avec AJV\n\nAJV est utilisé pour compiler et valider les schémas JSON.\nAmélioration de la gestion des erreurs et des validations de schémas.\n\nIntégration avec Mongoose\n\nLes schémas Mongoose sont définis comme auparavant.\nLa validation yup est intégrée dans le cycle de vie des documents Mongoose via des hooks (pre validate, pre save).\n\nModule\nIdentitiesModule\n\nConfigure le schéma Mongoose et intègre le service de validation avec les améliorations apportées.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-technique/formulaires-customs.html":{"url":"additional-documentation/documentation-technique/formulaires-customs.html","title":"additional-page - Formulaires customs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\n\nDocumentation du Composant Formulaire Dynamique\nSommaire\nIntroduction\nStructure du JSON de Configuration\nChamp title\nChamp description\nChamp type\nChamp defaultValues\nChamp sections\nExemple de section\n\n\nChamps dans fields\nExemple de champ\n\n\nAutres champs importants\n\n\nExemple complet d'un json de formulaire pour la creation de ticket\nDocumentation des Composants Vue.js\nbuilder.vue\nAperçu\nStructure\nFonctionnalités\nScript\n\n\ntk-form-type.vue\nAperçu\nStructure\nFonctionnalités\n\n\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-tabs\nAperçu\nStructure\nFonctionnalités\n\n\ntk-form-base\nAperçu\nStructure\nFonctionnalités\n\n\nÉnumérations et Types\nFormTypes\nCRUDMode\nTicketFormField et TicketFormSection\n\n\n\n\n\n\n\nIntroduction\nCette documentation décrit le composant de formulaire dynamique utilisé dans les applications avec NestJS et Mongoose, en utilisant des composants du framework Quasar. Le formulaire est construit dynamiquement à partir d'une configuration JSON.\nCe fichier json est stocké dans la base de données et est récupéré par l'API pour construire le formulaire, tout est géré dans le module nestjs /tickets/form\nStructure du JSON de Configuration\nChamp title\n\nType: string\nDescription: Titre du formulaire.\nExemple: \"title\": \"Creation de ticket\"\n\nChamp description\n\nType: string\nDescription: Description ou instructions pour le formulaire.\nExemple: \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\"\n\nChamp type\n\nType: number\nDescription: Type de formulaire, représenté par un numéro (par exemple, 0 pour base, 1 pour étapes).\nExemple: \"type\": 1\n\nChamp defaultValues\n\nType: object\nDescription: Valeurs par défaut pour certains champs du formulaire.\nExemple: \"defaultValues\": { \"lifestep\": 1 }\n\nChamp sections\n\nType: object\nDescription: Sections du formulaire, chacune contenant ses propres champs.\nSous-champs:\nlabel: Nom de la section.\ntype: Type de la section (similaire au type de formulaire).\ndescription: Description de la section.\nicon: Icône représentant la section.\nfields: Champs de la section.\n\n\n\nExemple de section\nExample :\"sections\": {\n  \"envelope\": {\n    \"label\": \"Enveloppe\",\n    \"type\": 0,\n    \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n    \"icon\": \"mdi-email\",\n    \"fields\": {\n      // Définition des champs ici...\n    }\n  }\n}Champs dans fields\nChaque champ dans fields est un objet avec les propriétés suivantes :\n\ncomponent: Type de composant Quasar à utiliser (par exemple, autocomplete).\nlabel: Étiquette du champ.\nmodel-value: Chemin de liaison de données pour le champ.\nrow et col: Positionnement du champ dans une grille.\nattrsOnDefault, attrsOnCreate, attrsOnRead, attrsOnUpdate, attrsOnDelete: Objets définissant les attributs et comportements du champ dans différents états. Pour connaître les attributs disponibles, consultez la documentation de Quasar Framework. Les composants disponibles sont les suivants : \nselect\ninput\nautocomplete\ncheckbox\nradio\n\n\n\nExemple de champ\nExample :\"senders\": {\n  \"component\": \"autocomplete\",\n  \"label\": \"Appelant\",\n  \"model-value\": \"envelope.senders\",\n  \"attrsOnDefault\": {\n    \"filled\": true,\n    \"dense\": true,\n    // Autres attributs...\n  },\n    \"attrsOnCreate\": {\n        // Autres attributs...\n    },\n    \"attrsOnRead\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n    \"attrsOnUpdate\": {\n        // Autres attributs...\n    },\n    \"attrsOnDelete\": {\n        \"disable\": true\n        // Autres attributs...\n    },\n  \"row\": 1,\n  \"col\": 4\n}Autres champs importants\n\nsubmitButtonText: Texte du bouton de soumission.\nsubmitApiUrl: URL à appeler lors de la soumission du formulaire.\nredirectUrl: URL de redirection après la soumission, l'id de la nouvelle entrée est automatiquement ajoutée a la fin de l'url.\n\nExemple complet d'un json de formulaire pour la creation de ticket\nExample :{\n  \"title\": \"Creation de ticket\",\n  \"description\": \"Veuillez remplir le formulaire ci-dessous pour créer un nouveau ticket.\",\n  \"type\": 1,\n  \"defaultValues\": {\n    \"lifestep\": 1\n  },\n  \"sections\": {\n    \"envelope\": {\n      \"label\": \"Enveloppe\",\n      \"type\": 0,\n      \"description\": \"Veuillez remplir les champs ci-dessous pour créer une nouvelle enveloppe.\",\n      \"icon\": \"mdi-email\",\n      \"fields\": {\n        \"senders\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Appelant\",\n          \"model-value\": \"envelope.senders\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {\n            \"disable\": false\n          },\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {\n            \"disable\": false\n          },\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"observers\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Concernés\",\n          \"model-value\": \"envelope.observers\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"modelLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"transformKeys\": {\n              \"_id\": \"id\",\n              \"profile.commonName\": \"name\",\n              \"type\": \"type\"\n            }\n          },\n          \"row\": 1,\n          \"col\": 4,\n          \"attrsOnCreate\": {},\n          \"attrsOnRead\": {\n            \"disable\": true\n          },\n          \"attrsOnUpdate\": {},\n          \"attrsOnDelete\": {\n            \"disable\": true\n          }\n        },\n        \"assigned\": {\n          \"component\": \"autocomplete\",\n          \"label\": \"Assignés\",\n          \"model-value\": \"envelope.assigned\",\n          \"attrsOnDefault\": {\n            \"apiUrl\": \"/core/entities\",\n            \"optionLabel\": \"name\",\n            \"searchField\": \"profile.commonName\",\n            \"modelLabel\": \"name\",\n            \"dense\": true,\n            \"multiple\": true,\n            \"filled\": true,\n            \"additionalFilters\": [\n              {\n                \"field\": \"type\",\n                \"value\": 2,\n                \"operator\": \"Documentation des Composants Vue.js\nbuilder.vue\nAperçu\nLe composant builder.vue est un constructeur de formulaires dynamique utilisant les composants du Framework Quasar. Il est conçu pour les opérations CRUD (Créer, Lire, Mettre à jour, Supprimer) et prend en charge différents types de champs et de dispositions.\nStructure\n\nQCard : Conteneur principal avec une barre d'outils affichant le titre et la description du formulaire.\nTkFormType : Composant personnalisé rendant les champs de formulaire basés sur la structure JSON fournie.\nQCardActions : Contient des boutons d'action et des emplacements pour des actions personnalisées.\n\nFonctionnalités\n\nRendu dynamique des champs de formulaire.\nPrise en charge de plusieurs modes CRUD.\nPersonnalisable via des emplacements (slots).\n\nScript\n\nUtilise l'API de Composition Vue 3.\nMéthodes reset, resetValidation et submit pour les interactions avec le formulaire.\nÉmet un événement submit avec les données du formulaire.\n\n\ntk-form-type.vue\nAperçu\nComposant pour rendre différents types de dispositions de formulaire : base, stepper, tabs.\nStructure\n\nComposant dynamique basé sur la propriété type.\nPrend en charge différentes structures de formulaire telles que le formulaire de base, le stepper et les onglets.\n\nFonctionnalités\n\nRendu flexible basé sur la propriété type.\nUtilise des propriétés calculées pour déterminer la disposition du formulaire.\n\n\nTypes de formulaires\ntk-form-stepper\nAperçu\nUn composant de type stepper pour naviguer à travers différentes sections de formulaire.\nStructure\n\nQStepper : Composant stepper de Quasar pour la navigation entre les sections.\nÉtapes générées dynamiquement en fonction de la propriété sections.\n\nFonctionnalités\n\nPrend en charge la navigation à travers les sections du formulaire.\nCrée dynamiquement des étapes basées sur les données fournies.\n\n\ntk-form-tabs\nAperçu\nDisposition de formulaire basée sur des onglets pour organiser les sections de formulaire.\nStructure\n\nQTabs : Conteneur pour les en-têtes des onglets.\nQTabPanels : Panneaux qui rendent le contenu de chaque onglet.\n\nFonctionnalités\n\nPermet de passer entre les sections du formulaire à l'aide d'onglets.\nGénère dynamiquement des onglets en fonction des données fournies.\n\n\ntk-form-base\nAperçu\nDisposition de formulaire de base avec un système de grille pour le placement des champs.\nStructure\n\nUtilise une classe .row pour organiser les champs en lignes.\nCrée dynamiquement des champs de formulaire en fonction de la propriété fields.\n\nFonctionnalités\n\nDisposition de grille flexible pour les champs de formulaire.\nRendu de composant personnalisé pour chaque champ.\n\n\nÉnumérations et Types\nFormTypes\nDéfinit différents types de dispositions de formulaire : Base, Étapes, Onglets.\n'BASE' = 0,\n'STEPS' = 1,\n'TABS' = 2,\nCRUDMode\nDéfinit les opérations CRUD : Créer, Lire, Mettre à jour.\nTicketFormField et TicketFormSection\nTypes définissant la structure des champs de formulaire et des sections.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur.html":{"url":"additional-documentation/documentation-utilisateur.html","title":"additional-page - Documentation utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable des matières\n\nDocumentation du système de validation\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html":{"url":"additional-documentation/documentation-utilisateur/création-et-modification-d'une-identité.html","title":"additional-page - Création et modification d'une identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCréation et Modification d'Identité dans le Système\nSommaire\n\nCréation et Modification d'Identité dans le Système\nSommaire\nCréation d'Identité\nEndpoint pour la Création d'Identité\nCorps de la Requête (Body)\nInformations de Base (inetOrgPerson)\nChamps obligatoires :\nChamps facultatifs :\n\n\n\n\nChamps Additionnels\nExemple de Corps de Requête\nExemple de requete avec cUrl\nÉtats (IdentityState)\nGestion Automatique du lifecycle\n\n\nRéponse Attendue\n\n\nModification de l'identité\n\nCréation d'Identité\nPour créer une identité dans le système, suivez les instructions ci-dessous. Ces instructions sont destinées à des utilisateurs ayant une certaine connaissance technique, notamment en matière de requêtes HTTP.\nEndpoint pour la Création d'Identité\nURL: /management/identities : Adresse de l'endpoint pour la création d'identité.\nMéthode: POST : Verbe HTTP utilisé pour créer une nouvelle ressource.\nHeader Requis : Content-Type: application/json : Indique que le corps de la requête est au format JSON.\nCorps de la Requête (Body)\nLors de la création d'une identité, le corps de la requête doit inclure les informations de base de l'identité (inetOrgPerson), ainsi que tout champ additionnel nécessaire selon l'objectClass spécifique. Notez que l'objet inetOrgPerson est validé en dur et non via un fichier YAML.\nInformations de Base (inetOrgPerson)\nLes informations de base de l'identité sont définies dans l'objet inetOrgPerson. Les champs requis sont cn (Nom Commun), sn (Nom de Famille), et uid (Identifiant Unique). Ces champs sont validés en dur.\nChamps obligatoires :\n\ncn  \nsn\nuid\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nChamps Additionnels\nPour les champs additionnels, assurez-vous que les valeurs sont conformes aux attentes du système. Voici comment il se structure :\nExample :{\n  \"additionalFields\": {\n    \"objectClasses\": [],\n    \"attributes\": {}\n  }\n}\nobjectClasses : Un tableau contenant les noms des objectClasses concernées. Par exemple, si vous attendez des informations supann, vous devez inclure une valeur supann en chaine de charactères dans ce tableau.\n\nattributes : Un objet contenant les attributs spécifiques à chaque objectClass. Par exemple, si vous attendez des informations supann, vous devez inclure un objet supann contenant les attributs spécifiques à cette objectClass.\n\n\nATTENTION : Les champs additionnels sont validés via des fichiers de configuration YAML spécifiques à chaque objectClass. Assurez-vous que les valeurs envoyées sont conformes à ces fichiers de configuration pour garantir le succès de la création de l'identité. Ces fichiers de configuration sont définis dans la documentation Validation d'identité et doivent être nommés selon le nom de l'objectClass qu'ils définissent, par exemple supann.yml pour l'objectClass supann.\nExemple de Corps de Requête\nVoici un exemple de corps de requête pour la création d'une identité avec les informations minimales requises et un état (state) défini à -1 pour indiquer une création :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    \"cn\": \"Nom Commun\",\n    \"sn\": \"Nom de Famille\",\n    \"uid\": \"Identifiant Unique\"\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        \"supannEmpId\": \"123456\",\n        \"supannCivilite\": \"M.\",\n        \"supannBirthName\": \"Dupont\",\n        \"supannBirthDate\": \"1980-12-15\"\n      }\n    }\n  }\n}Exemple de requete avec cUrl\nExample :curl -X POST \"http:///identities\" \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"state\": -1,\n           \"inetOrgPerson\": {\n             \"cn\": \"Nom Commun\",\n             \"sn\": \"Nom de Famille\",\n             \"uid\": \"Identifiant Unique\"\n           },\n           \"additionalFields\": {\n             \"objectClasses\": [\"supann\"],\n             \"attributes\": {\n               \"supann\": {\n                 \"supannEmpId\": \"123456\",\n                 \"supannCivilite\": \"M.\",\n                 \"supannBirthName\": \"Dupont\",\n                 \"supannBirthDate\": \"1980-12-15\"\n               }\n             }\n           }\n         }'États (IdentityState)\nLe state doit être défini à -1 pour indiquer une création. Par la suite, le système gère automatiquement l'état de l'identité en fonction des actions de validations ou de syncronisation effectuées sur celle-ci.\nGestion Automatique du lifecycle\nLe cycle de vie de l'identité (lifecycle) est géré automatiquement par le système. Vous n'avez pas besoin de le spécifier dans votre requête.\nRéponse Attendue\nEn cas de succès, le système renvoie un statut 201 Created avec les détails de l'identité créée. Si des informations supplémentaires sont requises, le statut peut être 202 Accepted avec un message indiquant que des champs additionnels sont manquants ou invalides.\nModification de l'identité\nA venir.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html":{"url":"additional-documentation/documentation-utilisateur/validation-des-schemas-complémentaires-de-l'identité.html","title":"additional-page - Validation des schemas complémentaires de l'identité","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nValidation d'Identité\nVue d'ensemble\nLe système de validation d'identité utilise des fichiers de configuration YAML pour définir des règles de validation pour différents types d'objets d'identité. Chaque fichier YAML correspond à une objectClass spécifique et définit les attributs requis et leurs types pour cette classe.\nValidation des champs InetOrgPerson\nLes champs de base de l'objet inetOrgPerson sont validés par défaut. \nChamps obligatoires :\n\ncn  \nsn\nuid\n\nChamps facultatifs :\n\ndisplayName\nfacsimileTelephoneNumber\ngivenName\nlabeledURI\nmail\nmobile\npostalAddress\npreferredLanguage\ntelephoneNumber\ntitle\nuserCertificate\nuserPassword\n\nValidation des champs des schema additionnels\nFichiers de Configuration\nLe fichier de configuration YAML doit être nommé selon le nom de l'objectClass qu'il définit, par exemple supann.yml pour l'objectClass supann. Il doit être placé dans le dossier TBD.\nVous pouvez vous baser sur le template si dessous pour créer votre fichier YAML. Les champs $schema, type, properties et required sont obligatoires. Vpis ajouterez le champs désirés dans properties. Pour les champs requis, vous les listerez dans required.\nExemple Générique de Fichier YAML\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n    [Nom de l'attribut 1] :\n        description: \"[Description de l'attribut]\"\n        type: [Type de l'attribut]\n        [Autres options]\n    # plus de détails d'attributs...\nrequired:\n    - [Nom de l'attribut 1]\n    - [Nom de l'attribut 2]\n    # plus d'attributs requis...\nExemple de Fichier YAML (supann.yml)\nCe fichier définit la structure et les attributs requis pour l'objectClass supann.\nExample :$schema: \"http://json-schema.org/draft-07/schema#\"\ntype: \"object\"\nproperties:\n  supannEmpId:\n    type: \"string\"\n    description: \"Employee ID\"\n  supannCivilite:\n    type: \"string\"\n    description: \"Title (Mr, Ms, etc.)\"\n  supannBirthName:\n    type: \"string\"\n    description: \"Birth name\"\n  supannBirthDate:\n    type: \"string\"\n    format: \"date\"\n    description: \"Date of birth\"\n  # plus d'attributs...\nrequired:\n  - \"supannEmpId\"\n  - \"supannCivilite\"\n  - \"supannBirthName\"Options\nChaque attribut peut avoir des options supplémentaires pour définir des règles de validation spécifiques. Les options sont définies en tant que clés dans le fichier YAML.\nArray (Tableau)\n\nensure: Assure que la valeur est toujours un tableau.\nExample :type: array\nensure: true\ncompact: Supprime les valeurs vides du tableau.\nExample :type: array\ncompact: true\nitems (of) : Définit le type des éléments du tableau.\nExample :type: array\nitems: \n  type: string\nmaxItems (max) : Définit le nombre maximum d'éléments du tableau.\nExample :type: array\nmaxItems: 5\nminItems (min) : Définit le nombre minimum d'éléments du tableau.\nExample :type: array\nminItems: 2\n\nBoolean (Booléen)\n\nPas de clés spécifiquesExample :type: boolean\n\nDate\n\nmaxDate (max): Définit la date maximum.Example :type: date\nmaxDate: '2024-01-01'\nminDate (min): Définit la date minimum.Example :type: date\nminDate: '2020-01-01'\n\nNumber (Nombre)\n\ninteger: Définit que la valeur doit être un entier.Example :type: number\ninteger: true\nmoreThan (exclusiveMinimum): Définit la valeur minimum.Example :type: number\nmoreThan: 10\nlessThan (exclusiveMaximum): Définit la valeur maximum.Example :type: number\nlessThan: 20\npositive: Définit que la valeur doit être positive.Example :type: number\npositive: true\nnegative: Définit que la valeur doit être négative.Example :type: number\nnegative: true\nmin (minimum): Définit la valeur minimum.Example :type: number\nmin: 5\nmax (maximum): Définit la valeur maximum.Example :type: number\nmax: 100\ntruncate: Tronque la valeur.Example :type: number\ntruncate: true\nround: Arrondi la valeur.Example :type: number\nround: true\n\nObject (Objet)\n\ncamelCase: Convertit les clés de l'objet en camelCase.Example :type: object\ncamelCase: true\nconstantCase: Convertit les clés de l'objet en CONSTANT_CASE.Example :type: object\nconstantCase: true\nnoUnknown (propertyNames): Définit que l'objet ne peut pas contenir de clés non définies.Example :type: object\nnoUnknown: true\n\nString (Chaîne de caractères)\n\nminLength (min): Définit la longueur minimum de la chaîne de caractères.Example :type: string\nminLength: 5\nmaxLength (max): Définit la longueur maximum de la chaîne de caractères.Example :type: string\nmaxLength: 20\npattern (matches or regex): Définit une expression régulière à respecter.Example :type: string\npattern: '^[a-zA-Z]+$'\nemail (format: 'email'): Définit que la chaîne de caractères doit être un email.Example :type: string\nemail: true\nurl (format: 'url'): Définit que la chaîne de caractères doit être une URL.Example :type: string\nurl: true\nlowercase: Convertit la chaîne de caractères en minuscule.Example :type: string\nlowercase: true\nuppercase: Convertit la chaîne de caractères en majuscule.Example :type: string\nuppercase: true\ntrim: Supprime les espaces en début et fin de chaîne de caractères.Example :type: string\ntrim: true\n\nJSON de Validation\nPour valider une entrée, un objet JSON doit être fourni avec les champs suivants :\n\nstate: État de l'entrée, -1 pour une création.\ninetOrgPerson: Informations générales de la personne.\nadditionalFields: Contient objectClasses (un tableau de noms d'objectClass) et attributes (les attributs spécifiques pour chaque objectClass).\n\nExemple\nVoici un exemple de JSON à valider :\nExample :{\n  \"state\": -1,\n  \"inetOrgPerson\": {\n    // [Détails de inetOrgPerson]\n  },\n  \"additionalFields\": {\n    \"objectClasses\": [\"supann\"],\n    \"attributes\": {\n      \"supann\": {\n        // [Détails des attributs supann]\n      }\n    }\n  }\n}Remarques\nAssurez-vous que le fichier YAML correspondant à votre objectClass est disponible et correctement configuré.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
